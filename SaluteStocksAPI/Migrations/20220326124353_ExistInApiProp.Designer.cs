// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SaluteStocksAPI.DataBase;

#nullable disable

namespace SaluteStocksAPI.Migrations
{
    [DbContext(typeof(StocksContext))]
    [Migration("20220326124353_ExistInApiProp")]
    partial class ExistInApiProp
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SaluteStocksAPI.Models.FundamentalData.AnnualEarning", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("FiscalDateEnding")
                        .HasColumnType("datetime2");

                    b.Property<double?>("ReportedEPS")
                        .HasColumnType("float");

                    b.Property<string>("Symbol")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Symbol");

                    b.ToTable("AnnualEarning");
                });

            modelBuilder.Entity("SaluteStocksAPI.Models.FundamentalData.BalanceSheet", b =>
                {
                    b.Property<string>("Symbol")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool?>("ExistInApi")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastApiRefresh")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastLocalRefresh")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.HasKey("Symbol");

                    b.ToTable("BalanceSheets");
                });

            modelBuilder.Entity("SaluteStocksAPI.Models.FundamentalData.BalanceSheetAnnualReport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<double?>("AccumulatedDepreciationAmortizationPPE")
                        .HasColumnType("float");

                    b.Property<double?>("CapitalLeaseObligations")
                        .HasColumnType("float");

                    b.Property<double?>("CashAndCashEquivalentsAtCarryingValue")
                        .HasColumnType("float");

                    b.Property<double?>("CashAndShortTermInvestments")
                        .HasColumnType("float");

                    b.Property<double?>("CommonStock")
                        .HasColumnType("float");

                    b.Property<double?>("CommonStockSharesOutstanding")
                        .HasColumnType("float");

                    b.Property<double?>("CurrentAccountsPayable")
                        .HasColumnType("float");

                    b.Property<double?>("CurrentDebt")
                        .HasColumnType("float");

                    b.Property<double?>("CurrentLongTermDebt")
                        .HasColumnType("float");

                    b.Property<double?>("CurrentNetReceivables")
                        .HasColumnType("float");

                    b.Property<double?>("DeferredRevenue")
                        .HasColumnType("float");

                    b.Property<string>("FiscalDateEnding")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Goodwill")
                        .HasColumnType("float");

                    b.Property<double?>("IntangibleAssets")
                        .HasColumnType("float");

                    b.Property<double?>("IntangibleAssetsExcludingGoodwill")
                        .HasColumnType("float");

                    b.Property<double?>("Inventory")
                        .HasColumnType("float");

                    b.Property<double?>("Investments")
                        .HasColumnType("float");

                    b.Property<double?>("LongTermDebt")
                        .HasColumnType("float");

                    b.Property<double?>("LongTermDebtNoncurrent")
                        .HasColumnType("float");

                    b.Property<double?>("LongTermInvestments")
                        .HasColumnType("float");

                    b.Property<double?>("OtherCurrentAssets")
                        .HasColumnType("float");

                    b.Property<double?>("OtherCurrentLiabilities")
                        .HasColumnType("float");

                    b.Property<double?>("OtherNonCurrentAssets")
                        .HasColumnType("float");

                    b.Property<double?>("OtherNonCurrentLiabilities")
                        .HasColumnType("float");

                    b.Property<double?>("PropertyPlantEquipment")
                        .HasColumnType("float");

                    b.Property<string>("ReportedCurrency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("RetainedEarnings")
                        .HasColumnType("float");

                    b.Property<double?>("ShortLongTermDebtTotal")
                        .HasColumnType("float");

                    b.Property<double?>("ShortTermDebt")
                        .HasColumnType("float");

                    b.Property<double?>("ShortTermInvestments")
                        .HasColumnType("float");

                    b.Property<string>("Symbol")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double?>("TotalAssets")
                        .HasColumnType("float");

                    b.Property<double?>("TotalCurrentAssets")
                        .HasColumnType("float");

                    b.Property<double?>("TotalCurrentLiabilities")
                        .HasColumnType("float");

                    b.Property<double?>("TotalLiabilities")
                        .HasColumnType("float");

                    b.Property<double?>("TotalNonCurrentAssets")
                        .HasColumnType("float");

                    b.Property<double?>("TotalNonCurrentLiabilities")
                        .HasColumnType("float");

                    b.Property<double?>("TotalShareholderEquity")
                        .HasColumnType("float");

                    b.Property<double?>("TreasuryStock")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("Symbol");

                    b.ToTable("BalanceSheetAnnualReport");
                });

            modelBuilder.Entity("SaluteStocksAPI.Models.FundamentalData.BalanceSheetQuarterlyReports", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<double?>("AccumulatedDepreciationAmortizationPPE")
                        .HasColumnType("float");

                    b.Property<double?>("CapitalLeaseObligations")
                        .HasColumnType("float");

                    b.Property<double?>("CashAndCashEquivalentsAtCarryingValue")
                        .HasColumnType("float");

                    b.Property<double?>("CashAndShortTermInvestments")
                        .HasColumnType("float");

                    b.Property<double?>("CommonStock")
                        .HasColumnType("float");

                    b.Property<double?>("CommonStockSharesOutstanding")
                        .HasColumnType("float");

                    b.Property<double?>("CurrentAccountsPayable")
                        .HasColumnType("float");

                    b.Property<double?>("CurrentDebt")
                        .HasColumnType("float");

                    b.Property<double?>("CurrentLongTermDebt")
                        .HasColumnType("float");

                    b.Property<double?>("CurrentNetReceivables")
                        .HasColumnType("float");

                    b.Property<double?>("DeferredRevenue")
                        .HasColumnType("float");

                    b.Property<string>("FiscalDateEnding")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Goodwill")
                        .HasColumnType("float");

                    b.Property<double?>("IntangibleAssets")
                        .HasColumnType("float");

                    b.Property<double?>("IntangibleAssetsExcludingGoodwill")
                        .HasColumnType("float");

                    b.Property<double?>("Inventory")
                        .HasColumnType("float");

                    b.Property<double?>("Investments")
                        .HasColumnType("float");

                    b.Property<double?>("LongTermDebt")
                        .HasColumnType("float");

                    b.Property<double?>("LongTermDebtNoncurrent")
                        .HasColumnType("float");

                    b.Property<double?>("LongTermInvestments")
                        .HasColumnType("float");

                    b.Property<double?>("OtherCurrentAssets")
                        .HasColumnType("float");

                    b.Property<double?>("OtherCurrentLiabilities")
                        .HasColumnType("float");

                    b.Property<double?>("OtherNonCurrentAssets")
                        .HasColumnType("float");

                    b.Property<double?>("OtherNonCurrentLiabilities")
                        .HasColumnType("float");

                    b.Property<double?>("PropertyPlantEquipment")
                        .HasColumnType("float");

                    b.Property<string>("ReportedCurrency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("RetainedEarnings")
                        .HasColumnType("float");

                    b.Property<double?>("ShortLongTermDebtTotal")
                        .HasColumnType("float");

                    b.Property<double?>("ShortTermDebt")
                        .HasColumnType("float");

                    b.Property<double?>("ShortTermInvestments")
                        .HasColumnType("float");

                    b.Property<string>("Symbol")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double?>("TotalAssets")
                        .HasColumnType("float");

                    b.Property<double?>("TotalCurrentAssets")
                        .HasColumnType("float");

                    b.Property<double?>("TotalCurrentLiabilities")
                        .HasColumnType("float");

                    b.Property<double?>("TotalLiabilities")
                        .HasColumnType("float");

                    b.Property<double?>("TotalNonCurrentAssets")
                        .HasColumnType("float");

                    b.Property<double?>("TotalNonCurrentLiabilities")
                        .HasColumnType("float");

                    b.Property<double?>("TotalShareholderEquity")
                        .HasColumnType("float");

                    b.Property<double?>("TreasuryStock")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("Symbol");

                    b.ToTable("BalanceSheetQuarterlyReports");
                });

            modelBuilder.Entity("SaluteStocksAPI.Models.FundamentalData.CashFlow", b =>
                {
                    b.Property<string>("Symbol")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool?>("ExistInApi")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastApiRefresh")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastLocalRefresh")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.HasKey("Symbol");

                    b.ToTable("CashFlows");
                });

            modelBuilder.Entity("SaluteStocksAPI.Models.FundamentalData.CashFlowAnnualReport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<double?>("CapitalExpenditures")
                        .HasColumnType("float");

                    b.Property<double?>("CashflowFromFinancing")
                        .HasColumnType("float");

                    b.Property<double?>("CashflowFromInvestment")
                        .HasColumnType("float");

                    b.Property<double?>("ChangeInCashAndCashEquivalents")
                        .HasColumnType("float");

                    b.Property<double?>("ChangeInExchangeRate")
                        .HasColumnType("float");

                    b.Property<double?>("ChangeInInventory")
                        .HasColumnType("float");

                    b.Property<double?>("ChangeInOperatingAssets")
                        .HasColumnType("float");

                    b.Property<double?>("ChangeInOperatingLiabilities")
                        .HasColumnType("float");

                    b.Property<double?>("ChangeInReceivables")
                        .HasColumnType("float");

                    b.Property<double?>("DepreciationDepletionAndAmortization")
                        .HasColumnType("float");

                    b.Property<double?>("DividendPayout")
                        .HasColumnType("float");

                    b.Property<double?>("DividendPayoutCommonStock")
                        .HasColumnType("float");

                    b.Property<double?>("DividendPayoutPreferredStock")
                        .HasColumnType("float");

                    b.Property<string>("FiscalDateEnding")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("NetIncome")
                        .HasColumnType("float");

                    b.Property<double?>("OperatingCashFlow")
                        .HasColumnType("float");

                    b.Property<double?>("PaymentsForOperatingActivities")
                        .HasColumnType("float");

                    b.Property<double?>("PaymentsForRepurchaseOfCommonStock")
                        .HasColumnType("float");

                    b.Property<double?>("PaymentsForRepurchaseOfEquity")
                        .HasColumnType("float");

                    b.Property<double?>("PaymentsForRepurchaseOfPreferredStock")
                        .HasColumnType("float");

                    b.Property<double?>("ProceedsFromIssuanceOfCommonStock")
                        .HasColumnType("float");

                    b.Property<double?>("ProceedsFromIssuanceOfLongTermDebtAndCapitalSecuritiesNet")
                        .HasColumnType("float");

                    b.Property<double?>("ProceedsFromIssuanceOfPreferredStock")
                        .HasColumnType("float");

                    b.Property<double?>("ProceedsFromOperatingActivities")
                        .HasColumnType("float");

                    b.Property<double?>("ProceedsFromRepaymentsOfShortTermDebt")
                        .HasColumnType("float");

                    b.Property<double?>("ProceedsFromRepurchaseOfEquity")
                        .HasColumnType("float");

                    b.Property<double?>("ProceedsFromSaleOfTreasuryStock")
                        .HasColumnType("float");

                    b.Property<double?>("ProfitLoss")
                        .HasColumnType("float");

                    b.Property<string>("ReportedCurrency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Symbol")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Symbol");

                    b.ToTable("CashFlowAnnualReport");
                });

            modelBuilder.Entity("SaluteStocksAPI.Models.FundamentalData.CashFlowQuarterlyReport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<double?>("CapitalExpenditures")
                        .HasColumnType("float");

                    b.Property<double?>("CashflowFromFinancing")
                        .HasColumnType("float");

                    b.Property<double?>("CashflowFromInvestment")
                        .HasColumnType("float");

                    b.Property<double?>("ChangeInCashAndCashEquivalents")
                        .HasColumnType("float");

                    b.Property<double?>("ChangeInExchangeRate")
                        .HasColumnType("float");

                    b.Property<double?>("ChangeInInventory")
                        .HasColumnType("float");

                    b.Property<double?>("ChangeInOperatingAssets")
                        .HasColumnType("float");

                    b.Property<double?>("ChangeInOperatingLiabilities")
                        .HasColumnType("float");

                    b.Property<double?>("ChangeInReceivables")
                        .HasColumnType("float");

                    b.Property<double?>("DepreciationDepletionAndAmortization")
                        .HasColumnType("float");

                    b.Property<double?>("DividendPayout")
                        .HasColumnType("float");

                    b.Property<double?>("DividendPayoutCommonStock")
                        .HasColumnType("float");

                    b.Property<double?>("DividendPayoutPreferredStock")
                        .HasColumnType("float");

                    b.Property<string>("FiscalDateEnding")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("NetIncome")
                        .HasColumnType("float");

                    b.Property<double?>("OperatingCashFlow")
                        .HasColumnType("float");

                    b.Property<double?>("PaymentsForOperatingActivities")
                        .HasColumnType("float");

                    b.Property<double?>("PaymentsForRepurchaseOfCommonStock")
                        .HasColumnType("float");

                    b.Property<double?>("PaymentsForRepurchaseOfEquity")
                        .HasColumnType("float");

                    b.Property<double?>("PaymentsForRepurchaseOfPreferredStock")
                        .HasColumnType("float");

                    b.Property<double?>("ProceedsFromIssuanceOfCommonStock")
                        .HasColumnType("float");

                    b.Property<double?>("ProceedsFromIssuanceOfLongTermDebtAndCapitalSecuritiesNet")
                        .HasColumnType("float");

                    b.Property<double?>("ProceedsFromIssuanceOfPreferredStock")
                        .HasColumnType("float");

                    b.Property<double?>("ProceedsFromOperatingActivities")
                        .HasColumnType("float");

                    b.Property<double?>("ProceedsFromRepaymentsOfShortTermDebt")
                        .HasColumnType("float");

                    b.Property<double?>("ProceedsFromRepurchaseOfEquity")
                        .HasColumnType("float");

                    b.Property<double?>("ProceedsFromSaleOfTreasuryStock")
                        .HasColumnType("float");

                    b.Property<double?>("ProfitLoss")
                        .HasColumnType("float");

                    b.Property<string>("ReportedCurrency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Symbol")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Symbol");

                    b.ToTable("CashFlowQuarterlyReport");
                });

            modelBuilder.Entity("SaluteStocksAPI.Models.FundamentalData.CompanyOverview", b =>
                {
                    b.Property<string>("Symbol")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("AnalystTargetPrice")
                        .HasColumnType("float");

                    b.Property<string>("AssetType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Beta")
                        .HasColumnType("float");

                    b.Property<double?>("BookValue")
                        .HasColumnType("float");

                    b.Property<long?>("CIK")
                        .HasColumnType("bigint");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("DilutedEPSTTM")
                        .HasColumnType("float");

                    b.Property<DateTime?>("DividendDate")
                        .HasColumnType("datetime2");

                    b.Property<double?>("DividendPerShare")
                        .HasColumnType("float");

                    b.Property<double?>("DividendYield")
                        .HasColumnType("float");

                    b.Property<long?>("EBITDA")
                        .HasColumnType("bigint");

                    b.Property<double?>("EPS")
                        .HasColumnType("float");

                    b.Property<double?>("EVToEBITDA")
                        .HasColumnType("float");

                    b.Property<double?>("EVToRevenue")
                        .HasColumnType("float");

                    b.Property<DateTime?>("ExDividendDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Exchange")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("ExistInApi")
                        .HasColumnType("bit");

                    b.Property<string>("FiscalYearEnd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("ForwardPE")
                        .HasColumnType("float");

                    b.Property<long?>("GrossProfitTTM")
                        .HasColumnType("bigint");

                    b.Property<string>("Industry")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastApiRefresh")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastLocalRefresh")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime?>("LatestQuarter")
                        .HasColumnType("datetime2");

                    b.Property<long?>("MarketCapitalization")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("OperatingMarginTTM")
                        .HasColumnType("float");

                    b.Property<double?>("PEGRatio")
                        .HasColumnType("float");

                    b.Property<double?>("PERatio")
                        .HasColumnType("float");

                    b.Property<double?>("PriceToBookRatio")
                        .HasColumnType("float");

                    b.Property<double?>("PriceToSalesRatioTTM")
                        .HasColumnType("float");

                    b.Property<double?>("ProfitMargin")
                        .HasColumnType("float");

                    b.Property<double?>("QuarterlyEarningsGrowthYOY")
                        .HasColumnType("float");

                    b.Property<double?>("QuarterlyRevenueGrowthYOY")
                        .HasColumnType("float");

                    b.Property<double?>("ReturnOnAssetsTTM")
                        .HasColumnType("float");

                    b.Property<double?>("ReturnOnEquityTTM")
                        .HasColumnType("float");

                    b.Property<double?>("RevenuePerShareTTM")
                        .HasColumnType("float");

                    b.Property<long?>("RevenueTTM")
                        .HasColumnType("bigint");

                    b.Property<string>("Sector")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("SharesOutstanding")
                        .HasColumnType("bigint");

                    b.Property<double?>("TrailingPE")
                        .HasColumnType("float");

                    b.Property<double?>("_200DayMovingAverage")
                        .HasColumnType("float");

                    b.Property<double?>("_50DayMovingAverage")
                        .HasColumnType("float");

                    b.Property<double?>("_52WeekHigh")
                        .HasColumnType("float");

                    b.Property<double?>("_52WeekLow")
                        .HasColumnType("float");

                    b.HasKey("Symbol");

                    b.ToTable("CompanyOverviews");
                });

            modelBuilder.Entity("SaluteStocksAPI.Models.FundamentalData.Earnings", b =>
                {
                    b.Property<string>("Symbol")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool?>("ExistInApi")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastApiRefresh")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastLocalRefresh")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.HasKey("Symbol");

                    b.ToTable("Earnings");
                });

            modelBuilder.Entity("SaluteStocksAPI.Models.FundamentalData.IncomeStatement", b =>
                {
                    b.Property<string>("Symbol")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool?>("ExistInApi")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastApiRefresh")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastLocalRefresh")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.HasKey("Symbol");

                    b.ToTable("IncomeStatements");
                });

            modelBuilder.Entity("SaluteStocksAPI.Models.FundamentalData.IncomeStatementAnnualReport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<double?>("ComprehensiveIncomeNetOfTax")
                        .HasColumnType("float");

                    b.Property<double?>("CostOfRevenue")
                        .HasColumnType("float");

                    b.Property<double?>("CostofGoodsAndServicesSold")
                        .HasColumnType("float");

                    b.Property<double?>("Depreciation")
                        .HasColumnType("float");

                    b.Property<double?>("DepreciationAndAmortization")
                        .HasColumnType("float");

                    b.Property<double?>("Ebit")
                        .HasColumnType("float");

                    b.Property<double?>("Ebitda")
                        .HasColumnType("float");

                    b.Property<string>("FiscalDateEnding")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("GrossProfit")
                        .HasColumnType("float");

                    b.Property<double?>("IncomeBeforeTax")
                        .HasColumnType("float");

                    b.Property<double?>("IncomeTaxExpense")
                        .HasColumnType("float");

                    b.Property<double?>("InterestAndDebtExpense")
                        .HasColumnType("float");

                    b.Property<double?>("InterestExpense")
                        .HasColumnType("float");

                    b.Property<double?>("InterestIncome")
                        .HasColumnType("float");

                    b.Property<double?>("InvestmentIncomeNet")
                        .HasColumnType("float");

                    b.Property<double?>("NetIncome")
                        .HasColumnType("float");

                    b.Property<double?>("NetIncomeFromContinuingOperations")
                        .HasColumnType("float");

                    b.Property<double?>("NetInterestIncome")
                        .HasColumnType("float");

                    b.Property<double?>("NonInterestIncome")
                        .HasColumnType("float");

                    b.Property<double?>("OperatingExpenses")
                        .HasColumnType("float");

                    b.Property<double?>("OperatingIncome")
                        .HasColumnType("float");

                    b.Property<double?>("OtherNonOperatingIncome")
                        .HasColumnType("float");

                    b.Property<string>("ReportedCurrency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("ResearchAndDevelopment")
                        .HasColumnType("float");

                    b.Property<double?>("SellingGeneralAndAdministrative")
                        .HasColumnType("float");

                    b.Property<string>("Symbol")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double?>("TotalRevenue")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("Symbol");

                    b.ToTable("IncomeStatementAnnualReport");
                });

            modelBuilder.Entity("SaluteStocksAPI.Models.FundamentalData.IncomeStatementQuarterlyReport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<double?>("ComprehensiveIncomeNetOfTax")
                        .HasColumnType("float");

                    b.Property<double?>("CostOfRevenue")
                        .HasColumnType("float");

                    b.Property<double?>("CostofGoodsAndServicesSold")
                        .HasColumnType("float");

                    b.Property<double?>("Depreciation")
                        .HasColumnType("float");

                    b.Property<double?>("DepreciationAndAmortization")
                        .HasColumnType("float");

                    b.Property<double?>("Ebit")
                        .HasColumnType("float");

                    b.Property<double?>("Ebitda")
                        .HasColumnType("float");

                    b.Property<string>("FiscalDateEnding")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("GrossProfit")
                        .HasColumnType("float");

                    b.Property<double?>("IncomeBeforeTax")
                        .HasColumnType("float");

                    b.Property<double?>("IncomeTaxExpense")
                        .HasColumnType("float");

                    b.Property<double?>("InterestAndDebtExpense")
                        .HasColumnType("float");

                    b.Property<double?>("InterestExpense")
                        .HasColumnType("float");

                    b.Property<double?>("InterestIncome")
                        .HasColumnType("float");

                    b.Property<double?>("InvestmentIncomeNet")
                        .HasColumnType("float");

                    b.Property<double?>("NetIncome")
                        .HasColumnType("float");

                    b.Property<double?>("NetIncomeFromContinuingOperations")
                        .HasColumnType("float");

                    b.Property<double?>("NetInterestIncome")
                        .HasColumnType("float");

                    b.Property<double?>("NonInterestIncome")
                        .HasColumnType("float");

                    b.Property<double?>("OperatingExpenses")
                        .HasColumnType("float");

                    b.Property<double?>("OperatingIncome")
                        .HasColumnType("float");

                    b.Property<double?>("OtherNonOperatingIncome")
                        .HasColumnType("float");

                    b.Property<string>("ReportedCurrency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("ResearchAndDevelopment")
                        .HasColumnType("float");

                    b.Property<double?>("SellingGeneralAndAdministrative")
                        .HasColumnType("float");

                    b.Property<string>("Symbol")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double?>("TotalRevenue")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("Symbol");

                    b.ToTable("IncomeStatementQuarterlyReport");
                });

            modelBuilder.Entity("SaluteStocksAPI.Models.FundamentalData.ListingRow", b =>
                {
                    b.Property<string>("Symbol")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AssetType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DelistingDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Exchange")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("ExistInApi")
                        .HasColumnType("bit");

                    b.Property<string>("IpoDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastApiRefresh")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastLocalRefresh")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Symbol");

                    b.ToTable("Listing");
                });

            modelBuilder.Entity("SaluteStocksAPI.Models.FundamentalData.QuarterlyEarning", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<double?>("EstimatedEPS")
                        .HasColumnType("float");

                    b.Property<DateTime?>("FiscalDateEnding")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ReportedDate")
                        .HasColumnType("datetime2");

                    b.Property<double?>("ReportedEPS")
                        .HasColumnType("float");

                    b.Property<double?>("Surprise")
                        .HasColumnType("float");

                    b.Property<double?>("SurprisePercentage")
                        .HasColumnType("float");

                    b.Property<string>("Symbol")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Symbol");

                    b.ToTable("QuarterlyEarning");
                });

            modelBuilder.Entity("SaluteStocksAPI.Models.FundamentalData.AnnualEarning", b =>
                {
                    b.HasOne("SaluteStocksAPI.Models.FundamentalData.Earnings", "Earnings")
                        .WithMany("AnnualEarnings")
                        .HasForeignKey("Symbol");

                    b.Navigation("Earnings");
                });

            modelBuilder.Entity("SaluteStocksAPI.Models.FundamentalData.BalanceSheet", b =>
                {
                    b.HasOne("SaluteStocksAPI.Models.FundamentalData.CompanyOverview", "CompanyOverview")
                        .WithOne("BalanceSheet")
                        .HasForeignKey("SaluteStocksAPI.Models.FundamentalData.BalanceSheet", "Symbol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyOverview");
                });

            modelBuilder.Entity("SaluteStocksAPI.Models.FundamentalData.BalanceSheetAnnualReport", b =>
                {
                    b.HasOne("SaluteStocksAPI.Models.FundamentalData.BalanceSheet", "BalanceSheet")
                        .WithMany("AnnualReports")
                        .HasForeignKey("Symbol");

                    b.Navigation("BalanceSheet");
                });

            modelBuilder.Entity("SaluteStocksAPI.Models.FundamentalData.BalanceSheetQuarterlyReports", b =>
                {
                    b.HasOne("SaluteStocksAPI.Models.FundamentalData.BalanceSheet", "BalanceSheet")
                        .WithMany("QuarterlyReports")
                        .HasForeignKey("Symbol");

                    b.Navigation("BalanceSheet");
                });

            modelBuilder.Entity("SaluteStocksAPI.Models.FundamentalData.CashFlow", b =>
                {
                    b.HasOne("SaluteStocksAPI.Models.FundamentalData.CompanyOverview", "CompanyOverview")
                        .WithOne("CashFlow")
                        .HasForeignKey("SaluteStocksAPI.Models.FundamentalData.CashFlow", "Symbol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyOverview");
                });

            modelBuilder.Entity("SaluteStocksAPI.Models.FundamentalData.CashFlowAnnualReport", b =>
                {
                    b.HasOne("SaluteStocksAPI.Models.FundamentalData.CashFlow", "CashFlow")
                        .WithMany("AnnualReports")
                        .HasForeignKey("Symbol");

                    b.Navigation("CashFlow");
                });

            modelBuilder.Entity("SaluteStocksAPI.Models.FundamentalData.CashFlowQuarterlyReport", b =>
                {
                    b.HasOne("SaluteStocksAPI.Models.FundamentalData.CashFlow", "CashFlow")
                        .WithMany("QuarterlyReports")
                        .HasForeignKey("Symbol");

                    b.Navigation("CashFlow");
                });

            modelBuilder.Entity("SaluteStocksAPI.Models.FundamentalData.Earnings", b =>
                {
                    b.HasOne("SaluteStocksAPI.Models.FundamentalData.CompanyOverview", "CompanyOverview")
                        .WithOne("Earnings")
                        .HasForeignKey("SaluteStocksAPI.Models.FundamentalData.Earnings", "Symbol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyOverview");
                });

            modelBuilder.Entity("SaluteStocksAPI.Models.FundamentalData.IncomeStatement", b =>
                {
                    b.HasOne("SaluteStocksAPI.Models.FundamentalData.CompanyOverview", "CompanyOverview")
                        .WithOne("IncomeStatement")
                        .HasForeignKey("SaluteStocksAPI.Models.FundamentalData.IncomeStatement", "Symbol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyOverview");
                });

            modelBuilder.Entity("SaluteStocksAPI.Models.FundamentalData.IncomeStatementAnnualReport", b =>
                {
                    b.HasOne("SaluteStocksAPI.Models.FundamentalData.IncomeStatement", "IncomeStatement")
                        .WithMany("AnnualReports")
                        .HasForeignKey("Symbol");

                    b.Navigation("IncomeStatement");
                });

            modelBuilder.Entity("SaluteStocksAPI.Models.FundamentalData.IncomeStatementQuarterlyReport", b =>
                {
                    b.HasOne("SaluteStocksAPI.Models.FundamentalData.IncomeStatement", "IncomeStatement")
                        .WithMany("QuarterlyReports")
                        .HasForeignKey("Symbol");

                    b.Navigation("IncomeStatement");
                });

            modelBuilder.Entity("SaluteStocksAPI.Models.FundamentalData.QuarterlyEarning", b =>
                {
                    b.HasOne("SaluteStocksAPI.Models.FundamentalData.Earnings", "Earnings")
                        .WithMany("QuarterlyEarnings")
                        .HasForeignKey("Symbol");

                    b.Navigation("Earnings");
                });

            modelBuilder.Entity("SaluteStocksAPI.Models.FundamentalData.BalanceSheet", b =>
                {
                    b.Navigation("AnnualReports");

                    b.Navigation("QuarterlyReports");
                });

            modelBuilder.Entity("SaluteStocksAPI.Models.FundamentalData.CashFlow", b =>
                {
                    b.Navigation("AnnualReports");

                    b.Navigation("QuarterlyReports");
                });

            modelBuilder.Entity("SaluteStocksAPI.Models.FundamentalData.CompanyOverview", b =>
                {
                    b.Navigation("BalanceSheet");

                    b.Navigation("CashFlow");

                    b.Navigation("Earnings");

                    b.Navigation("IncomeStatement");
                });

            modelBuilder.Entity("SaluteStocksAPI.Models.FundamentalData.Earnings", b =>
                {
                    b.Navigation("AnnualEarnings");

                    b.Navigation("QuarterlyEarnings");
                });

            modelBuilder.Entity("SaluteStocksAPI.Models.FundamentalData.IncomeStatement", b =>
                {
                    b.Navigation("AnnualReports");

                    b.Navigation("QuarterlyReports");
                });
#pragma warning restore 612, 618
        }
    }
}
