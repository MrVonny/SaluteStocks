// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SaluteStocksAPI.DataBase;

#nullable disable

namespace SaluteStocksAPI.Migrations
{
    [DbContext(typeof(StocksContext))]
    partial class StocksContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SaluteStocksAPI.Models.FundamentalData.AnnualEarning", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("FiscalDateEnding")
                        .HasColumnType("datetime2");

                    b.Property<double?>("ReportedEPS")
                        .HasColumnType("float");

                    b.Property<string>("Symbol")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Symbol");

                    b.ToTable("AnnualEarning");
                });

            modelBuilder.Entity("SaluteStocksAPI.Models.FundamentalData.BalanceSheet", b =>
                {
                    b.Property<string>("Symbol")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("LastApiRefresh")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastLocalRefresh")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.HasKey("Symbol");

                    b.ToTable("balance_sheet", (string)null);
                });

            modelBuilder.Entity("SaluteStocksAPI.Models.FundamentalData.BalanceSheetReport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<long?>("AccumulatedDepreciationAmortizationPPE")
                        .HasColumnType("bigint");

                    b.Property<string>("BalanceSheetSymbol")
                        .HasColumnType("nvarchar(450)");

                    b.Property<long?>("CapitalLeaseObligations")
                        .HasColumnType("bigint");

                    b.Property<long?>("CashAndCashEquivalentsAtCarryingValue")
                        .HasColumnType("bigint");

                    b.Property<long?>("CashAndShortTermInvestments")
                        .HasColumnType("bigint");

                    b.Property<long?>("CommonStock")
                        .HasColumnType("bigint");

                    b.Property<long?>("CommonStockSharesOutstanding")
                        .HasColumnType("bigint");

                    b.Property<long?>("CurrentAccountsPayable")
                        .HasColumnType("bigint");

                    b.Property<long?>("CurrentDebt")
                        .HasColumnType("bigint");

                    b.Property<long?>("CurrentLongTermDebt")
                        .HasColumnType("bigint");

                    b.Property<long?>("CurrentNetReceivables")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeferredRevenue")
                        .HasColumnType("bigint");

                    b.Property<string>("FiscalDateEnding")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("Goodwill")
                        .HasColumnType("bigint");

                    b.Property<long?>("IntangibleAssets")
                        .HasColumnType("bigint");

                    b.Property<long?>("IntangibleAssetsExcludingGoodwill")
                        .HasColumnType("bigint");

                    b.Property<long?>("Inventory")
                        .HasColumnType("bigint");

                    b.Property<long?>("Investments")
                        .HasColumnType("bigint");

                    b.Property<long?>("LongTermDebt")
                        .HasColumnType("bigint");

                    b.Property<long?>("LongTermDebtNoncurrent")
                        .HasColumnType("bigint");

                    b.Property<long?>("LongTermInvestments")
                        .HasColumnType("bigint");

                    b.Property<long?>("OtherCurrentAssets")
                        .HasColumnType("bigint");

                    b.Property<long?>("OtherCurrentLiabilities")
                        .HasColumnType("bigint");

                    b.Property<long?>("OtherNonCurrentAssets")
                        .HasColumnType("bigint");

                    b.Property<long?>("OtherNonCurrentLiabilities")
                        .HasColumnType("bigint");

                    b.Property<long?>("PropertyPlantEquipment")
                        .HasColumnType("bigint");

                    b.Property<string>("ReportedCurrency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("RetainedEarnings")
                        .HasColumnType("bigint");

                    b.Property<long?>("ShortLongTermDebtTotal")
                        .HasColumnType("bigint");

                    b.Property<long?>("ShortTermDebt")
                        .HasColumnType("bigint");

                    b.Property<long?>("ShortTermInvestments")
                        .HasColumnType("bigint");

                    b.Property<string>("Symbol")
                        .HasColumnType("nvarchar(450)");

                    b.Property<long?>("TotalAssets")
                        .HasColumnType("bigint");

                    b.Property<long?>("TotalCurrentAssets")
                        .HasColumnType("bigint");

                    b.Property<long?>("TotalCurrentLiabilities")
                        .HasColumnType("bigint");

                    b.Property<long?>("TotalLiabilities")
                        .HasColumnType("bigint");

                    b.Property<long?>("TotalNonCurrentAssets")
                        .HasColumnType("bigint");

                    b.Property<long?>("TotalNonCurrentLiabilities")
                        .HasColumnType("bigint");

                    b.Property<long?>("TotalShareholderEquity")
                        .HasColumnType("bigint");

                    b.Property<long?>("TreasuryStock")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("BalanceSheetSymbol");

                    b.HasIndex("Symbol");

                    b.ToTable("BalanceSheetReport");
                });

            modelBuilder.Entity("SaluteStocksAPI.Models.FundamentalData.CashFlow", b =>
                {
                    b.Property<string>("Symbol")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("LastApiRefresh")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastLocalRefresh")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.HasKey("Symbol");

                    b.ToTable("cash_flow", (string)null);
                });

            modelBuilder.Entity("SaluteStocksAPI.Models.FundamentalData.CashFlowReport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<long?>("CapitalExpenditures")
                        .HasColumnType("bigint");

                    b.Property<string>("CashFlowSymbol")
                        .HasColumnType("nvarchar(450)");

                    b.Property<long?>("CashflowFromFinancing")
                        .HasColumnType("bigint");

                    b.Property<long?>("CashflowFromInvestment")
                        .HasColumnType("bigint");

                    b.Property<long?>("ChangeInCashAndCashEquivalents")
                        .HasColumnType("bigint");

                    b.Property<long?>("ChangeInExchangeRate")
                        .HasColumnType("bigint");

                    b.Property<long?>("ChangeInInventory")
                        .HasColumnType("bigint");

                    b.Property<long?>("ChangeInOperatingAssets")
                        .HasColumnType("bigint");

                    b.Property<long?>("ChangeInOperatingLiabilities")
                        .HasColumnType("bigint");

                    b.Property<long?>("ChangeInReceivables")
                        .HasColumnType("bigint");

                    b.Property<long?>("DepreciationDepletionAndAmortization")
                        .HasColumnType("bigint");

                    b.Property<long?>("DividendPayout")
                        .HasColumnType("bigint");

                    b.Property<long?>("DividendPayoutCommonStock")
                        .HasColumnType("bigint");

                    b.Property<long?>("DividendPayoutPreferredStock")
                        .HasColumnType("bigint");

                    b.Property<string>("FiscalDateEnding")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("NetIncome")
                        .HasColumnType("bigint");

                    b.Property<long?>("OperatingCashFlow")
                        .HasColumnType("bigint");

                    b.Property<long?>("PaymentsForOperatingActivities")
                        .HasColumnType("bigint");

                    b.Property<long?>("PaymentsForRepurchaseOfCommonStock")
                        .HasColumnType("bigint");

                    b.Property<long?>("PaymentsForRepurchaseOfEquity")
                        .HasColumnType("bigint");

                    b.Property<long?>("PaymentsForRepurchaseOfPreferredStock")
                        .HasColumnType("bigint");

                    b.Property<long?>("ProceedsFromIssuanceOfCommonStock")
                        .HasColumnType("bigint");

                    b.Property<long?>("ProceedsFromIssuanceOfLongTermDebtAndCapitalSecuritiesNet")
                        .HasColumnType("bigint");

                    b.Property<long?>("ProceedsFromIssuanceOfPreferredStock")
                        .HasColumnType("bigint");

                    b.Property<long?>("ProceedsFromOperatingActivities")
                        .HasColumnType("bigint");

                    b.Property<long?>("ProceedsFromRepaymentsOfShortTermDebt")
                        .HasColumnType("bigint");

                    b.Property<long?>("ProceedsFromRepurchaseOfEquity")
                        .HasColumnType("bigint");

                    b.Property<long?>("ProceedsFromSaleOfTreasuryStock")
                        .HasColumnType("bigint");

                    b.Property<long?>("ProfitLoss")
                        .HasColumnType("bigint");

                    b.Property<string>("ReportedCurrency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Symbol")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CashFlowSymbol");

                    b.HasIndex("Symbol");

                    b.ToTable("CashFlowReport");
                });

            modelBuilder.Entity("SaluteStocksAPI.Models.FundamentalData.CompanyOverview", b =>
                {
                    b.Property<string>("Symbol")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("AnalystTargetPrice")
                        .HasColumnType("float");

                    b.Property<string>("AssetType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Beta")
                        .HasColumnType("float");

                    b.Property<double?>("BookValue")
                        .HasColumnType("float");

                    b.Property<long?>("CIK")
                        .HasColumnType("bigint");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("DilutedEPSTTM")
                        .HasColumnType("float");

                    b.Property<DateTime?>("DividendDate")
                        .HasColumnType("datetime2");

                    b.Property<double?>("DividendPerShare")
                        .HasColumnType("float");

                    b.Property<double?>("DividendYield")
                        .HasColumnType("float");

                    b.Property<long?>("EBITDA")
                        .HasColumnType("bigint");

                    b.Property<double?>("EPS")
                        .HasColumnType("float");

                    b.Property<double?>("EVToEBITDA")
                        .HasColumnType("float");

                    b.Property<double?>("EVToRevenue")
                        .HasColumnType("float");

                    b.Property<DateTime?>("ExDividendDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Exchange")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FiscalYearEnd")
                        .HasColumnType("datetime2");

                    b.Property<double?>("ForwardPE")
                        .HasColumnType("float");

                    b.Property<long?>("GrossProfitTTM")
                        .HasColumnType("bigint");

                    b.Property<string>("Industry")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastApiRefresh")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastLocalRefresh")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime?>("LatestQuarter")
                        .HasColumnType("datetime2");

                    b.Property<long?>("MarketCapitalization")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("OperatingMarginTTM")
                        .HasColumnType("float");

                    b.Property<double?>("PEGRatio")
                        .HasColumnType("float");

                    b.Property<double?>("PERatio")
                        .HasColumnType("float");

                    b.Property<double?>("PriceToBookRatio")
                        .HasColumnType("float");

                    b.Property<double?>("PriceToSalesRatioTTM")
                        .HasColumnType("float");

                    b.Property<double?>("ProfitMargin")
                        .HasColumnType("float");

                    b.Property<double?>("QuarterlyEarningsGrowthYOY")
                        .HasColumnType("float");

                    b.Property<double?>("QuarterlyRevenueGrowthYOY")
                        .HasColumnType("float");

                    b.Property<double?>("ReturnOnAssetsTTM")
                        .HasColumnType("float");

                    b.Property<double?>("ReturnOnEquityTTM")
                        .HasColumnType("float");

                    b.Property<double?>("RevenuePerShareTTM")
                        .HasColumnType("float");

                    b.Property<long?>("RevenueTTM")
                        .HasColumnType("bigint");

                    b.Property<string>("Sector")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("SharesOutstanding")
                        .HasColumnType("bigint");

                    b.Property<double?>("TrailingPE")
                        .HasColumnType("float");

                    b.Property<double?>("_200DayMovingAverage")
                        .HasColumnType("float");

                    b.Property<double?>("_50DayMovingAverage")
                        .HasColumnType("float");

                    b.Property<double?>("_52WeekHigh")
                        .HasColumnType("float");

                    b.Property<double?>("_52WeekLow")
                        .HasColumnType("float");

                    b.HasKey("Symbol");

                    b.ToTable("company_overview", (string)null);
                });

            modelBuilder.Entity("SaluteStocksAPI.Models.FundamentalData.Earnings", b =>
                {
                    b.Property<string>("Symbol")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("LastApiRefresh")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastLocalRefresh")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.HasKey("Symbol");

                    b.ToTable("earnings", (string)null);
                });

            modelBuilder.Entity("SaluteStocksAPI.Models.FundamentalData.IncomeStatement", b =>
                {
                    b.Property<string>("Symbol")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("LastApiRefresh")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastLocalRefresh")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.HasKey("Symbol");

                    b.ToTable("income_statement", (string)null);
                });

            modelBuilder.Entity("SaluteStocksAPI.Models.FundamentalData.IncomeStatementReport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<long?>("ComprehensiveIncomeNetOfTax")
                        .HasColumnType("bigint");

                    b.Property<long?>("CostOfRevenue")
                        .HasColumnType("bigint");

                    b.Property<long?>("CostofGoodsAndServicesSold")
                        .HasColumnType("bigint");

                    b.Property<long?>("Depreciation")
                        .HasColumnType("bigint");

                    b.Property<long?>("DepreciationAndAmortization")
                        .HasColumnType("bigint");

                    b.Property<long?>("Ebit")
                        .HasColumnType("bigint");

                    b.Property<long?>("Ebitda")
                        .HasColumnType("bigint");

                    b.Property<string>("FiscalDateEnding")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("GrossProfit")
                        .HasColumnType("bigint");

                    b.Property<long?>("IncomeBeforeTax")
                        .HasColumnType("bigint");

                    b.Property<string>("IncomeStatementSymbol")
                        .HasColumnType("nvarchar(450)");

                    b.Property<long?>("IncomeTaxExpense")
                        .HasColumnType("bigint");

                    b.Property<long?>("InterestAndDebtExpense")
                        .HasColumnType("bigint");

                    b.Property<long?>("InterestExpense")
                        .HasColumnType("bigint");

                    b.Property<long?>("InterestIncome")
                        .HasColumnType("bigint");

                    b.Property<long?>("InvestmentIncomeNet")
                        .HasColumnType("bigint");

                    b.Property<long?>("NetIncome")
                        .HasColumnType("bigint");

                    b.Property<long?>("NetIncomeFromContinuingOperations")
                        .HasColumnType("bigint");

                    b.Property<long?>("NetInterestIncome")
                        .HasColumnType("bigint");

                    b.Property<long?>("NonInterestIncome")
                        .HasColumnType("bigint");

                    b.Property<long?>("OperatingExpenses")
                        .HasColumnType("bigint");

                    b.Property<long?>("OperatingIncome")
                        .HasColumnType("bigint");

                    b.Property<long?>("OtherNonOperatingIncome")
                        .HasColumnType("bigint");

                    b.Property<string>("ReportedCurrency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ResearchAndDevelopment")
                        .HasColumnType("bigint");

                    b.Property<long?>("SellingGeneralAndAdministrative")
                        .HasColumnType("bigint");

                    b.Property<string>("Symbol")
                        .HasColumnType("nvarchar(450)");

                    b.Property<long?>("TotalRevenue")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("IncomeStatementSymbol");

                    b.HasIndex("Symbol");

                    b.ToTable("IncomeStatementReport");
                });

            modelBuilder.Entity("SaluteStocksAPI.Models.FundamentalData.ListingRow", b =>
                {
                    b.Property<string>("Symbol")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AssetType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DelistingDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Exchange")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IpoDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastApiRefresh")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastLocalRefresh")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Symbol");

                    b.ToTable("Listing");
                });

            modelBuilder.Entity("SaluteStocksAPI.Models.FundamentalData.QuarterlyEarning", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<double?>("EstimatedEPS")
                        .HasColumnType("float");

                    b.Property<DateTime?>("FiscalDateEnding")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ReportedDate")
                        .HasColumnType("datetime2");

                    b.Property<double?>("ReportedEPS")
                        .HasColumnType("float");

                    b.Property<double?>("Surprise")
                        .HasColumnType("float");

                    b.Property<double?>("SurprisePercentage")
                        .HasColumnType("float");

                    b.Property<string>("Symbol")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Symbol");

                    b.ToTable("QuarterlyEarning");
                });

            modelBuilder.Entity("SaluteStocksAPI.Models.FundamentalData.AnnualEarning", b =>
                {
                    b.HasOne("SaluteStocksAPI.Models.FundamentalData.Earnings", null)
                        .WithMany("AnnualEarnings")
                        .HasForeignKey("Symbol");
                });

            modelBuilder.Entity("SaluteStocksAPI.Models.FundamentalData.BalanceSheetReport", b =>
                {
                    b.HasOne("SaluteStocksAPI.Models.FundamentalData.BalanceSheet", null)
                        .WithMany("AnnualReports")
                        .HasForeignKey("BalanceSheetSymbol");

                    b.HasOne("SaluteStocksAPI.Models.FundamentalData.BalanceSheet", null)
                        .WithMany("QuarterlyReports")
                        .HasForeignKey("Symbol");
                });

            modelBuilder.Entity("SaluteStocksAPI.Models.FundamentalData.CashFlowReport", b =>
                {
                    b.HasOne("SaluteStocksAPI.Models.FundamentalData.CashFlow", null)
                        .WithMany("AnnualReports")
                        .HasForeignKey("CashFlowSymbol");

                    b.HasOne("SaluteStocksAPI.Models.FundamentalData.CashFlow", null)
                        .WithMany("QuarterlyReports")
                        .HasForeignKey("Symbol");
                });

            modelBuilder.Entity("SaluteStocksAPI.Models.FundamentalData.CompanyOverview", b =>
                {
                    b.HasOne("SaluteStocksAPI.Models.FundamentalData.BalanceSheet", "BalanceSheet")
                        .WithOne("CompanyOverview")
                        .HasForeignKey("SaluteStocksAPI.Models.FundamentalData.CompanyOverview", "Symbol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SaluteStocksAPI.Models.FundamentalData.CashFlow", "CashFlow")
                        .WithOne("CompanyOverview")
                        .HasForeignKey("SaluteStocksAPI.Models.FundamentalData.CompanyOverview", "Symbol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SaluteStocksAPI.Models.FundamentalData.Earnings", "Earnings")
                        .WithOne("CompanyOverview")
                        .HasForeignKey("SaluteStocksAPI.Models.FundamentalData.CompanyOverview", "Symbol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SaluteStocksAPI.Models.FundamentalData.IncomeStatement", "IncomeStatement")
                        .WithOne("CompanyOverview")
                        .HasForeignKey("SaluteStocksAPI.Models.FundamentalData.CompanyOverview", "Symbol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BalanceSheet");

                    b.Navigation("CashFlow");

                    b.Navigation("Earnings");

                    b.Navigation("IncomeStatement");
                });

            modelBuilder.Entity("SaluteStocksAPI.Models.FundamentalData.IncomeStatementReport", b =>
                {
                    b.HasOne("SaluteStocksAPI.Models.FundamentalData.IncomeStatement", null)
                        .WithMany("AnnualReports")
                        .HasForeignKey("IncomeStatementSymbol");

                    b.HasOne("SaluteStocksAPI.Models.FundamentalData.IncomeStatement", null)
                        .WithMany("QuarterlyReports")
                        .HasForeignKey("Symbol");
                });

            modelBuilder.Entity("SaluteStocksAPI.Models.FundamentalData.QuarterlyEarning", b =>
                {
                    b.HasOne("SaluteStocksAPI.Models.FundamentalData.Earnings", null)
                        .WithMany("QuarterlyEarnings")
                        .HasForeignKey("Symbol");
                });

            modelBuilder.Entity("SaluteStocksAPI.Models.FundamentalData.BalanceSheet", b =>
                {
                    b.Navigation("AnnualReports");

                    b.Navigation("CompanyOverview");

                    b.Navigation("QuarterlyReports");
                });

            modelBuilder.Entity("SaluteStocksAPI.Models.FundamentalData.CashFlow", b =>
                {
                    b.Navigation("AnnualReports");

                    b.Navigation("CompanyOverview");

                    b.Navigation("QuarterlyReports");
                });

            modelBuilder.Entity("SaluteStocksAPI.Models.FundamentalData.Earnings", b =>
                {
                    b.Navigation("AnnualEarnings");

                    b.Navigation("CompanyOverview");

                    b.Navigation("QuarterlyEarnings");
                });

            modelBuilder.Entity("SaluteStocksAPI.Models.FundamentalData.IncomeStatement", b =>
                {
                    b.Navigation("AnnualReports");

                    b.Navigation("CompanyOverview");

                    b.Navigation("QuarterlyReports");
                });
#pragma warning restore 612, 618
        }
    }
}
