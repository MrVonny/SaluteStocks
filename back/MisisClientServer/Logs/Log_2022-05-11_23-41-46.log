2022-05-11 23:41:46.168 +03:00 [INF] Generating URI for LISTING_STATUS with params: state: active
2022-05-11 23:41:46.194 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=LISTING_STATUS&state=active
2022-05-11 23:41:46.197 +03:00 [INF] Starting to get and parse CSV from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=LISTING_STATUS&state=active".
2022-05-11 23:41:46.279 +03:00 [INF] Now listening on: https://localhost:5001
2022-05-11 23:41:46.281 +03:00 [INF] Now listening on: http://localhost:5000
2022-05-11 23:41:46.284 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2022-05-11 23:41:46.284 +03:00 [INF] Hosting environment: Development
2022-05-11 23:41:46.286 +03:00 [INF] Content root path: D:\repo\SaluteStocks\SaluteStocksAPI\
2022-05-11 23:41:46.844 +03:00 [INF] Request starting HTTP/2 GET https://localhost:5001/swagger/index.html - -
2022-05-11 23:41:46.919 +03:00 [INF] Request finished HTTP/2 GET https://localhost:5001/swagger/index.html - - - 200 - text/html;charset=utf-8 77.7834ms
2022-05-11 23:41:47.019 +03:00 [INF] Request starting HTTP/2 GET https://localhost:5001/swagger/v1/swagger.json - -
2022-05-11 23:41:47.031 +03:00 [ERR] An unhandled exception has occurred while executing the request.
Swashbuckle.AspNetCore.SwaggerGen.SwaggerGeneratorException: Ambiguous HTTP method for action - SaluteStocksAPI.Controllers.ApiController.Ping (SaluteStocksAPI). Actions require an explicit HttpMethod binding for Swagger/OpenAPI 3.0
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GenerateOperations(IEnumerable`1 apiDescriptions, SchemaRepository schemaRepository)
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GeneratePaths(IEnumerable`1 apiDescriptions, SchemaRepository schemaRepository)
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GetSwagger(String documentName, String host, String basePath)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2022-05-11 23:41:47.043 +03:00 [INF] Request finished HTTP/2 GET https://localhost:5001/swagger/v1/swagger.json - - - 500 - text/plain;+charset=utf-8 23.9765ms
2022-05-11 23:41:47.613 +03:00 [INF] Response has success status code
2022-05-11 23:41:47.616 +03:00 [INF] Trying to deserialize response.
2022-05-11 23:41:48.400 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-11 23:41:48.680 +03:00 [INF] Executed DbCommand (29ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP 0 T.[Symbol], T.[AssetType], T.[DelistingDate], T.[Exchange], T.[ExistInApi], T.[IpoDate], T.[LastApiRefresh], T.[LastLocalRefresh], T.[Name], T.[Status] INTO [ListingTemp5d72e413] FROM [Listing] AS T LEFT JOIN [Listing] AS Source ON 1 = 0;
2022-05-11 23:41:49.811 +03:00 [INF] Executed DbCommand (581ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
MERGE [Listing] WITH (HOLDLOCK) AS T USING (SELECT TOP 12594 * FROM [ListingTemp5d72e413] ORDER BY [Symbol]) AS S ON T.[Symbol] = S.[Symbol] WHEN NOT MATCHED BY TARGET THEN INSERT ([Symbol], [AssetType], [DelistingDate], [Exchange], [ExistInApi], [IpoDate], [LastApiRefresh], [LastLocalRefresh], [Name], [Status]) VALUES (S.[Symbol], S.[AssetType], S.[DelistingDate], S.[Exchange], S.[ExistInApi], S.[IpoDate], S.[LastApiRefresh], S.[LastLocalRefresh], S.[Name], S.[Status]) WHEN MATCHED AND EXISTS (SELECT S.[Symbol], S.[AssetType], S.[DelistingDate], S.[Exchange], S.[ExistInApi], S.[IpoDate], S.[LastApiRefresh], S.[LastLocalRefresh], S.[Name], S.[Status] EXCEPT SELECT T.[Symbol], T.[AssetType], T.[DelistingDate], T.[Exchange], T.[ExistInApi], T.[IpoDate], T.[LastApiRefresh], T.[LastLocalRefresh], T.[Name], T.[Status]) THEN UPDATE SET T.[AssetType] = S.[AssetType], T.[DelistingDate] = S.[DelistingDate], T.[Exchange] = S.[Exchange], T.[ExistInApi] = S.[ExistInApi], T.[IpoDate] = S.[IpoDate], T.[LastApiRefresh] = S.[LastApiRefresh], T.[LastLocalRefresh] = S.[LastLocalRefresh], T.[Name] = S.[Name], T.[Status] = S.[Status] WHEN NOT MATCHED BY SOURCE THEN DELETE;
2022-05-11 23:41:49.821 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID ('[ListingTemp5d72e413]', 'U') IS NOT NULL DROP TABLE [ListingTemp5d72e413]
2022-05-11 23:41:49.839 +03:00 [INF] Loading missing data.
2022-05-11 23:41:49.842 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-11 23:41:50.047 +03:00 [INF] Executed DbCommand (17ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [l].[Symbol]
FROM [Listing] AS [l]
2022-05-11 23:41:50.078 +03:00 [INF] Loading missing entities for SaluteStocksAPI.Models.FundamentalData.BalanceSheet
2022-05-11 23:41:50.080 +03:00 [INF] Getting already loaded entities
2022-05-11 23:41:50.112 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-11 23:41:50.129 +03:00 [INF] Loading missing entities for SaluteStocksAPI.Models.FundamentalData.CashFlow
2022-05-11 23:41:50.130 +03:00 [INF] Getting already loaded entities
2022-05-11 23:41:50.131 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-11 23:41:50.134 +03:00 [INF] Loading missing entities for SaluteStocksAPI.Models.FundamentalData.CompanyOverview
2022-05-11 23:41:50.135 +03:00 [INF] Getting already loaded entities
2022-05-11 23:41:50.135 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-11 23:41:50.138 +03:00 [INF] Loading missing entities for SaluteStocksAPI.Models.FundamentalData.Earnings
2022-05-11 23:41:50.138 +03:00 [INF] Getting already loaded entities
2022-05-11 23:41:50.139 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-11 23:41:50.139 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT DISTINCT [b].[Symbol]
FROM [BalanceSheets] AS [b]
WHERE [b].[ExistInApi] IS NOT NULL
2022-05-11 23:41:50.141 +03:00 [INF] Loading missing entities for SaluteStocksAPI.Models.FundamentalData.IncomeStatement
2022-05-11 23:41:50.142 +03:00 [INF] Getting already loaded entities
2022-05-11 23:41:50.143 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-11 23:41:50.145 +03:00 [INF] Already loaded: 1281
2022-05-11 23:41:50.150 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.BalanceSheet with Symbol BBD
2022-05-11 23:41:50.153 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT DISTINCT [i].[Symbol]
FROM [IncomeStatements] AS [i]
WHERE [i].[ExistInApi] IS NOT NULL
2022-05-11 23:41:50.153 +03:00 [INF] Generating URI for BALANCE_SHEET with params: symbol: BBD
2022-05-11 23:41:50.155 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BBD
2022-05-11 23:41:50.156 +03:00 [INF] Already loaded: 941
2022-05-11 23:41:50.157 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BBD".
2022-05-11 23:41:50.158 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.IncomeStatement with Symbol ASLN
2022-05-11 23:41:50.161 +03:00 [INF] Generating URI for INCOME_STATEMENT with params: symbol: ASLN
2022-05-11 23:41:50.161 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=INCOME_STATEMENT&symbol=ASLN
2022-05-11 23:41:50.162 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=INCOME_STATEMENT&symbol=ASLN".
2022-05-11 23:41:50.177 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT DISTINCT [c].[Symbol]
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] IS NOT NULL
2022-05-11 23:41:50.179 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT DISTINCT [c].[Symbol]
FROM [CashFlows] AS [c]
WHERE [c].[ExistInApi] IS NOT NULL
2022-05-11 23:41:50.180 +03:00 [INF] Already loaded: 1386
2022-05-11 23:41:50.181 +03:00 [INF] Already loaded: 943
2022-05-11 23:41:50.183 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CashFlow with Symbol ASLN
2022-05-11 23:41:50.184 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CompanyOverview with Symbol BGT
2022-05-11 23:41:50.186 +03:00 [INF] Generating URI for OVERVIEW with params: symbol: BGT
2022-05-11 23:41:50.186 +03:00 [INF] Generating URI for CASH_FLOW with params: symbol: ASLN
2022-05-11 23:41:50.187 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=OVERVIEW&symbol=BGT
2022-05-11 23:41:50.187 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=CASH_FLOW&symbol=ASLN
2022-05-11 23:41:50.188 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=OVERVIEW&symbol=BGT".
2022-05-11 23:41:50.188 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=CASH_FLOW&symbol=ASLN".
2022-05-11 23:41:50.208 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT DISTINCT [e].[Symbol]
FROM [Earnings] AS [e]
WHERE [e].[ExistInApi] IS NOT NULL
2022-05-11 23:41:50.211 +03:00 [INF] Already loaded: 1009
2022-05-11 23:41:50.213 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.Earnings with Symbol ATRO
2022-05-11 23:41:50.217 +03:00 [INF] Generating URI for EARNINGS with params: symbol: ATRO
2022-05-11 23:41:50.218 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=EARNINGS&symbol=ATRO
2022-05-11 23:41:50.218 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=EARNINGS&symbol=ATRO".
2022-05-11 23:41:50.608 +03:00 [INF] Response has success status code
2022-05-11 23:41:50.611 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.CompanyOverview.
2022-05-11 23:41:50.612 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-11 23:41:50.701 +03:00 [INF] Executed DbCommand (23ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__entity_Symbol_0
2022-05-11 23:41:50.706 +03:00 [INF] Entity does not exist. Adding to DB.
2022-05-11 23:41:50.712 +03:00 [INF] Response has success status code
2022-05-11 23:41:50.713 +03:00 [INF] Trying to deserialize response.
2022-05-11 23:41:50.818 +03:00 [ERR] Failed to refresh  entity SaluteStocksAPI.Models.FundamentalData.CashFlow with Symbol ASLN
Newtonsoft.Json.JsonSerializationException: Error converting value "-5530.22" to type 'System.Nullable`1[System.Int64]'. Path 'quarterlyReports[13].cashflowFromInvestment', line 577, position 48.
 ---> System.FormatException: Input string was not in a correct format.
   at System.Number.ThrowOverflowOrFormatException(ParsingStatus status, TypeCode type)
   at System.String.System.IConvertible.ToInt64(IFormatProvider provider)
   at System.Convert.ChangeType(Object value, Type conversionType, IFormatProvider provider)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)
   --- End of inner exception stack trace ---
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(IList list, JsonReader reader, JsonArrayContract contract, JsonProperty containerProperty, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, Object existingValue, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)
   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)
   at Newtonsoft.Json.JsonSerializer.Deserialize(JsonReader reader, Type objectType)
   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)
   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value, JsonSerializerSettings settings)
   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value)
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 324
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCashFlow(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 96
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 176
2022-05-11 23:41:50.829 +03:00 [INF] Response has success status code
2022-05-11 23:41:50.833 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.Earnings for symbol ATRO
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 316
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyEarnings(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 142
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 178
2022-05-11 23:41:50.913 +03:00 [INF] Response has success status code
2022-05-11 23:41:50.914 +03:00 [INF] Trying to deserialize response.
2022-05-11 23:41:50.925 +03:00 [ERR] Failed to refresh  entity SaluteStocksAPI.Models.FundamentalData.IncomeStatement with Symbol ASLN
Newtonsoft.Json.JsonSerializationException: Error converting value "30617503.98" to type 'System.Nullable`1[System.Int64]'. Path 'annualReports[4].researchAndDevelopment', line 125, position 51.
 ---> System.FormatException: Input string was not in a correct format.
   at System.Number.ThrowOverflowOrFormatException(ParsingStatus status, TypeCode type)
   at System.String.System.IConvertible.ToInt64(IFormatProvider provider)
   at System.Convert.ChangeType(Object value, Type conversionType, IFormatProvider provider)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)
   --- End of inner exception stack trace ---
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(IList list, JsonReader reader, JsonArrayContract contract, JsonProperty containerProperty, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, Object existingValue, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)
   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)
   at Newtonsoft.Json.JsonSerializer.Deserialize(JsonReader reader, Type objectType)
   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)
   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value, JsonSerializerSettings settings)
   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value)
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 324
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetIncomeStatement(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 69
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 179
2022-05-11 23:41:50.933 +03:00 [INF] Executed DbCommand (26ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (Size = 4000), @p2='?' (DbType = Double), @p3='?' (Size = 4000), @p4='?' (DbType = Double), @p5='?' (DbType = Double), @p6='?' (DbType = Int64), @p7='?' (Size = 4000), @p8='?' (Size = 4000), @p9='?' (Size = 4000), @p10='?' (DbType = Double), @p11='?' (DbType = DateTime2), @p12='?' (DbType = Double), @p13='?' (DbType = Double), @p14='?' (DbType = Int64), @p15='?' (DbType = Double), @p16='?' (DbType = Double), @p17='?' (DbType = Double), @p18='?' (DbType = DateTime2), @p19='?' (Size = 4000), @p20='?' (DbType = Boolean), @p21='?' (Size = 4000), @p22='?' (DbType = Double), @p23='?' (DbType = Int64), @p24='?' (Size = 4000), @p25='?' (DbType = DateTime2), @p26='?' (DbType = DateTime2), @p27='?' (DbType = DateTime2), @p28='?' (DbType = Int64), @p29='?' (Size = 4000), @p30='?' (DbType = Double), @p31='?' (DbType = Double), @p32='?' (DbType = Double), @p33='?' (DbType = Double), @p34='?' (DbType = Double), @p35='?' (DbType = Double), @p36='?' (DbType = Double), @p37='?' (DbType = Double), @p38='?' (DbType = Double), @p39='?' (DbType = Double), @p40='?' (DbType = Double), @p41='?' (DbType = Int64), @p42='?' (Size = 4000), @p43='?' (DbType = Int64), @p44='?' (DbType = Double), @p45='?' (DbType = Double), @p46='?' (DbType = Double), @p47='?' (DbType = Double), @p48='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [CompanyOverviews] ([Symbol], [Address], [AnalystTargetPrice], [AssetType], [Beta], [BookValue], [CIK], [Country], [Currency], [Description], [DilutedEPSTTM], [DividendDate], [DividendPerShare], [DividendYield], [EBITDA], [EPS], [EVToEBITDA], [EVToRevenue], [ExDividendDate], [Exchange], [ExistInApi], [FiscalYearEnd], [ForwardPE], [GrossProfitTTM], [Industry], [LastApiRefresh], [LastLocalRefresh], [LatestQuarter], [MarketCapitalization], [Name], [OperatingMarginTTM], [PEGRatio], [PERatio], [PriceToBookRatio], [PriceToSalesRatioTTM], [ProfitMargin], [QuarterlyEarningsGrowthYOY], [QuarterlyRevenueGrowthYOY], [ReturnOnAssetsTTM], [ReturnOnEquityTTM], [RevenuePerShareTTM], [RevenueTTM], [Sector], [SharesOutstanding], [TrailingPE], [_200DayMovingAverage], [_50DayMovingAverage], [_52WeekHigh], [_52WeekLow])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21, @p22, @p23, @p24, @p25, @p26, @p27, @p28, @p29, @p30, @p31, @p32, @p33, @p34, @p35, @p36, @p37, @p38, @p39, @p40, @p41, @p42, @p43, @p44, @p45, @p46, @p47, @p48);
2022-05-11 23:41:50.964 +03:00 [INF] AddOrUpdate run successful.
2022-05-11 23:41:50.965 +03:00 [WRN] Alpha Vantage has no SaluteStocksAPI.Models.FundamentalData.CompanyOverview for symbol BGT
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageEmptyResponse: Response was empty.
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 313
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyOverview(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 109
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 177
2022-05-11 23:41:51.025 +03:00 [INF] Response has success status code
2022-05-11 23:41:51.026 +03:00 [INF] Trying to deserialize response.
2022-05-11 23:41:51.038 +03:00 [ERR] Failed to refresh  entity SaluteStocksAPI.Models.FundamentalData.BalanceSheet with Symbol BBD
Newtonsoft.Json.JsonSerializationException: Error converting value "10691941101.60" to type 'System.Nullable`1[System.Int64]'. Path 'annualReports[3].commonStockSharesOutstanding', line 162, position 60.
 ---> System.FormatException: Input string was not in a correct format.
   at System.Number.ThrowOverflowOrFormatException(ParsingStatus status, TypeCode type)
   at System.String.System.IConvertible.ToInt64(IFormatProvider provider)
   at System.Convert.ChangeType(Object value, Type conversionType, IFormatProvider provider)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)
   --- End of inner exception stack trace ---
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(IList list, JsonReader reader, JsonArrayContract contract, JsonProperty containerProperty, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, Object existingValue, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)
   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)
   at Newtonsoft.Json.JsonSerializer.Deserialize(JsonReader reader, Type objectType)
   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)
   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value, JsonSerializerSettings settings)
   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value)
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 324
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetBalanceSheet(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 82
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 174
2022-05-11 23:42:11.632 +03:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/screener-model - -
2022-05-11 23:42:11.632 +03:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/distribution/market-cap/20 - -
2022-05-11 23:42:11.635 +03:00 [INF] CORS policy execution successful.
2022-05-11 23:42:11.635 +03:00 [INF] CORS policy execution successful.
2022-05-11 23:42:11.636 +03:00 [INF] Executing endpoint 'SaluteStocksAPI.Controllers.ApiController.GetScreenerModel (SaluteStocksAPI)'
2022-05-11 23:42:11.636 +03:00 [INF] Executing endpoint 'SaluteStocksAPI.Controllers.ApiController.GetMarketCapDistribution (SaluteStocksAPI)'
2022-05-11 23:42:11.645 +03:00 [INF] Route matched with {action = "GetScreenerModel", controller = "Api"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetScreenerModel() on controller SaluteStocksAPI.Controllers.ApiController (SaluteStocksAPI).
2022-05-11 23:42:11.649 +03:00 [INF] Route matched with {action = "GetMarketCapDistribution", controller = "Api"}. Executing controller action with signature System.Threading.Tasks.Task`1[System.String] GetMarketCapDistribution(Int32) on controller SaluteStocksAPI.Controllers.ApiController (SaluteStocksAPI).
2022-05-11 23:42:11.654 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-11 23:42:11.660 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-11 23:42:11.689 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[MarketCapitalization])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-11 23:42:11.690 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[MarketCapitalization])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-11 23:42:11.709 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[MarketCapitalization])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-11 23:42:11.709 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[MarketCapitalization])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-11 23:42:11.723 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[EBITDA])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-11 23:42:11.736 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[EBITDA])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-11 23:42:11.755 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[PERatio])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-11 23:42:11.767 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[PERatio])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-11 23:42:11.770 +03:00 [INF] Executed DbCommand (14ms) [Parameters=[@__minValue_0='?' (DbType = Int64), @__Log_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT (
    SELECT TOP(1) [c0].[MarketCapitalization]
    FROM [CompanyOverviews] AS [c0]
    WHERE (([c0].[ExistInApi] = CAST(1 AS bit)) AND ([c0].[MarketCapitalization] IS NOT NULL)) AND (CAST((LOG(CAST(([c].[MarketCapitalization] / @__minValue_0) AS float)) / @__Log_1) AS int) = CAST((LOG(CAST(([c0].[MarketCapitalization] / @__minValue_0) AS float)) / @__Log_1) AS int))) AS [Position], COUNT(*) AS [Value]
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ([c].[MarketCapitalization] IS NOT NULL)
GROUP BY CAST((LOG(CAST(([c].[MarketCapitalization] / @__minValue_0) AS float)) / @__Log_1) AS int)
2022-05-11 23:42:11.800 +03:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2022-05-11 23:42:11.800 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2022-05-11 23:42:11.808 +03:00 [INF] Executed action SaluteStocksAPI.Controllers.ApiController.GetScreenerModel (SaluteStocksAPI) in 153.764ms
2022-05-11 23:42:11.808 +03:00 [INF] Executed action SaluteStocksAPI.Controllers.ApiController.GetMarketCapDistribution (SaluteStocksAPI) in 152.6425ms
2022-05-11 23:42:11.810 +03:00 [INF] Executed endpoint 'SaluteStocksAPI.Controllers.ApiController.GetScreenerModel (SaluteStocksAPI)'
2022-05-11 23:42:11.810 +03:00 [INF] Executed endpoint 'SaluteStocksAPI.Controllers.ApiController.GetMarketCapDistribution (SaluteStocksAPI)'
2022-05-11 23:42:11.818 +03:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/distribution/market-cap/20 - - - 200 - text/plain;+charset=utf-8 185.7220ms
2022-05-11 23:42:11.818 +03:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/screener-model - - - 200 - text/plain;+charset=utf-8 185.7256ms
2022-05-11 23:42:19.848 +03:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/screener-model - -
2022-05-11 23:42:19.848 +03:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/distribution/market-cap/20 - -
2022-05-11 23:42:19.850 +03:00 [INF] CORS policy execution successful.
2022-05-11 23:42:19.850 +03:00 [INF] CORS policy execution successful.
2022-05-11 23:42:19.851 +03:00 [INF] Executing endpoint 'SaluteStocksAPI.Controllers.ApiController.GetMarketCapDistribution (SaluteStocksAPI)'
2022-05-11 23:42:19.851 +03:00 [INF] Executing endpoint 'SaluteStocksAPI.Controllers.ApiController.GetScreenerModel (SaluteStocksAPI)'
2022-05-11 23:42:19.852 +03:00 [INF] Route matched with {action = "GetMarketCapDistribution", controller = "Api"}. Executing controller action with signature System.Threading.Tasks.Task`1[System.String] GetMarketCapDistribution(Int32) on controller SaluteStocksAPI.Controllers.ApiController (SaluteStocksAPI).
2022-05-11 23:42:19.852 +03:00 [INF] Route matched with {action = "GetScreenerModel", controller = "Api"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetScreenerModel() on controller SaluteStocksAPI.Controllers.ApiController (SaluteStocksAPI).
2022-05-11 23:42:19.855 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-11 23:42:19.855 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-11 23:42:19.871 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[MarketCapitalization])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-11 23:42:19.871 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[MarketCapitalization])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-11 23:42:19.886 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[MarketCapitalization])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-11 23:42:19.886 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[MarketCapitalization])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-11 23:42:19.897 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[EBITDA])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-11 23:42:19.905 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[EBITDA])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-11 23:42:19.906 +03:00 [INF] Executed DbCommand (15ms) [Parameters=[@__minValue_0='?' (DbType = Int64), @__Log_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT (
    SELECT TOP(1) [c0].[MarketCapitalization]
    FROM [CompanyOverviews] AS [c0]
    WHERE (([c0].[ExistInApi] = CAST(1 AS bit)) AND ([c0].[MarketCapitalization] IS NOT NULL)) AND (CAST((LOG(CAST(([c].[MarketCapitalization] / @__minValue_0) AS float)) / @__Log_1) AS int) = CAST((LOG(CAST(([c0].[MarketCapitalization] / @__minValue_0) AS float)) / @__Log_1) AS int))) AS [Position], COUNT(*) AS [Value]
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ([c].[MarketCapitalization] IS NOT NULL)
GROUP BY CAST((LOG(CAST(([c].[MarketCapitalization] / @__minValue_0) AS float)) / @__Log_1) AS int)
2022-05-11 23:42:19.912 +03:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2022-05-11 23:42:19.913 +03:00 [INF] Executed action SaluteStocksAPI.Controllers.ApiController.GetMarketCapDistribution (SaluteStocksAPI) in 59.4359ms
2022-05-11 23:42:19.915 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[PERatio])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-11 23:42:19.915 +03:00 [INF] Executed endpoint 'SaluteStocksAPI.Controllers.ApiController.GetMarketCapDistribution (SaluteStocksAPI)'
2022-05-11 23:42:19.925 +03:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/distribution/market-cap/20 - - - 200 - text/plain;+charset=utf-8 76.7336ms
2022-05-11 23:42:19.933 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[PERatio])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-11 23:42:19.936 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2022-05-11 23:42:19.937 +03:00 [INF] Executed action SaluteStocksAPI.Controllers.ApiController.GetScreenerModel (SaluteStocksAPI) in 83.0581ms
2022-05-11 23:42:19.938 +03:00 [INF] Executed endpoint 'SaluteStocksAPI.Controllers.ApiController.GetScreenerModel (SaluteStocksAPI)'
2022-05-11 23:42:19.939 +03:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/screener-model - - - 200 - text/plain;+charset=utf-8 90.7071ms
2022-05-11 23:42:20.836 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.Earnings with Symbol ATTO
2022-05-11 23:42:20.836 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CashFlow with Symbol ASM
2022-05-11 23:42:20.838 +03:00 [INF] Generating URI for EARNINGS with params: symbol: ATTO
2022-05-11 23:42:20.838 +03:00 [INF] Generating URI for CASH_FLOW with params: symbol: ASM
2022-05-11 23:42:20.838 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=EARNINGS&symbol=ATTO
2022-05-11 23:42:20.839 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=CASH_FLOW&symbol=ASM
2022-05-11 23:42:20.840 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=EARNINGS&symbol=ATTO".
2022-05-11 23:42:20.840 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=CASH_FLOW&symbol=ASM".
2022-05-11 23:42:20.944 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.IncomeStatement with Symbol ASM
2022-05-11 23:42:20.946 +03:00 [INF] Generating URI for INCOME_STATEMENT with params: symbol: ASM
2022-05-11 23:42:20.947 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=INCOME_STATEMENT&symbol=ASM
2022-05-11 23:42:20.947 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=INCOME_STATEMENT&symbol=ASM".
2022-05-11 23:42:20.976 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CompanyOverview with Symbol BGY
2022-05-11 23:42:20.978 +03:00 [INF] Generating URI for OVERVIEW with params: symbol: BGY
2022-05-11 23:42:20.979 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=OVERVIEW&symbol=BGY
2022-05-11 23:42:20.979 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=OVERVIEW&symbol=BGY".
2022-05-11 23:42:21.055 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.BalanceSheet with Symbol BBVA
2022-05-11 23:42:21.056 +03:00 [INF] Generating URI for BALANCE_SHEET with params: symbol: BBVA
2022-05-11 23:42:21.057 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BBVA
2022-05-11 23:42:21.057 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BBVA".
2022-05-11 23:42:21.094 +03:00 [INF] Response has success status code
2022-05-11 23:42:21.095 +03:00 [INF] Trying to deserialize response.
2022-05-11 23:42:21.104 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-11 23:42:21.121 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__symbol_0
2022-05-11 23:42:21.129 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.Earnings.
2022-05-11 23:42:21.140 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [e].[Symbol], [e].[ExistInApi], [e].[LastApiRefresh], [e].[LastLocalRefresh]
FROM [Earnings] AS [e]
WHERE [e].[Symbol] = @__entity_Symbol_0
2022-05-11 23:42:21.142 +03:00 [INF] Entity does not exist. Adding to DB.
2022-05-11 23:42:21.221 +03:00 [INF] Response has success status code
2022-05-11 23:42:21.222 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.CompanyOverview.
2022-05-11 23:42:21.223 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-11 23:42:21.224 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = Boolean), @p2='?' (DbType = DateTime2), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Earnings] ([Symbol], [ExistInApi], [LastApiRefresh], [LastLocalRefresh])
VALUES (@p0, @p1, @p2, @p3);
2022-05-11 23:42:21.233 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__entity_Symbol_0
2022-05-11 23:42:21.235 +03:00 [INF] Entity does not exist. Adding to DB.
2022-05-11 23:42:21.251 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (Size = 4000), @p2='?' (DbType = Double), @p3='?' (Size = 4000), @p4='?' (DbType = Double), @p5='?' (DbType = Double), @p6='?' (DbType = Int64), @p7='?' (Size = 4000), @p8='?' (Size = 4000), @p9='?' (Size = 4000), @p10='?' (DbType = Double), @p11='?' (DbType = DateTime2), @p12='?' (DbType = Double), @p13='?' (DbType = Double), @p14='?' (DbType = Int64), @p15='?' (DbType = Double), @p16='?' (DbType = Double), @p17='?' (DbType = Double), @p18='?' (DbType = DateTime2), @p19='?' (Size = 4000), @p20='?' (DbType = Boolean), @p21='?' (Size = 4000), @p22='?' (DbType = Double), @p23='?' (DbType = Int64), @p24='?' (Size = 4000), @p25='?' (DbType = DateTime2), @p26='?' (DbType = DateTime2), @p27='?' (DbType = DateTime2), @p28='?' (DbType = Int64), @p29='?' (Size = 4000), @p30='?' (DbType = Double), @p31='?' (DbType = Double), @p32='?' (DbType = Double), @p33='?' (DbType = Double), @p34='?' (DbType = Double), @p35='?' (DbType = Double), @p36='?' (DbType = Double), @p37='?' (DbType = Double), @p38='?' (DbType = Double), @p39='?' (DbType = Double), @p40='?' (DbType = Double), @p41='?' (DbType = Int64), @p42='?' (Size = 4000), @p43='?' (DbType = Int64), @p44='?' (DbType = Double), @p45='?' (DbType = Double), @p46='?' (DbType = Double), @p47='?' (DbType = Double), @p48='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [CompanyOverviews] ([Symbol], [Address], [AnalystTargetPrice], [AssetType], [Beta], [BookValue], [CIK], [Country], [Currency], [Description], [DilutedEPSTTM], [DividendDate], [DividendPerShare], [DividendYield], [EBITDA], [EPS], [EVToEBITDA], [EVToRevenue], [ExDividendDate], [Exchange], [ExistInApi], [FiscalYearEnd], [ForwardPE], [GrossProfitTTM], [Industry], [LastApiRefresh], [LastLocalRefresh], [LatestQuarter], [MarketCapitalization], [Name], [OperatingMarginTTM], [PEGRatio], [PERatio], [PriceToBookRatio], [PriceToSalesRatioTTM], [ProfitMargin], [QuarterlyEarningsGrowthYOY], [QuarterlyRevenueGrowthYOY], [ReturnOnAssetsTTM], [ReturnOnEquityTTM], [RevenuePerShareTTM], [RevenueTTM], [Sector], [SharesOutstanding], [TrailingPE], [_200DayMovingAverage], [_50DayMovingAverage], [_52WeekHigh], [_52WeekLow])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21, @p22, @p23, @p24, @p25, @p26, @p27, @p28, @p29, @p30, @p31, @p32, @p33, @p34, @p35, @p36, @p37, @p38, @p39, @p40, @p41, @p42, @p43, @p44, @p45, @p46, @p47, @p48);
2022-05-11 23:42:21.260 +03:00 [INF] AddOrUpdate run successful.
2022-05-11 23:42:21.260 +03:00 [WRN] Alpha Vantage has no SaluteStocksAPI.Models.FundamentalData.CompanyOverview for symbol BGY
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageEmptyResponse: Response was empty.
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 313
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyOverview(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 109
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 177
2022-05-11 23:42:21.285 +03:00 [INF] Executed DbCommand (50ms) [Parameters=[@p4='?' (DbType = DateTime2), @p5='?' (DbType = Double), @p6='?' (Size = 450), @p7='?' (DbType = DateTime2), @p8='?' (DbType = Double), @p9='?' (Size = 450), @p10='?' (DbType = DateTime2), @p11='?' (DbType = Double), @p12='?' (Size = 450), @p13='?' (DbType = DateTime2), @p14='?' (DbType = Double), @p15='?' (Size = 450), @p16='?' (DbType = DateTime2), @p17='?' (DbType = Double), @p18='?' (Size = 450), @p19='?' (DbType = DateTime2), @p20='?' (DbType = Double), @p21='?' (Size = 450), @p22='?' (DbType = DateTime2), @p23='?' (DbType = Double), @p24='?' (Size = 450), @p25='?' (DbType = DateTime2), @p26='?' (DbType = Double), @p27='?' (Size = 450), @p28='?' (DbType = DateTime2), @p29='?' (DbType = Double), @p30='?' (Size = 450), @p31='?' (DbType = Double), @p32='?' (DbType = DateTime2), @p33='?' (DbType = DateTime2), @p34='?' (DbType = Double), @p35='?' (DbType = Double), @p36='?' (DbType = Double), @p37='?' (Size = 450), @p38='?' (DbType = Double), @p39='?' (DbType = DateTime2), @p40='?' (DbType = DateTime2), @p41='?' (DbType = Double), @p42='?' (DbType = Double), @p43='?' (DbType = Double), @p44='?' (Size = 450), @p45='?' (DbType = Double), @p46='?' (DbType = DateTime2), @p47='?' (DbType = DateTime2), @p48='?' (DbType = Double), @p49='?' (DbType = Double), @p50='?' (DbType = Double), @p51='?' (Size = 450), @p52='?' (DbType = Double), @p53='?' (DbType = DateTime2), @p54='?' (DbType = DateTime2), @p55='?' (DbType = Double), @p56='?' (DbType = Double), @p57='?' (DbType = Double), @p58='?' (Size = 450), @p59='?' (DbType = Double), @p60='?' (DbType = DateTime2), @p61='?' (DbType = DateTime2), @p62='?' (DbType = Double), @p63='?' (DbType = Double), @p64='?' (DbType = Double), @p65='?' (Size = 450), @p66='?' (DbType = Double), @p67='?' (DbType = DateTime2), @p68='?' (DbType = DateTime2), @p69='?' (DbType = Double), @p70='?' (DbType = Double), @p71='?' (DbType = Double), @p72='?' (Size = 450), @p73='?' (DbType = Double), @p74='?' (DbType = DateTime2), @p75='?' (DbType = DateTime2), @p76='?' (DbType = Double), @p77='?' (DbType = Double), @p78='?' (DbType = Double), @p79='?' (Size = 450), @p80='?' (DbType = Double), @p81='?' (DbType = DateTime2), @p82='?' (DbType = DateTime2), @p83='?' (DbType = Double), @p84='?' (DbType = Double), @p85='?' (DbType = Double), @p86='?' (Size = 450), @p87='?' (DbType = Double), @p88='?' (DbType = DateTime2), @p89='?' (DbType = DateTime2), @p90='?' (DbType = Double), @p91='?' (DbType = Double), @p92='?' (DbType = Double), @p93='?' (Size = 450), @p94='?' (DbType = Double), @p95='?' (DbType = DateTime2), @p96='?' (DbType = DateTime2), @p97='?' (DbType = Double), @p98='?' (DbType = Double), @p99='?' (DbType = Double), @p100='?' (Size = 450), @p101='?' (DbType = Double), @p102='?' (DbType = DateTime2), @p103='?' (DbType = DateTime2), @p104='?' (DbType = Double), @p105='?' (DbType = Double), @p106='?' (DbType = Double), @p107='?' (Size = 450), @p108='?' (DbType = Double), @p109='?' (DbType = DateTime2), @p110='?' (DbType = DateTime2), @p111='?' (DbType = Double), @p112='?' (DbType = Double), @p113='?' (DbType = Double), @p114='?' (Size = 450), @p115='?' (DbType = Double), @p116='?' (DbType = DateTime2), @p117='?' (DbType = DateTime2), @p118='?' (DbType = Double), @p119='?' (DbType = Double), @p120='?' (DbType = Double), @p121='?' (Size = 450), @p122='?' (DbType = Double), @p123='?' (DbType = DateTime2), @p124='?' (DbType = DateTime2), @p125='?' (DbType = Double), @p126='?' (DbType = Double), @p127='?' (DbType = Double), @p128='?' (Size = 450), @p129='?' (DbType = Double), @p130='?' (DbType = DateTime2), @p131='?' (DbType = DateTime2), @p132='?' (DbType = Double), @p133='?' (DbType = Double), @p134='?' (DbType = Double), @p135='?' (Size = 450), @p136='?' (DbType = Double), @p137='?' (DbType = DateTime2), @p138='?' (DbType = DateTime2), @p139='?' (DbType = Double), @p140='?' (DbType = Double), @p141='?' (DbType = Double), @p142='?' (Size = 450), @p143='?' (DbType = Double), @p144='?' (DbType = DateTime2), @p145='?' (DbType = DateTime2), @p146='?' (DbType = Double), @p147='?' (DbType = Double), @p148='?' (DbType = Double), @p149='?' (Size = 450), @p150='?' (DbType = Double), @p151='?' (DbType = DateTime2), @p152='?' (DbType = DateTime2), @p153='?' (DbType = Double), @p154='?' (DbType = Double), @p155='?' (DbType = Double), @p156='?' (Size = 450), @p157='?' (DbType = Double), @p158='?' (DbType = DateTime2), @p159='?' (DbType = DateTime2), @p160='?' (DbType = Double), @p161='?' (DbType = Double), @p162='?' (DbType = Double), @p163='?' (Size = 450), @p164='?' (DbType = Double), @p165='?' (DbType = DateTime2), @p166='?' (DbType = DateTime2), @p167='?' (DbType = Double), @p168='?' (DbType = Double), @p169='?' (DbType = Double), @p170='?' (Size = 450), @p171='?' (DbType = Double), @p172='?' (DbType = DateTime2), @p173='?' (DbType = DateTime2), @p174='?' (DbType = Double), @p175='?' (DbType = Double), @p176='?' (DbType = Double), @p177='?' (Size = 450), @p178='?' (DbType = Double), @p179='?' (DbType = DateTime2), @p180='?' (DbType = DateTime2), @p181='?' (DbType = Double), @p182='?' (DbType = Double), @p183='?' (DbType = Double), @p184='?' (Size = 450), @p185='?' (DbType = Double), @p186='?' (DbType = DateTime2), @p187='?' (DbType = DateTime2), @p188='?' (DbType = Double), @p189='?' (DbType = Double), @p190='?' (DbType = Double), @p191='?' (Size = 450), @p192='?' (DbType = Double), @p193='?' (DbType = DateTime2), @p194='?' (DbType = DateTime2), @p195='?' (DbType = Double), @p196='?' (DbType = Double), @p197='?' (DbType = Double), @p198='?' (Size = 450), @p199='?' (DbType = Double), @p200='?' (DbType = DateTime2), @p201='?' (DbType = DateTime2), @p202='?' (DbType = Double), @p203='?' (DbType = Double), @p204='?' (DbType = Double), @p205='?' (Size = 450), @p206='?' (DbType = Double), @p207='?' (DbType = DateTime2), @p208='?' (DbType = DateTime2), @p209='?' (DbType = Double), @p210='?' (DbType = Double), @p211='?' (DbType = Double), @p212='?' (Size = 450), @p213='?' (DbType = Double), @p214='?' (DbType = DateTime2), @p215='?' (DbType = DateTime2), @p216='?' (DbType = Double), @p217='?' (DbType = Double), @p218='?' (DbType = Double), @p219='?' (Size = 450), @p220='?' (DbType = Double), @p221='?' (DbType = DateTime2), @p222='?' (DbType = DateTime2), @p223='?' (DbType = Double), @p224='?' (DbType = Double), @p225='?' (DbType = Double), @p226='?' (Size = 450), @p227='?' (DbType = Double), @p228='?' (DbType = DateTime2), @p229='?' (DbType = DateTime2), @p230='?' (DbType = Double), @p231='?' (DbType = Double), @p232='?' (DbType = Double), @p233='?' (Size = 450), @p234='?' (DbType = Double), @p235='?' (DbType = DateTime2), @p236='?' (DbType = DateTime2), @p237='?' (DbType = Double), @p238='?' (DbType = Double), @p239='?' (DbType = Double), @p240='?' (Size = 450), @p241='?' (DbType = Double), @p242='?' (DbType = DateTime2), @p243='?' (DbType = DateTime2), @p244='?' (DbType = Double), @p245='?' (DbType = Double), @p246='?' (DbType = Double), @p247='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
DECLARE @inserted0 TABLE ([Id] int, [_Position] [int]);
MERGE [AnnualEarning] USING (
VALUES (@p4, @p5, @p6, 0),
(@p7, @p8, @p9, 1),
(@p10, @p11, @p12, 2),
(@p13, @p14, @p15, 3),
(@p16, @p17, @p18, 4),
(@p19, @p20, @p21, 5),
(@p22, @p23, @p24, 6),
(@p25, @p26, @p27, 7),
(@p28, @p29, @p30, 8)) AS i ([FiscalDateEnding], [ReportedEPS], [Symbol], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([FiscalDateEnding], [ReportedEPS], [Symbol])
VALUES (i.[FiscalDateEnding], i.[ReportedEPS], i.[Symbol])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted0;

SELECT [i].[Id] FROM @inserted0 i
ORDER BY [i].[_Position];

DECLARE @inserted9 TABLE ([Id] int, [_Position] [int]);
MERGE [QuarterlyEarning] USING (
VALUES (@p31, @p32, @p33, @p34, @p35, @p36, @p37, 0),
(@p38, @p39, @p40, @p41, @p42, @p43, @p44, 1),
(@p45, @p46, @p47, @p48, @p49, @p50, @p51, 2),
(@p52, @p53, @p54, @p55, @p56, @p57, @p58, 3),
(@p59, @p60, @p61, @p62, @p63, @p64, @p65, 4),
(@p66, @p67, @p68, @p69, @p70, @p71, @p72, 5),
(@p73, @p74, @p75, @p76, @p77, @p78, @p79, 6),
(@p80, @p81, @p82, @p83, @p84, @p85, @p86, 7),
(@p87, @p88, @p89, @p90, @p91, @p92, @p93, 8),
(@p94, @p95, @p96, @p97, @p98, @p99, @p100, 9),
(@p101, @p102, @p103, @p104, @p105, @p106, @p107, 10),
(@p108, @p109, @p110, @p111, @p112, @p113, @p114, 11),
(@p115, @p116, @p117, @p118, @p119, @p120, @p121, 12),
(@p122, @p123, @p124, @p125, @p126, @p127, @p128, 13),
(@p129, @p130, @p131, @p132, @p133, @p134, @p135, 14),
(@p136, @p137, @p138, @p139, @p140, @p141, @p142, 15),
(@p143, @p144, @p145, @p146, @p147, @p148, @p149, 16),
(@p150, @p151, @p152, @p153, @p154, @p155, @p156, 17),
(@p157, @p158, @p159, @p160, @p161, @p162, @p163, 18),
(@p164, @p165, @p166, @p167, @p168, @p169, @p170, 19),
(@p171, @p172, @p173, @p174, @p175, @p176, @p177, 20),
(@p178, @p179, @p180, @p181, @p182, @p183, @p184, 21),
(@p185, @p186, @p187, @p188, @p189, @p190, @p191, 22),
(@p192, @p193, @p194, @p195, @p196, @p197, @p198, 23),
(@p199, @p200, @p201, @p202, @p203, @p204, @p205, 24),
(@p206, @p207, @p208, @p209, @p210, @p211, @p212, 25),
(@p213, @p214, @p215, @p216, @p217, @p218, @p219, 26),
(@p220, @p221, @p222, @p223, @p224, @p225, @p226, 27),
(@p227, @p228, @p229, @p230, @p231, @p232, @p233, 28),
(@p234, @p235, @p236, @p237, @p238, @p239, @p240, 29),
(@p241, @p242, @p243, @p244, @p245, @p246, @p247, 30)) AS i ([EstimatedEPS], [FiscalDateEnding], [ReportedDate], [ReportedEPS], [Surprise], [SurprisePercentage], [Symbol], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([EstimatedEPS], [FiscalDateEnding], [ReportedDate], [ReportedEPS], [Surprise], [SurprisePercentage], [Symbol])
VALUES (i.[EstimatedEPS], i.[FiscalDateEnding], i.[ReportedDate], i.[ReportedEPS], i.[Surprise], i.[SurprisePercentage], i.[Symbol])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted9;

SELECT [i].[Id] FROM @inserted9 i
ORDER BY [i].[_Position];
2022-05-11 23:42:21.322 +03:00 [INF] Response has success status code
2022-05-11 23:42:21.323 +03:00 [INF] Trying to deserialize response.
2022-05-11 23:42:21.323 +03:00 [INF] AddOrUpdate run successful.
2022-05-11 23:42:21.324 +03:00 [ERR] Failed to refresh  entity SaluteStocksAPI.Models.FundamentalData.CashFlow with Symbol ASM
Newtonsoft.Json.JsonSerializationException: Error converting value "561990.19" to type 'System.Nullable`1[System.Int64]'. Path 'quarterlyReports[20].changeInInventory', line 792, position 44.
 ---> System.FormatException: Input string was not in a correct format.
   at System.Number.ThrowOverflowOrFormatException(ParsingStatus status, TypeCode type)
   at System.String.System.IConvertible.ToInt64(IFormatProvider provider)
   at System.Convert.ChangeType(Object value, Type conversionType, IFormatProvider provider)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)
   --- End of inner exception stack trace ---
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(IList list, JsonReader reader, JsonArrayContract contract, JsonProperty containerProperty, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, Object existingValue, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)
   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)
   at Newtonsoft.Json.JsonSerializer.Deserialize(JsonReader reader, Type objectType)
   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)
   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value, JsonSerializerSettings settings)
   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value)
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 324
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCashFlow(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 96
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 176
2022-05-11 23:42:21.445 +03:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/distribution/market-cap/20 - -
2022-05-11 23:42:21.445 +03:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/screener-model - -
2022-05-11 23:42:21.446 +03:00 [INF] CORS policy execution successful.
2022-05-11 23:42:21.446 +03:00 [INF] CORS policy execution successful.
2022-05-11 23:42:21.447 +03:00 [INF] Executing endpoint 'SaluteStocksAPI.Controllers.ApiController.GetMarketCapDistribution (SaluteStocksAPI)'
2022-05-11 23:42:21.448 +03:00 [INF] Executing endpoint 'SaluteStocksAPI.Controllers.ApiController.GetScreenerModel (SaluteStocksAPI)'
2022-05-11 23:42:21.448 +03:00 [INF] Route matched with {action = "GetMarketCapDistribution", controller = "Api"}. Executing controller action with signature System.Threading.Tasks.Task`1[System.String] GetMarketCapDistribution(Int32) on controller SaluteStocksAPI.Controllers.ApiController (SaluteStocksAPI).
2022-05-11 23:42:21.449 +03:00 [INF] Route matched with {action = "GetScreenerModel", controller = "Api"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetScreenerModel() on controller SaluteStocksAPI.Controllers.ApiController (SaluteStocksAPI).
2022-05-11 23:42:21.451 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-11 23:42:21.451 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-11 23:42:21.460 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[MarketCapitalization])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-11 23:42:21.462 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[MarketCapitalization])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-11 23:42:21.471 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[MarketCapitalization])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-11 23:42:21.471 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[MarketCapitalization])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-11 23:42:21.485 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[EBITDA])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-11 23:42:21.487 +03:00 [INF] Executed DbCommand (13ms) [Parameters=[@__minValue_0='?' (DbType = Int64), @__Log_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT (
    SELECT TOP(1) [c0].[MarketCapitalization]
    FROM [CompanyOverviews] AS [c0]
    WHERE (([c0].[ExistInApi] = CAST(1 AS bit)) AND ([c0].[MarketCapitalization] IS NOT NULL)) AND (CAST((LOG(CAST(([c].[MarketCapitalization] / @__minValue_0) AS float)) / @__Log_1) AS int) = CAST((LOG(CAST(([c0].[MarketCapitalization] / @__minValue_0) AS float)) / @__Log_1) AS int))) AS [Position], COUNT(*) AS [Value]
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ([c].[MarketCapitalization] IS NOT NULL)
GROUP BY CAST((LOG(CAST(([c].[MarketCapitalization] / @__minValue_0) AS float)) / @__Log_1) AS int)
2022-05-11 23:42:21.497 +03:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2022-05-11 23:42:21.498 +03:00 [INF] Executed action SaluteStocksAPI.Controllers.ApiController.GetMarketCapDistribution (SaluteStocksAPI) in 48.1926ms
2022-05-11 23:42:21.499 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[EBITDA])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-11 23:42:21.500 +03:00 [INF] Executed endpoint 'SaluteStocksAPI.Controllers.ApiController.GetMarketCapDistribution (SaluteStocksAPI)'
2022-05-11 23:42:21.503 +03:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/distribution/market-cap/20 - - - 200 - text/plain;+charset=utf-8 57.8885ms
2022-05-11 23:42:21.511 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[PERatio])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-11 23:42:21.524 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[PERatio])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-11 23:42:21.527 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2022-05-11 23:42:21.528 +03:00 [INF] Executed action SaluteStocksAPI.Controllers.ApiController.GetScreenerModel (SaluteStocksAPI) in 76.3809ms
2022-05-11 23:42:21.529 +03:00 [INF] Executed endpoint 'SaluteStocksAPI.Controllers.ApiController.GetScreenerModel (SaluteStocksAPI)'
2022-05-11 23:42:21.530 +03:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/screener-model - - - 200 - text/plain;+charset=utf-8 85.0601ms
2022-05-11 23:42:21.534 +03:00 [INF] Response has success status code
2022-05-11 23:42:21.535 +03:00 [INF] Trying to deserialize response.
2022-05-11 23:42:21.549 +03:00 [ERR] Failed to refresh  entity SaluteStocksAPI.Models.FundamentalData.BalanceSheet with Symbol BBVA
Newtonsoft.Json.JsonSerializationException: Error converting value "10664071274.09" to type 'System.Nullable`1[System.Int64]'. Path 'quarterlyReports[13].propertyPlantEquipment', line 736, position 54.
 ---> System.FormatException: Input string was not in a correct format.
   at System.Number.ThrowOverflowOrFormatException(ParsingStatus status, TypeCode type)
   at System.String.System.IConvertible.ToInt64(IFormatProvider provider)
   at System.Convert.ChangeType(Object value, Type conversionType, IFormatProvider provider)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)
   --- End of inner exception stack trace ---
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(IList list, JsonReader reader, JsonArrayContract contract, JsonProperty containerProperty, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, Object existingValue, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)
   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)
   at Newtonsoft.Json.JsonSerializer.Deserialize(JsonReader reader, Type objectType)
   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)
   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value, JsonSerializerSettings settings)
   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value)
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 324
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetBalanceSheet(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 82
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 174
2022-05-11 23:42:21.965 +03:00 [INF] Response has success status code
2022-05-11 23:42:21.966 +03:00 [INF] Trying to deserialize response.
2022-05-11 23:42:21.974 +03:00 [ERR] Failed to refresh  entity SaluteStocksAPI.Models.FundamentalData.IncomeStatement with Symbol ASM
Newtonsoft.Json.JsonSerializationException: Error converting value "8469671.02" to type 'System.Nullable`1[System.Int64]'. Path 'quarterlyReports[20].totalRevenue', line 710, position 40.
 ---> System.FormatException: Input string was not in a correct format.
   at System.Number.ThrowOverflowOrFormatException(ParsingStatus status, TypeCode type)
   at System.String.System.IConvertible.ToInt64(IFormatProvider provider)
   at System.Convert.ChangeType(Object value, Type conversionType, IFormatProvider provider)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)
   --- End of inner exception stack trace ---
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(IList list, JsonReader reader, JsonArrayContract contract, JsonProperty containerProperty, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, Object existingValue, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)
   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)
   at Newtonsoft.Json.JsonSerializer.Deserialize(JsonReader reader, Type objectType)
   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)
   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value, JsonSerializerSettings settings)
   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value)
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 324
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetIncomeStatement(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 69
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 179
2022-05-11 23:42:27.527 +03:00 [INF] Application is shutting down...
