2022-05-12 00:52:05.925 +03:00 [INF] Generating URI for LISTING_STATUS with params: state: active
2022-05-12 00:52:05.951 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=LISTING_STATUS&state=active
2022-05-12 00:52:05.953 +03:00 [INF] Starting to get and parse CSV from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=LISTING_STATUS&state=active".
2022-05-12 00:52:06.039 +03:00 [INF] Now listening on: https://localhost:5001
2022-05-12 00:52:06.041 +03:00 [INF] Now listening on: http://localhost:5000
2022-05-12 00:52:06.043 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2022-05-12 00:52:06.044 +03:00 [INF] Hosting environment: Development
2022-05-12 00:52:06.045 +03:00 [INF] Content root path: D:\repo\SaluteStocks\SaluteStocksAPI\
2022-05-12 00:52:06.331 +03:00 [INF] Request starting HTTP/2 GET https://localhost:5001/swagger/index.html - -
2022-05-12 00:52:06.410 +03:00 [INF] Request finished HTTP/2 GET https://localhost:5001/swagger/index.html - - - 200 - text/html;charset=utf-8 82.3063ms
2022-05-12 00:52:06.509 +03:00 [INF] Request starting HTTP/2 GET https://localhost:5001/swagger/v1/swagger.json - -
2022-05-12 00:52:06.522 +03:00 [ERR] An unhandled exception has occurred while executing the request.
Swashbuckle.AspNetCore.SwaggerGen.SwaggerGeneratorException: Ambiguous HTTP method for action - SaluteStocksAPI.Controllers.ApiController.Ping (SaluteStocksAPI). Actions require an explicit HttpMethod binding for Swagger/OpenAPI 3.0
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GenerateOperations(IEnumerable`1 apiDescriptions, SchemaRepository schemaRepository)
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GeneratePaths(IEnumerable`1 apiDescriptions, SchemaRepository schemaRepository)
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GetSwagger(String documentName, String host, String basePath)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2022-05-12 00:52:06.534 +03:00 [INF] Request finished HTTP/2 GET https://localhost:5001/swagger/v1/swagger.json - - - 500 - text/plain;+charset=utf-8 24.5891ms
2022-05-12 00:52:07.999 +03:00 [INF] Response has success status code
2022-05-12 00:52:08.002 +03:00 [INF] Trying to deserialize response.
2022-05-12 00:52:08.830 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 00:52:09.116 +03:00 [INF] Executed DbCommand (30ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP 0 T.[Symbol], T.[AssetType], T.[DelistingDate], T.[Exchange], T.[ExistInApi], T.[IpoDate], T.[LastApiRefresh], T.[LastLocalRefresh], T.[Name], T.[Status] INTO [ListingTemp38487c18] FROM [Listing] AS T LEFT JOIN [Listing] AS Source ON 1 = 0;
2022-05-12 00:52:09.322 +03:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/screener-model - -
2022-05-12 00:52:09.322 +03:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/distribution/market-cap/30 - -
2022-05-12 00:52:09.325 +03:00 [INF] CORS policy execution successful.
2022-05-12 00:52:09.325 +03:00 [INF] CORS policy execution successful.
2022-05-12 00:52:09.328 +03:00 [INF] Executing endpoint 'SaluteStocksAPI.Controllers.ApiController.GetScreenerModel (SaluteStocksAPI)'
2022-05-12 00:52:09.328 +03:00 [INF] Executing endpoint 'SaluteStocksAPI.Controllers.ApiController.GetMarketCapDistribution (SaluteStocksAPI)'
2022-05-12 00:52:09.338 +03:00 [INF] Route matched with {action = "GetScreenerModel", controller = "Api"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetScreenerModel() on controller SaluteStocksAPI.Controllers.ApiController (SaluteStocksAPI).
2022-05-12 00:52:09.341 +03:00 [INF] Route matched with {action = "GetMarketCapDistribution", controller = "Api"}. Executing controller action with signature System.Threading.Tasks.Task`1[System.String] GetMarketCapDistribution(Int32) on controller SaluteStocksAPI.Controllers.ApiController (SaluteStocksAPI).
2022-05-12 00:52:09.350 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 00:52:09.396 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 00:52:09.629 +03:00 [INF] Executed DbCommand (16ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[MarketCapitalization])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 00:52:09.652 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[MarketCapitalization])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 00:52:09.657 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[MarketCapitalization])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 00:52:09.668 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[MarketCapitalization])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 00:52:09.679 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[EBITDA])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 00:52:09.689 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[EBITDA])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 00:52:09.704 +03:00 [INF] Executed DbCommand (23ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 00:52:09.705 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[PERatio])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 00:52:09.721 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[PERatio])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 00:52:09.722 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 00:52:09.735 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 00:52:09.750 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 00:52:09.766 +03:00 [INF] Executed DbCommand (14ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 00:52:09.781 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 00:52:09.793 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 00:52:09.805 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 00:52:09.817 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 00:52:09.828 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2022-05-12 00:52:09.829 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 00:52:09.835 +03:00 [INF] Executed action SaluteStocksAPI.Controllers.ApiController.GetScreenerModel (SaluteStocksAPI) in 490.1775ms
2022-05-12 00:52:09.837 +03:00 [INF] Executed endpoint 'SaluteStocksAPI.Controllers.ApiController.GetScreenerModel (SaluteStocksAPI)'
2022-05-12 00:52:09.840 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 00:52:09.845 +03:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/screener-model - - - 200 - text/plain;+charset=utf-8 523.5093ms
2022-05-12 00:52:09.852 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 00:52:09.864 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 00:52:09.875 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 00:52:09.888 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 00:52:09.900 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 00:52:09.911 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 00:52:09.924 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 00:52:09.935 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 00:52:09.947 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 00:52:09.958 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 00:52:09.969 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 00:52:09.982 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 00:52:10.000 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 00:52:10.014 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 00:52:10.026 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 00:52:10.037 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 00:52:10.049 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 00:52:10.060 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 00:52:10.076 +03:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2022-05-12 00:52:10.077 +03:00 [INF] Executed action SaluteStocksAPI.Controllers.ApiController.GetMarketCapDistribution (SaluteStocksAPI) in 732.81ms
2022-05-12 00:52:10.078 +03:00 [INF] Executed endpoint 'SaluteStocksAPI.Controllers.ApiController.GetMarketCapDistribution (SaluteStocksAPI)'
2022-05-12 00:52:10.078 +03:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/distribution/market-cap/30 - - - 200 - text/plain;+charset=utf-8 756.6202ms
2022-05-12 00:52:10.452 +03:00 [INF] Executed DbCommand (744ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
MERGE [Listing] WITH (HOLDLOCK) AS T USING (SELECT TOP 12594 * FROM [ListingTemp38487c18] ORDER BY [Symbol]) AS S ON T.[Symbol] = S.[Symbol] WHEN NOT MATCHED BY TARGET THEN INSERT ([Symbol], [AssetType], [DelistingDate], [Exchange], [ExistInApi], [IpoDate], [LastApiRefresh], [LastLocalRefresh], [Name], [Status]) VALUES (S.[Symbol], S.[AssetType], S.[DelistingDate], S.[Exchange], S.[ExistInApi], S.[IpoDate], S.[LastApiRefresh], S.[LastLocalRefresh], S.[Name], S.[Status]) WHEN MATCHED AND EXISTS (SELECT S.[Symbol], S.[AssetType], S.[DelistingDate], S.[Exchange], S.[ExistInApi], S.[IpoDate], S.[LastApiRefresh], S.[LastLocalRefresh], S.[Name], S.[Status] EXCEPT SELECT T.[Symbol], T.[AssetType], T.[DelistingDate], T.[Exchange], T.[ExistInApi], T.[IpoDate], T.[LastApiRefresh], T.[LastLocalRefresh], T.[Name], T.[Status]) THEN UPDATE SET T.[AssetType] = S.[AssetType], T.[DelistingDate] = S.[DelistingDate], T.[Exchange] = S.[Exchange], T.[ExistInApi] = S.[ExistInApi], T.[IpoDate] = S.[IpoDate], T.[LastApiRefresh] = S.[LastApiRefresh], T.[LastLocalRefresh] = S.[LastLocalRefresh], T.[Name] = S.[Name], T.[Status] = S.[Status] WHEN NOT MATCHED BY SOURCE THEN DELETE;
2022-05-12 00:52:10.465 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID ('[ListingTemp38487c18]', 'U') IS NOT NULL DROP TABLE [ListingTemp38487c18]
2022-05-12 00:52:10.484 +03:00 [INF] Loading missing data.
2022-05-12 00:52:10.485 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 00:52:10.507 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [l].[Symbol]
FROM [Listing] AS [l]
2022-05-12 00:52:10.530 +03:00 [INF] Loading missing entities for SaluteStocksAPI.Models.FundamentalData.BalanceSheet
2022-05-12 00:52:10.531 +03:00 [INF] Getting already loaded entities
2022-05-12 00:52:10.532 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 00:52:10.540 +03:00 [INF] Loading missing entities for SaluteStocksAPI.Models.FundamentalData.CashFlow
2022-05-12 00:52:10.541 +03:00 [INF] Getting already loaded entities
2022-05-12 00:52:10.542 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 00:52:10.544 +03:00 [INF] Loading missing entities for SaluteStocksAPI.Models.FundamentalData.CompanyOverview
2022-05-12 00:52:10.545 +03:00 [INF] Getting already loaded entities
2022-05-12 00:52:10.546 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 00:52:10.548 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT DISTINCT [b].[Symbol]
FROM [BalanceSheets] AS [b]
WHERE [b].[ExistInApi] IS NOT NULL
2022-05-12 00:52:10.548 +03:00 [INF] Loading missing entities for SaluteStocksAPI.Models.FundamentalData.Earnings
2022-05-12 00:52:10.551 +03:00 [INF] Getting already loaded entities
2022-05-12 00:52:10.551 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 00:52:10.552 +03:00 [INF] Already loaded: 1312
2022-05-12 00:52:10.554 +03:00 [INF] Loading missing entities for SaluteStocksAPI.Models.FundamentalData.IncomeStatement
2022-05-12 00:52:10.555 +03:00 [INF] Getting already loaded entities
2022-05-12 00:52:10.556 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT DISTINCT [c].[Symbol]
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] IS NOT NULL
2022-05-12 00:52:10.557 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 00:52:10.559 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.BalanceSheet with Symbol BBD
2022-05-12 00:52:10.562 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT DISTINCT [e].[Symbol]
FROM [Earnings] AS [e]
WHERE [e].[ExistInApi] IS NOT NULL
2022-05-12 00:52:10.562 +03:00 [INF] Already loaded: 1425
2022-05-12 00:52:10.563 +03:00 [INF] Generating URI for BALANCE_SHEET with params: symbol: BBD
2022-05-12 00:52:10.565 +03:00 [INF] Already loaded: 1048
2022-05-12 00:52:10.566 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BBD
2022-05-12 00:52:10.567 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CompanyOverview with Symbol BHFAM
2022-05-12 00:52:10.569 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.Earnings with Symbol AUGX
2022-05-12 00:52:10.569 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BBD".
2022-05-12 00:52:10.571 +03:00 [INF] Generating URI for OVERVIEW with params: symbol: BHFAM
2022-05-12 00:52:10.575 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=OVERVIEW&symbol=BHFAM
2022-05-12 00:52:10.576 +03:00 [INF] Generating URI for EARNINGS with params: symbol: AUGX
2022-05-12 00:52:10.576 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=OVERVIEW&symbol=BHFAM".
2022-05-12 00:52:10.577 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=EARNINGS&symbol=AUGX
2022-05-12 00:52:10.578 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=EARNINGS&symbol=AUGX".
2022-05-12 00:52:10.604 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT DISTINCT [i].[Symbol]
FROM [IncomeStatements] AS [i]
WHERE [i].[ExistInApi] IS NOT NULL
2022-05-12 00:52:10.607 +03:00 [INF] Already loaded: 973
2022-05-12 00:52:10.609 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.IncomeStatement with Symbol ASLN
2022-05-12 00:52:10.612 +03:00 [INF] Executed DbCommand (68ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT DISTINCT [c].[Symbol]
FROM [CashFlows] AS [c]
WHERE [c].[ExistInApi] IS NOT NULL
2022-05-12 00:52:10.612 +03:00 [INF] Generating URI for INCOME_STATEMENT with params: symbol: ASLN
2022-05-12 00:52:10.614 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=INCOME_STATEMENT&symbol=ASLN
2022-05-12 00:52:10.614 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=INCOME_STATEMENT&symbol=ASLN".
2022-05-12 00:52:10.617 +03:00 [INF] Already loaded: 972
2022-05-12 00:52:10.619 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CashFlow with Symbol ASLN
2022-05-12 00:52:10.621 +03:00 [INF] Generating URI for CASH_FLOW with params: symbol: ASLN
2022-05-12 00:52:10.622 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=CASH_FLOW&symbol=ASLN
2022-05-12 00:52:10.622 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=CASH_FLOW&symbol=ASLN".
2022-05-12 00:52:10.922 +03:00 [INF] Response has success status code
2022-05-12 00:52:10.923 +03:00 [INF] Trying to deserialize response.
2022-05-12 00:52:10.964 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 00:52:11.024 +03:00 [INF] Executed DbCommand (15ms) [Parameters=[@__symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__symbol_0
2022-05-12 00:52:11.129 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.Earnings.
2022-05-12 00:52:11.139 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [e].[Symbol], [e].[ExistInApi], [e].[LastApiRefresh], [e].[LastLocalRefresh]
FROM [Earnings] AS [e]
WHERE [e].[Symbol] = @__entity_Symbol_0
2022-05-12 00:52:11.142 +03:00 [INF] Entity does not exist. Adding to DB.
2022-05-12 00:52:11.320 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = Boolean), @p2='?' (DbType = DateTime2), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Earnings] ([Symbol], [ExistInApi], [LastApiRefresh], [LastLocalRefresh])
VALUES (@p0, @p1, @p2, @p3);
2022-05-12 00:52:11.372 +03:00 [INF] Executed DbCommand (38ms) [Parameters=[@p4='?' (DbType = DateTime2), @p5='?' (DbType = Double), @p6='?' (Size = 450), @p7='?' (DbType = DateTime2), @p8='?' (DbType = Double), @p9='?' (Size = 450), @p10='?' (DbType = DateTime2), @p11='?' (DbType = Double), @p12='?' (Size = 450), @p13='?' (DbType = DateTime2), @p14='?' (DbType = Double), @p15='?' (Size = 450), @p16='?' (DbType = DateTime2), @p17='?' (DbType = Double), @p18='?' (Size = 450), @p19='?' (DbType = Double), @p20='?' (DbType = DateTime2), @p21='?' (DbType = DateTime2), @p22='?' (DbType = Double), @p23='?' (DbType = Double), @p24='?' (DbType = Double), @p25='?' (Size = 450), @p26='?' (DbType = Double), @p27='?' (DbType = DateTime2), @p28='?' (DbType = DateTime2), @p29='?' (DbType = Double), @p30='?' (DbType = Double), @p31='?' (DbType = Double), @p32='?' (Size = 450), @p33='?' (DbType = Double), @p34='?' (DbType = DateTime2), @p35='?' (DbType = DateTime2), @p36='?' (DbType = Double), @p37='?' (DbType = Double), @p38='?' (DbType = Double), @p39='?' (Size = 450), @p40='?' (DbType = Double), @p41='?' (DbType = DateTime2), @p42='?' (DbType = DateTime2), @p43='?' (DbType = Double), @p44='?' (DbType = Double), @p45='?' (DbType = Double), @p46='?' (Size = 450), @p47='?' (DbType = Double), @p48='?' (DbType = DateTime2), @p49='?' (DbType = DateTime2), @p50='?' (DbType = Double), @p51='?' (DbType = Double), @p52='?' (DbType = Double), @p53='?' (Size = 450), @p54='?' (DbType = Double), @p55='?' (DbType = DateTime2), @p56='?' (DbType = DateTime2), @p57='?' (DbType = Double), @p58='?' (DbType = Double), @p59='?' (DbType = Double), @p60='?' (Size = 450), @p61='?' (DbType = Double), @p62='?' (DbType = DateTime2), @p63='?' (DbType = DateTime2), @p64='?' (DbType = Double), @p65='?' (DbType = Double), @p66='?' (DbType = Double), @p67='?' (Size = 450), @p68='?' (DbType = Double), @p69='?' (DbType = DateTime2), @p70='?' (DbType = DateTime2), @p71='?' (DbType = Double), @p72='?' (DbType = Double), @p73='?' (DbType = Double), @p74='?' (Size = 450), @p75='?' (DbType = Double), @p76='?' (DbType = DateTime2), @p77='?' (DbType = DateTime2), @p78='?' (DbType = Double), @p79='?' (DbType = Double), @p80='?' (DbType = Double), @p81='?' (Size = 450), @p82='?' (DbType = Double), @p83='?' (DbType = DateTime2), @p84='?' (DbType = DateTime2), @p85='?' (DbType = Double), @p86='?' (DbType = Double), @p87='?' (DbType = Double), @p88='?' (Size = 450), @p89='?' (DbType = Double), @p90='?' (DbType = DateTime2), @p91='?' (DbType = DateTime2), @p92='?' (DbType = Double), @p93='?' (DbType = Double), @p94='?' (DbType = Double), @p95='?' (Size = 450), @p96='?' (DbType = Double), @p97='?' (DbType = DateTime2), @p98='?' (DbType = DateTime2), @p99='?' (DbType = Double), @p100='?' (DbType = Double), @p101='?' (DbType = Double), @p102='?' (Size = 450), @p103='?' (DbType = Double), @p104='?' (DbType = DateTime2), @p105='?' (DbType = DateTime2), @p106='?' (DbType = Double), @p107='?' (DbType = Double), @p108='?' (DbType = Double), @p109='?' (Size = 450), @p110='?' (DbType = Double), @p111='?' (DbType = DateTime2), @p112='?' (DbType = DateTime2), @p113='?' (DbType = Double), @p114='?' (DbType = Double), @p115='?' (DbType = Double), @p116='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
DECLARE @inserted0 TABLE ([Id] int, [_Position] [int]);
MERGE [AnnualEarning] USING (
VALUES (@p4, @p5, @p6, 0),
(@p7, @p8, @p9, 1),
(@p10, @p11, @p12, 2),
(@p13, @p14, @p15, 3),
(@p16, @p17, @p18, 4)) AS i ([FiscalDateEnding], [ReportedEPS], [Symbol], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([FiscalDateEnding], [ReportedEPS], [Symbol])
VALUES (i.[FiscalDateEnding], i.[ReportedEPS], i.[Symbol])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted0;

SELECT [i].[Id] FROM @inserted0 i
ORDER BY [i].[_Position];

DECLARE @inserted5 TABLE ([Id] int, [_Position] [int]);
MERGE [QuarterlyEarning] USING (
VALUES (@p19, @p20, @p21, @p22, @p23, @p24, @p25, 0),
(@p26, @p27, @p28, @p29, @p30, @p31, @p32, 1),
(@p33, @p34, @p35, @p36, @p37, @p38, @p39, 2),
(@p40, @p41, @p42, @p43, @p44, @p45, @p46, 3),
(@p47, @p48, @p49, @p50, @p51, @p52, @p53, 4),
(@p54, @p55, @p56, @p57, @p58, @p59, @p60, 5),
(@p61, @p62, @p63, @p64, @p65, @p66, @p67, 6),
(@p68, @p69, @p70, @p71, @p72, @p73, @p74, 7),
(@p75, @p76, @p77, @p78, @p79, @p80, @p81, 8),
(@p82, @p83, @p84, @p85, @p86, @p87, @p88, 9),
(@p89, @p90, @p91, @p92, @p93, @p94, @p95, 10),
(@p96, @p97, @p98, @p99, @p100, @p101, @p102, 11),
(@p103, @p104, @p105, @p106, @p107, @p108, @p109, 12),
(@p110, @p111, @p112, @p113, @p114, @p115, @p116, 13)) AS i ([EstimatedEPS], [FiscalDateEnding], [ReportedDate], [ReportedEPS], [Surprise], [SurprisePercentage], [Symbol], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([EstimatedEPS], [FiscalDateEnding], [ReportedDate], [ReportedEPS], [Surprise], [SurprisePercentage], [Symbol])
VALUES (i.[EstimatedEPS], i.[FiscalDateEnding], i.[ReportedDate], i.[ReportedEPS], i.[Surprise], i.[SurprisePercentage], i.[Symbol])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted5;

SELECT [i].[Id] FROM @inserted5 i
ORDER BY [i].[_Position];
2022-05-12 00:52:11.416 +03:00 [INF] AddOrUpdate run successful.
2022-05-12 00:52:11.690 +03:00 [INF] Response has success status code
2022-05-12 00:52:11.691 +03:00 [INF] Trying to deserialize response.
2022-05-12 00:52:11.705 +03:00 [ERR] Failed to refresh  entity SaluteStocksAPI.Models.FundamentalData.IncomeStatement with Symbol ASLN
Newtonsoft.Json.JsonSerializationException: Error converting value "30617503.98" to type 'System.Nullable`1[System.Int64]'. Path 'annualReports[4].researchAndDevelopment', line 125, position 51.
 ---> System.FormatException: Input string was not in a correct format.
   at System.Number.ThrowOverflowOrFormatException(ParsingStatus status, TypeCode type)
   at System.String.System.IConvertible.ToInt64(IFormatProvider provider)
   at System.Convert.ChangeType(Object value, Type conversionType, IFormatProvider provider)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)
   --- End of inner exception stack trace ---
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(IList list, JsonReader reader, JsonArrayContract contract, JsonProperty containerProperty, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, Object existingValue, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)
   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)
   at Newtonsoft.Json.JsonSerializer.Deserialize(JsonReader reader, Type objectType)
   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)
   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value, JsonSerializerSettings settings)
   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value)
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 324
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetIncomeStatement(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 69
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 179
2022-05-12 00:52:11.710 +03:00 [INF] Response has success status code
2022-05-12 00:52:11.720 +03:00 [INF] Trying to deserialize response.
2022-05-12 00:52:11.738 +03:00 [ERR] Failed to refresh  entity SaluteStocksAPI.Models.FundamentalData.CashFlow with Symbol ASLN
Newtonsoft.Json.JsonSerializationException: Error converting value "-5530.22" to type 'System.Nullable`1[System.Int64]'. Path 'quarterlyReports[13].cashflowFromInvestment', line 577, position 48.
 ---> System.FormatException: Input string was not in a correct format.
   at System.Number.ThrowOverflowOrFormatException(ParsingStatus status, TypeCode type)
   at System.String.System.IConvertible.ToInt64(IFormatProvider provider)
   at System.Convert.ChangeType(Object value, Type conversionType, IFormatProvider provider)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)
   --- End of inner exception stack trace ---
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(IList list, JsonReader reader, JsonArrayContract contract, JsonProperty containerProperty, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, Object existingValue, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)
   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)
   at Newtonsoft.Json.JsonSerializer.Deserialize(JsonReader reader, Type objectType)
   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)
   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value, JsonSerializerSettings settings)
   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value)
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 324
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCashFlow(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 96
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 176
2022-05-12 00:52:11.769 +03:00 [INF] Response has success status code
2022-05-12 00:52:11.770 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.CompanyOverview for symbol BHFAM
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 316
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyOverview(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 109
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 177
2022-05-12 00:52:11.912 +03:00 [INF] Response has success status code
2022-05-12 00:52:11.913 +03:00 [INF] Trying to deserialize response.
2022-05-12 00:52:11.925 +03:00 [ERR] Failed to refresh  entity SaluteStocksAPI.Models.FundamentalData.BalanceSheet with Symbol BBD
Newtonsoft.Json.JsonSerializationException: Error converting value "10691941101.60" to type 'System.Nullable`1[System.Int64]'. Path 'annualReports[3].commonStockSharesOutstanding', line 162, position 60.
 ---> System.FormatException: Input string was not in a correct format.
   at System.Number.ThrowOverflowOrFormatException(ParsingStatus status, TypeCode type)
   at System.String.System.IConvertible.ToInt64(IFormatProvider provider)
   at System.Convert.ChangeType(Object value, Type conversionType, IFormatProvider provider)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)
   --- End of inner exception stack trace ---
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(IList list, JsonReader reader, JsonArrayContract contract, JsonProperty containerProperty, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, Object existingValue, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)
   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)
   at Newtonsoft.Json.JsonSerializer.Deserialize(JsonReader reader, Type objectType)
   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)
   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value, JsonSerializerSettings settings)
   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value)
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 324
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetBalanceSheet(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 82
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 174
2022-05-12 00:52:41.429 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.Earnings with Symbol AUS-WS
2022-05-12 00:52:41.431 +03:00 [INF] Generating URI for EARNINGS with params: symbol: AUS-WS
2022-05-12 00:52:41.431 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=EARNINGS&symbol=AUS-WS
2022-05-12 00:52:41.432 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=EARNINGS&symbol=AUS-WS".
2022-05-12 00:52:41.723 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.IncomeStatement with Symbol ASM
2022-05-12 00:52:41.725 +03:00 [INF] Generating URI for INCOME_STATEMENT with params: symbol: ASM
2022-05-12 00:52:41.725 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=INCOME_STATEMENT&symbol=ASM
2022-05-12 00:52:41.726 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=INCOME_STATEMENT&symbol=ASM".
2022-05-12 00:52:41.754 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CashFlow with Symbol ASM
2022-05-12 00:52:41.755 +03:00 [INF] Generating URI for CASH_FLOW with params: symbol: ASM
2022-05-12 00:52:41.756 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=CASH_FLOW&symbol=ASM
2022-05-12 00:52:41.757 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=CASH_FLOW&symbol=ASM".
2022-05-12 00:52:41.771 +03:00 [INF] Response has success status code
2022-05-12 00:52:41.772 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.Earnings for symbol AUS-WS
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 316
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyEarnings(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 142
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 178
2022-05-12 00:52:41.785 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CompanyOverview with Symbol BHLB
2022-05-12 00:52:41.789 +03:00 [INF] Generating URI for OVERVIEW with params: symbol: BHLB
2022-05-12 00:52:41.790 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=OVERVIEW&symbol=BHLB
2022-05-12 00:52:41.791 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=OVERVIEW&symbol=BHLB".
2022-05-12 00:52:41.941 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.BalanceSheet with Symbol BBVA
2022-05-12 00:52:41.943 +03:00 [INF] Generating URI for BALANCE_SHEET with params: symbol: BBVA
2022-05-12 00:52:41.943 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BBVA
2022-05-12 00:52:41.944 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BBVA".
2022-05-12 00:52:41.987 +03:00 [INF] Response has success status code
2022-05-12 00:52:41.987 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.CashFlow for symbol ASM
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 316
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCashFlow(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 96
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 176
2022-05-12 00:52:41.988 +03:00 [INF] Response has success status code
2022-05-12 00:52:41.990 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.IncomeStatement for symbol ASM
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 316
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetIncomeStatement(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 69
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 179
2022-05-12 00:52:42.020 +03:00 [INF] Response has success status code
2022-05-12 00:52:42.021 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.CompanyOverview for symbol BHLB
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 316
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyOverview(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 109
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 177
2022-05-12 00:52:42.161 +03:00 [INF] Response has success status code
2022-05-12 00:52:42.161 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.BalanceSheet for symbol BBVA
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 316
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetBalanceSheet(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 82
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 174
2022-05-12 00:53:11.786 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.Earnings with Symbol AUY
2022-05-12 00:53:11.788 +03:00 [INF] Generating URI for EARNINGS with params: symbol: AUY
2022-05-12 00:53:11.788 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=EARNINGS&symbol=AUY
2022-05-12 00:53:11.789 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=EARNINGS&symbol=AUY".
2022-05-12 00:53:11.992 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CashFlow with Symbol ASML
2022-05-12 00:53:11.999 +03:00 [INF] Generating URI for CASH_FLOW with params: symbol: ASML
2022-05-12 00:53:12.000 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=CASH_FLOW&symbol=ASML
2022-05-12 00:53:12.000 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=CASH_FLOW&symbol=ASML".
2022-05-12 00:53:12.001 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.IncomeStatement with Symbol ASZ-WS
2022-05-12 00:53:12.003 +03:00 [INF] Generating URI for INCOME_STATEMENT with params: symbol: ASZ-WS
2022-05-12 00:53:12.003 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=INCOME_STATEMENT&symbol=ASZ-WS
2022-05-12 00:53:12.004 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=INCOME_STATEMENT&symbol=ASZ-WS".
2022-05-12 00:53:12.038 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CompanyOverview with Symbol BHR-P-D
2022-05-12 00:53:12.040 +03:00 [INF] Generating URI for OVERVIEW with params: symbol: BHR-P-D
2022-05-12 00:53:12.041 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=OVERVIEW&symbol=BHR-P-D
2022-05-12 00:53:12.041 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=OVERVIEW&symbol=BHR-P-D".
2022-05-12 00:53:12.177 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.BalanceSheet with Symbol BCAT
2022-05-12 00:53:12.179 +03:00 [INF] Generating URI for BALANCE_SHEET with params: symbol: BCAT
2022-05-12 00:53:12.180 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BCAT
2022-05-12 00:53:12.180 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BCAT".
2022-05-12 00:53:14.490 +03:00 [INF] Response has success status code
2022-05-12 00:53:14.491 +03:00 [INF] Trying to deserialize response.
2022-05-12 00:53:14.494 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 00:53:14.559 +03:00 [INF] Executed DbCommand (64ms) [Parameters=[@__symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__symbol_0
2022-05-12 00:53:14.561 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.Earnings.
2022-05-12 00:53:14.569 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [e].[Symbol], [e].[ExistInApi], [e].[LastApiRefresh], [e].[LastLocalRefresh]
FROM [Earnings] AS [e]
WHERE [e].[Symbol] = @__entity_Symbol_0
2022-05-12 00:53:14.572 +03:00 [INF] Entity does not exist. Adding to DB.
2022-05-12 00:53:14.587 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = Boolean), @p2='?' (DbType = DateTime2), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Earnings] ([Symbol], [ExistInApi], [LastApiRefresh], [LastLocalRefresh])
VALUES (@p0, @p1, @p2, @p3);
2022-05-12 00:53:14.648 +03:00 [INF] Executed DbCommand (58ms) [Parameters=[@p4='?' (DbType = DateTime2), @p5='?' (DbType = Double), @p6='?' (Size = 450), @p7='?' (DbType = DateTime2), @p8='?' (DbType = Double), @p9='?' (Size = 450), @p10='?' (DbType = DateTime2), @p11='?' (DbType = Double), @p12='?' (Size = 450), @p13='?' (DbType = DateTime2), @p14='?' (DbType = Double), @p15='?' (Size = 450), @p16='?' (DbType = DateTime2), @p17='?' (DbType = Double), @p18='?' (Size = 450), @p19='?' (DbType = DateTime2), @p20='?' (DbType = Double), @p21='?' (Size = 450), @p22='?' (DbType = DateTime2), @p23='?' (DbType = Double), @p24='?' (Size = 450), @p25='?' (DbType = DateTime2), @p26='?' (DbType = Double), @p27='?' (Size = 450), @p28='?' (DbType = DateTime2), @p29='?' (DbType = Double), @p30='?' (Size = 450), @p31='?' (DbType = DateTime2), @p32='?' (DbType = Double), @p33='?' (Size = 450), @p34='?' (DbType = DateTime2), @p35='?' (DbType = Double), @p36='?' (Size = 450), @p37='?' (DbType = DateTime2), @p38='?' (DbType = Double), @p39='?' (Size = 450), @p40='?' (DbType = DateTime2), @p41='?' (DbType = Double), @p42='?' (Size = 450), @p43='?' (DbType = DateTime2), @p44='?' (DbType = Double), @p45='?' (Size = 450), @p46='?' (DbType = DateTime2), @p47='?' (DbType = Double), @p48='?' (Size = 450), @p49='?' (DbType = DateTime2), @p50='?' (DbType = Double), @p51='?' (Size = 450), @p52='?' (DbType = DateTime2), @p53='?' (DbType = Double), @p54='?' (Size = 450), @p55='?' (DbType = DateTime2), @p56='?' (DbType = Double), @p57='?' (Size = 450), @p58='?' (DbType = DateTime2), @p59='?' (DbType = Double), @p60='?' (Size = 450), @p61='?' (DbType = Double), @p62='?' (DbType = DateTime2), @p63='?' (DbType = DateTime2), @p64='?' (DbType = Double), @p65='?' (DbType = Double), @p66='?' (DbType = Double), @p67='?' (Size = 450), @p68='?' (DbType = Double), @p69='?' (DbType = DateTime2), @p70='?' (DbType = DateTime2), @p71='?' (DbType = Double), @p72='?' (DbType = Double), @p73='?' (DbType = Double), @p74='?' (Size = 450), @p75='?' (DbType = Double), @p76='?' (DbType = DateTime2), @p77='?' (DbType = DateTime2), @p78='?' (DbType = Double), @p79='?' (DbType = Double), @p80='?' (DbType = Double), @p81='?' (Size = 450), @p82='?' (DbType = Double), @p83='?' (DbType = DateTime2), @p84='?' (DbType = DateTime2), @p85='?' (DbType = Double), @p86='?' (DbType = Double), @p87='?' (DbType = Double), @p88='?' (Size = 450), @p89='?' (DbType = Double), @p90='?' (DbType = DateTime2), @p91='?' (DbType = DateTime2), @p92='?' (DbType = Double), @p93='?' (DbType = Double), @p94='?' (DbType = Double), @p95='?' (Size = 450), @p96='?' (DbType = Double), @p97='?' (DbType = DateTime2), @p98='?' (DbType = DateTime2), @p99='?' (DbType = Double), @p100='?' (DbType = Double), @p101='?' (DbType = Double), @p102='?' (Size = 450), @p103='?' (DbType = Double), @p104='?' (DbType = DateTime2), @p105='?' (DbType = DateTime2), @p106='?' (DbType = Double), @p107='?' (DbType = Double), @p108='?' (DbType = Double), @p109='?' (Size = 450), @p110='?' (DbType = Double), @p111='?' (DbType = DateTime2), @p112='?' (DbType = DateTime2), @p113='?' (DbType = Double), @p114='?' (DbType = Double), @p115='?' (DbType = Double), @p116='?' (Size = 450), @p117='?' (DbType = Double), @p118='?' (DbType = DateTime2), @p119='?' (DbType = DateTime2), @p120='?' (DbType = Double), @p121='?' (DbType = Double), @p122='?' (DbType = Double), @p123='?' (Size = 450), @p124='?' (DbType = Double), @p125='?' (DbType = DateTime2), @p126='?' (DbType = DateTime2), @p127='?' (DbType = Double), @p128='?' (DbType = Double), @p129='?' (DbType = Double), @p130='?' (Size = 450), @p131='?' (DbType = Double), @p132='?' (DbType = DateTime2), @p133='?' (DbType = DateTime2), @p134='?' (DbType = Double), @p135='?' (DbType = Double), @p136='?' (DbType = Double), @p137='?' (Size = 450), @p138='?' (DbType = Double), @p139='?' (DbType = DateTime2), @p140='?' (DbType = DateTime2), @p141='?' (DbType = Double), @p142='?' (DbType = Double), @p143='?' (DbType = Double), @p144='?' (Size = 450), @p145='?' (DbType = Double), @p146='?' (DbType = DateTime2), @p147='?' (DbType = DateTime2), @p148='?' (DbType = Double), @p149='?' (DbType = Double), @p150='?' (DbType = Double), @p151='?' (Size = 450), @p152='?' (DbType = Double), @p153='?' (DbType = DateTime2), @p154='?' (DbType = DateTime2), @p155='?' (DbType = Double), @p156='?' (DbType = Double), @p157='?' (DbType = Double), @p158='?' (Size = 450), @p159='?' (DbType = Double), @p160='?' (DbType = DateTime2), @p161='?' (DbType = DateTime2), @p162='?' (DbType = Double), @p163='?' (DbType = Double), @p164='?' (DbType = Double), @p165='?' (Size = 450), @p166='?' (DbType = Double), @p167='?' (DbType = DateTime2), @p168='?' (DbType = DateTime2), @p169='?' (DbType = Double), @p170='?' (DbType = Double), @p171='?' (DbType = Double), @p172='?' (Size = 450), @p173='?' (DbType = Double), @p174='?' (DbType = DateTime2), @p175='?' (DbType = DateTime2), @p176='?' (DbType = Double), @p177='?' (DbType = Double), @p178='?' (DbType = Double), @p179='?' (Size = 450), @p180='?' (DbType = Double), @p181='?' (DbType = DateTime2), @p182='?' (DbType = DateTime2), @p183='?' (DbType = Double), @p184='?' (DbType = Double), @p185='?' (DbType = Double), @p186='?' (Size = 450), @p187='?' (DbType = Double), @p188='?' (DbType = DateTime2), @p189='?' (DbType = DateTime2), @p190='?' (DbType = Double), @p191='?' (DbType = Double), @p192='?' (DbType = Double), @p193='?' (Size = 450), @p194='?' (DbType = Double), @p195='?' (DbType = DateTime2), @p196='?' (DbType = DateTime2), @p197='?' (DbType = Double), @p198='?' (DbType = Double), @p199='?' (DbType = Double), @p200='?' (Size = 450), @p201='?' (DbType = Double), @p202='?' (DbType = DateTime2), @p203='?' (DbType = DateTime2), @p204='?' (DbType = Double), @p205='?' (DbType = Double), @p206='?' (DbType = Double), @p207='?' (Size = 450), @p208='?' (DbType = Double), @p209='?' (DbType = DateTime2), @p210='?' (DbType = DateTime2), @p211='?' (DbType = Double), @p212='?' (DbType = Double), @p213='?' (DbType = Double), @p214='?' (Size = 450), @p215='?' (DbType = Double), @p216='?' (DbType = DateTime2), @p217='?' (DbType = DateTime2), @p218='?' (DbType = Double), @p219='?' (DbType = Double), @p220='?' (DbType = Double), @p221='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
DECLARE @inserted0 TABLE ([Id] int, [_Position] [int]);
MERGE [AnnualEarning] USING (
VALUES (@p4, @p5, @p6, 0),
(@p7, @p8, @p9, 1),
(@p10, @p11, @p12, 2),
(@p13, @p14, @p15, 3),
(@p16, @p17, @p18, 4),
(@p19, @p20, @p21, 5),
(@p22, @p23, @p24, 6),
(@p25, @p26, @p27, 7),
(@p28, @p29, @p30, 8),
(@p31, @p32, @p33, 9),
(@p34, @p35, @p36, 10),
(@p37, @p38, @p39, 11),
(@p40, @p41, @p42, 12),
(@p43, @p44, @p45, 13),
(@p46, @p47, @p48, 14),
(@p49, @p50, @p51, 15),
(@p52, @p53, @p54, 16),
(@p55, @p56, @p57, 17),
(@p58, @p59, @p60, 18)) AS i ([FiscalDateEnding], [ReportedEPS], [Symbol], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([FiscalDateEnding], [ReportedEPS], [Symbol])
VALUES (i.[FiscalDateEnding], i.[ReportedEPS], i.[Symbol])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted0;

SELECT [i].[Id] FROM @inserted0 i
ORDER BY [i].[_Position];

DECLARE @inserted19 TABLE ([Id] int, [_Position] [int]);
MERGE [QuarterlyEarning] USING (
VALUES (@p61, @p62, @p63, @p64, @p65, @p66, @p67, 0),
(@p68, @p69, @p70, @p71, @p72, @p73, @p74, 1),
(@p75, @p76, @p77, @p78, @p79, @p80, @p81, 2),
(@p82, @p83, @p84, @p85, @p86, @p87, @p88, 3),
(@p89, @p90, @p91, @p92, @p93, @p94, @p95, 4),
(@p96, @p97, @p98, @p99, @p100, @p101, @p102, 5),
(@p103, @p104, @p105, @p106, @p107, @p108, @p109, 6),
(@p110, @p111, @p112, @p113, @p114, @p115, @p116, 7),
(@p117, @p118, @p119, @p120, @p121, @p122, @p123, 8),
(@p124, @p125, @p126, @p127, @p128, @p129, @p130, 9),
(@p131, @p132, @p133, @p134, @p135, @p136, @p137, 10),
(@p138, @p139, @p140, @p141, @p142, @p143, @p144, 11),
(@p145, @p146, @p147, @p148, @p149, @p150, @p151, 12),
(@p152, @p153, @p154, @p155, @p156, @p157, @p158, 13),
(@p159, @p160, @p161, @p162, @p163, @p164, @p165, 14),
(@p166, @p167, @p168, @p169, @p170, @p171, @p172, 15),
(@p173, @p174, @p175, @p176, @p177, @p178, @p179, 16),
(@p180, @p181, @p182, @p183, @p184, @p185, @p186, 17),
(@p187, @p188, @p189, @p190, @p191, @p192, @p193, 18),
(@p194, @p195, @p196, @p197, @p198, @p199, @p200, 19),
(@p201, @p202, @p203, @p204, @p205, @p206, @p207, 20),
(@p208, @p209, @p210, @p211, @p212, @p213, @p214, 21),
(@p215, @p216, @p217, @p218, @p219, @p220, @p221, 22)) AS i ([EstimatedEPS], [FiscalDateEnding], [ReportedDate], [ReportedEPS], [Surprise], [SurprisePercentage], [Symbol], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([EstimatedEPS], [FiscalDateEnding], [ReportedDate], [ReportedEPS], [Surprise], [SurprisePercentage], [Symbol])
VALUES (i.[EstimatedEPS], i.[FiscalDateEnding], i.[ReportedDate], i.[ReportedEPS], i.[Surprise], i.[SurprisePercentage], i.[Symbol])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted19;

SELECT [i].[Id] FROM @inserted19 i
ORDER BY [i].[_Position];
2022-05-12 00:53:14.674 +03:00 [INF] Executed DbCommand (16ms) [Parameters=[@p0='?' (DbType = Double), @p1='?' (DbType = DateTime2), @p2='?' (DbType = DateTime2), @p3='?' (DbType = Double), @p4='?' (DbType = Double), @p5='?' (DbType = Double), @p6='?' (Size = 450), @p7='?' (DbType = Double), @p8='?' (DbType = DateTime2), @p9='?' (DbType = DateTime2), @p10='?' (DbType = Double), @p11='?' (DbType = Double), @p12='?' (DbType = Double), @p13='?' (Size = 450), @p14='?' (DbType = Double), @p15='?' (DbType = DateTime2), @p16='?' (DbType = DateTime2), @p17='?' (DbType = Double), @p18='?' (DbType = Double), @p19='?' (DbType = Double), @p20='?' (Size = 450), @p21='?' (DbType = Double), @p22='?' (DbType = DateTime2), @p23='?' (DbType = DateTime2), @p24='?' (DbType = Double), @p25='?' (DbType = Double), @p26='?' (DbType = Double), @p27='?' (Size = 450), @p28='?' (DbType = Double), @p29='?' (DbType = DateTime2), @p30='?' (DbType = DateTime2), @p31='?' (DbType = Double), @p32='?' (DbType = Double), @p33='?' (DbType = Double), @p34='?' (Size = 450), @p35='?' (DbType = Double), @p36='?' (DbType = DateTime2), @p37='?' (DbType = DateTime2), @p38='?' (DbType = Double), @p39='?' (DbType = Double), @p40='?' (DbType = Double), @p41='?' (Size = 450), @p42='?' (DbType = Double), @p43='?' (DbType = DateTime2), @p44='?' (DbType = DateTime2), @p45='?' (DbType = Double), @p46='?' (DbType = Double), @p47='?' (DbType = Double), @p48='?' (Size = 450), @p49='?' (DbType = Double), @p50='?' (DbType = DateTime2), @p51='?' (DbType = DateTime2), @p52='?' (DbType = Double), @p53='?' (DbType = Double), @p54='?' (DbType = Double), @p55='?' (Size = 450), @p56='?' (DbType = Double), @p57='?' (DbType = DateTime2), @p58='?' (DbType = DateTime2), @p59='?' (DbType = Double), @p60='?' (DbType = Double), @p61='?' (DbType = Double), @p62='?' (Size = 450), @p63='?' (DbType = Double), @p64='?' (DbType = DateTime2), @p65='?' (DbType = DateTime2), @p66='?' (DbType = Double), @p67='?' (DbType = Double), @p68='?' (DbType = Double), @p69='?' (Size = 450), @p70='?' (DbType = Double), @p71='?' (DbType = DateTime2), @p72='?' (DbType = DateTime2), @p73='?' (DbType = Double), @p74='?' (DbType = Double), @p75='?' (DbType = Double), @p76='?' (Size = 450), @p77='?' (DbType = Double), @p78='?' (DbType = DateTime2), @p79='?' (DbType = DateTime2), @p80='?' (DbType = Double), @p81='?' (DbType = Double), @p82='?' (DbType = Double), @p83='?' (Size = 450), @p84='?' (DbType = Double), @p85='?' (DbType = DateTime2), @p86='?' (DbType = DateTime2), @p87='?' (DbType = Double), @p88='?' (DbType = Double), @p89='?' (DbType = Double), @p90='?' (Size = 450), @p91='?' (DbType = Double), @p92='?' (DbType = DateTime2), @p93='?' (DbType = DateTime2), @p94='?' (DbType = Double), @p95='?' (DbType = Double), @p96='?' (DbType = Double), @p97='?' (Size = 450), @p98='?' (DbType = Double), @p99='?' (DbType = DateTime2), @p100='?' (DbType = DateTime2), @p101='?' (DbType = Double), @p102='?' (DbType = Double), @p103='?' (DbType = Double), @p104='?' (Size = 450), @p105='?' (DbType = Double), @p106='?' (DbType = DateTime2), @p107='?' (DbType = DateTime2), @p108='?' (DbType = Double), @p109='?' (DbType = Double), @p110='?' (DbType = Double), @p111='?' (Size = 450), @p112='?' (DbType = Double), @p113='?' (DbType = DateTime2), @p114='?' (DbType = DateTime2), @p115='?' (DbType = Double), @p116='?' (DbType = Double), @p117='?' (DbType = Double), @p118='?' (Size = 450), @p119='?' (DbType = Double), @p120='?' (DbType = DateTime2), @p121='?' (DbType = DateTime2), @p122='?' (DbType = Double), @p123='?' (DbType = Double), @p124='?' (DbType = Double), @p125='?' (Size = 450), @p126='?' (DbType = Double), @p127='?' (DbType = DateTime2), @p128='?' (DbType = DateTime2), @p129='?' (DbType = Double), @p130='?' (DbType = Double), @p131='?' (DbType = Double), @p132='?' (Size = 450), @p133='?' (DbType = Double), @p134='?' (DbType = DateTime2), @p135='?' (DbType = DateTime2), @p136='?' (DbType = Double), @p137='?' (DbType = Double), @p138='?' (DbType = Double), @p139='?' (Size = 450), @p140='?' (DbType = Double), @p141='?' (DbType = DateTime2), @p142='?' (DbType = DateTime2), @p143='?' (DbType = Double), @p144='?' (DbType = Double), @p145='?' (DbType = Double), @p146='?' (Size = 450), @p147='?' (DbType = Double), @p148='?' (DbType = DateTime2), @p149='?' (DbType = DateTime2), @p150='?' (DbType = Double), @p151='?' (DbType = Double), @p152='?' (DbType = Double), @p153='?' (Size = 450), @p154='?' (DbType = Double), @p155='?' (DbType = DateTime2), @p156='?' (DbType = DateTime2), @p157='?' (DbType = Double), @p158='?' (DbType = Double), @p159='?' (DbType = Double), @p160='?' (Size = 450), @p161='?' (DbType = Double), @p162='?' (DbType = DateTime2), @p163='?' (DbType = DateTime2), @p164='?' (DbType = Double), @p165='?' (DbType = Double), @p166='?' (DbType = Double), @p167='?' (Size = 450), @p168='?' (DbType = Double), @p169='?' (DbType = DateTime2), @p170='?' (DbType = DateTime2), @p171='?' (DbType = Double), @p172='?' (DbType = Double), @p173='?' (DbType = Double), @p174='?' (Size = 450), @p175='?' (DbType = Double), @p176='?' (DbType = DateTime2), @p177='?' (DbType = DateTime2), @p178='?' (DbType = Double), @p179='?' (DbType = Double), @p180='?' (DbType = Double), @p181='?' (Size = 450), @p182='?' (DbType = Double), @p183='?' (DbType = DateTime2), @p184='?' (DbType = DateTime2), @p185='?' (DbType = Double), @p186='?' (DbType = Double), @p187='?' (DbType = Double), @p188='?' (Size = 450), @p189='?' (DbType = Double), @p190='?' (DbType = DateTime2), @p191='?' (DbType = DateTime2), @p192='?' (DbType = Double), @p193='?' (DbType = Double), @p194='?' (DbType = Double), @p195='?' (Size = 450), @p196='?' (DbType = Double), @p197='?' (DbType = DateTime2), @p198='?' (DbType = DateTime2), @p199='?' (DbType = Double), @p200='?' (DbType = Double), @p201='?' (DbType = Double), @p202='?' (Size = 450), @p203='?' (DbType = Double), @p204='?' (DbType = DateTime2), @p205='?' (DbType = DateTime2), @p206='?' (DbType = Double), @p207='?' (DbType = Double), @p208='?' (DbType = Double), @p209='?' (Size = 450), @p210='?' (DbType = Double), @p211='?' (DbType = DateTime2), @p212='?' (DbType = DateTime2), @p213='?' (DbType = Double), @p214='?' (DbType = Double), @p215='?' (DbType = Double), @p216='?' (Size = 450), @p217='?' (DbType = Double), @p218='?' (DbType = DateTime2), @p219='?' (DbType = DateTime2), @p220='?' (DbType = Double), @p221='?' (DbType = Double), @p222='?' (DbType = Double), @p223='?' (Size = 450), @p224='?' (DbType = Double), @p225='?' (DbType = DateTime2), @p226='?' (DbType = DateTime2), @p227='?' (DbType = Double), @p228='?' (DbType = Double), @p229='?' (DbType = Double), @p230='?' (Size = 450), @p231='?' (DbType = Double), @p232='?' (DbType = DateTime2), @p233='?' (DbType = DateTime2), @p234='?' (DbType = Double), @p235='?' (DbType = Double), @p236='?' (DbType = Double), @p237='?' (Size = 450), @p238='?' (DbType = Double), @p239='?' (DbType = DateTime2), @p240='?' (DbType = DateTime2), @p241='?' (DbType = Double), @p242='?' (DbType = Double), @p243='?' (DbType = Double), @p244='?' (Size = 450), @p245='?' (DbType = Double), @p246='?' (DbType = DateTime2), @p247='?' (DbType = DateTime2), @p248='?' (DbType = Double), @p249='?' (DbType = Double), @p250='?' (DbType = Double), @p251='?' (Size = 450), @p252='?' (DbType = Double), @p253='?' (DbType = DateTime2), @p254='?' (DbType = DateTime2), @p255='?' (DbType = Double), @p256='?' (DbType = Double), @p257='?' (DbType = Double), @p258='?' (Size = 450), @p259='?' (DbType = Double), @p260='?' (DbType = DateTime2), @p261='?' (DbType = DateTime2), @p262='?' (DbType = Double), @p263='?' (DbType = Double), @p264='?' (DbType = Double), @p265='?' (Size = 450), @p266='?' (DbType = Double), @p267='?' (DbType = DateTime2), @p268='?' (DbType = DateTime2), @p269='?' (DbType = Double), @p270='?' (DbType = Double), @p271='?' (DbType = Double), @p272='?' (Size = 450), @p273='?' (DbType = Double), @p274='?' (DbType = DateTime2), @p275='?' (DbType = DateTime2), @p276='?' (DbType = Double), @p277='?' (DbType = Double), @p278='?' (DbType = Double), @p279='?' (Size = 450), @p280='?' (DbType = Double), @p281='?' (DbType = DateTime2), @p282='?' (DbType = DateTime2), @p283='?' (DbType = Double), @p284='?' (DbType = Double), @p285='?' (DbType = Double), @p286='?' (Size = 450), @p287='?' (DbType = Double), @p288='?' (DbType = DateTime2), @p289='?' (DbType = DateTime2), @p290='?' (DbType = Double), @p291='?' (DbType = Double), @p292='?' (DbType = Double), @p293='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
DECLARE @inserted0 TABLE ([Id] int, [_Position] [int]);
MERGE [QuarterlyEarning] USING (
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, 0),
(@p7, @p8, @p9, @p10, @p11, @p12, @p13, 1),
(@p14, @p15, @p16, @p17, @p18, @p19, @p20, 2),
(@p21, @p22, @p23, @p24, @p25, @p26, @p27, 3),
(@p28, @p29, @p30, @p31, @p32, @p33, @p34, 4),
(@p35, @p36, @p37, @p38, @p39, @p40, @p41, 5),
(@p42, @p43, @p44, @p45, @p46, @p47, @p48, 6),
(@p49, @p50, @p51, @p52, @p53, @p54, @p55, 7),
(@p56, @p57, @p58, @p59, @p60, @p61, @p62, 8),
(@p63, @p64, @p65, @p66, @p67, @p68, @p69, 9),
(@p70, @p71, @p72, @p73, @p74, @p75, @p76, 10),
(@p77, @p78, @p79, @p80, @p81, @p82, @p83, 11),
(@p84, @p85, @p86, @p87, @p88, @p89, @p90, 12),
(@p91, @p92, @p93, @p94, @p95, @p96, @p97, 13),
(@p98, @p99, @p100, @p101, @p102, @p103, @p104, 14),
(@p105, @p106, @p107, @p108, @p109, @p110, @p111, 15),
(@p112, @p113, @p114, @p115, @p116, @p117, @p118, 16),
(@p119, @p120, @p121, @p122, @p123, @p124, @p125, 17),
(@p126, @p127, @p128, @p129, @p130, @p131, @p132, 18),
(@p133, @p134, @p135, @p136, @p137, @p138, @p139, 19),
(@p140, @p141, @p142, @p143, @p144, @p145, @p146, 20),
(@p147, @p148, @p149, @p150, @p151, @p152, @p153, 21),
(@p154, @p155, @p156, @p157, @p158, @p159, @p160, 22),
(@p161, @p162, @p163, @p164, @p165, @p166, @p167, 23),
(@p168, @p169, @p170, @p171, @p172, @p173, @p174, 24),
(@p175, @p176, @p177, @p178, @p179, @p180, @p181, 25),
(@p182, @p183, @p184, @p185, @p186, @p187, @p188, 26),
(@p189, @p190, @p191, @p192, @p193, @p194, @p195, 27),
(@p196, @p197, @p198, @p199, @p200, @p201, @p202, 28),
(@p203, @p204, @p205, @p206, @p207, @p208, @p209, 29),
(@p210, @p211, @p212, @p213, @p214, @p215, @p216, 30),
(@p217, @p218, @p219, @p220, @p221, @p222, @p223, 31),
(@p224, @p225, @p226, @p227, @p228, @p229, @p230, 32),
(@p231, @p232, @p233, @p234, @p235, @p236, @p237, 33),
(@p238, @p239, @p240, @p241, @p242, @p243, @p244, 34),
(@p245, @p246, @p247, @p248, @p249, @p250, @p251, 35),
(@p252, @p253, @p254, @p255, @p256, @p257, @p258, 36),
(@p259, @p260, @p261, @p262, @p263, @p264, @p265, 37),
(@p266, @p267, @p268, @p269, @p270, @p271, @p272, 38),
(@p273, @p274, @p275, @p276, @p277, @p278, @p279, 39),
(@p280, @p281, @p282, @p283, @p284, @p285, @p286, 40),
(@p287, @p288, @p289, @p290, @p291, @p292, @p293, 41)) AS i ([EstimatedEPS], [FiscalDateEnding], [ReportedDate], [ReportedEPS], [Surprise], [SurprisePercentage], [Symbol], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([EstimatedEPS], [FiscalDateEnding], [ReportedDate], [ReportedEPS], [Surprise], [SurprisePercentage], [Symbol])
VALUES (i.[EstimatedEPS], i.[FiscalDateEnding], i.[ReportedDate], i.[ReportedEPS], i.[Surprise], i.[SurprisePercentage], i.[Symbol])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted0;

SELECT [i].[Id] FROM @inserted0 i
ORDER BY [i].[_Position];
2022-05-12 00:53:14.695 +03:00 [INF] Executed DbCommand (12ms) [Parameters=[@p0='?' (DbType = Double), @p1='?' (DbType = DateTime2), @p2='?' (DbType = DateTime2), @p3='?' (DbType = Double), @p4='?' (DbType = Double), @p5='?' (DbType = Double), @p6='?' (Size = 450), @p7='?' (DbType = Double), @p8='?' (DbType = DateTime2), @p9='?' (DbType = DateTime2), @p10='?' (DbType = Double), @p11='?' (DbType = Double), @p12='?' (DbType = Double), @p13='?' (Size = 450), @p14='?' (DbType = Double), @p15='?' (DbType = DateTime2), @p16='?' (DbType = DateTime2), @p17='?' (DbType = Double), @p18='?' (DbType = Double), @p19='?' (DbType = Double), @p20='?' (Size = 450), @p21='?' (DbType = Double), @p22='?' (DbType = DateTime2), @p23='?' (DbType = DateTime2), @p24='?' (DbType = Double), @p25='?' (DbType = Double), @p26='?' (DbType = Double), @p27='?' (Size = 450), @p28='?' (DbType = Double), @p29='?' (DbType = DateTime2), @p30='?' (DbType = DateTime2), @p31='?' (DbType = Double), @p32='?' (DbType = Double), @p33='?' (DbType = Double), @p34='?' (Size = 450), @p35='?' (DbType = Double), @p36='?' (DbType = DateTime2), @p37='?' (DbType = DateTime2), @p38='?' (DbType = Double), @p39='?' (DbType = Double), @p40='?' (DbType = Double), @p41='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
DECLARE @inserted0 TABLE ([Id] int, [_Position] [int]);
MERGE [QuarterlyEarning] USING (
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, 0),
(@p7, @p8, @p9, @p10, @p11, @p12, @p13, 1),
(@p14, @p15, @p16, @p17, @p18, @p19, @p20, 2),
(@p21, @p22, @p23, @p24, @p25, @p26, @p27, 3),
(@p28, @p29, @p30, @p31, @p32, @p33, @p34, 4),
(@p35, @p36, @p37, @p38, @p39, @p40, @p41, 5)) AS i ([EstimatedEPS], [FiscalDateEnding], [ReportedDate], [ReportedEPS], [Surprise], [SurprisePercentage], [Symbol], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([EstimatedEPS], [FiscalDateEnding], [ReportedDate], [ReportedEPS], [Surprise], [SurprisePercentage], [Symbol])
VALUES (i.[EstimatedEPS], i.[FiscalDateEnding], i.[ReportedDate], i.[ReportedEPS], i.[Surprise], i.[SurprisePercentage], i.[Symbol])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted0;

SELECT [i].[Id] FROM @inserted0 i
ORDER BY [i].[_Position];
2022-05-12 00:53:14.707 +03:00 [INF] AddOrUpdate run successful.
2022-05-12 00:53:14.818 +03:00 [INF] Response has success status code
2022-05-12 00:53:14.819 +03:00 [INF] Trying to deserialize response.
2022-05-12 00:53:14.820 +03:00 [ERR] Failed to refresh  entity SaluteStocksAPI.Models.FundamentalData.CashFlow with Symbol ASML
Newtonsoft.Json.JsonSerializationException: Error converting value "-1270490918.79" to type 'System.Nullable`1[System.Int64]'. Path 'quarterlyReports[9].changeInInventory', line 451, position 49.
 ---> System.FormatException: Input string was not in a correct format.
   at System.Number.ThrowOverflowOrFormatException(ParsingStatus status, TypeCode type)
   at System.String.System.IConvertible.ToInt64(IFormatProvider provider)
   at System.Convert.ChangeType(Object value, Type conversionType, IFormatProvider provider)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)
   --- End of inner exception stack trace ---
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(IList list, JsonReader reader, JsonArrayContract contract, JsonProperty containerProperty, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, Object existingValue, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)
   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)
   at Newtonsoft.Json.JsonSerializer.Deserialize(JsonReader reader, Type objectType)
   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)
   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value, JsonSerializerSettings settings)
   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value)
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 324
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCashFlow(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 96
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 00:53:15.123 +03:00 [INF] Response has success status code
2022-05-12 00:53:15.123 +03:00 [INF] Trying to deserialize response.
2022-05-12 00:53:15.134 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 00:53:15.148 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__symbol_0
2022-05-12 00:53:15.150 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.BalanceSheet.
2022-05-12 00:53:15.163 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [b].[Symbol], [b].[ExistInApi], [b].[LastApiRefresh], [b].[LastLocalRefresh]
FROM [BalanceSheets] AS [b]
WHERE [b].[Symbol] = @__entity_Symbol_0
2022-05-12 00:53:15.165 +03:00 [INF] Entity does not exist. Adding to DB.
2022-05-12 00:53:15.179 +03:00 [INF] Response has success status code
2022-05-12 00:53:15.179 +03:00 [INF] Response has success status code
2022-05-12 00:53:15.179 +03:00 [INF] Trying to deserialize response.
2022-05-12 00:53:15.180 +03:00 [INF] Trying to deserialize response.
2022-05-12 00:53:15.183 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 00:53:15.191 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.CompanyOverview.
2022-05-12 00:53:15.192 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 00:53:15.193 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__symbol_0
2022-05-12 00:53:15.195 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.IncomeStatement.
2022-05-12 00:53:15.207 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [i].[Symbol], [i].[ExistInApi], [i].[LastApiRefresh], [i].[LastLocalRefresh]
FROM [IncomeStatements] AS [i]
WHERE [i].[Symbol] = @__entity_Symbol_0
2022-05-12 00:53:15.209 +03:00 [INF] Entity does not exist. Adding to DB.
2022-05-12 00:53:15.210 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__entity_Symbol_0
2022-05-12 00:53:15.212 +03:00 [INF] Entity does not exist. Adding to DB.
2022-05-12 00:53:15.229 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (Size = 4000), @p2='?' (DbType = Double), @p3='?' (Size = 4000), @p4='?' (DbType = Double), @p5='?' (DbType = Double), @p6='?' (DbType = Int64), @p7='?' (Size = 4000), @p8='?' (Size = 4000), @p9='?' (Size = 4000), @p10='?' (DbType = Double), @p11='?' (DbType = DateTime2), @p12='?' (DbType = Double), @p13='?' (DbType = Double), @p14='?' (DbType = Int64), @p15='?' (DbType = Double), @p16='?' (DbType = Double), @p17='?' (DbType = Double), @p18='?' (DbType = DateTime2), @p19='?' (Size = 4000), @p20='?' (DbType = Boolean), @p21='?' (Size = 4000), @p22='?' (DbType = Double), @p23='?' (DbType = Int64), @p24='?' (Size = 4000), @p25='?' (DbType = DateTime2), @p26='?' (DbType = DateTime2), @p27='?' (DbType = DateTime2), @p28='?' (DbType = Int64), @p29='?' (Size = 4000), @p30='?' (DbType = Double), @p31='?' (DbType = Double), @p32='?' (DbType = Double), @p33='?' (DbType = Double), @p34='?' (DbType = Double), @p35='?' (DbType = Double), @p36='?' (DbType = Double), @p37='?' (DbType = Double), @p38='?' (DbType = Double), @p39='?' (DbType = Double), @p40='?' (DbType = Double), @p41='?' (DbType = Int64), @p42='?' (Size = 4000), @p43='?' (DbType = Int64), @p44='?' (DbType = Double), @p45='?' (DbType = Double), @p46='?' (DbType = Double), @p47='?' (DbType = Double), @p48='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [CompanyOverviews] ([Symbol], [Address], [AnalystTargetPrice], [AssetType], [Beta], [BookValue], [CIK], [Country], [Currency], [Description], [DilutedEPSTTM], [DividendDate], [DividendPerShare], [DividendYield], [EBITDA], [EPS], [EVToEBITDA], [EVToRevenue], [ExDividendDate], [Exchange], [ExistInApi], [FiscalYearEnd], [ForwardPE], [GrossProfitTTM], [Industry], [LastApiRefresh], [LastLocalRefresh], [LatestQuarter], [MarketCapitalization], [Name], [OperatingMarginTTM], [PEGRatio], [PERatio], [PriceToBookRatio], [PriceToSalesRatioTTM], [ProfitMargin], [QuarterlyEarningsGrowthYOY], [QuarterlyRevenueGrowthYOY], [ReturnOnAssetsTTM], [ReturnOnEquityTTM], [RevenuePerShareTTM], [RevenueTTM], [Sector], [SharesOutstanding], [TrailingPE], [_200DayMovingAverage], [_50DayMovingAverage], [_52WeekHigh], [_52WeekLow])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21, @p22, @p23, @p24, @p25, @p26, @p27, @p28, @p29, @p30, @p31, @p32, @p33, @p34, @p35, @p36, @p37, @p38, @p39, @p40, @p41, @p42, @p43, @p44, @p45, @p46, @p47, @p48);
2022-05-12 00:53:15.233 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = Boolean), @p2='?' (DbType = DateTime2), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [IncomeStatements] ([Symbol], [ExistInApi], [LastApiRefresh], [LastLocalRefresh])
VALUES (@p0, @p1, @p2, @p3);
2022-05-12 00:53:15.243 +03:00 [INF] AddOrUpdate run successful.
2022-05-12 00:53:15.243 +03:00 [INF] AddOrUpdate run successful.
2022-05-12 00:53:15.306 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = Boolean), @p2='?' (DbType = DateTime2), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [BalanceSheets] ([Symbol], [ExistInApi], [LastApiRefresh], [LastLocalRefresh])
VALUES (@p0, @p1, @p2, @p3);
2022-05-12 00:53:15.334 +03:00 [INF] Executed DbCommand (25ms) [Parameters=[@p4='?' (DbType = Int64), @p5='?' (DbType = Double), @p6='?' (DbType = Double), @p7='?' (DbType = Double), @p8='?' (DbType = Double), @p9='?' (DbType = Int64), @p10='?' (DbType = Int64), @p11='?' (DbType = Int64), @p12='?' (DbType = Double), @p13='?' (DbType = Int64), @p14='?' (DbType = Int64), @p15='?' (DbType = DateTime2), @p16='?' (DbType = Double), @p17='?' (DbType = Double), @p18='?' (DbType = Double), @p19='?' (DbType = Double), @p20='?' (DbType = Int64), @p21='?' (DbType = Double), @p22='?' (DbType = Int64), @p23='?' (DbType = Double), @p24='?' (DbType = Double), @p25='?' (DbType = Double), @p26='?' (DbType = Double), @p27='?' (DbType = Double), @p28='?' (DbType = Int64), @p29='?' (Size = 4000), @p30='?' (DbType = Double), @p31='?' (DbType = Double), @p32='?' (DbType = Double), @p33='?' (DbType = Double), @p34='?' (Size = 450), @p35='?' (DbType = Double), @p36='?' (DbType = Double), @p37='?' (DbType = Double), @p38='?' (DbType = Double), @p39='?' (DbType = Double), @p40='?' (DbType = Double), @p41='?' (DbType = Double), @p42='?' (DbType = Double), @p43='?' (DbType = Int64), @p44='?' (DbType = Double), @p45='?' (DbType = Double), @p46='?' (DbType = Double), @p47='?' (DbType = Double), @p48='?' (DbType = Int64), @p49='?' (DbType = Int64), @p50='?' (DbType = Int64), @p51='?' (DbType = Double), @p52='?' (DbType = Int64), @p53='?' (DbType = Int64), @p54='?' (DbType = DateTime2), @p55='?' (DbType = Double), @p56='?' (DbType = Double), @p57='?' (DbType = Double), @p58='?' (DbType = Double), @p59='?' (DbType = Int64), @p60='?' (DbType = Double), @p61='?' (DbType = Int64), @p62='?' (DbType = Double), @p63='?' (DbType = Double), @p64='?' (DbType = Double), @p65='?' (DbType = Double), @p66='?' (DbType = Double), @p67='?' (DbType = Int64), @p68='?' (Size = 4000), @p69='?' (DbType = Double), @p70='?' (DbType = Double), @p71='?' (DbType = Double), @p72='?' (DbType = Double), @p73='?' (Size = 450), @p74='?' (DbType = Double), @p75='?' (DbType = Double), @p76='?' (DbType = Double), @p77='?' (DbType = Double), @p78='?' (DbType = Double), @p79='?' (DbType = Double), @p80='?' (DbType = Double), @p81='?' (DbType = Double), @p82='?' (DbType = Int64), @p83='?' (DbType = Double), @p84='?' (DbType = Double), @p85='?' (DbType = Double), @p86='?' (DbType = Double), @p87='?' (DbType = Int64), @p88='?' (DbType = Int64), @p89='?' (DbType = Int64), @p90='?' (DbType = Double), @p91='?' (DbType = Int64), @p92='?' (DbType = Int64), @p93='?' (DbType = DateTime2), @p94='?' (DbType = Double), @p95='?' (DbType = Double), @p96='?' (DbType = Double), @p97='?' (DbType = Double), @p98='?' (DbType = Int64), @p99='?' (DbType = Double), @p100='?' (DbType = Int64), @p101='?' (DbType = Double), @p102='?' (DbType = Double), @p103='?' (DbType = Double), @p104='?' (DbType = Double), @p105='?' (DbType = Double), @p106='?' (DbType = Int64), @p107='?' (Size = 4000), @p108='?' (DbType = Double), @p109='?' (DbType = Double), @p110='?' (DbType = Double), @p111='?' (DbType = Double), @p112='?' (Size = 450), @p113='?' (DbType = Double), @p114='?' (DbType = Double), @p115='?' (DbType = Double), @p116='?' (DbType = Double), @p117='?' (DbType = Double), @p118='?' (DbType = Double), @p119='?' (DbType = Double), @p120='?' (DbType = Double), @p121='?' (DbType = Int64), @p122='?' (DbType = Double), @p123='?' (DbType = Double), @p124='?' (DbType = Double), @p125='?' (DbType = Double), @p126='?' (DbType = Int64), @p127='?' (DbType = Int64), @p128='?' (DbType = Int64), @p129='?' (DbType = Double), @p130='?' (DbType = Int64), @p131='?' (DbType = Int64), @p132='?' (DbType = DateTime2), @p133='?' (DbType = Double), @p134='?' (DbType = Double), @p135='?' (DbType = Double), @p136='?' (DbType = Double), @p137='?' (DbType = Int64), @p138='?' (DbType = Double), @p139='?' (DbType = Int64), @p140='?' (DbType = Double), @p141='?' (DbType = Double), @p142='?' (DbType = Double), @p143='?' (DbType = Double), @p144='?' (DbType = Double), @p145='?' (DbType = Int64), @p146='?' (Size = 4000), @p147='?' (DbType = Double), @p148='?' (DbType = Double), @p149='?' (DbType = Double), @p150='?' (DbType = Double), @p151='?' (Size = 450), @p152='?' (DbType = Double), @p153='?' (DbType = Double), @p154='?' (DbType = Double), @p155='?' (DbType = Double), @p156='?' (DbType = Double), @p157='?' (DbType = Double), @p158='?' (DbType = Double), @p159='?' (DbType = Double), @p160='?' (DbType = Int64), @p161='?' (DbType = Double), @p162='?' (DbType = Double), @p163='?' (DbType = Double), @p164='?' (DbType = Double), @p165='?' (DbType = Int64), @p166='?' (DbType = Int64), @p167='?' (DbType = Int64), @p168='?' (DbType = Double), @p169='?' (DbType = Int64), @p170='?' (DbType = Int64), @p171='?' (DbType = DateTime2), @p172='?' (DbType = Double), @p173='?' (DbType = Double), @p174='?' (DbType = Double), @p175='?' (DbType = Double), @p176='?' (DbType = Int64), @p177='?' (DbType = Double), @p178='?' (DbType = Int64), @p179='?' (DbType = Double), @p180='?' (DbType = Double), @p181='?' (DbType = Double), @p182='?' (DbType = Double), @p183='?' (DbType = Double), @p184='?' (DbType = Int64), @p185='?' (Size = 4000), @p186='?' (DbType = Double), @p187='?' (DbType = Double), @p188='?' (DbType = Double), @p189='?' (DbType = Double), @p190='?' (Size = 450), @p191='?' (DbType = Double), @p192='?' (DbType = Double), @p193='?' (DbType = Double), @p194='?' (DbType = Double), @p195='?' (DbType = Double), @p196='?' (DbType = Double), @p197='?' (DbType = Double), @p198='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
DECLARE @inserted0 TABLE ([Id] int, [_Position] [int]);
MERGE [BalanceSheetAnnualReport] USING (
VALUES (@p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21, @p22, @p23, @p24, @p25, @p26, @p27, @p28, @p29, @p30, @p31, @p32, @p33, @p34, @p35, @p36, @p37, @p38, @p39, @p40, @p41, @p42, 0),
(@p43, @p44, @p45, @p46, @p47, @p48, @p49, @p50, @p51, @p52, @p53, @p54, @p55, @p56, @p57, @p58, @p59, @p60, @p61, @p62, @p63, @p64, @p65, @p66, @p67, @p68, @p69, @p70, @p71, @p72, @p73, @p74, @p75, @p76, @p77, @p78, @p79, @p80, @p81, 1)) AS i ([AccumulatedDepreciationAmortizationPPE], [CapitalLeaseObligations], [CashAndCashEquivalentsAtCarryingValue], [CashAndShortTermInvestments], [CommonStock], [CommonStockSharesOutstanding], [CurrentAccountsPayable], [CurrentDebt], [CurrentLongTermDebt], [CurrentNetReceivables], [DeferredRevenue], [FiscalDateEnding], [Goodwill], [IntangibleAssets], [IntangibleAssetsExcludingGoodwill], [Inventory], [Investments], [LongTermDebt], [LongTermDebtNoncurrent], [LongTermInvestments], [OtherCurrentAssets], [OtherCurrentLiabilities], [OtherNonCurrentAssets], [OtherNonCurrentLiabilities], [PropertyPlantEquipment], [ReportedCurrency], [RetainedEarnings], [ShortLongTermDebtTotal], [ShortTermDebt], [ShortTermInvestments], [Symbol], [TotalAssets], [TotalCurrentAssets], [TotalCurrentLiabilities], [TotalLiabilities], [TotalNonCurrentAssets], [TotalNonCurrentLiabilities], [TotalShareholderEquity], [TreasuryStock], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([AccumulatedDepreciationAmortizationPPE], [CapitalLeaseObligations], [CashAndCashEquivalentsAtCarryingValue], [CashAndShortTermInvestments], [CommonStock], [CommonStockSharesOutstanding], [CurrentAccountsPayable], [CurrentDebt], [CurrentLongTermDebt], [CurrentNetReceivables], [DeferredRevenue], [FiscalDateEnding], [Goodwill], [IntangibleAssets], [IntangibleAssetsExcludingGoodwill], [Inventory], [Investments], [LongTermDebt], [LongTermDebtNoncurrent], [LongTermInvestments], [OtherCurrentAssets], [OtherCurrentLiabilities], [OtherNonCurrentAssets], [OtherNonCurrentLiabilities], [PropertyPlantEquipment], [ReportedCurrency], [RetainedEarnings], [ShortLongTermDebtTotal], [ShortTermDebt], [ShortTermInvestments], [Symbol], [TotalAssets], [TotalCurrentAssets], [TotalCurrentLiabilities], [TotalLiabilities], [TotalNonCurrentAssets], [TotalNonCurrentLiabilities], [TotalShareholderEquity], [TreasuryStock])
VALUES (i.[AccumulatedDepreciationAmortizationPPE], i.[CapitalLeaseObligations], i.[CashAndCashEquivalentsAtCarryingValue], i.[CashAndShortTermInvestments], i.[CommonStock], i.[CommonStockSharesOutstanding], i.[CurrentAccountsPayable], i.[CurrentDebt], i.[CurrentLongTermDebt], i.[CurrentNetReceivables], i.[DeferredRevenue], i.[FiscalDateEnding], i.[Goodwill], i.[IntangibleAssets], i.[IntangibleAssetsExcludingGoodwill], i.[Inventory], i.[Investments], i.[LongTermDebt], i.[LongTermDebtNoncurrent], i.[LongTermInvestments], i.[OtherCurrentAssets], i.[OtherCurrentLiabilities], i.[OtherNonCurrentAssets], i.[OtherNonCurrentLiabilities], i.[PropertyPlantEquipment], i.[ReportedCurrency], i.[RetainedEarnings], i.[ShortLongTermDebtTotal], i.[ShortTermDebt], i.[ShortTermInvestments], i.[Symbol], i.[TotalAssets], i.[TotalCurrentAssets], i.[TotalCurrentLiabilities], i.[TotalLiabilities], i.[TotalNonCurrentAssets], i.[TotalNonCurrentLiabilities], i.[TotalShareholderEquity], i.[TreasuryStock])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted0;

SELECT [i].[Id] FROM @inserted0 i
ORDER BY [i].[_Position];

DECLARE @inserted2 TABLE ([Id] int, [_Position] [int]);
MERGE [BalanceSheetQuarterlyReports] USING (
VALUES (@p82, @p83, @p84, @p85, @p86, @p87, @p88, @p89, @p90, @p91, @p92, @p93, @p94, @p95, @p96, @p97, @p98, @p99, @p100, @p101, @p102, @p103, @p104, @p105, @p106, @p107, @p108, @p109, @p110, @p111, @p112, @p113, @p114, @p115, @p116, @p117, @p118, @p119, @p120, 0),
(@p121, @p122, @p123, @p124, @p125, @p126, @p127, @p128, @p129, @p130, @p131, @p132, @p133, @p134, @p135, @p136, @p137, @p138, @p139, @p140, @p141, @p142, @p143, @p144, @p145, @p146, @p147, @p148, @p149, @p150, @p151, @p152, @p153, @p154, @p155, @p156, @p157, @p158, @p159, 1),
(@p160, @p161, @p162, @p163, @p164, @p165, @p166, @p167, @p168, @p169, @p170, @p171, @p172, @p173, @p174, @p175, @p176, @p177, @p178, @p179, @p180, @p181, @p182, @p183, @p184, @p185, @p186, @p187, @p188, @p189, @p190, @p191, @p192, @p193, @p194, @p195, @p196, @p197, @p198, 2)) AS i ([AccumulatedDepreciationAmortizationPPE], [CapitalLeaseObligations], [CashAndCashEquivalentsAtCarryingValue], [CashAndShortTermInvestments], [CommonStock], [CommonStockSharesOutstanding], [CurrentAccountsPayable], [CurrentDebt], [CurrentLongTermDebt], [CurrentNetReceivables], [DeferredRevenue], [FiscalDateEnding], [Goodwill], [IntangibleAssets], [IntangibleAssetsExcludingGoodwill], [Inventory], [Investments], [LongTermDebt], [LongTermDebtNoncurrent], [LongTermInvestments], [OtherCurrentAssets], [OtherCurrentLiabilities], [OtherNonCurrentAssets], [OtherNonCurrentLiabilities], [PropertyPlantEquipment], [ReportedCurrency], [RetainedEarnings], [ShortLongTermDebtTotal], [ShortTermDebt], [ShortTermInvestments], [Symbol], [TotalAssets], [TotalCurrentAssets], [TotalCurrentLiabilities], [TotalLiabilities], [TotalNonCurrentAssets], [TotalNonCurrentLiabilities], [TotalShareholderEquity], [TreasuryStock], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([AccumulatedDepreciationAmortizationPPE], [CapitalLeaseObligations], [CashAndCashEquivalentsAtCarryingValue], [CashAndShortTermInvestments], [CommonStock], [CommonStockSharesOutstanding], [CurrentAccountsPayable], [CurrentDebt], [CurrentLongTermDebt], [CurrentNetReceivables], [DeferredRevenue], [FiscalDateEnding], [Goodwill], [IntangibleAssets], [IntangibleAssetsExcludingGoodwill], [Inventory], [Investments], [LongTermDebt], [LongTermDebtNoncurrent], [LongTermInvestments], [OtherCurrentAssets], [OtherCurrentLiabilities], [OtherNonCurrentAssets], [OtherNonCurrentLiabilities], [PropertyPlantEquipment], [ReportedCurrency], [RetainedEarnings], [ShortLongTermDebtTotal], [ShortTermDebt], [ShortTermInvestments], [Symbol], [TotalAssets], [TotalCurrentAssets], [TotalCurrentLiabilities], [TotalLiabilities], [TotalNonCurrentAssets], [TotalNonCurrentLiabilities], [TotalShareholderEquity], [TreasuryStock])
VALUES (i.[AccumulatedDepreciationAmortizationPPE], i.[CapitalLeaseObligations], i.[CashAndCashEquivalentsAtCarryingValue], i.[CashAndShortTermInvestments], i.[CommonStock], i.[CommonStockSharesOutstanding], i.[CurrentAccountsPayable], i.[CurrentDebt], i.[CurrentLongTermDebt], i.[CurrentNetReceivables], i.[DeferredRevenue], i.[FiscalDateEnding], i.[Goodwill], i.[IntangibleAssets], i.[IntangibleAssetsExcludingGoodwill], i.[Inventory], i.[Investments], i.[LongTermDebt], i.[LongTermDebtNoncurrent], i.[LongTermInvestments], i.[OtherCurrentAssets], i.[OtherCurrentLiabilities], i.[OtherNonCurrentAssets], i.[OtherNonCurrentLiabilities], i.[PropertyPlantEquipment], i.[ReportedCurrency], i.[RetainedEarnings], i.[ShortLongTermDebtTotal], i.[ShortTermDebt], i.[ShortTermInvestments], i.[Symbol], i.[TotalAssets], i.[TotalCurrentAssets], i.[TotalCurrentLiabilities], i.[TotalLiabilities], i.[TotalNonCurrentAssets], i.[TotalNonCurrentLiabilities], i.[TotalShareholderEquity], i.[TreasuryStock])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted2;

SELECT [i].[Id] FROM @inserted2 i
ORDER BY [i].[_Position];
2022-05-12 00:53:15.355 +03:00 [INF] AddOrUpdate run successful.
2022-05-12 00:53:44.710 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.Earnings with Symbol AVAL
2022-05-12 00:53:44.712 +03:00 [INF] Generating URI for EARNINGS with params: symbol: AVAL
2022-05-12 00:53:44.713 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=EARNINGS&symbol=AVAL
2022-05-12 00:53:44.713 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=EARNINGS&symbol=AVAL".
2022-05-12 00:53:44.849 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CashFlow with Symbol ASND
2022-05-12 00:53:44.851 +03:00 [INF] Generating URI for CASH_FLOW with params: symbol: ASND
2022-05-12 00:53:44.852 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=CASH_FLOW&symbol=ASND
2022-05-12 00:53:44.852 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=CASH_FLOW&symbol=ASND".
2022-05-12 00:53:45.255 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.IncomeStatement with Symbol ATAKR
2022-05-12 00:53:45.255 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CompanyOverview with Symbol BHV
2022-05-12 00:53:45.257 +03:00 [INF] Generating URI for INCOME_STATEMENT with params: symbol: ATAKR
2022-05-12 00:53:45.258 +03:00 [INF] Generating URI for OVERVIEW with params: symbol: BHV
2022-05-12 00:53:45.258 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=INCOME_STATEMENT&symbol=ATAKR
2022-05-12 00:53:45.259 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=OVERVIEW&symbol=BHV
2022-05-12 00:53:45.259 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=INCOME_STATEMENT&symbol=ATAKR".
2022-05-12 00:53:45.260 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=OVERVIEW&symbol=BHV".
2022-05-12 00:53:45.365 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.BalanceSheet with Symbol BCDA
2022-05-12 00:53:45.367 +03:00 [INF] Generating URI for BALANCE_SHEET with params: symbol: BCDA
2022-05-12 00:53:45.367 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BCDA
2022-05-12 00:53:45.368 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BCDA".
2022-05-12 00:53:46.022 +03:00 [INF] Response has success status code
2022-05-12 00:53:46.023 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.BalanceSheet for symbol BCDA
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetBalanceSheet(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 82
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 00:53:46.491 +03:00 [INF] Response has success status code
2022-05-12 00:53:46.492 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.CompanyOverview for symbol BHV
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyOverview(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 109
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 00:53:46.885 +03:00 [INF] Response has success status code
2022-05-12 00:53:46.885 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.IncomeStatement for symbol ATAKR
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetIncomeStatement(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 69
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 00:53:47.834 +03:00 [INF] Response has success status code
2022-05-12 00:53:47.834 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.Earnings for symbol AVAL
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyEarnings(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 142
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 00:53:48.024 +03:00 [INF] Response has success status code
2022-05-12 00:53:48.024 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.CashFlow for symbol ASND
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCashFlow(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 96
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 00:54:16.036 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.BalanceSheet with Symbol BCE
2022-05-12 00:54:16.038 +03:00 [INF] Generating URI for BALANCE_SHEET with params: symbol: BCE
2022-05-12 00:54:16.038 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BCE
2022-05-12 00:54:16.039 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BCE".
2022-05-12 00:54:16.501 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CompanyOverview with Symbol BIDU
2022-05-12 00:54:16.503 +03:00 [INF] Generating URI for OVERVIEW with params: symbol: BIDU
2022-05-12 00:54:16.503 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=OVERVIEW&symbol=BIDU
2022-05-12 00:54:16.504 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=OVERVIEW&symbol=BIDU".
2022-05-12 00:54:16.894 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.IncomeStatement with Symbol ATAX
2022-05-12 00:54:16.896 +03:00 [INF] Generating URI for INCOME_STATEMENT with params: symbol: ATAX
2022-05-12 00:54:16.896 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=INCOME_STATEMENT&symbol=ATAX
2022-05-12 00:54:16.897 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=INCOME_STATEMENT&symbol=ATAX".
2022-05-12 00:54:16.921 +03:00 [INF] Response has success status code
2022-05-12 00:54:16.921 +03:00 [INF] Trying to deserialize response.
2022-05-12 00:54:16.922 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.CompanyOverview.
2022-05-12 00:54:16.922 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 00:54:16.933 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__entity_Symbol_0
2022-05-12 00:54:16.936 +03:00 [INF] Entity does not exist. Adding to DB.
2022-05-12 00:54:16.953 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (Size = 4000), @p2='?' (DbType = Double), @p3='?' (Size = 4000), @p4='?' (DbType = Double), @p5='?' (DbType = Double), @p6='?' (DbType = Int64), @p7='?' (Size = 4000), @p8='?' (Size = 4000), @p9='?' (Size = 4000), @p10='?' (DbType = Double), @p11='?' (DbType = DateTime2), @p12='?' (DbType = Double), @p13='?' (DbType = Double), @p14='?' (DbType = Int64), @p15='?' (DbType = Double), @p16='?' (DbType = Double), @p17='?' (DbType = Double), @p18='?' (DbType = DateTime2), @p19='?' (Size = 4000), @p20='?' (DbType = Boolean), @p21='?' (Size = 4000), @p22='?' (DbType = Double), @p23='?' (DbType = Int64), @p24='?' (Size = 4000), @p25='?' (DbType = DateTime2), @p26='?' (DbType = DateTime2), @p27='?' (DbType = DateTime2), @p28='?' (DbType = Int64), @p29='?' (Size = 4000), @p30='?' (DbType = Double), @p31='?' (DbType = Double), @p32='?' (DbType = Double), @p33='?' (DbType = Double), @p34='?' (DbType = Double), @p35='?' (DbType = Double), @p36='?' (DbType = Double), @p37='?' (DbType = Double), @p38='?' (DbType = Double), @p39='?' (DbType = Double), @p40='?' (DbType = Double), @p41='?' (DbType = Int64), @p42='?' (Size = 4000), @p43='?' (DbType = Int64), @p44='?' (DbType = Double), @p45='?' (DbType = Double), @p46='?' (DbType = Double), @p47='?' (DbType = Double), @p48='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [CompanyOverviews] ([Symbol], [Address], [AnalystTargetPrice], [AssetType], [Beta], [BookValue], [CIK], [Country], [Currency], [Description], [DilutedEPSTTM], [DividendDate], [DividendPerShare], [DividendYield], [EBITDA], [EPS], [EVToEBITDA], [EVToRevenue], [ExDividendDate], [Exchange], [ExistInApi], [FiscalYearEnd], [ForwardPE], [GrossProfitTTM], [Industry], [LastApiRefresh], [LastLocalRefresh], [LatestQuarter], [MarketCapitalization], [Name], [OperatingMarginTTM], [PEGRatio], [PERatio], [PriceToBookRatio], [PriceToSalesRatioTTM], [ProfitMargin], [QuarterlyEarningsGrowthYOY], [QuarterlyRevenueGrowthYOY], [ReturnOnAssetsTTM], [ReturnOnEquityTTM], [RevenuePerShareTTM], [RevenueTTM], [Sector], [SharesOutstanding], [TrailingPE], [_200DayMovingAverage], [_50DayMovingAverage], [_52WeekHigh], [_52WeekLow])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21, @p22, @p23, @p24, @p25, @p26, @p27, @p28, @p29, @p30, @p31, @p32, @p33, @p34, @p35, @p36, @p37, @p38, @p39, @p40, @p41, @p42, @p43, @p44, @p45, @p46, @p47, @p48);
2022-05-12 00:54:16.962 +03:00 [INF] AddOrUpdate run successful.
2022-05-12 00:54:17.850 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.Earnings with Symbol AVAV
2022-05-12 00:54:17.851 +03:00 [INF] Generating URI for EARNINGS with params: symbol: AVAV
2022-05-12 00:54:17.852 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=EARNINGS&symbol=AVAV
2022-05-12 00:54:17.852 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=EARNINGS&symbol=AVAV".
2022-05-12 00:54:18.035 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CashFlow with Symbol ASPCU
2022-05-12 00:54:18.036 +03:00 [INF] Generating URI for CASH_FLOW with params: symbol: ASPCU
2022-05-12 00:54:18.037 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=CASH_FLOW&symbol=ASPCU
2022-05-12 00:54:18.038 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=CASH_FLOW&symbol=ASPCU".
2022-05-12 00:54:18.213 +03:00 [INF] Response has success status code
2022-05-12 00:54:18.214 +03:00 [INF] Trying to deserialize response.
2022-05-12 00:54:18.215 +03:00 [ERR] Failed to refresh  entity SaluteStocksAPI.Models.FundamentalData.BalanceSheet with Symbol BCE
Newtonsoft.Json.JsonSerializationException: Error converting value "3861156492.54" to type 'System.Nullable`1[System.Int64]'. Path 'quarterlyReports[13].propertyPlantEquipment', line 736, position 53.
 ---> System.FormatException: Input string was not in a correct format.
   at System.Number.ThrowOverflowOrFormatException(ParsingStatus status, TypeCode type)
   at System.String.System.IConvertible.ToInt64(IFormatProvider provider)
   at System.Convert.ChangeType(Object value, Type conversionType, IFormatProvider provider)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)
   --- End of inner exception stack trace ---
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(IList list, JsonReader reader, JsonArrayContract contract, JsonProperty containerProperty, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, Object existingValue, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)
   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)
   at Newtonsoft.Json.JsonSerializer.Deserialize(JsonReader reader, Type objectType)
   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)
   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value, JsonSerializerSettings settings)
   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value)
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetBalanceSheet(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 82
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 00:54:18.354 +03:00 [INF] Response has success status code
2022-05-12 00:54:18.355 +03:00 [INF] Trying to deserialize response.
2022-05-12 00:54:18.359 +03:00 [ERR] Failed to refresh  entity SaluteStocksAPI.Models.FundamentalData.IncomeStatement with Symbol ATAX
Newtonsoft.Json.JsonSerializationException: Error converting value "0.57" to type 'System.Nullable`1[System.Int64]'. Path 'quarterlyReports[0].depreciationAndAmortization', line 164, position 49.
 ---> System.FormatException: Input string was not in a correct format.
   at System.Number.ThrowOverflowOrFormatException(ParsingStatus status, TypeCode type)
   at System.String.System.IConvertible.ToInt64(IFormatProvider provider)
   at System.Convert.ChangeType(Object value, Type conversionType, IFormatProvider provider)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)
   --- End of inner exception stack trace ---
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(IList list, JsonReader reader, JsonArrayContract contract, JsonProperty containerProperty, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, Object existingValue, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)
   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)
   at Newtonsoft.Json.JsonSerializer.Deserialize(JsonReader reader, Type objectType)
   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)
   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value, JsonSerializerSettings settings)
   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value)
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetIncomeStatement(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 69
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 00:54:18.618 +03:00 [INF] Response has success status code
2022-05-12 00:54:18.619 +03:00 [INF] Trying to deserialize response.
2022-05-12 00:54:18.621 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 00:54:18.632 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__symbol_0
2022-05-12 00:54:18.634 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.Earnings.
2022-05-12 00:54:18.643 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [e].[Symbol], [e].[ExistInApi], [e].[LastApiRefresh], [e].[LastLocalRefresh]
FROM [Earnings] AS [e]
WHERE [e].[Symbol] = @__entity_Symbol_0
2022-05-12 00:54:18.646 +03:00 [INF] Entity does not exist. Adding to DB.
2022-05-12 00:54:18.663 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = Boolean), @p2='?' (DbType = DateTime2), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Earnings] ([Symbol], [ExistInApi], [LastApiRefresh], [LastLocalRefresh])
VALUES (@p0, @p1, @p2, @p3);
2022-05-12 00:54:18.692 +03:00 [INF] Executed DbCommand (26ms) [Parameters=[@p4='?' (DbType = DateTime2), @p5='?' (DbType = Double), @p6='?' (Size = 450), @p7='?' (DbType = DateTime2), @p8='?' (DbType = Double), @p9='?' (Size = 450), @p10='?' (DbType = DateTime2), @p11='?' (DbType = Double), @p12='?' (Size = 450), @p13='?' (DbType = DateTime2), @p14='?' (DbType = Double), @p15='?' (Size = 450), @p16='?' (DbType = DateTime2), @p17='?' (DbType = Double), @p18='?' (Size = 450), @p19='?' (DbType = DateTime2), @p20='?' (DbType = Double), @p21='?' (Size = 450), @p22='?' (DbType = DateTime2), @p23='?' (DbType = Double), @p24='?' (Size = 450), @p25='?' (DbType = DateTime2), @p26='?' (DbType = Double), @p27='?' (Size = 450), @p28='?' (DbType = DateTime2), @p29='?' (DbType = Double), @p30='?' (Size = 450), @p31='?' (DbType = DateTime2), @p32='?' (DbType = Double), @p33='?' (Size = 450), @p34='?' (DbType = DateTime2), @p35='?' (DbType = Double), @p36='?' (Size = 450), @p37='?' (DbType = DateTime2), @p38='?' (DbType = Double), @p39='?' (Size = 450), @p40='?' (DbType = DateTime2), @p41='?' (DbType = Double), @p42='?' (Size = 450), @p43='?' (DbType = DateTime2), @p44='?' (DbType = Double), @p45='?' (Size = 450), @p46='?' (DbType = DateTime2), @p47='?' (DbType = Double), @p48='?' (Size = 450), @p49='?' (DbType = DateTime2), @p50='?' (DbType = Double), @p51='?' (Size = 450), @p52='?' (DbType = Double), @p53='?' (DbType = DateTime2), @p54='?' (DbType = DateTime2), @p55='?' (DbType = Double), @p56='?' (DbType = Double), @p57='?' (DbType = Double), @p58='?' (Size = 450), @p59='?' (DbType = Double), @p60='?' (DbType = DateTime2), @p61='?' (DbType = DateTime2), @p62='?' (DbType = Double), @p63='?' (DbType = Double), @p64='?' (DbType = Double), @p65='?' (Size = 450), @p66='?' (DbType = Double), @p67='?' (DbType = DateTime2), @p68='?' (DbType = DateTime2), @p69='?' (DbType = Double), @p70='?' (DbType = Double), @p71='?' (DbType = Double), @p72='?' (Size = 450), @p73='?' (DbType = Double), @p74='?' (DbType = DateTime2), @p75='?' (DbType = DateTime2), @p76='?' (DbType = Double), @p77='?' (DbType = Double), @p78='?' (DbType = Double), @p79='?' (Size = 450), @p80='?' (DbType = Double), @p81='?' (DbType = DateTime2), @p82='?' (DbType = DateTime2), @p83='?' (DbType = Double), @p84='?' (DbType = Double), @p85='?' (DbType = Double), @p86='?' (Size = 450), @p87='?' (DbType = Double), @p88='?' (DbType = DateTime2), @p89='?' (DbType = DateTime2), @p90='?' (DbType = Double), @p91='?' (DbType = Double), @p92='?' (DbType = Double), @p93='?' (Size = 450), @p94='?' (DbType = Double), @p95='?' (DbType = DateTime2), @p96='?' (DbType = DateTime2), @p97='?' (DbType = Double), @p98='?' (DbType = Double), @p99='?' (DbType = Double), @p100='?' (Size = 450), @p101='?' (DbType = Double), @p102='?' (DbType = DateTime2), @p103='?' (DbType = DateTime2), @p104='?' (DbType = Double), @p105='?' (DbType = Double), @p106='?' (DbType = Double), @p107='?' (Size = 450), @p108='?' (DbType = Double), @p109='?' (DbType = DateTime2), @p110='?' (DbType = DateTime2), @p111='?' (DbType = Double), @p112='?' (DbType = Double), @p113='?' (DbType = Double), @p114='?' (Size = 450), @p115='?' (DbType = Double), @p116='?' (DbType = DateTime2), @p117='?' (DbType = DateTime2), @p118='?' (DbType = Double), @p119='?' (DbType = Double), @p120='?' (DbType = Double), @p121='?' (Size = 450), @p122='?' (DbType = Double), @p123='?' (DbType = DateTime2), @p124='?' (DbType = DateTime2), @p125='?' (DbType = Double), @p126='?' (DbType = Double), @p127='?' (DbType = Double), @p128='?' (Size = 450), @p129='?' (DbType = Double), @p130='?' (DbType = DateTime2), @p131='?' (DbType = DateTime2), @p132='?' (DbType = Double), @p133='?' (DbType = Double), @p134='?' (DbType = Double), @p135='?' (Size = 450), @p136='?' (DbType = Double), @p137='?' (DbType = DateTime2), @p138='?' (DbType = DateTime2), @p139='?' (DbType = Double), @p140='?' (DbType = Double), @p141='?' (DbType = Double), @p142='?' (Size = 450), @p143='?' (DbType = Double), @p144='?' (DbType = DateTime2), @p145='?' (DbType = DateTime2), @p146='?' (DbType = Double), @p147='?' (DbType = Double), @p148='?' (DbType = Double), @p149='?' (Size = 450), @p150='?' (DbType = Double), @p151='?' (DbType = DateTime2), @p152='?' (DbType = DateTime2), @p153='?' (DbType = Double), @p154='?' (DbType = Double), @p155='?' (DbType = Double), @p156='?' (Size = 450), @p157='?' (DbType = Double), @p158='?' (DbType = DateTime2), @p159='?' (DbType = DateTime2), @p160='?' (DbType = Double), @p161='?' (DbType = Double), @p162='?' (DbType = Double), @p163='?' (Size = 450), @p164='?' (DbType = Double), @p165='?' (DbType = DateTime2), @p166='?' (DbType = DateTime2), @p167='?' (DbType = Double), @p168='?' (DbType = Double), @p169='?' (DbType = Double), @p170='?' (Size = 450), @p171='?' (DbType = Double), @p172='?' (DbType = DateTime2), @p173='?' (DbType = DateTime2), @p174='?' (DbType = Double), @p175='?' (DbType = Double), @p176='?' (DbType = Double), @p177='?' (Size = 450), @p178='?' (DbType = Double), @p179='?' (DbType = DateTime2), @p180='?' (DbType = DateTime2), @p181='?' (DbType = Double), @p182='?' (DbType = Double), @p183='?' (DbType = Double), @p184='?' (Size = 450), @p185='?' (DbType = Double), @p186='?' (DbType = DateTime2), @p187='?' (DbType = DateTime2), @p188='?' (DbType = Double), @p189='?' (DbType = Double), @p190='?' (DbType = Double), @p191='?' (Size = 450), @p192='?' (DbType = Double), @p193='?' (DbType = DateTime2), @p194='?' (DbType = DateTime2), @p195='?' (DbType = Double), @p196='?' (DbType = Double), @p197='?' (DbType = Double), @p198='?' (Size = 450), @p199='?' (DbType = Double), @p200='?' (DbType = DateTime2), @p201='?' (DbType = DateTime2), @p202='?' (DbType = Double), @p203='?' (DbType = Double), @p204='?' (DbType = Double), @p205='?' (Size = 450), @p206='?' (DbType = Double), @p207='?' (DbType = DateTime2), @p208='?' (DbType = DateTime2), @p209='?' (DbType = Double), @p210='?' (DbType = Double), @p211='?' (DbType = Double), @p212='?' (Size = 450), @p213='?' (DbType = Double), @p214='?' (DbType = DateTime2), @p215='?' (DbType = DateTime2), @p216='?' (DbType = Double), @p217='?' (DbType = Double), @p218='?' (DbType = Double), @p219='?' (Size = 450), @p220='?' (DbType = Double), @p221='?' (DbType = DateTime2), @p222='?' (DbType = DateTime2), @p223='?' (DbType = Double), @p224='?' (DbType = Double), @p225='?' (DbType = Double), @p226='?' (Size = 450), @p227='?' (DbType = Double), @p228='?' (DbType = DateTime2), @p229='?' (DbType = DateTime2), @p230='?' (DbType = Double), @p231='?' (DbType = Double), @p232='?' (DbType = Double), @p233='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
DECLARE @inserted0 TABLE ([Id] int, [_Position] [int]);
MERGE [AnnualEarning] USING (
VALUES (@p4, @p5, @p6, 0),
(@p7, @p8, @p9, 1),
(@p10, @p11, @p12, 2),
(@p13, @p14, @p15, 3),
(@p16, @p17, @p18, 4),
(@p19, @p20, @p21, 5),
(@p22, @p23, @p24, 6),
(@p25, @p26, @p27, 7),
(@p28, @p29, @p30, 8),
(@p31, @p32, @p33, 9),
(@p34, @p35, @p36, 10),
(@p37, @p38, @p39, 11),
(@p40, @p41, @p42, 12),
(@p43, @p44, @p45, 13),
(@p46, @p47, @p48, 14),
(@p49, @p50, @p51, 15)) AS i ([FiscalDateEnding], [ReportedEPS], [Symbol], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([FiscalDateEnding], [ReportedEPS], [Symbol])
VALUES (i.[FiscalDateEnding], i.[ReportedEPS], i.[Symbol])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted0;

SELECT [i].[Id] FROM @inserted0 i
ORDER BY [i].[_Position];

DECLARE @inserted16 TABLE ([Id] int, [_Position] [int]);
MERGE [QuarterlyEarning] USING (
VALUES (@p52, @p53, @p54, @p55, @p56, @p57, @p58, 0),
(@p59, @p60, @p61, @p62, @p63, @p64, @p65, 1),
(@p66, @p67, @p68, @p69, @p70, @p71, @p72, 2),
(@p73, @p74, @p75, @p76, @p77, @p78, @p79, 3),
(@p80, @p81, @p82, @p83, @p84, @p85, @p86, 4),
(@p87, @p88, @p89, @p90, @p91, @p92, @p93, 5),
(@p94, @p95, @p96, @p97, @p98, @p99, @p100, 6),
(@p101, @p102, @p103, @p104, @p105, @p106, @p107, 7),
(@p108, @p109, @p110, @p111, @p112, @p113, @p114, 8),
(@p115, @p116, @p117, @p118, @p119, @p120, @p121, 9),
(@p122, @p123, @p124, @p125, @p126, @p127, @p128, 10),
(@p129, @p130, @p131, @p132, @p133, @p134, @p135, 11),
(@p136, @p137, @p138, @p139, @p140, @p141, @p142, 12),
(@p143, @p144, @p145, @p146, @p147, @p148, @p149, 13),
(@p150, @p151, @p152, @p153, @p154, @p155, @p156, 14),
(@p157, @p158, @p159, @p160, @p161, @p162, @p163, 15),
(@p164, @p165, @p166, @p167, @p168, @p169, @p170, 16),
(@p171, @p172, @p173, @p174, @p175, @p176, @p177, 17),
(@p178, @p179, @p180, @p181, @p182, @p183, @p184, 18),
(@p185, @p186, @p187, @p188, @p189, @p190, @p191, 19),
(@p192, @p193, @p194, @p195, @p196, @p197, @p198, 20),
(@p199, @p200, @p201, @p202, @p203, @p204, @p205, 21),
(@p206, @p207, @p208, @p209, @p210, @p211, @p212, 22),
(@p213, @p214, @p215, @p216, @p217, @p218, @p219, 23),
(@p220, @p221, @p222, @p223, @p224, @p225, @p226, 24),
(@p227, @p228, @p229, @p230, @p231, @p232, @p233, 25)) AS i ([EstimatedEPS], [FiscalDateEnding], [ReportedDate], [ReportedEPS], [Surprise], [SurprisePercentage], [Symbol], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([EstimatedEPS], [FiscalDateEnding], [ReportedDate], [ReportedEPS], [Surprise], [SurprisePercentage], [Symbol])
VALUES (i.[EstimatedEPS], i.[FiscalDateEnding], i.[ReportedDate], i.[ReportedEPS], i.[Surprise], i.[SurprisePercentage], i.[Symbol])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted16;

SELECT [i].[Id] FROM @inserted16 i
ORDER BY [i].[_Position];
2022-05-12 00:54:18.755 +03:00 [INF] Executed DbCommand (38ms) [Parameters=[@p0='?' (DbType = Double), @p1='?' (DbType = DateTime2), @p2='?' (DbType = DateTime2), @p3='?' (DbType = Double), @p4='?' (DbType = Double), @p5='?' (DbType = Double), @p6='?' (Size = 450), @p7='?' (DbType = Double), @p8='?' (DbType = DateTime2), @p9='?' (DbType = DateTime2), @p10='?' (DbType = Double), @p11='?' (DbType = Double), @p12='?' (DbType = Double), @p13='?' (Size = 450), @p14='?' (DbType = Double), @p15='?' (DbType = DateTime2), @p16='?' (DbType = DateTime2), @p17='?' (DbType = Double), @p18='?' (DbType = Double), @p19='?' (DbType = Double), @p20='?' (Size = 450), @p21='?' (DbType = Double), @p22='?' (DbType = DateTime2), @p23='?' (DbType = DateTime2), @p24='?' (DbType = Double), @p25='?' (DbType = Double), @p26='?' (DbType = Double), @p27='?' (Size = 450), @p28='?' (DbType = Double), @p29='?' (DbType = DateTime2), @p30='?' (DbType = DateTime2), @p31='?' (DbType = Double), @p32='?' (DbType = Double), @p33='?' (DbType = Double), @p34='?' (Size = 450), @p35='?' (DbType = Double), @p36='?' (DbType = DateTime2), @p37='?' (DbType = DateTime2), @p38='?' (DbType = Double), @p39='?' (DbType = Double), @p40='?' (DbType = Double), @p41='?' (Size = 450), @p42='?' (DbType = Double), @p43='?' (DbType = DateTime2), @p44='?' (DbType = DateTime2), @p45='?' (DbType = Double), @p46='?' (DbType = Double), @p47='?' (DbType = Double), @p48='?' (Size = 450), @p49='?' (DbType = Double), @p50='?' (DbType = DateTime2), @p51='?' (DbType = DateTime2), @p52='?' (DbType = Double), @p53='?' (DbType = Double), @p54='?' (DbType = Double), @p55='?' (Size = 450), @p56='?' (DbType = Double), @p57='?' (DbType = DateTime2), @p58='?' (DbType = DateTime2), @p59='?' (DbType = Double), @p60='?' (DbType = Double), @p61='?' (DbType = Double), @p62='?' (Size = 450), @p63='?' (DbType = Double), @p64='?' (DbType = DateTime2), @p65='?' (DbType = DateTime2), @p66='?' (DbType = Double), @p67='?' (DbType = Double), @p68='?' (DbType = Double), @p69='?' (Size = 450), @p70='?' (DbType = Double), @p71='?' (DbType = DateTime2), @p72='?' (DbType = DateTime2), @p73='?' (DbType = Double), @p74='?' (DbType = Double), @p75='?' (DbType = Double), @p76='?' (Size = 450), @p77='?' (DbType = Double), @p78='?' (DbType = DateTime2), @p79='?' (DbType = DateTime2), @p80='?' (DbType = Double), @p81='?' (DbType = Double), @p82='?' (DbType = Double), @p83='?' (Size = 450), @p84='?' (DbType = Double), @p85='?' (DbType = DateTime2), @p86='?' (DbType = DateTime2), @p87='?' (DbType = Double), @p88='?' (DbType = Double), @p89='?' (DbType = Double), @p90='?' (Size = 450), @p91='?' (DbType = Double), @p92='?' (DbType = DateTime2), @p93='?' (DbType = DateTime2), @p94='?' (DbType = Double), @p95='?' (DbType = Double), @p96='?' (DbType = Double), @p97='?' (Size = 450), @p98='?' (DbType = Double), @p99='?' (DbType = DateTime2), @p100='?' (DbType = DateTime2), @p101='?' (DbType = Double), @p102='?' (DbType = Double), @p103='?' (DbType = Double), @p104='?' (Size = 450), @p105='?' (DbType = Double), @p106='?' (DbType = DateTime2), @p107='?' (DbType = DateTime2), @p108='?' (DbType = Double), @p109='?' (DbType = Double), @p110='?' (DbType = Double), @p111='?' (Size = 450), @p112='?' (DbType = Double), @p113='?' (DbType = DateTime2), @p114='?' (DbType = DateTime2), @p115='?' (DbType = Double), @p116='?' (DbType = Double), @p117='?' (DbType = Double), @p118='?' (Size = 450), @p119='?' (DbType = Double), @p120='?' (DbType = DateTime2), @p121='?' (DbType = DateTime2), @p122='?' (DbType = Double), @p123='?' (DbType = Double), @p124='?' (DbType = Double), @p125='?' (Size = 450), @p126='?' (DbType = Double), @p127='?' (DbType = DateTime2), @p128='?' (DbType = DateTime2), @p129='?' (DbType = Double), @p130='?' (DbType = Double), @p131='?' (DbType = Double), @p132='?' (Size = 450), @p133='?' (DbType = Double), @p134='?' (DbType = DateTime2), @p135='?' (DbType = DateTime2), @p136='?' (DbType = Double), @p137='?' (DbType = Double), @p138='?' (DbType = Double), @p139='?' (Size = 450), @p140='?' (DbType = Double), @p141='?' (DbType = DateTime2), @p142='?' (DbType = DateTime2), @p143='?' (DbType = Double), @p144='?' (DbType = Double), @p145='?' (DbType = Double), @p146='?' (Size = 450), @p147='?' (DbType = Double), @p148='?' (DbType = DateTime2), @p149='?' (DbType = DateTime2), @p150='?' (DbType = Double), @p151='?' (DbType = Double), @p152='?' (DbType = Double), @p153='?' (Size = 450), @p154='?' (DbType = Double), @p155='?' (DbType = DateTime2), @p156='?' (DbType = DateTime2), @p157='?' (DbType = Double), @p158='?' (DbType = Double), @p159='?' (DbType = Double), @p160='?' (Size = 450), @p161='?' (DbType = Double), @p162='?' (DbType = DateTime2), @p163='?' (DbType = DateTime2), @p164='?' (DbType = Double), @p165='?' (DbType = Double), @p166='?' (DbType = Double), @p167='?' (Size = 450), @p168='?' (DbType = Double), @p169='?' (DbType = DateTime2), @p170='?' (DbType = DateTime2), @p171='?' (DbType = Double), @p172='?' (DbType = Double), @p173='?' (DbType = Double), @p174='?' (Size = 450), @p175='?' (DbType = Double), @p176='?' (DbType = DateTime2), @p177='?' (DbType = DateTime2), @p178='?' (DbType = Double), @p179='?' (DbType = Double), @p180='?' (DbType = Double), @p181='?' (Size = 450), @p182='?' (DbType = Double), @p183='?' (DbType = DateTime2), @p184='?' (DbType = DateTime2), @p185='?' (DbType = Double), @p186='?' (DbType = Double), @p187='?' (DbType = Double), @p188='?' (Size = 450), @p189='?' (DbType = Double), @p190='?' (DbType = DateTime2), @p191='?' (DbType = DateTime2), @p192='?' (DbType = Double), @p193='?' (DbType = Double), @p194='?' (DbType = Double), @p195='?' (Size = 450), @p196='?' (DbType = Double), @p197='?' (DbType = DateTime2), @p198='?' (DbType = DateTime2), @p199='?' (DbType = Double), @p200='?' (DbType = Double), @p201='?' (DbType = Double), @p202='?' (Size = 450), @p203='?' (DbType = Double), @p204='?' (DbType = DateTime2), @p205='?' (DbType = DateTime2), @p206='?' (DbType = Double), @p207='?' (DbType = Double), @p208='?' (DbType = Double), @p209='?' (Size = 450), @p210='?' (DbType = Double), @p211='?' (DbType = DateTime2), @p212='?' (DbType = DateTime2), @p213='?' (DbType = Double), @p214='?' (DbType = Double), @p215='?' (DbType = Double), @p216='?' (Size = 450), @p217='?' (DbType = Double), @p218='?' (DbType = DateTime2), @p219='?' (DbType = DateTime2), @p220='?' (DbType = Double), @p221='?' (DbType = Double), @p222='?' (DbType = Double), @p223='?' (Size = 450), @p224='?' (DbType = Double), @p225='?' (DbType = DateTime2), @p226='?' (DbType = DateTime2), @p227='?' (DbType = Double), @p228='?' (DbType = Double), @p229='?' (DbType = Double), @p230='?' (Size = 450), @p231='?' (DbType = Double), @p232='?' (DbType = DateTime2), @p233='?' (DbType = DateTime2), @p234='?' (DbType = Double), @p235='?' (DbType = Double), @p236='?' (DbType = Double), @p237='?' (Size = 450), @p238='?' (DbType = Double), @p239='?' (DbType = DateTime2), @p240='?' (DbType = DateTime2), @p241='?' (DbType = Double), @p242='?' (DbType = Double), @p243='?' (DbType = Double), @p244='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
DECLARE @inserted0 TABLE ([Id] int, [_Position] [int]);
MERGE [QuarterlyEarning] USING (
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, 0),
(@p7, @p8, @p9, @p10, @p11, @p12, @p13, 1),
(@p14, @p15, @p16, @p17, @p18, @p19, @p20, 2),
(@p21, @p22, @p23, @p24, @p25, @p26, @p27, 3),
(@p28, @p29, @p30, @p31, @p32, @p33, @p34, 4),
(@p35, @p36, @p37, @p38, @p39, @p40, @p41, 5),
(@p42, @p43, @p44, @p45, @p46, @p47, @p48, 6),
(@p49, @p50, @p51, @p52, @p53, @p54, @p55, 7),
(@p56, @p57, @p58, @p59, @p60, @p61, @p62, 8),
(@p63, @p64, @p65, @p66, @p67, @p68, @p69, 9),
(@p70, @p71, @p72, @p73, @p74, @p75, @p76, 10),
(@p77, @p78, @p79, @p80, @p81, @p82, @p83, 11),
(@p84, @p85, @p86, @p87, @p88, @p89, @p90, 12),
(@p91, @p92, @p93, @p94, @p95, @p96, @p97, 13),
(@p98, @p99, @p100, @p101, @p102, @p103, @p104, 14),
(@p105, @p106, @p107, @p108, @p109, @p110, @p111, 15),
(@p112, @p113, @p114, @p115, @p116, @p117, @p118, 16),
(@p119, @p120, @p121, @p122, @p123, @p124, @p125, 17),
(@p126, @p127, @p128, @p129, @p130, @p131, @p132, 18),
(@p133, @p134, @p135, @p136, @p137, @p138, @p139, 19),
(@p140, @p141, @p142, @p143, @p144, @p145, @p146, 20),
(@p147, @p148, @p149, @p150, @p151, @p152, @p153, 21),
(@p154, @p155, @p156, @p157, @p158, @p159, @p160, 22),
(@p161, @p162, @p163, @p164, @p165, @p166, @p167, 23),
(@p168, @p169, @p170, @p171, @p172, @p173, @p174, 24),
(@p175, @p176, @p177, @p178, @p179, @p180, @p181, 25),
(@p182, @p183, @p184, @p185, @p186, @p187, @p188, 26),
(@p189, @p190, @p191, @p192, @p193, @p194, @p195, 27),
(@p196, @p197, @p198, @p199, @p200, @p201, @p202, 28),
(@p203, @p204, @p205, @p206, @p207, @p208, @p209, 29),
(@p210, @p211, @p212, @p213, @p214, @p215, @p216, 30),
(@p217, @p218, @p219, @p220, @p221, @p222, @p223, 31),
(@p224, @p225, @p226, @p227, @p228, @p229, @p230, 32),
(@p231, @p232, @p233, @p234, @p235, @p236, @p237, 33),
(@p238, @p239, @p240, @p241, @p242, @p243, @p244, 34)) AS i ([EstimatedEPS], [FiscalDateEnding], [ReportedDate], [ReportedEPS], [Surprise], [SurprisePercentage], [Symbol], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([EstimatedEPS], [FiscalDateEnding], [ReportedDate], [ReportedEPS], [Surprise], [SurprisePercentage], [Symbol])
VALUES (i.[EstimatedEPS], i.[FiscalDateEnding], i.[ReportedDate], i.[ReportedEPS], i.[Surprise], i.[SurprisePercentage], i.[Symbol])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted0;

SELECT [i].[Id] FROM @inserted0 i
ORDER BY [i].[_Position];
2022-05-12 00:54:18.781 +03:00 [INF] AddOrUpdate run successful.
2022-05-12 00:54:19.244 +03:00 [INF] Response has success status code
2022-05-12 00:54:19.245 +03:00 [INF] Trying to deserialize response.
2022-05-12 00:54:19.246 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 00:54:19.255 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__symbol_0
2022-05-12 00:54:19.258 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.CashFlow.
2022-05-12 00:54:19.269 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[ExistInApi], [c].[LastApiRefresh], [c].[LastLocalRefresh]
FROM [CashFlows] AS [c]
WHERE [c].[Symbol] = @__entity_Symbol_0
2022-05-12 00:54:19.271 +03:00 [INF] Entity does not exist. Adding to DB.
2022-05-12 00:54:19.385 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = Boolean), @p2='?' (DbType = DateTime2), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [CashFlows] ([Symbol], [ExistInApi], [LastApiRefresh], [LastLocalRefresh])
VALUES (@p0, @p1, @p2, @p3);
2022-05-12 00:54:19.402 +03:00 [INF] Executed DbCommand (14ms) [Parameters=[@p4='?' (DbType = Double), @p5='?' (DbType = Double), @p6='?' (DbType = Int64), @p7='?' (DbType = Int64), @p8='?' (DbType = Int64), @p9='?' (DbType = Int64), @p10='?' (DbType = Int64), @p11='?' (DbType = Int64), @p12='?' (DbType = Int64), @p13='?' (DbType = Double), @p14='?' (DbType = Int64), @p15='?' (DbType = Double), @p16='?' (DbType = Int64), @p17='?' (Size = 4000), @p18='?' (DbType = Double), @p19='?' (DbType = Double), @p20='?' (DbType = Int64), @p21='?' (DbType = Int64), @p22='?' (DbType = Int64), @p23='?' (DbType = Int64), @p24='?' (DbType = Int64), @p25='?' (DbType = Int64), @p26='?' (DbType = Int64), @p27='?' (DbType = Int64), @p28='?' (DbType = Int64), @p29='?' (DbType = Double), @p30='?' (DbType = Int64), @p31='?' (DbType = Int64), @p32='?' (Size = 4000), @p33='?' (Size = 450), @p34='?' (DbType = Double), @p35='?' (DbType = Double), @p36='?' (DbType = Int64), @p37='?' (DbType = Int64), @p38='?' (DbType = Int64), @p39='?' (DbType = Int64), @p40='?' (DbType = Int64), @p41='?' (DbType = Int64), @p42='?' (DbType = Int64), @p43='?' (DbType = Double), @p44='?' (DbType = Int64), @p45='?' (DbType = Double), @p46='?' (DbType = Int64), @p47='?' (Size = 4000), @p48='?' (DbType = Double), @p49='?' (DbType = Double), @p50='?' (DbType = Int64), @p51='?' (DbType = Int64), @p52='?' (DbType = Int64), @p53='?' (DbType = Int64), @p54='?' (DbType = Int64), @p55='?' (DbType = Int64), @p56='?' (DbType = Int64), @p57='?' (DbType = Int64), @p58='?' (DbType = Int64), @p59='?' (DbType = Double), @p60='?' (DbType = Int64), @p61='?' (DbType = Int64), @p62='?' (Size = 4000), @p63='?' (Size = 450), @p64='?' (DbType = Double), @p65='?' (DbType = Double), @p66='?' (DbType = Int64), @p67='?' (DbType = Int64), @p68='?' (DbType = Int64), @p69='?' (DbType = Int64), @p70='?' (DbType = Int64), @p71='?' (DbType = Int64), @p72='?' (DbType = Int64), @p73='?' (DbType = Double), @p74='?' (DbType = Int64), @p75='?' (DbType = Double), @p76='?' (DbType = Int64), @p77='?' (Size = 4000), @p78='?' (DbType = Double), @p79='?' (DbType = Double), @p80='?' (DbType = Int64), @p81='?' (DbType = Int64), @p82='?' (DbType = Int64), @p83='?' (DbType = Int64), @p84='?' (DbType = Int64), @p85='?' (DbType = Int64), @p86='?' (DbType = Int64), @p87='?' (DbType = Int64), @p88='?' (DbType = Int64), @p89='?' (DbType = Double), @p90='?' (DbType = Int64), @p91='?' (DbType = Int64), @p92='?' (Size = 4000), @p93='?' (Size = 450), @p94='?' (DbType = Double), @p95='?' (DbType = Double), @p96='?' (DbType = Int64), @p97='?' (DbType = Int64), @p98='?' (DbType = Int64), @p99='?' (DbType = Int64), @p100='?' (DbType = Int64), @p101='?' (DbType = Int64), @p102='?' (DbType = Int64), @p103='?' (DbType = Double), @p104='?' (DbType = Int64), @p105='?' (DbType = Double), @p106='?' (DbType = Int64), @p107='?' (Size = 4000), @p108='?' (DbType = Double), @p109='?' (DbType = Double), @p110='?' (DbType = Int64), @p111='?' (DbType = Int64), @p112='?' (DbType = Int64), @p113='?' (DbType = Int64), @p114='?' (DbType = Int64), @p115='?' (DbType = Int64), @p116='?' (DbType = Int64), @p117='?' (DbType = Int64), @p118='?' (DbType = Int64), @p119='?' (DbType = Double), @p120='?' (DbType = Int64), @p121='?' (DbType = Int64), @p122='?' (Size = 4000), @p123='?' (Size = 450), @p124='?' (DbType = Double), @p125='?' (DbType = Double), @p126='?' (DbType = Int64), @p127='?' (DbType = Int64), @p128='?' (DbType = Int64), @p129='?' (DbType = Int64), @p130='?' (DbType = Int64), @p131='?' (DbType = Int64), @p132='?' (DbType = Int64), @p133='?' (DbType = Double), @p134='?' (DbType = Int64), @p135='?' (DbType = Double), @p136='?' (DbType = Int64), @p137='?' (Size = 4000), @p138='?' (DbType = Double), @p139='?' (DbType = Double), @p140='?' (DbType = Int64), @p141='?' (DbType = Int64), @p142='?' (DbType = Int64), @p143='?' (DbType = Int64), @p144='?' (DbType = Int64), @p145='?' (DbType = Int64), @p146='?' (DbType = Int64), @p147='?' (DbType = Int64), @p148='?' (DbType = Int64), @p149='?' (DbType = Double), @p150='?' (DbType = Int64), @p151='?' (DbType = Int64), @p152='?' (Size = 4000), @p153='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [CashFlowAnnualReport] ([CapitalExpenditures], [CashflowFromFinancing], [CashflowFromInvestment], [ChangeInCashAndCashEquivalents], [ChangeInExchangeRate], [ChangeInInventory], [ChangeInOperatingAssets], [ChangeInOperatingLiabilities], [ChangeInReceivables], [DepreciationDepletionAndAmortization], [DividendPayout], [DividendPayoutCommonStock], [DividendPayoutPreferredStock], [FiscalDateEnding], [NetIncome], [OperatingCashFlow], [PaymentsForOperatingActivities], [PaymentsForRepurchaseOfCommonStock], [PaymentsForRepurchaseOfEquity], [PaymentsForRepurchaseOfPreferredStock], [ProceedsFromIssuanceOfCommonStock], [ProceedsFromIssuanceOfLongTermDebtAndCapitalSecuritiesNet], [ProceedsFromIssuanceOfPreferredStock], [ProceedsFromOperatingActivities], [ProceedsFromRepaymentsOfShortTermDebt], [ProceedsFromRepurchaseOfEquity], [ProceedsFromSaleOfTreasuryStock], [ProfitLoss], [ReportedCurrency], [Symbol])
VALUES (@p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21, @p22, @p23, @p24, @p25, @p26, @p27, @p28, @p29, @p30, @p31, @p32, @p33);
SELECT [Id]
FROM [CashFlowAnnualReport]
WHERE @@ROWCOUNT = 1 AND [Id] = scope_identity();

DECLARE @inserted1 TABLE ([Id] int, [_Position] [int]);
MERGE [CashFlowQuarterlyReport] USING (
VALUES (@p34, @p35, @p36, @p37, @p38, @p39, @p40, @p41, @p42, @p43, @p44, @p45, @p46, @p47, @p48, @p49, @p50, @p51, @p52, @p53, @p54, @p55, @p56, @p57, @p58, @p59, @p60, @p61, @p62, @p63, 0),
(@p64, @p65, @p66, @p67, @p68, @p69, @p70, @p71, @p72, @p73, @p74, @p75, @p76, @p77, @p78, @p79, @p80, @p81, @p82, @p83, @p84, @p85, @p86, @p87, @p88, @p89, @p90, @p91, @p92, @p93, 1),
(@p94, @p95, @p96, @p97, @p98, @p99, @p100, @p101, @p102, @p103, @p104, @p105, @p106, @p107, @p108, @p109, @p110, @p111, @p112, @p113, @p114, @p115, @p116, @p117, @p118, @p119, @p120, @p121, @p122, @p123, 2),
(@p124, @p125, @p126, @p127, @p128, @p129, @p130, @p131, @p132, @p133, @p134, @p135, @p136, @p137, @p138, @p139, @p140, @p141, @p142, @p143, @p144, @p145, @p146, @p147, @p148, @p149, @p150, @p151, @p152, @p153, 3)) AS i ([CapitalExpenditures], [CashflowFromFinancing], [CashflowFromInvestment], [ChangeInCashAndCashEquivalents], [ChangeInExchangeRate], [ChangeInInventory], [ChangeInOperatingAssets], [ChangeInOperatingLiabilities], [ChangeInReceivables], [DepreciationDepletionAndAmortization], [DividendPayout], [DividendPayoutCommonStock], [DividendPayoutPreferredStock], [FiscalDateEnding], [NetIncome], [OperatingCashFlow], [PaymentsForOperatingActivities], [PaymentsForRepurchaseOfCommonStock], [PaymentsForRepurchaseOfEquity], [PaymentsForRepurchaseOfPreferredStock], [ProceedsFromIssuanceOfCommonStock], [ProceedsFromIssuanceOfLongTermDebtAndCapitalSecuritiesNet], [ProceedsFromIssuanceOfPreferredStock], [ProceedsFromOperatingActivities], [ProceedsFromRepaymentsOfShortTermDebt], [ProceedsFromRepurchaseOfEquity], [ProceedsFromSaleOfTreasuryStock], [ProfitLoss], [ReportedCurrency], [Symbol], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([CapitalExpenditures], [CashflowFromFinancing], [CashflowFromInvestment], [ChangeInCashAndCashEquivalents], [ChangeInExchangeRate], [ChangeInInventory], [ChangeInOperatingAssets], [ChangeInOperatingLiabilities], [ChangeInReceivables], [DepreciationDepletionAndAmortization], [DividendPayout], [DividendPayoutCommonStock], [DividendPayoutPreferredStock], [FiscalDateEnding], [NetIncome], [OperatingCashFlow], [PaymentsForOperatingActivities], [PaymentsForRepurchaseOfCommonStock], [PaymentsForRepurchaseOfEquity], [PaymentsForRepurchaseOfPreferredStock], [ProceedsFromIssuanceOfCommonStock], [ProceedsFromIssuanceOfLongTermDebtAndCapitalSecuritiesNet], [ProceedsFromIssuanceOfPreferredStock], [ProceedsFromOperatingActivities], [ProceedsFromRepaymentsOfShortTermDebt], [ProceedsFromRepurchaseOfEquity], [ProceedsFromSaleOfTreasuryStock], [ProfitLoss], [ReportedCurrency], [Symbol])
VALUES (i.[CapitalExpenditures], i.[CashflowFromFinancing], i.[CashflowFromInvestment], i.[ChangeInCashAndCashEquivalents], i.[ChangeInExchangeRate], i.[ChangeInInventory], i.[ChangeInOperatingAssets], i.[ChangeInOperatingLiabilities], i.[ChangeInReceivables], i.[DepreciationDepletionAndAmortization], i.[DividendPayout], i.[DividendPayoutCommonStock], i.[DividendPayoutPreferredStock], i.[FiscalDateEnding], i.[NetIncome], i.[OperatingCashFlow], i.[PaymentsForOperatingActivities], i.[PaymentsForRepurchaseOfCommonStock], i.[PaymentsForRepurchaseOfEquity], i.[PaymentsForRepurchaseOfPreferredStock], i.[ProceedsFromIssuanceOfCommonStock], i.[ProceedsFromIssuanceOfLongTermDebtAndCapitalSecuritiesNet], i.[ProceedsFromIssuanceOfPreferredStock], i.[ProceedsFromOperatingActivities], i.[ProceedsFromRepaymentsOfShortTermDebt], i.[ProceedsFromRepurchaseOfEquity], i.[ProceedsFromSaleOfTreasuryStock], i.[ProfitLoss], i.[ReportedCurrency], i.[Symbol])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted1;

SELECT [i].[Id] FROM @inserted1 i
ORDER BY [i].[_Position];
2022-05-12 00:54:19.420 +03:00 [INF] AddOrUpdate run successful.
2022-05-12 00:54:41.560 +03:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/screener-model - -
2022-05-12 00:54:41.560 +03:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/distribution/market-cap/30 - -
2022-05-12 00:54:41.562 +03:00 [INF] CORS policy execution successful.
2022-05-12 00:54:41.564 +03:00 [INF] CORS policy execution successful.
2022-05-12 00:54:41.566 +03:00 [INF] Executing endpoint 'SaluteStocksAPI.Controllers.ApiController.GetMarketCapDistribution (SaluteStocksAPI)'
2022-05-12 00:54:41.565 +03:00 [INF] Executing endpoint 'SaluteStocksAPI.Controllers.ApiController.GetScreenerModel (SaluteStocksAPI)'
2022-05-12 00:54:41.567 +03:00 [INF] Route matched with {action = "GetMarketCapDistribution", controller = "Api"}. Executing controller action with signature System.Threading.Tasks.Task`1[System.String] GetMarketCapDistribution(Int32) on controller SaluteStocksAPI.Controllers.ApiController (SaluteStocksAPI).
2022-05-12 00:54:41.567 +03:00 [INF] Route matched with {action = "GetScreenerModel", controller = "Api"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetScreenerModel() on controller SaluteStocksAPI.Controllers.ApiController (SaluteStocksAPI).
2022-05-12 00:54:41.572 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 00:54:41.572 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 00:54:41.585 +03:00 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[MarketCapitalization])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 00:54:41.587 +03:00 [INF] Executed DbCommand (13ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[MarketCapitalization])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 00:54:41.597 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[MarketCapitalization])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 00:54:41.600 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[MarketCapitalization])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 00:54:41.612 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[EBITDA])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 00:54:41.626 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[EBITDA])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 00:54:41.628 +03:00 [INF] Executed DbCommand (12ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 00:54:41.637 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[PERatio])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 00:54:41.642 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 00:54:41.647 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[PERatio])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 00:54:41.649 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2022-05-12 00:54:41.650 +03:00 [INF] Executed action SaluteStocksAPI.Controllers.ApiController.GetScreenerModel (SaluteStocksAPI) in 78.5309ms
2022-05-12 00:54:41.651 +03:00 [INF] Executed endpoint 'SaluteStocksAPI.Controllers.ApiController.GetScreenerModel (SaluteStocksAPI)'
2022-05-12 00:54:41.652 +03:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/screener-model - - - 200 - text/plain;+charset=utf-8 92.1489ms
2022-05-12 00:54:41.654 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 00:54:41.668 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 00:54:41.682 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 00:54:41.696 +03:00 [INF] Executed DbCommand (13ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 00:54:41.709 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 00:54:41.722 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 00:54:41.734 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 00:54:41.747 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 00:54:41.759 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 00:54:41.771 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 00:54:41.783 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 00:54:41.796 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 00:54:41.806 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 00:54:41.818 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 00:54:41.828 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 00:54:41.842 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 00:54:41.854 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 00:54:41.864 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 00:54:41.876 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 00:54:41.888 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 00:54:41.898 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 00:54:41.909 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 00:54:41.919 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 00:54:41.929 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 00:54:41.939 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 00:54:41.951 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 00:54:41.963 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 00:54:41.965 +03:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2022-05-12 00:54:41.965 +03:00 [INF] Executed action SaluteStocksAPI.Controllers.ApiController.GetMarketCapDistribution (SaluteStocksAPI) in 395.723ms
2022-05-12 00:54:41.967 +03:00 [INF] Executed endpoint 'SaluteStocksAPI.Controllers.ApiController.GetMarketCapDistribution (SaluteStocksAPI)'
2022-05-12 00:54:41.968 +03:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/distribution/market-cap/30 - - - 200 - text/plain;+charset=utf-8 408.8250ms
2022-05-12 00:54:46.974 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CompanyOverview with Symbol BIIB
2022-05-12 00:54:46.978 +03:00 [INF] Generating URI for OVERVIEW with params: symbol: BIIB
2022-05-12 00:54:46.978 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=OVERVIEW&symbol=BIIB
2022-05-12 00:54:46.979 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=OVERVIEW&symbol=BIIB".
2022-05-12 00:54:47.198 +03:00 [INF] Response has success status code
2022-05-12 00:54:47.199 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.CompanyOverview for symbol BIIB
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyOverview(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 109
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 00:54:48.225 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.BalanceSheet with Symbol BCH
2022-05-12 00:54:48.227 +03:00 [INF] Generating URI for BALANCE_SHEET with params: symbol: BCH
2022-05-12 00:54:48.228 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BCH
2022-05-12 00:54:48.229 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BCH".
2022-05-12 00:54:48.382 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.IncomeStatement with Symbol ATEN
2022-05-12 00:54:48.384 +03:00 [INF] Generating URI for INCOME_STATEMENT with params: symbol: ATEN
2022-05-12 00:54:48.385 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=INCOME_STATEMENT&symbol=ATEN
2022-05-12 00:54:48.386 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=INCOME_STATEMENT&symbol=ATEN".
2022-05-12 00:54:48.454 +03:00 [INF] Response has success status code
2022-05-12 00:54:48.455 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.BalanceSheet for symbol BCH
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetBalanceSheet(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 82
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 00:54:48.650 +03:00 [INF] Response has success status code
2022-05-12 00:54:48.650 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.IncomeStatement for symbol ATEN
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetIncomeStatement(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 69
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 00:54:48.790 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.Earnings with Symbol AVCTW
2022-05-12 00:54:48.794 +03:00 [INF] Generating URI for EARNINGS with params: symbol: AVCTW
2022-05-12 00:54:48.794 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=EARNINGS&symbol=AVCTW
2022-05-12 00:54:48.797 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=EARNINGS&symbol=AVCTW".
2022-05-12 00:54:49.019 +03:00 [INF] Response has success status code
2022-05-12 00:54:49.020 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.Earnings for symbol AVCTW
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyEarnings(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 142
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 00:54:49.419 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CashFlow with Symbol ASRT
2022-05-12 00:54:49.422 +03:00 [INF] Generating URI for CASH_FLOW with params: symbol: ASRT
2022-05-12 00:54:49.422 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=CASH_FLOW&symbol=ASRT
2022-05-12 00:54:49.423 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=CASH_FLOW&symbol=ASRT".
2022-05-12 00:54:49.652 +03:00 [INF] Response has success status code
2022-05-12 00:54:49.652 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.CashFlow for symbol ASRT
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCashFlow(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 96
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 00:55:17.207 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CompanyOverview with Symbol BILS
2022-05-12 00:55:17.208 +03:00 [INF] Generating URI for OVERVIEW with params: symbol: BILS
2022-05-12 00:55:17.209 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=OVERVIEW&symbol=BILS
2022-05-12 00:55:17.210 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=OVERVIEW&symbol=BILS".
2022-05-12 00:55:17.535 +03:00 [INF] Response has success status code
2022-05-12 00:55:17.535 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.CompanyOverview.
2022-05-12 00:55:17.536 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 00:55:17.604 +03:00 [INF] Executed DbCommand (66ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__entity_Symbol_0
2022-05-12 00:55:17.606 +03:00 [INF] Entity does not exist. Adding to DB.
2022-05-12 00:55:17.623 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (Size = 4000), @p2='?' (DbType = Double), @p3='?' (Size = 4000), @p4='?' (DbType = Double), @p5='?' (DbType = Double), @p6='?' (DbType = Int64), @p7='?' (Size = 4000), @p8='?' (Size = 4000), @p9='?' (Size = 4000), @p10='?' (DbType = Double), @p11='?' (DbType = DateTime2), @p12='?' (DbType = Double), @p13='?' (DbType = Double), @p14='?' (DbType = Int64), @p15='?' (DbType = Double), @p16='?' (DbType = Double), @p17='?' (DbType = Double), @p18='?' (DbType = DateTime2), @p19='?' (Size = 4000), @p20='?' (DbType = Boolean), @p21='?' (Size = 4000), @p22='?' (DbType = Double), @p23='?' (DbType = Int64), @p24='?' (Size = 4000), @p25='?' (DbType = DateTime2), @p26='?' (DbType = DateTime2), @p27='?' (DbType = DateTime2), @p28='?' (DbType = Int64), @p29='?' (Size = 4000), @p30='?' (DbType = Double), @p31='?' (DbType = Double), @p32='?' (DbType = Double), @p33='?' (DbType = Double), @p34='?' (DbType = Double), @p35='?' (DbType = Double), @p36='?' (DbType = Double), @p37='?' (DbType = Double), @p38='?' (DbType = Double), @p39='?' (DbType = Double), @p40='?' (DbType = Double), @p41='?' (DbType = Int64), @p42='?' (Size = 4000), @p43='?' (DbType = Int64), @p44='?' (DbType = Double), @p45='?' (DbType = Double), @p46='?' (DbType = Double), @p47='?' (DbType = Double), @p48='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [CompanyOverviews] ([Symbol], [Address], [AnalystTargetPrice], [AssetType], [Beta], [BookValue], [CIK], [Country], [Currency], [Description], [DilutedEPSTTM], [DividendDate], [DividendPerShare], [DividendYield], [EBITDA], [EPS], [EVToEBITDA], [EVToRevenue], [ExDividendDate], [Exchange], [ExistInApi], [FiscalYearEnd], [ForwardPE], [GrossProfitTTM], [Industry], [LastApiRefresh], [LastLocalRefresh], [LatestQuarter], [MarketCapitalization], [Name], [OperatingMarginTTM], [PEGRatio], [PERatio], [PriceToBookRatio], [PriceToSalesRatioTTM], [ProfitMargin], [QuarterlyEarningsGrowthYOY], [QuarterlyRevenueGrowthYOY], [ReturnOnAssetsTTM], [ReturnOnEquityTTM], [RevenuePerShareTTM], [RevenueTTM], [Sector], [SharesOutstanding], [TrailingPE], [_200DayMovingAverage], [_50DayMovingAverage], [_52WeekHigh], [_52WeekLow])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21, @p22, @p23, @p24, @p25, @p26, @p27, @p28, @p29, @p30, @p31, @p32, @p33, @p34, @p35, @p36, @p37, @p38, @p39, @p40, @p41, @p42, @p43, @p44, @p45, @p46, @p47, @p48);
2022-05-12 00:55:17.632 +03:00 [INF] AddOrUpdate run successful.
2022-05-12 00:55:17.633 +03:00 [WRN] Alpha Vantage has no SaluteStocksAPI.Models.FundamentalData.CompanyOverview for symbol BILS
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageEmptyResponse: Response was empty.
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyOverview(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 109
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 00:55:18.465 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.BalanceSheet with Symbol BCM
2022-05-12 00:55:18.468 +03:00 [INF] Generating URI for BALANCE_SHEET with params: symbol: BCM
2022-05-12 00:55:18.469 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BCM
2022-05-12 00:55:18.469 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BCM".
2022-05-12 00:55:18.653 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.IncomeStatement with Symbol ATEST-L
2022-05-12 00:55:18.656 +03:00 [INF] Generating URI for INCOME_STATEMENT with params: symbol: ATEST-L
2022-05-12 00:55:18.656 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=INCOME_STATEMENT&symbol=ATEST-L
2022-05-12 00:55:18.657 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=INCOME_STATEMENT&symbol=ATEST-L".
2022-05-12 00:55:18.689 +03:00 [INF] Response has success status code
2022-05-12 00:55:18.690 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 00:55:18.701 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__symbol_0
2022-05-12 00:55:18.704 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.BalanceSheet.
2022-05-12 00:55:18.712 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [b].[Symbol], [b].[ExistInApi], [b].[LastApiRefresh], [b].[LastLocalRefresh]
FROM [BalanceSheets] AS [b]
WHERE [b].[Symbol] = @__entity_Symbol_0
2022-05-12 00:55:18.714 +03:00 [INF] Entity does not exist. Adding to DB.
2022-05-12 00:55:18.726 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = Boolean), @p2='?' (DbType = DateTime2), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [BalanceSheets] ([Symbol], [ExistInApi], [LastApiRefresh], [LastLocalRefresh])
VALUES (@p0, @p1, @p2, @p3);
2022-05-12 00:55:18.734 +03:00 [INF] AddOrUpdate run successful.
2022-05-12 00:55:18.735 +03:00 [WRN] Alpha Vantage has no SaluteStocksAPI.Models.FundamentalData.BalanceSheet for symbol BCM
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageEmptyResponse: Response was empty.
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetBalanceSheet(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 82
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 00:55:18.883 +03:00 [INF] Response has success status code
2022-05-12 00:55:18.884 +03:00 [INF] Trying to deserialize response.
2022-05-12 00:55:18.885 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 00:55:18.895 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__symbol_0
2022-05-12 00:55:18.896 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.IncomeStatement.
2022-05-12 00:55:18.904 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [i].[Symbol], [i].[ExistInApi], [i].[LastApiRefresh], [i].[LastLocalRefresh]
FROM [IncomeStatements] AS [i]
WHERE [i].[Symbol] = @__entity_Symbol_0
2022-05-12 00:55:18.909 +03:00 [INF] Entity does not exist. Adding to DB.
2022-05-12 00:55:18.919 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = Boolean), @p2='?' (DbType = DateTime2), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [IncomeStatements] ([Symbol], [ExistInApi], [LastApiRefresh], [LastLocalRefresh])
VALUES (@p0, @p1, @p2, @p3);
2022-05-12 00:55:18.927 +03:00 [INF] AddOrUpdate run successful.
2022-05-12 00:55:19.029 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.Earnings with Symbol AVDE
2022-05-12 00:55:19.032 +03:00 [INF] Generating URI for EARNINGS with params: symbol: AVDE
2022-05-12 00:55:19.032 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=EARNINGS&symbol=AVDE
2022-05-12 00:55:19.033 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=EARNINGS&symbol=AVDE".
2022-05-12 00:55:19.395 +03:00 [INF] Response has success status code
2022-05-12 00:55:19.396 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 00:55:19.406 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__symbol_0
2022-05-12 00:55:19.409 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.Earnings.
2022-05-12 00:55:19.418 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [e].[Symbol], [e].[ExistInApi], [e].[LastApiRefresh], [e].[LastLocalRefresh]
FROM [Earnings] AS [e]
WHERE [e].[Symbol] = @__entity_Symbol_0
2022-05-12 00:55:19.419 +03:00 [INF] Entity does not exist. Adding to DB.
2022-05-12 00:55:19.433 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = Boolean), @p2='?' (DbType = DateTime2), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Earnings] ([Symbol], [ExistInApi], [LastApiRefresh], [LastLocalRefresh])
VALUES (@p0, @p1, @p2, @p3);
2022-05-12 00:55:19.441 +03:00 [INF] AddOrUpdate run successful.
2022-05-12 00:55:19.442 +03:00 [WRN] Alpha Vantage has no SaluteStocksAPI.Models.FundamentalData.Earnings for symbol AVDE
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageEmptyResponse: Response was empty.
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyEarnings(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 142
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 00:55:19.670 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CashFlow with Symbol ASTSW
2022-05-12 00:55:19.672 +03:00 [INF] Generating URI for CASH_FLOW with params: symbol: ASTSW
2022-05-12 00:55:19.673 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=CASH_FLOW&symbol=ASTSW
2022-05-12 00:55:19.673 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=CASH_FLOW&symbol=ASTSW".
2022-05-12 00:55:20.041 +03:00 [INF] Response has success status code
2022-05-12 00:55:20.042 +03:00 [INF] Trying to deserialize response.
2022-05-12 00:55:20.043 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 00:55:20.053 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__symbol_0
2022-05-12 00:55:20.056 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.CashFlow.
2022-05-12 00:55:20.065 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[ExistInApi], [c].[LastApiRefresh], [c].[LastLocalRefresh]
FROM [CashFlows] AS [c]
WHERE [c].[Symbol] = @__entity_Symbol_0
2022-05-12 00:55:20.066 +03:00 [INF] Entity does not exist. Adding to DB.
2022-05-12 00:55:20.081 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = Boolean), @p2='?' (DbType = DateTime2), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [CashFlows] ([Symbol], [ExistInApi], [LastApiRefresh], [LastLocalRefresh])
VALUES (@p0, @p1, @p2, @p3);
2022-05-12 00:55:20.140 +03:00 [INF] Executed DbCommand (57ms) [Parameters=[@p4='?' (DbType = Double), @p5='?' (DbType = Double), @p6='?' (DbType = Int64), @p7='?' (DbType = Int64), @p8='?' (DbType = Int64), @p9='?' (DbType = Int64), @p10='?' (DbType = Int64), @p11='?' (DbType = Int64), @p12='?' (DbType = Int64), @p13='?' (DbType = Double), @p14='?' (DbType = Int64), @p15='?' (DbType = Double), @p16='?' (DbType = Int64), @p17='?' (Size = 4000), @p18='?' (DbType = Double), @p19='?' (DbType = Double), @p20='?' (DbType = Int64), @p21='?' (DbType = Int64), @p22='?' (DbType = Int64), @p23='?' (DbType = Int64), @p24='?' (DbType = Int64), @p25='?' (DbType = Int64), @p26='?' (DbType = Int64), @p27='?' (DbType = Int64), @p28='?' (DbType = Int64), @p29='?' (DbType = Double), @p30='?' (DbType = Int64), @p31='?' (DbType = Int64), @p32='?' (Size = 4000), @p33='?' (Size = 450), @p34='?' (DbType = Double), @p35='?' (DbType = Double), @p36='?' (DbType = Int64), @p37='?' (DbType = Int64), @p38='?' (DbType = Int64), @p39='?' (DbType = Int64), @p40='?' (DbType = Int64), @p41='?' (DbType = Int64), @p42='?' (DbType = Int64), @p43='?' (DbType = Double), @p44='?' (DbType = Int64), @p45='?' (DbType = Double), @p46='?' (DbType = Int64), @p47='?' (Size = 4000), @p48='?' (DbType = Double), @p49='?' (DbType = Double), @p50='?' (DbType = Int64), @p51='?' (DbType = Int64), @p52='?' (DbType = Int64), @p53='?' (DbType = Int64), @p54='?' (DbType = Int64), @p55='?' (DbType = Int64), @p56='?' (DbType = Int64), @p57='?' (DbType = Int64), @p58='?' (DbType = Int64), @p59='?' (DbType = Double), @p60='?' (DbType = Int64), @p61='?' (DbType = Int64), @p62='?' (Size = 4000), @p63='?' (Size = 450), @p64='?' (DbType = Double), @p65='?' (DbType = Double), @p66='?' (DbType = Int64), @p67='?' (DbType = Int64), @p68='?' (DbType = Int64), @p69='?' (DbType = Int64), @p70='?' (DbType = Int64), @p71='?' (DbType = Int64), @p72='?' (DbType = Int64), @p73='?' (DbType = Double), @p74='?' (DbType = Int64), @p75='?' (DbType = Double), @p76='?' (DbType = Int64), @p77='?' (Size = 4000), @p78='?' (DbType = Double), @p79='?' (DbType = Double), @p80='?' (DbType = Int64), @p81='?' (DbType = Int64), @p82='?' (DbType = Int64), @p83='?' (DbType = Int64), @p84='?' (DbType = Int64), @p85='?' (DbType = Int64), @p86='?' (DbType = Int64), @p87='?' (DbType = Int64), @p88='?' (DbType = Int64), @p89='?' (DbType = Double), @p90='?' (DbType = Int64), @p91='?' (DbType = Int64), @p92='?' (Size = 4000), @p93='?' (Size = 450), @p94='?' (DbType = Double), @p95='?' (DbType = Double), @p96='?' (DbType = Int64), @p97='?' (DbType = Int64), @p98='?' (DbType = Int64), @p99='?' (DbType = Int64), @p100='?' (DbType = Int64), @p101='?' (DbType = Int64), @p102='?' (DbType = Int64), @p103='?' (DbType = Double), @p104='?' (DbType = Int64), @p105='?' (DbType = Double), @p106='?' (DbType = Int64), @p107='?' (Size = 4000), @p108='?' (DbType = Double), @p109='?' (DbType = Double), @p110='?' (DbType = Int64), @p111='?' (DbType = Int64), @p112='?' (DbType = Int64), @p113='?' (DbType = Int64), @p114='?' (DbType = Int64), @p115='?' (DbType = Int64), @p116='?' (DbType = Int64), @p117='?' (DbType = Int64), @p118='?' (DbType = Int64), @p119='?' (DbType = Double), @p120='?' (DbType = Int64), @p121='?' (DbType = Int64), @p122='?' (Size = 4000), @p123='?' (Size = 450), @p124='?' (DbType = Double), @p125='?' (DbType = Double), @p126='?' (DbType = Int64), @p127='?' (DbType = Int64), @p128='?' (DbType = Int64), @p129='?' (DbType = Int64), @p130='?' (DbType = Int64), @p131='?' (DbType = Int64), @p132='?' (DbType = Int64), @p133='?' (DbType = Double), @p134='?' (DbType = Int64), @p135='?' (DbType = Double), @p136='?' (DbType = Int64), @p137='?' (Size = 4000), @p138='?' (DbType = Double), @p139='?' (DbType = Double), @p140='?' (DbType = Int64), @p141='?' (DbType = Int64), @p142='?' (DbType = Int64), @p143='?' (DbType = Int64), @p144='?' (DbType = Int64), @p145='?' (DbType = Int64), @p146='?' (DbType = Int64), @p147='?' (DbType = Int64), @p148='?' (DbType = Int64), @p149='?' (DbType = Double), @p150='?' (DbType = Int64), @p151='?' (DbType = Int64), @p152='?' (Size = 4000), @p153='?' (Size = 450), @p154='?' (DbType = Double), @p155='?' (DbType = Double), @p156='?' (DbType = Int64), @p157='?' (DbType = Int64), @p158='?' (DbType = Int64), @p159='?' (DbType = Int64), @p160='?' (DbType = Int64), @p161='?' (DbType = Int64), @p162='?' (DbType = Int64), @p163='?' (DbType = Double), @p164='?' (DbType = Int64), @p165='?' (DbType = Double), @p166='?' (DbType = Int64), @p167='?' (Size = 4000), @p168='?' (DbType = Double), @p169='?' (DbType = Double), @p170='?' (DbType = Int64), @p171='?' (DbType = Int64), @p172='?' (DbType = Int64), @p173='?' (DbType = Int64), @p174='?' (DbType = Int64), @p175='?' (DbType = Int64), @p176='?' (DbType = Int64), @p177='?' (DbType = Int64), @p178='?' (DbType = Int64), @p179='?' (DbType = Double), @p180='?' (DbType = Int64), @p181='?' (DbType = Int64), @p182='?' (Size = 4000), @p183='?' (Size = 450), @p184='?' (DbType = Double), @p185='?' (DbType = Double), @p186='?' (DbType = Int64), @p187='?' (DbType = Int64), @p188='?' (DbType = Int64), @p189='?' (DbType = Int64), @p190='?' (DbType = Int64), @p191='?' (DbType = Int64), @p192='?' (DbType = Int64), @p193='?' (DbType = Double), @p194='?' (DbType = Int64), @p195='?' (DbType = Double), @p196='?' (DbType = Int64), @p197='?' (Size = 4000), @p198='?' (DbType = Double), @p199='?' (DbType = Double), @p200='?' (DbType = Int64), @p201='?' (DbType = Int64), @p202='?' (DbType = Int64), @p203='?' (DbType = Int64), @p204='?' (DbType = Int64), @p205='?' (DbType = Int64), @p206='?' (DbType = Int64), @p207='?' (DbType = Int64), @p208='?' (DbType = Int64), @p209='?' (DbType = Double), @p210='?' (DbType = Int64), @p211='?' (DbType = Int64), @p212='?' (Size = 4000), @p213='?' (Size = 450), @p214='?' (DbType = Double), @p215='?' (DbType = Double), @p216='?' (DbType = Int64), @p217='?' (DbType = Int64), @p218='?' (DbType = Int64), @p219='?' (DbType = Int64), @p220='?' (DbType = Int64), @p221='?' (DbType = Int64), @p222='?' (DbType = Int64), @p223='?' (DbType = Double), @p224='?' (DbType = Int64), @p225='?' (DbType = Double), @p226='?' (DbType = Int64), @p227='?' (Size = 4000), @p228='?' (DbType = Double), @p229='?' (DbType = Double), @p230='?' (DbType = Int64), @p231='?' (DbType = Int64), @p232='?' (DbType = Int64), @p233='?' (DbType = Int64), @p234='?' (DbType = Int64), @p235='?' (DbType = Int64), @p236='?' (DbType = Int64), @p237='?' (DbType = Int64), @p238='?' (DbType = Int64), @p239='?' (DbType = Double), @p240='?' (DbType = Int64), @p241='?' (DbType = Int64), @p242='?' (Size = 4000), @p243='?' (Size = 450), @p244='?' (DbType = Double), @p245='?' (DbType = Double), @p246='?' (DbType = Int64), @p247='?' (DbType = Int64), @p248='?' (DbType = Int64), @p249='?' (DbType = Int64), @p250='?' (DbType = Int64), @p251='?' (DbType = Int64), @p252='?' (DbType = Int64), @p253='?' (DbType = Double), @p254='?' (DbType = Int64), @p255='?' (DbType = Double), @p256='?' (DbType = Int64), @p257='?' (Size = 4000), @p258='?' (DbType = Double), @p259='?' (DbType = Double), @p260='?' (DbType = Int64), @p261='?' (DbType = Int64), @p262='?' (DbType = Int64), @p263='?' (DbType = Int64), @p264='?' (DbType = Int64), @p265='?' (DbType = Int64), @p266='?' (DbType = Int64), @p267='?' (DbType = Int64), @p268='?' (DbType = Int64), @p269='?' (DbType = Double), @p270='?' (DbType = Int64), @p271='?' (DbType = Int64), @p272='?' (Size = 4000), @p273='?' (Size = 450), @p274='?' (DbType = Double), @p275='?' (DbType = Double), @p276='?' (DbType = Int64), @p277='?' (DbType = Int64), @p278='?' (DbType = Int64), @p279='?' (DbType = Int64), @p280='?' (DbType = Int64), @p281='?' (DbType = Int64), @p282='?' (DbType = Int64), @p283='?' (DbType = Double), @p284='?' (DbType = Int64), @p285='?' (DbType = Double), @p286='?' (DbType = Int64), @p287='?' (Size = 4000), @p288='?' (DbType = Double), @p289='?' (DbType = Double), @p290='?' (DbType = Int64), @p291='?' (DbType = Int64), @p292='?' (DbType = Int64), @p293='?' (DbType = Int64), @p294='?' (DbType = Int64), @p295='?' (DbType = Int64), @p296='?' (DbType = Int64), @p297='?' (DbType = Int64), @p298='?' (DbType = Int64), @p299='?' (DbType = Double), @p300='?' (DbType = Int64), @p301='?' (DbType = Int64), @p302='?' (Size = 4000), @p303='?' (Size = 450), @p304='?' (DbType = Double), @p305='?' (DbType = Double), @p306='?' (DbType = Int64), @p307='?' (DbType = Int64), @p308='?' (DbType = Int64), @p309='?' (DbType = Int64), @p310='?' (DbType = Int64), @p311='?' (DbType = Int64), @p312='?' (DbType = Int64), @p313='?' (DbType = Double), @p314='?' (DbType = Int64), @p315='?' (DbType = Double), @p316='?' (DbType = Int64), @p317='?' (Size = 4000), @p318='?' (DbType = Double), @p319='?' (DbType = Double), @p320='?' (DbType = Int64), @p321='?' (DbType = Int64), @p322='?' (DbType = Int64), @p323='?' (DbType = Int64), @p324='?' (DbType = Int64), @p325='?' (DbType = Int64), @p326='?' (DbType = Int64), @p327='?' (DbType = Int64), @p328='?' (DbType = Int64), @p329='?' (DbType = Double), @p330='?' (DbType = Int64), @p331='?' (DbType = Int64), @p332='?' (Size = 4000), @p333='?' (Size = 450), @p334='?' (DbType = Double), @p335='?' (DbType = Double), @p336='?' (DbType = Int64), @p337='?' (DbType = Int64), @p338='?' (DbType = Int64), @p339='?' (DbType = Int64), @p340='?' (DbType = Int64), @p341='?' (DbType = Int64), @p342='?' (DbType = Int64), @p343='?' (DbType = Double), @p344='?' (DbType = Int64), @p345='?' (DbType = Double), @p346='?' (DbType = Int64), @p347='?' (Size = 4000), @p348='?' (DbType = Double), @p349='?' (DbType = Double), @p350='?' (DbType = Int64), @p351='?' (DbType = Int64), @p352='?' (DbType = Int64), @p353='?' (DbType = Int64), @p354='?' (DbType = Int64), @p355='?' (DbType = Int64), @p356='?' (DbType = Int64), @p357='?' (DbType = Int64), @p358='?' (DbType = Int64), @p359='?' (DbType = Double), @p360='?' (DbType = Int64), @p361='?' (DbType = Int64), @p362='?' (Size = 4000), @p363='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
DECLARE @inserted0 TABLE ([Id] int, [_Position] [int]);
MERGE [CashFlowAnnualReport] USING (
VALUES (@p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21, @p22, @p23, @p24, @p25, @p26, @p27, @p28, @p29, @p30, @p31, @p32, @p33, 0),
(@p34, @p35, @p36, @p37, @p38, @p39, @p40, @p41, @p42, @p43, @p44, @p45, @p46, @p47, @p48, @p49, @p50, @p51, @p52, @p53, @p54, @p55, @p56, @p57, @p58, @p59, @p60, @p61, @p62, @p63, 1)) AS i ([CapitalExpenditures], [CashflowFromFinancing], [CashflowFromInvestment], [ChangeInCashAndCashEquivalents], [ChangeInExchangeRate], [ChangeInInventory], [ChangeInOperatingAssets], [ChangeInOperatingLiabilities], [ChangeInReceivables], [DepreciationDepletionAndAmortization], [DividendPayout], [DividendPayoutCommonStock], [DividendPayoutPreferredStock], [FiscalDateEnding], [NetIncome], [OperatingCashFlow], [PaymentsForOperatingActivities], [PaymentsForRepurchaseOfCommonStock], [PaymentsForRepurchaseOfEquity], [PaymentsForRepurchaseOfPreferredStock], [ProceedsFromIssuanceOfCommonStock], [ProceedsFromIssuanceOfLongTermDebtAndCapitalSecuritiesNet], [ProceedsFromIssuanceOfPreferredStock], [ProceedsFromOperatingActivities], [ProceedsFromRepaymentsOfShortTermDebt], [ProceedsFromRepurchaseOfEquity], [ProceedsFromSaleOfTreasuryStock], [ProfitLoss], [ReportedCurrency], [Symbol], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([CapitalExpenditures], [CashflowFromFinancing], [CashflowFromInvestment], [ChangeInCashAndCashEquivalents], [ChangeInExchangeRate], [ChangeInInventory], [ChangeInOperatingAssets], [ChangeInOperatingLiabilities], [ChangeInReceivables], [DepreciationDepletionAndAmortization], [DividendPayout], [DividendPayoutCommonStock], [DividendPayoutPreferredStock], [FiscalDateEnding], [NetIncome], [OperatingCashFlow], [PaymentsForOperatingActivities], [PaymentsForRepurchaseOfCommonStock], [PaymentsForRepurchaseOfEquity], [PaymentsForRepurchaseOfPreferredStock], [ProceedsFromIssuanceOfCommonStock], [ProceedsFromIssuanceOfLongTermDebtAndCapitalSecuritiesNet], [ProceedsFromIssuanceOfPreferredStock], [ProceedsFromOperatingActivities], [ProceedsFromRepaymentsOfShortTermDebt], [ProceedsFromRepurchaseOfEquity], [ProceedsFromSaleOfTreasuryStock], [ProfitLoss], [ReportedCurrency], [Symbol])
VALUES (i.[CapitalExpenditures], i.[CashflowFromFinancing], i.[CashflowFromInvestment], i.[ChangeInCashAndCashEquivalents], i.[ChangeInExchangeRate], i.[ChangeInInventory], i.[ChangeInOperatingAssets], i.[ChangeInOperatingLiabilities], i.[ChangeInReceivables], i.[DepreciationDepletionAndAmortization], i.[DividendPayout], i.[DividendPayoutCommonStock], i.[DividendPayoutPreferredStock], i.[FiscalDateEnding], i.[NetIncome], i.[OperatingCashFlow], i.[PaymentsForOperatingActivities], i.[PaymentsForRepurchaseOfCommonStock], i.[PaymentsForRepurchaseOfEquity], i.[PaymentsForRepurchaseOfPreferredStock], i.[ProceedsFromIssuanceOfCommonStock], i.[ProceedsFromIssuanceOfLongTermDebtAndCapitalSecuritiesNet], i.[ProceedsFromIssuanceOfPreferredStock], i.[ProceedsFromOperatingActivities], i.[ProceedsFromRepaymentsOfShortTermDebt], i.[ProceedsFromRepurchaseOfEquity], i.[ProceedsFromSaleOfTreasuryStock], i.[ProfitLoss], i.[ReportedCurrency], i.[Symbol])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted0;

SELECT [i].[Id] FROM @inserted0 i
ORDER BY [i].[_Position];

DECLARE @inserted2 TABLE ([Id] int, [_Position] [int]);
MERGE [CashFlowQuarterlyReport] USING (
VALUES (@p64, @p65, @p66, @p67, @p68, @p69, @p70, @p71, @p72, @p73, @p74, @p75, @p76, @p77, @p78, @p79, @p80, @p81, @p82, @p83, @p84, @p85, @p86, @p87, @p88, @p89, @p90, @p91, @p92, @p93, 0),
(@p94, @p95, @p96, @p97, @p98, @p99, @p100, @p101, @p102, @p103, @p104, @p105, @p106, @p107, @p108, @p109, @p110, @p111, @p112, @p113, @p114, @p115, @p116, @p117, @p118, @p119, @p120, @p121, @p122, @p123, 1),
(@p124, @p125, @p126, @p127, @p128, @p129, @p130, @p131, @p132, @p133, @p134, @p135, @p136, @p137, @p138, @p139, @p140, @p141, @p142, @p143, @p144, @p145, @p146, @p147, @p148, @p149, @p150, @p151, @p152, @p153, 2),
(@p154, @p155, @p156, @p157, @p158, @p159, @p160, @p161, @p162, @p163, @p164, @p165, @p166, @p167, @p168, @p169, @p170, @p171, @p172, @p173, @p174, @p175, @p176, @p177, @p178, @p179, @p180, @p181, @p182, @p183, 3),
(@p184, @p185, @p186, @p187, @p188, @p189, @p190, @p191, @p192, @p193, @p194, @p195, @p196, @p197, @p198, @p199, @p200, @p201, @p202, @p203, @p204, @p205, @p206, @p207, @p208, @p209, @p210, @p211, @p212, @p213, 4),
(@p214, @p215, @p216, @p217, @p218, @p219, @p220, @p221, @p222, @p223, @p224, @p225, @p226, @p227, @p228, @p229, @p230, @p231, @p232, @p233, @p234, @p235, @p236, @p237, @p238, @p239, @p240, @p241, @p242, @p243, 5),
(@p244, @p245, @p246, @p247, @p248, @p249, @p250, @p251, @p252, @p253, @p254, @p255, @p256, @p257, @p258, @p259, @p260, @p261, @p262, @p263, @p264, @p265, @p266, @p267, @p268, @p269, @p270, @p271, @p272, @p273, 6),
(@p274, @p275, @p276, @p277, @p278, @p279, @p280, @p281, @p282, @p283, @p284, @p285, @p286, @p287, @p288, @p289, @p290, @p291, @p292, @p293, @p294, @p295, @p296, @p297, @p298, @p299, @p300, @p301, @p302, @p303, 7),
(@p304, @p305, @p306, @p307, @p308, @p309, @p310, @p311, @p312, @p313, @p314, @p315, @p316, @p317, @p318, @p319, @p320, @p321, @p322, @p323, @p324, @p325, @p326, @p327, @p328, @p329, @p330, @p331, @p332, @p333, 8),
(@p334, @p335, @p336, @p337, @p338, @p339, @p340, @p341, @p342, @p343, @p344, @p345, @p346, @p347, @p348, @p349, @p350, @p351, @p352, @p353, @p354, @p355, @p356, @p357, @p358, @p359, @p360, @p361, @p362, @p363, 9)) AS i ([CapitalExpenditures], [CashflowFromFinancing], [CashflowFromInvestment], [ChangeInCashAndCashEquivalents], [ChangeInExchangeRate], [ChangeInInventory], [ChangeInOperatingAssets], [ChangeInOperatingLiabilities], [ChangeInReceivables], [DepreciationDepletionAndAmortization], [DividendPayout], [DividendPayoutCommonStock], [DividendPayoutPreferredStock], [FiscalDateEnding], [NetIncome], [OperatingCashFlow], [PaymentsForOperatingActivities], [PaymentsForRepurchaseOfCommonStock], [PaymentsForRepurchaseOfEquity], [PaymentsForRepurchaseOfPreferredStock], [ProceedsFromIssuanceOfCommonStock], [ProceedsFromIssuanceOfLongTermDebtAndCapitalSecuritiesNet], [ProceedsFromIssuanceOfPreferredStock], [ProceedsFromOperatingActivities], [ProceedsFromRepaymentsOfShortTermDebt], [ProceedsFromRepurchaseOfEquity], [ProceedsFromSaleOfTreasuryStock], [ProfitLoss], [ReportedCurrency], [Symbol], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([CapitalExpenditures], [CashflowFromFinancing], [CashflowFromInvestment], [ChangeInCashAndCashEquivalents], [ChangeInExchangeRate], [ChangeInInventory], [ChangeInOperatingAssets], [ChangeInOperatingLiabilities], [ChangeInReceivables], [DepreciationDepletionAndAmortization], [DividendPayout], [DividendPayoutCommonStock], [DividendPayoutPreferredStock], [FiscalDateEnding], [NetIncome], [OperatingCashFlow], [PaymentsForOperatingActivities], [PaymentsForRepurchaseOfCommonStock], [PaymentsForRepurchaseOfEquity], [PaymentsForRepurchaseOfPreferredStock], [ProceedsFromIssuanceOfCommonStock], [ProceedsFromIssuanceOfLongTermDebtAndCapitalSecuritiesNet], [ProceedsFromIssuanceOfPreferredStock], [ProceedsFromOperatingActivities], [ProceedsFromRepaymentsOfShortTermDebt], [ProceedsFromRepurchaseOfEquity], [ProceedsFromSaleOfTreasuryStock], [ProfitLoss], [ReportedCurrency], [Symbol])
VALUES (i.[CapitalExpenditures], i.[CashflowFromFinancing], i.[CashflowFromInvestment], i.[ChangeInCashAndCashEquivalents], i.[ChangeInExchangeRate], i.[ChangeInInventory], i.[ChangeInOperatingAssets], i.[ChangeInOperatingLiabilities], i.[ChangeInReceivables], i.[DepreciationDepletionAndAmortization], i.[DividendPayout], i.[DividendPayoutCommonStock], i.[DividendPayoutPreferredStock], i.[FiscalDateEnding], i.[NetIncome], i.[OperatingCashFlow], i.[PaymentsForOperatingActivities], i.[PaymentsForRepurchaseOfCommonStock], i.[PaymentsForRepurchaseOfEquity], i.[PaymentsForRepurchaseOfPreferredStock], i.[ProceedsFromIssuanceOfCommonStock], i.[ProceedsFromIssuanceOfLongTermDebtAndCapitalSecuritiesNet], i.[ProceedsFromIssuanceOfPreferredStock], i.[ProceedsFromOperatingActivities], i.[ProceedsFromRepaymentsOfShortTermDebt], i.[ProceedsFromRepurchaseOfEquity], i.[ProceedsFromSaleOfTreasuryStock], i.[ProfitLoss], i.[ReportedCurrency], i.[Symbol])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted2;

SELECT [i].[Id] FROM @inserted2 i
ORDER BY [i].[_Position];
2022-05-12 00:55:20.200 +03:00 [INF] AddOrUpdate run successful.
2022-05-12 00:55:47.651 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CompanyOverview with Symbol BIOC
2022-05-12 00:55:47.652 +03:00 [INF] Generating URI for OVERVIEW with params: symbol: BIOC
2022-05-12 00:55:47.653 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=OVERVIEW&symbol=BIOC
2022-05-12 00:55:47.653 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=OVERVIEW&symbol=BIOC".
2022-05-12 00:55:47.888 +03:00 [INF] Response has success status code
2022-05-12 00:55:47.889 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.CompanyOverview for symbol BIOC
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyOverview(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 109
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 00:55:48.748 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.BalanceSheet with Symbol BCOV
2022-05-12 00:55:48.749 +03:00 [INF] Generating URI for BALANCE_SHEET with params: symbol: BCOV
2022-05-12 00:55:48.750 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BCOV
2022-05-12 00:55:48.750 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BCOV".
2022-05-12 00:55:48.935 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.IncomeStatement with Symbol ATH-P-A
2022-05-12 00:55:48.937 +03:00 [INF] Generating URI for INCOME_STATEMENT with params: symbol: ATH-P-A
2022-05-12 00:55:48.937 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=INCOME_STATEMENT&symbol=ATH-P-A
2022-05-12 00:55:48.938 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=INCOME_STATEMENT&symbol=ATH-P-A".
2022-05-12 00:55:48.981 +03:00 [INF] Response has success status code
2022-05-12 00:55:48.982 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.BalanceSheet for symbol BCOV
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetBalanceSheet(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 82
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 00:55:49.155 +03:00 [INF] Response has success status code
2022-05-12 00:55:49.156 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.IncomeStatement for symbol ATH-P-A
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetIncomeStatement(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 69
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 00:55:49.453 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.Earnings with Symbol AVDL
2022-05-12 00:55:49.456 +03:00 [INF] Generating URI for EARNINGS with params: symbol: AVDL
2022-05-12 00:55:49.457 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=EARNINGS&symbol=AVDL
2022-05-12 00:55:49.457 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=EARNINGS&symbol=AVDL".
2022-05-12 00:55:49.672 +03:00 [INF] Response has success status code
2022-05-12 00:55:49.672 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.Earnings for symbol AVDL
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyEarnings(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 142
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 00:55:50.208 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CashFlow with Symbol ASX
2022-05-12 00:55:50.211 +03:00 [INF] Generating URI for CASH_FLOW with params: symbol: ASX
2022-05-12 00:55:50.212 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=CASH_FLOW&symbol=ASX
2022-05-12 00:55:50.212 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=CASH_FLOW&symbol=ASX".
2022-05-12 00:55:50.439 +03:00 [INF] Response has success status code
2022-05-12 00:55:50.440 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.CashFlow for symbol ASX
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCashFlow(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 96
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 00:55:51.300 +03:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/screener-model - -
2022-05-12 00:55:51.300 +03:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/distribution/market-cap/30 - -
2022-05-12 00:55:51.301 +03:00 [INF] CORS policy execution successful.
2022-05-12 00:55:51.301 +03:00 [INF] CORS policy execution successful.
2022-05-12 00:55:51.302 +03:00 [INF] Executing endpoint 'SaluteStocksAPI.Controllers.ApiController.GetScreenerModel (SaluteStocksAPI)'
2022-05-12 00:55:51.302 +03:00 [INF] Executing endpoint 'SaluteStocksAPI.Controllers.ApiController.GetMarketCapDistribution (SaluteStocksAPI)'
2022-05-12 00:55:51.303 +03:00 [INF] Route matched with {action = "GetScreenerModel", controller = "Api"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetScreenerModel() on controller SaluteStocksAPI.Controllers.ApiController (SaluteStocksAPI).
2022-05-12 00:55:51.305 +03:00 [INF] Route matched with {action = "GetMarketCapDistribution", controller = "Api"}. Executing controller action with signature System.Threading.Tasks.Task`1[System.String] GetMarketCapDistribution(Int32) on controller SaluteStocksAPI.Controllers.ApiController (SaluteStocksAPI).
2022-05-12 00:55:51.307 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 00:55:51.309 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 00:55:51.319 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[MarketCapitalization])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 00:55:51.321 +03:00 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[MarketCapitalization])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 00:55:51.336 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[MarketCapitalization])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 00:55:51.338 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[MarketCapitalization])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 00:55:51.347 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 00:55:51.349 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[EBITDA])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 00:55:51.358 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 00:55:51.359 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[EBITDA])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 00:55:51.369 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 00:55:51.371 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[PERatio])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 00:55:51.380 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 00:55:51.383 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[PERatio])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 00:55:51.385 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2022-05-12 00:55:51.386 +03:00 [INF] Executed action SaluteStocksAPI.Controllers.ApiController.GetScreenerModel (SaluteStocksAPI) in 79.0783ms
2022-05-12 00:55:51.387 +03:00 [INF] Executed endpoint 'SaluteStocksAPI.Controllers.ApiController.GetScreenerModel (SaluteStocksAPI)'
2022-05-12 00:55:51.387 +03:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/screener-model - - - 200 - text/plain;+charset=utf-8 87.4361ms
2022-05-12 00:55:51.393 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 00:55:51.405 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 00:55:51.419 +03:00 [INF] Executed DbCommand (12ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 00:55:51.429 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 00:55:51.440 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 00:55:51.453 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 00:55:51.465 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 00:55:51.480 +03:00 [INF] Executed DbCommand (12ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 00:55:51.490 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 00:55:51.503 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 00:55:51.514 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 00:55:51.525 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 00:55:51.534 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 00:55:51.544 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 00:55:51.554 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 00:55:51.564 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 00:55:51.575 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 00:55:51.587 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 00:55:51.599 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 00:55:51.611 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 00:55:51.623 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 00:55:51.634 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 00:55:51.646 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 00:55:51.660 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 00:55:51.670 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 00:55:51.673 +03:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2022-05-12 00:55:51.674 +03:00 [INF] Executed action SaluteStocksAPI.Controllers.ApiController.GetMarketCapDistribution (SaluteStocksAPI) in 365.6528ms
2022-05-12 00:55:51.674 +03:00 [INF] Executed endpoint 'SaluteStocksAPI.Controllers.ApiController.GetMarketCapDistribution (SaluteStocksAPI)'
2022-05-12 00:55:51.675 +03:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/distribution/market-cap/30 - - - 200 - text/plain;+charset=utf-8 374.6235ms
2022-05-12 00:56:17.898 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CompanyOverview with Symbol BIOS
2022-05-12 00:56:17.901 +03:00 [INF] Generating URI for OVERVIEW with params: symbol: BIOS
2022-05-12 00:56:17.902 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=OVERVIEW&symbol=BIOS
2022-05-12 00:56:17.902 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=OVERVIEW&symbol=BIOS".
2022-05-12 00:56:18.121 +03:00 [INF] Response has success status code
2022-05-12 00:56:18.121 +03:00 [INF] Trying to deserialize response.
2022-05-12 00:56:18.122 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.CompanyOverview.
2022-05-12 00:56:18.123 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 00:56:18.135 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__entity_Symbol_0
2022-05-12 00:56:18.137 +03:00 [INF] Entity does not exist. Adding to DB.
2022-05-12 00:56:18.172 +03:00 [INF] Executed DbCommand (29ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (Size = 4000), @p2='?' (DbType = Double), @p3='?' (Size = 4000), @p4='?' (DbType = Double), @p5='?' (DbType = Double), @p6='?' (DbType = Int64), @p7='?' (Size = 4000), @p8='?' (Size = 4000), @p9='?' (Size = 4000), @p10='?' (DbType = Double), @p11='?' (DbType = DateTime2), @p12='?' (DbType = Double), @p13='?' (DbType = Double), @p14='?' (DbType = Int64), @p15='?' (DbType = Double), @p16='?' (DbType = Double), @p17='?' (DbType = Double), @p18='?' (DbType = DateTime2), @p19='?' (Size = 4000), @p20='?' (DbType = Boolean), @p21='?' (Size = 4000), @p22='?' (DbType = Double), @p23='?' (DbType = Int64), @p24='?' (Size = 4000), @p25='?' (DbType = DateTime2), @p26='?' (DbType = DateTime2), @p27='?' (DbType = DateTime2), @p28='?' (DbType = Int64), @p29='?' (Size = 4000), @p30='?' (DbType = Double), @p31='?' (DbType = Double), @p32='?' (DbType = Double), @p33='?' (DbType = Double), @p34='?' (DbType = Double), @p35='?' (DbType = Double), @p36='?' (DbType = Double), @p37='?' (DbType = Double), @p38='?' (DbType = Double), @p39='?' (DbType = Double), @p40='?' (DbType = Double), @p41='?' (DbType = Int64), @p42='?' (Size = 4000), @p43='?' (DbType = Int64), @p44='?' (DbType = Double), @p45='?' (DbType = Double), @p46='?' (DbType = Double), @p47='?' (DbType = Double), @p48='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [CompanyOverviews] ([Symbol], [Address], [AnalystTargetPrice], [AssetType], [Beta], [BookValue], [CIK], [Country], [Currency], [Description], [DilutedEPSTTM], [DividendDate], [DividendPerShare], [DividendYield], [EBITDA], [EPS], [EVToEBITDA], [EVToRevenue], [ExDividendDate], [Exchange], [ExistInApi], [FiscalYearEnd], [ForwardPE], [GrossProfitTTM], [Industry], [LastApiRefresh], [LastLocalRefresh], [LatestQuarter], [MarketCapitalization], [Name], [OperatingMarginTTM], [PEGRatio], [PERatio], [PriceToBookRatio], [PriceToSalesRatioTTM], [ProfitMargin], [QuarterlyEarningsGrowthYOY], [QuarterlyRevenueGrowthYOY], [ReturnOnAssetsTTM], [ReturnOnEquityTTM], [RevenuePerShareTTM], [RevenueTTM], [Sector], [SharesOutstanding], [TrailingPE], [_200DayMovingAverage], [_50DayMovingAverage], [_52WeekHigh], [_52WeekLow])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21, @p22, @p23, @p24, @p25, @p26, @p27, @p28, @p29, @p30, @p31, @p32, @p33, @p34, @p35, @p36, @p37, @p38, @p39, @p40, @p41, @p42, @p43, @p44, @p45, @p46, @p47, @p48);
2022-05-12 00:56:18.180 +03:00 [INF] AddOrUpdate run successful.
2022-05-12 00:56:18.995 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.BalanceSheet with Symbol BCPC
2022-05-12 00:56:18.996 +03:00 [INF] Generating URI for BALANCE_SHEET with params: symbol: BCPC
2022-05-12 00:56:18.997 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BCPC
2022-05-12 00:56:18.997 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BCPC".
2022-05-12 00:56:19.165 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.IncomeStatement with Symbol ATHX
2022-05-12 00:56:19.168 +03:00 [INF] Generating URI for INCOME_STATEMENT with params: symbol: ATHX
2022-05-12 00:56:19.169 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=INCOME_STATEMENT&symbol=ATHX
2022-05-12 00:56:19.169 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=INCOME_STATEMENT&symbol=ATHX".
2022-05-12 00:56:19.476 +03:00 [INF] Response has success status code
2022-05-12 00:56:19.477 +03:00 [INF] Trying to deserialize response.
2022-05-12 00:56:19.478 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 00:56:19.489 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__symbol_0
2022-05-12 00:56:19.491 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.BalanceSheet.
2022-05-12 00:56:19.499 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [b].[Symbol], [b].[ExistInApi], [b].[LastApiRefresh], [b].[LastLocalRefresh]
FROM [BalanceSheets] AS [b]
WHERE [b].[Symbol] = @__entity_Symbol_0
2022-05-12 00:56:19.501 +03:00 [INF] Entity does not exist. Adding to DB.
2022-05-12 00:56:19.516 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = Boolean), @p2='?' (DbType = DateTime2), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [BalanceSheets] ([Symbol], [ExistInApi], [LastApiRefresh], [LastLocalRefresh])
VALUES (@p0, @p1, @p2, @p3);
2022-05-12 00:56:19.524 +03:00 [INF] Response has success status code
2022-05-12 00:56:19.524 +03:00 [INF] Trying to deserialize response.
2022-05-12 00:56:19.526 +03:00 [ERR] Failed to refresh  entity SaluteStocksAPI.Models.FundamentalData.IncomeStatement with Symbol ATHX
Newtonsoft.Json.JsonSerializationException: Error converting value "0.25" to type 'System.Nullable`1[System.Int64]'. Path 'quarterlyReports[0].depreciationAndAmortization', line 164, position 49.
 ---> System.FormatException: Input string was not in a correct format.
   at System.Number.ThrowOverflowOrFormatException(ParsingStatus status, TypeCode type)
   at System.String.System.IConvertible.ToInt64(IFormatProvider provider)
   at System.Convert.ChangeType(Object value, Type conversionType, IFormatProvider provider)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)
   --- End of inner exception stack trace ---
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(IList list, JsonReader reader, JsonArrayContract contract, JsonProperty containerProperty, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, Object existingValue, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)
   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)
   at Newtonsoft.Json.JsonSerializer.Deserialize(JsonReader reader, Type objectType)
   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)
   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value, JsonSerializerSettings settings)
   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value)
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetIncomeStatement(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 69
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 00:56:19.592 +03:00 [INF] Executed DbCommand (73ms) [Parameters=[@p4='?' (DbType = Int64), @p5='?' (DbType = Double), @p6='?' (DbType = Double), @p7='?' (DbType = Double), @p8='?' (DbType = Double), @p9='?' (DbType = Int64), @p10='?' (DbType = Int64), @p11='?' (DbType = Int64), @p12='?' (DbType = Double), @p13='?' (DbType = Int64), @p14='?' (DbType = Int64), @p15='?' (DbType = DateTime2), @p16='?' (DbType = Double), @p17='?' (DbType = Double), @p18='?' (DbType = Double), @p19='?' (DbType = Double), @p20='?' (DbType = Int64), @p21='?' (DbType = Double), @p22='?' (DbType = Int64), @p23='?' (DbType = Double), @p24='?' (DbType = Double), @p25='?' (DbType = Double), @p26='?' (DbType = Double), @p27='?' (DbType = Double), @p28='?' (DbType = Int64), @p29='?' (Size = 4000), @p30='?' (DbType = Double), @p31='?' (DbType = Double), @p32='?' (DbType = Double), @p33='?' (DbType = Double), @p34='?' (Size = 450), @p35='?' (DbType = Double), @p36='?' (DbType = Double), @p37='?' (DbType = Double), @p38='?' (DbType = Double), @p39='?' (DbType = Double), @p40='?' (DbType = Double), @p41='?' (DbType = Double), @p42='?' (DbType = Double), @p43='?' (DbType = Int64), @p44='?' (DbType = Double), @p45='?' (DbType = Double), @p46='?' (DbType = Double), @p47='?' (DbType = Double), @p48='?' (DbType = Int64), @p49='?' (DbType = Int64), @p50='?' (DbType = Int64), @p51='?' (DbType = Double), @p52='?' (DbType = Int64), @p53='?' (DbType = Int64), @p54='?' (DbType = DateTime2), @p55='?' (DbType = Double), @p56='?' (DbType = Double), @p57='?' (DbType = Double), @p58='?' (DbType = Double), @p59='?' (DbType = Int64), @p60='?' (DbType = Double), @p61='?' (DbType = Int64), @p62='?' (DbType = Double), @p63='?' (DbType = Double), @p64='?' (DbType = Double), @p65='?' (DbType = Double), @p66='?' (DbType = Double), @p67='?' (DbType = Int64), @p68='?' (Size = 4000), @p69='?' (DbType = Double), @p70='?' (DbType = Double), @p71='?' (DbType = Double), @p72='?' (DbType = Double), @p73='?' (Size = 450), @p74='?' (DbType = Double), @p75='?' (DbType = Double), @p76='?' (DbType = Double), @p77='?' (DbType = Double), @p78='?' (DbType = Double), @p79='?' (DbType = Double), @p80='?' (DbType = Double), @p81='?' (DbType = Double), @p82='?' (DbType = Int64), @p83='?' (DbType = Double), @p84='?' (DbType = Double), @p85='?' (DbType = Double), @p86='?' (DbType = Double), @p87='?' (DbType = Int64), @p88='?' (DbType = Int64), @p89='?' (DbType = Int64), @p90='?' (DbType = Double), @p91='?' (DbType = Int64), @p92='?' (DbType = Int64), @p93='?' (DbType = DateTime2), @p94='?' (DbType = Double), @p95='?' (DbType = Double), @p96='?' (DbType = Double), @p97='?' (DbType = Double), @p98='?' (DbType = Int64), @p99='?' (DbType = Double), @p100='?' (DbType = Int64), @p101='?' (DbType = Double), @p102='?' (DbType = Double), @p103='?' (DbType = Double), @p104='?' (DbType = Double), @p105='?' (DbType = Double), @p106='?' (DbType = Int64), @p107='?' (Size = 4000), @p108='?' (DbType = Double), @p109='?' (DbType = Double), @p110='?' (DbType = Double), @p111='?' (DbType = Double), @p112='?' (Size = 450), @p113='?' (DbType = Double), @p114='?' (DbType = Double), @p115='?' (DbType = Double), @p116='?' (DbType = Double), @p117='?' (DbType = Double), @p118='?' (DbType = Double), @p119='?' (DbType = Double), @p120='?' (DbType = Double), @p121='?' (DbType = Int64), @p122='?' (DbType = Double), @p123='?' (DbType = Double), @p124='?' (DbType = Double), @p125='?' (DbType = Double), @p126='?' (DbType = Int64), @p127='?' (DbType = Int64), @p128='?' (DbType = Int64), @p129='?' (DbType = Double), @p130='?' (DbType = Int64), @p131='?' (DbType = Int64), @p132='?' (DbType = DateTime2), @p133='?' (DbType = Double), @p134='?' (DbType = Double), @p135='?' (DbType = Double), @p136='?' (DbType = Double), @p137='?' (DbType = Int64), @p138='?' (DbType = Double), @p139='?' (DbType = Int64), @p140='?' (DbType = Double), @p141='?' (DbType = Double), @p142='?' (DbType = Double), @p143='?' (DbType = Double), @p144='?' (DbType = Double), @p145='?' (DbType = Int64), @p146='?' (Size = 4000), @p147='?' (DbType = Double), @p148='?' (DbType = Double), @p149='?' (DbType = Double), @p150='?' (DbType = Double), @p151='?' (Size = 450), @p152='?' (DbType = Double), @p153='?' (DbType = Double), @p154='?' (DbType = Double), @p155='?' (DbType = Double), @p156='?' (DbType = Double), @p157='?' (DbType = Double), @p158='?' (DbType = Double), @p159='?' (DbType = Double), @p160='?' (DbType = Int64), @p161='?' (DbType = Double), @p162='?' (DbType = Double), @p163='?' (DbType = Double), @p164='?' (DbType = Double), @p165='?' (DbType = Int64), @p166='?' (DbType = Int64), @p167='?' (DbType = Int64), @p168='?' (DbType = Double), @p169='?' (DbType = Int64), @p170='?' (DbType = Int64), @p171='?' (DbType = DateTime2), @p172='?' (DbType = Double), @p173='?' (DbType = Double), @p174='?' (DbType = Double), @p175='?' (DbType = Double), @p176='?' (DbType = Int64), @p177='?' (DbType = Double), @p178='?' (DbType = Int64), @p179='?' (DbType = Double), @p180='?' (DbType = Double), @p181='?' (DbType = Double), @p182='?' (DbType = Double), @p183='?' (DbType = Double), @p184='?' (DbType = Int64), @p185='?' (Size = 4000), @p186='?' (DbType = Double), @p187='?' (DbType = Double), @p188='?' (DbType = Double), @p189='?' (DbType = Double), @p190='?' (Size = 450), @p191='?' (DbType = Double), @p192='?' (DbType = Double), @p193='?' (DbType = Double), @p194='?' (DbType = Double), @p195='?' (DbType = Double), @p196='?' (DbType = Double), @p197='?' (DbType = Double), @p198='?' (DbType = Double), @p199='?' (DbType = Int64), @p200='?' (DbType = Double), @p201='?' (DbType = Double), @p202='?' (DbType = Double), @p203='?' (DbType = Double), @p204='?' (DbType = Int64), @p205='?' (DbType = Int64), @p206='?' (DbType = Int64), @p207='?' (DbType = Double), @p208='?' (DbType = Int64), @p209='?' (DbType = Int64), @p210='?' (DbType = DateTime2), @p211='?' (DbType = Double), @p212='?' (DbType = Double), @p213='?' (DbType = Double), @p214='?' (DbType = Double), @p215='?' (DbType = Int64), @p216='?' (DbType = Double), @p217='?' (DbType = Int64), @p218='?' (DbType = Double), @p219='?' (DbType = Double), @p220='?' (DbType = Double), @p221='?' (DbType = Double), @p222='?' (DbType = Double), @p223='?' (DbType = Int64), @p224='?' (Size = 4000), @p225='?' (DbType = Double), @p226='?' (DbType = Double), @p227='?' (DbType = Double), @p228='?' (DbType = Double), @p229='?' (Size = 450), @p230='?' (DbType = Double), @p231='?' (DbType = Double), @p232='?' (DbType = Double), @p233='?' (DbType = Double), @p234='?' (DbType = Double), @p235='?' (DbType = Double), @p236='?' (DbType = Double), @p237='?' (DbType = Double), @p238='?' (DbType = Int64), @p239='?' (DbType = Double), @p240='?' (DbType = Double), @p241='?' (DbType = Double), @p242='?' (DbType = Double), @p243='?' (DbType = Int64), @p244='?' (DbType = Int64), @p245='?' (DbType = Int64), @p246='?' (DbType = Double), @p247='?' (DbType = Int64), @p248='?' (DbType = Int64), @p249='?' (DbType = DateTime2), @p250='?' (DbType = Double), @p251='?' (DbType = Double), @p252='?' (DbType = Double), @p253='?' (DbType = Double), @p254='?' (DbType = Int64), @p255='?' (DbType = Double), @p256='?' (DbType = Int64), @p257='?' (DbType = Double), @p258='?' (DbType = Double), @p259='?' (DbType = Double), @p260='?' (DbType = Double), @p261='?' (DbType = Double), @p262='?' (DbType = Int64), @p263='?' (Size = 4000), @p264='?' (DbType = Double), @p265='?' (DbType = Double), @p266='?' (DbType = Double), @p267='?' (DbType = Double), @p268='?' (Size = 450), @p269='?' (DbType = Double), @p270='?' (DbType = Double), @p271='?' (DbType = Double), @p272='?' (DbType = Double), @p273='?' (DbType = Double), @p274='?' (DbType = Double), @p275='?' (DbType = Double), @p276='?' (DbType = Double), @p277='?' (DbType = Int64), @p278='?' (DbType = Double), @p279='?' (DbType = Double), @p280='?' (DbType = Double), @p281='?' (DbType = Double), @p282='?' (DbType = Int64), @p283='?' (DbType = Int64), @p284='?' (DbType = Int64), @p285='?' (DbType = Double), @p286='?' (DbType = Int64), @p287='?' (DbType = Int64), @p288='?' (DbType = DateTime2), @p289='?' (DbType = Double), @p290='?' (DbType = Double), @p291='?' (DbType = Double), @p292='?' (DbType = Double), @p293='?' (DbType = Int64), @p294='?' (DbType = Double), @p295='?' (DbType = Int64), @p296='?' (DbType = Double), @p297='?' (DbType = Double), @p298='?' (DbType = Double), @p299='?' (DbType = Double), @p300='?' (DbType = Double), @p301='?' (DbType = Int64), @p302='?' (Size = 4000), @p303='?' (DbType = Double), @p304='?' (DbType = Double), @p305='?' (DbType = Double), @p306='?' (DbType = Double), @p307='?' (Size = 450), @p308='?' (DbType = Double), @p309='?' (DbType = Double), @p310='?' (DbType = Double), @p311='?' (DbType = Double), @p312='?' (DbType = Double), @p313='?' (DbType = Double), @p314='?' (DbType = Double), @p315='?' (DbType = Double), @p316='?' (DbType = Int64), @p317='?' (DbType = Double), @p318='?' (DbType = Double), @p319='?' (DbType = Double), @p320='?' (DbType = Double), @p321='?' (DbType = Int64), @p322='?' (DbType = Int64), @p323='?' (DbType = Int64), @p324='?' (DbType = Double), @p325='?' (DbType = Int64), @p326='?' (DbType = Int64), @p327='?' (DbType = DateTime2), @p328='?' (DbType = Double), @p329='?' (DbType = Double), @p330='?' (DbType = Double), @p331='?' (DbType = Double), @p332='?' (DbType = Int64), @p333='?' (DbType = Double), @p334='?' (DbType = Int64), @p335='?' (DbType = Double), @p336='?' (DbType = Double), @p337='?' (DbType = Double), @p338='?' (DbType = Double), @p339='?' (DbType = Double), @p340='?' (DbType = Int64), @p341='?' (Size = 4000), @p342='?' (DbType = Double), @p343='?' (DbType = Double), @p344='?' (DbType = Double), @p345='?' (DbType = Double), @p346='?' (Size = 450), @p347='?' (DbType = Double), @p348='?' (DbType = Double), @p349='?' (DbType = Double), @p350='?' (DbType = Double), @p351='?' (DbType = Double), @p352='?' (DbType = Double), @p353='?' (DbType = Double), @p354='?' (DbType = Double), @p355='?' (DbType = Int64), @p356='?' (DbType = Double), @p357='?' (DbType = Double), @p358='?' (DbType = Double), @p359='?' (DbType = Double), @p360='?' (DbType = Int64), @p361='?' (DbType = Int64), @p362='?' (DbType = Int64), @p363='?' (DbType = Double), @p364='?' (DbType = Int64), @p365='?' (DbType = Int64), @p366='?' (DbType = DateTime2), @p367='?' (DbType = Double), @p368='?' (DbType = Double), @p369='?' (DbType = Double), @p370='?' (DbType = Double), @p371='?' (DbType = Int64), @p372='?' (DbType = Double), @p373='?' (DbType = Int64), @p374='?' (DbType = Double), @p375='?' (DbType = Double), @p376='?' (DbType = Double), @p377='?' (DbType = Double), @p378='?' (DbType = Double), @p379='?' (DbType = Int64), @p380='?' (Size = 4000), @p381='?' (DbType = Double), @p382='?' (DbType = Double), @p383='?' (DbType = Double), @p384='?' (DbType = Double), @p385='?' (Size = 450), @p386='?' (DbType = Double), @p387='?' (DbType = Double), @p388='?' (DbType = Double), @p389='?' (DbType = Double), @p390='?' (DbType = Double), @p391='?' (DbType = Double), @p392='?' (DbType = Double), @p393='?' (DbType = Double), @p394='?' (DbType = Int64), @p395='?' (DbType = Double), @p396='?' (DbType = Double), @p397='?' (DbType = Double), @p398='?' (DbType = Double), @p399='?' (DbType = Int64), @p400='?' (DbType = Int64), @p401='?' (DbType = Int64), @p402='?' (DbType = Double), @p403='?' (DbType = Int64), @p404='?' (DbType = Int64), @p405='?' (DbType = DateTime2), @p406='?' (DbType = Double), @p407='?' (DbType = Double), @p408='?' (DbType = Double), @p409='?' (DbType = Double), @p410='?' (DbType = Int64), @p411='?' (DbType = Double), @p412='?' (DbType = Int64), @p413='?' (DbType = Double), @p414='?' (DbType = Double), @p415='?' (DbType = Double), @p416='?' (DbType = Double), @p417='?' (DbType = Double), @p418='?' (DbType = Int64), @p419='?' (Size = 4000), @p420='?' (DbType = Double), @p421='?' (DbType = Double), @p422='?' (DbType = Double), @p423='?' (DbType = Double), @p424='?' (Size = 450), @p425='?' (DbType = Double), @p426='?' (DbType = Double), @p427='?' (DbType = Double), @p428='?' (DbType = Double), @p429='?' (DbType = Double), @p430='?' (DbType = Double), @p431='?' (DbType = Double), @p432='?' (DbType = Double), @p433='?' (DbType = Int64), @p434='?' (DbType = Double), @p435='?' (DbType = Double), @p436='?' (DbType = Double), @p437='?' (DbType = Double), @p438='?' (DbType = Int64), @p439='?' (DbType = Int64), @p440='?' (DbType = Int64), @p441='?' (DbType = Double), @p442='?' (DbType = Int64), @p443='?' (DbType = Int64), @p444='?' (DbType = DateTime2), @p445='?' (DbType = Double), @p446='?' (DbType = Double), @p447='?' (DbType = Double), @p448='?' (DbType = Double), @p449='?' (DbType = Int64), @p450='?' (DbType = Double), @p451='?' (DbType = Int64), @p452='?' (DbType = Double), @p453='?' (DbType = Double), @p454='?' (DbType = Double), @p455='?' (DbType = Double), @p456='?' (DbType = Double), @p457='?' (DbType = Int64), @p458='?' (Size = 4000), @p459='?' (DbType = Double), @p460='?' (DbType = Double), @p461='?' (DbType = Double), @p462='?' (DbType = Double), @p463='?' (Size = 450), @p464='?' (DbType = Double), @p465='?' (DbType = Double), @p466='?' (DbType = Double), @p467='?' (DbType = Double), @p468='?' (DbType = Double), @p469='?' (DbType = Double), @p470='?' (DbType = Double), @p471='?' (DbType = Double), @p472='?' (DbType = Int64), @p473='?' (DbType = Double), @p474='?' (DbType = Double), @p475='?' (DbType = Double), @p476='?' (DbType = Double), @p477='?' (DbType = Int64), @p478='?' (DbType = Int64), @p479='?' (DbType = Int64), @p480='?' (DbType = Double), @p481='?' (DbType = Int64), @p482='?' (DbType = Int64), @p483='?' (DbType = DateTime2), @p484='?' (DbType = Double), @p485='?' (DbType = Double), @p486='?' (DbType = Double), @p487='?' (DbType = Double), @p488='?' (DbType = Int64), @p489='?' (DbType = Double), @p490='?' (DbType = Int64), @p491='?' (DbType = Double), @p492='?' (DbType = Double), @p493='?' (DbType = Double), @p494='?' (DbType = Double), @p495='?' (DbType = Double), @p496='?' (DbType = Int64), @p497='?' (Size = 4000), @p498='?' (DbType = Double), @p499='?' (DbType = Double), @p500='?' (DbType = Double), @p501='?' (DbType = Double), @p502='?' (Size = 450), @p503='?' (DbType = Double), @p504='?' (DbType = Double), @p505='?' (DbType = Double), @p506='?' (DbType = Double), @p507='?' (DbType = Double), @p508='?' (DbType = Double), @p509='?' (DbType = Double), @p510='?' (DbType = Double), @p511='?' (DbType = Int64), @p512='?' (DbType = Double), @p513='?' (DbType = Double), @p514='?' (DbType = Double), @p515='?' (DbType = Double), @p516='?' (DbType = Int64), @p517='?' (DbType = Int64), @p518='?' (DbType = Int64), @p519='?' (DbType = Double), @p520='?' (DbType = Int64), @p521='?' (DbType = Int64), @p522='?' (DbType = DateTime2), @p523='?' (DbType = Double), @p524='?' (DbType = Double), @p525='?' (DbType = Double), @p526='?' (DbType = Double), @p527='?' (DbType = Int64), @p528='?' (DbType = Double), @p529='?' (DbType = Int64), @p530='?' (DbType = Double), @p531='?' (DbType = Double), @p532='?' (DbType = Double), @p533='?' (DbType = Double), @p534='?' (DbType = Double), @p535='?' (DbType = Int64), @p536='?' (Size = 4000), @p537='?' (DbType = Double), @p538='?' (DbType = Double), @p539='?' (DbType = Double), @p540='?' (DbType = Double), @p541='?' (Size = 450), @p542='?' (DbType = Double), @p543='?' (DbType = Double), @p544='?' (DbType = Double), @p545='?' (DbType = Double), @p546='?' (DbType = Double), @p547='?' (DbType = Double), @p548='?' (DbType = Double), @p549='?' (DbType = Double), @p550='?' (DbType = Int64), @p551='?' (DbType = Double), @p552='?' (DbType = Double), @p553='?' (DbType = Double), @p554='?' (DbType = Double), @p555='?' (DbType = Int64), @p556='?' (DbType = Int64), @p557='?' (DbType = Int64), @p558='?' (DbType = Double), @p559='?' (DbType = Int64), @p560='?' (DbType = Int64), @p561='?' (DbType = DateTime2), @p562='?' (DbType = Double), @p563='?' (DbType = Double), @p564='?' (DbType = Double), @p565='?' (DbType = Double), @p566='?' (DbType = Int64), @p567='?' (DbType = Double), @p568='?' (DbType = Int64), @p569='?' (DbType = Double), @p570='?' (DbType = Double), @p571='?' (DbType = Double), @p572='?' (DbType = Double), @p573='?' (DbType = Double), @p574='?' (DbType = Int64), @p575='?' (Size = 4000), @p576='?' (DbType = Double), @p577='?' (DbType = Double), @p578='?' (DbType = Double), @p579='?' (DbType = Double), @p580='?' (Size = 450), @p581='?' (DbType = Double), @p582='?' (DbType = Double), @p583='?' (DbType = Double), @p584='?' (DbType = Double), @p585='?' (DbType = Double), @p586='?' (DbType = Double), @p587='?' (DbType = Double), @p588='?' (DbType = Double), @p589='?' (DbType = Int64), @p590='?' (DbType = Double), @p591='?' (DbType = Double), @p592='?' (DbType = Double), @p593='?' (DbType = Double), @p594='?' (DbType = Int64), @p595='?' (DbType = Int64), @p596='?' (DbType = Int64), @p597='?' (DbType = Double), @p598='?' (DbType = Int64), @p599='?' (DbType = Int64), @p600='?' (DbType = DateTime2), @p601='?' (DbType = Double), @p602='?' (DbType = Double), @p603='?' (DbType = Double), @p604='?' (DbType = Double), @p605='?' (DbType = Int64), @p606='?' (DbType = Double), @p607='?' (DbType = Int64), @p608='?' (DbType = Double), @p609='?' (DbType = Double), @p610='?' (DbType = Double), @p611='?' (DbType = Double), @p612='?' (DbType = Double), @p613='?' (DbType = Int64), @p614='?' (Size = 4000), @p615='?' (DbType = Double), @p616='?' (DbType = Double), @p617='?' (DbType = Double), @p618='?' (DbType = Double), @p619='?' (Size = 450), @p620='?' (DbType = Double), @p621='?' (DbType = Double), @p622='?' (DbType = Double), @p623='?' (DbType = Double), @p624='?' (DbType = Double), @p625='?' (DbType = Double), @p626='?' (DbType = Double), @p627='?' (DbType = Double), @p628='?' (DbType = Int64), @p629='?' (DbType = Double), @p630='?' (DbType = Double), @p631='?' (DbType = Double), @p632='?' (DbType = Double), @p633='?' (DbType = Int64), @p634='?' (DbType = Int64), @p635='?' (DbType = Int64), @p636='?' (DbType = Double), @p637='?' (DbType = Int64), @p638='?' (DbType = Int64), @p639='?' (DbType = DateTime2), @p640='?' (DbType = Double), @p641='?' (DbType = Double), @p642='?' (DbType = Double), @p643='?' (DbType = Double), @p644='?' (DbType = Int64), @p645='?' (DbType = Double), @p646='?' (DbType = Int64), @p647='?' (DbType = Double), @p648='?' (DbType = Double), @p649='?' (DbType = Double), @p650='?' (DbType = Double), @p651='?' (DbType = Double), @p652='?' (DbType = Int64), @p653='?' (Size = 4000), @p654='?' (DbType = Double), @p655='?' (DbType = Double), @p656='?' (DbType = Double), @p657='?' (DbType = Double), @p658='?' (Size = 450), @p659='?' (DbType = Double), @p660='?' (DbType = Double), @p661='?' (DbType = Double), @p662='?' (DbType = Double), @p663='?' (DbType = Double), @p664='?' (DbType = Double), @p665='?' (DbType = Double), @p666='?' (DbType = Double), @p667='?' (DbType = Int64), @p668='?' (DbType = Double), @p669='?' (DbType = Double), @p670='?' (DbType = Double), @p671='?' (DbType = Double), @p672='?' (DbType = Int64), @p673='?' (DbType = Int64), @p674='?' (DbType = Int64), @p675='?' (DbType = Double), @p676='?' (DbType = Int64), @p677='?' (DbType = Int64), @p678='?' (DbType = DateTime2), @p679='?' (DbType = Double), @p680='?' (DbType = Double), @p681='?' (DbType = Double), @p682='?' (DbType = Double), @p683='?' (DbType = Int64), @p684='?' (DbType = Double), @p685='?' (DbType = Int64), @p686='?' (DbType = Double), @p687='?' (DbType = Double), @p688='?' (DbType = Double), @p689='?' (DbType = Double), @p690='?' (DbType = Double), @p691='?' (DbType = Int64), @p692='?' (Size = 4000), @p693='?' (DbType = Double), @p694='?' (DbType = Double), @p695='?' (DbType = Double), @p696='?' (DbType = Double), @p697='?' (Size = 450), @p698='?' (DbType = Double), @p699='?' (DbType = Double), @p700='?' (DbType = Double), @p701='?' (DbType = Double), @p702='?' (DbType = Double), @p703='?' (DbType = Double), @p704='?' (DbType = Double), @p705='?' (DbType = Double), @p706='?' (DbType = Int64), @p707='?' (DbType = Double), @p708='?' (DbType = Double), @p709='?' (DbType = Double), @p710='?' (DbType = Double), @p711='?' (DbType = Int64), @p712='?' (DbType = Int64), @p713='?' (DbType = Int64), @p714='?' (DbType = Double), @p715='?' (DbType = Int64), @p716='?' (DbType = Int64), @p717='?' (DbType = DateTime2), @p718='?' (DbType = Double), @p719='?' (DbType = Double), @p720='?' (DbType = Double), @p721='?' (DbType = Double), @p722='?' (DbType = Int64), @p723='?' (DbType = Double), @p724='?' (DbType = Int64), @p725='?' (DbType = Double), @p726='?' (DbType = Double), @p727='?' (DbType = Double), @p728='?' (DbType = Double), @p729='?' (DbType = Double), @p730='?' (DbType = Int64), @p731='?' (Size = 4000), @p732='?' (DbType = Double), @p733='?' (DbType = Double), @p734='?' (DbType = Double), @p735='?' (DbType = Double), @p736='?' (Size = 450), @p737='?' (DbType = Double), @p738='?' (DbType = Double), @p739='?' (DbType = Double), @p740='?' (DbType = Double), @p741='?' (DbType = Double), @p742='?' (DbType = Double), @p743='?' (DbType = Double), @p744='?' (DbType = Double), @p745='?' (DbType = Int64), @p746='?' (DbType = Double), @p747='?' (DbType = Double), @p748='?' (DbType = Double), @p749='?' (DbType = Double), @p750='?' (DbType = Int64), @p751='?' (DbType = Int64), @p752='?' (DbType = Int64), @p753='?' (DbType = Double), @p754='?' (DbType = Int64), @p755='?' (DbType = Int64), @p756='?' (DbType = DateTime2), @p757='?' (DbType = Double), @p758='?' (DbType = Double), @p759='?' (DbType = Double), @p760='?' (DbType = Double), @p761='?' (DbType = Int64), @p762='?' (DbType = Double), @p763='?' (DbType = Int64), @p764='?' (DbType = Double), @p765='?' (DbType = Double), @p766='?' (DbType = Double), @p767='?' (DbType = Double), @p768='?' (DbType = Double), @p769='?' (DbType = Int64), @p770='?' (Size = 4000), @p771='?' (DbType = Double), @p772='?' (DbType = Double), @p773='?' (DbType = Double), @p774='?' (DbType = Double), @p775='?' (Size = 450), @p776='?' (DbType = Double), @p777='?' (DbType = Double), @p778='?' (DbType = Double), @p779='?' (DbType = Double), @p780='?' (DbType = Double), @p781='?' (DbType = Double), @p782='?' (DbType = Double), @p783='?' (DbType = Double), @p784='?' (DbType = Int64), @p785='?' (DbType = Double), @p786='?' (DbType = Double), @p787='?' (DbType = Double), @p788='?' (DbType = Double), @p789='?' (DbType = Int64), @p790='?' (DbType = Int64), @p791='?' (DbType = Int64), @p792='?' (DbType = Double), @p793='?' (DbType = Int64), @p794='?' (DbType = Int64), @p795='?' (DbType = DateTime2), @p796='?' (DbType = Double), @p797='?' (DbType = Double), @p798='?' (DbType = Double), @p799='?' (DbType = Double), @p800='?' (DbType = Int64), @p801='?' (DbType = Double), @p802='?' (DbType = Int64), @p803='?' (DbType = Double), @p804='?' (DbType = Double), @p805='?' (DbType = Double), @p806='?' (DbType = Double), @p807='?' (DbType = Double), @p808='?' (DbType = Int64), @p809='?' (Size = 4000), @p810='?' (DbType = Double), @p811='?' (DbType = Double), @p812='?' (DbType = Double), @p813='?' (DbType = Double), @p814='?' (Size = 450), @p815='?' (DbType = Double), @p816='?' (DbType = Double), @p817='?' (DbType = Double), @p818='?' (DbType = Double), @p819='?' (DbType = Double), @p820='?' (DbType = Double), @p821='?' (DbType = Double), @p822='?' (DbType = Double), @p823='?' (DbType = Int64), @p824='?' (DbType = Double), @p825='?' (DbType = Double), @p826='?' (DbType = Double), @p827='?' (DbType = Double), @p828='?' (DbType = Int64), @p829='?' (DbType = Int64), @p830='?' (DbType = Int64), @p831='?' (DbType = Double), @p832='?' (DbType = Int64), @p833='?' (DbType = Int64), @p834='?' (DbType = DateTime2), @p835='?' (DbType = Double), @p836='?' (DbType = Double), @p837='?' (DbType = Double), @p838='?' (DbType = Double), @p839='?' (DbType = Int64), @p840='?' (DbType = Double), @p841='?' (DbType = Int64), @p842='?' (DbType = Double), @p843='?' (DbType = Double), @p844='?' (DbType = Double), @p845='?' (DbType = Double), @p846='?' (DbType = Double), @p847='?' (DbType = Int64), @p848='?' (Size = 4000), @p849='?' (DbType = Double), @p850='?' (DbType = Double), @p851='?' (DbType = Double), @p852='?' (DbType = Double), @p853='?' (Size = 450), @p854='?' (DbType = Double), @p855='?' (DbType = Double), @p856='?' (DbType = Double), @p857='?' (DbType = Double), @p858='?' (DbType = Double), @p859='?' (DbType = Double), @p860='?' (DbType = Double), @p861='?' (DbType = Double), @p862='?' (DbType = Int64), @p863='?' (DbType = Double), @p864='?' (DbType = Double), @p865='?' (DbType = Double), @p866='?' (DbType = Double), @p867='?' (DbType = Int64), @p868='?' (DbType = Int64), @p869='?' (DbType = Int64), @p870='?' (DbType = Double), @p871='?' (DbType = Int64), @p872='?' (DbType = Int64), @p873='?' (DbType = DateTime2), @p874='?' (DbType = Double), @p875='?' (DbType = Double), @p876='?' (DbType = Double), @p877='?' (DbType = Double), @p878='?' (DbType = Int64), @p879='?' (DbType = Double), @p880='?' (DbType = Int64), @p881='?' (DbType = Double), @p882='?' (DbType = Double), @p883='?' (DbType = Double), @p884='?' (DbType = Double), @p885='?' (DbType = Double), @p886='?' (DbType = Int64), @p887='?' (Size = 4000), @p888='?' (DbType = Double), @p889='?' (DbType = Double), @p890='?' (DbType = Double), @p891='?' (DbType = Double), @p892='?' (Size = 450), @p893='?' (DbType = Double), @p894='?' (DbType = Double), @p895='?' (DbType = Double), @p896='?' (DbType = Double), @p897='?' (DbType = Double), @p898='?' (DbType = Double), @p899='?' (DbType = Double), @p900='?' (DbType = Double), @p901='?' (DbType = Int64), @p902='?' (DbType = Double), @p903='?' (DbType = Double), @p904='?' (DbType = Double), @p905='?' (DbType = Double), @p906='?' (DbType = Int64), @p907='?' (DbType = Int64), @p908='?' (DbType = Int64), @p909='?' (DbType = Double), @p910='?' (DbType = Int64), @p911='?' (DbType = Int64), @p912='?' (DbType = DateTime2), @p913='?' (DbType = Double), @p914='?' (DbType = Double), @p915='?' (DbType = Double), @p916='?' (DbType = Double), @p917='?' (DbType = Int64), @p918='?' (DbType = Double), @p919='?' (DbType = Int64), @p920='?' (DbType = Double), @p921='?' (DbType = Double), @p922='?' (DbType = Double), @p923='?' (DbType = Double), @p924='?' (DbType = Double), @p925='?' (DbType = Int64), @p926='?' (Size = 4000), @p927='?' (DbType = Double), @p928='?' (DbType = Double), @p929='?' (DbType = Double), @p930='?' (DbType = Double), @p931='?' (Size = 450), @p932='?' (DbType = Double), @p933='?' (DbType = Double), @p934='?' (DbType = Double), @p935='?' (DbType = Double), @p936='?' (DbType = Double), @p937='?' (DbType = Double), @p938='?' (DbType = Double), @p939='?' (DbType = Double), @p940='?' (DbType = Int64), @p941='?' (DbType = Double), @p942='?' (DbType = Double), @p943='?' (DbType = Double), @p944='?' (DbType = Double), @p945='?' (DbType = Int64), @p946='?' (DbType = Int64), @p947='?' (DbType = Int64), @p948='?' (DbType = Double), @p949='?' (DbType = Int64), @p950='?' (DbType = Int64), @p951='?' (DbType = DateTime2), @p952='?' (DbType = Double), @p953='?' (DbType = Double), @p954='?' (DbType = Double), @p955='?' (DbType = Double), @p956='?' (DbType = Int64), @p957='?' (DbType = Double), @p958='?' (DbType = Int64), @p959='?' (DbType = Double), @p960='?' (DbType = Double), @p961='?' (DbType = Double), @p962='?' (DbType = Double), @p963='?' (DbType = Double), @p964='?' (DbType = Int64), @p965='?' (Size = 4000), @p966='?' (DbType = Double), @p967='?' (DbType = Double), @p968='?' (DbType = Double), @p969='?' (DbType = Double), @p970='?' (Size = 450), @p971='?' (DbType = Double), @p972='?' (DbType = Double), @p973='?' (DbType = Double), @p974='?' (DbType = Double), @p975='?' (DbType = Double), @p976='?' (DbType = Double), @p977='?' (DbType = Double), @p978='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
DECLARE @inserted0 TABLE ([Id] int, [_Position] [int]);
MERGE [BalanceSheetAnnualReport] USING (
VALUES (@p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21, @p22, @p23, @p24, @p25, @p26, @p27, @p28, @p29, @p30, @p31, @p32, @p33, @p34, @p35, @p36, @p37, @p38, @p39, @p40, @p41, @p42, 0),
(@p43, @p44, @p45, @p46, @p47, @p48, @p49, @p50, @p51, @p52, @p53, @p54, @p55, @p56, @p57, @p58, @p59, @p60, @p61, @p62, @p63, @p64, @p65, @p66, @p67, @p68, @p69, @p70, @p71, @p72, @p73, @p74, @p75, @p76, @p77, @p78, @p79, @p80, @p81, 1),
(@p82, @p83, @p84, @p85, @p86, @p87, @p88, @p89, @p90, @p91, @p92, @p93, @p94, @p95, @p96, @p97, @p98, @p99, @p100, @p101, @p102, @p103, @p104, @p105, @p106, @p107, @p108, @p109, @p110, @p111, @p112, @p113, @p114, @p115, @p116, @p117, @p118, @p119, @p120, 2),
(@p121, @p122, @p123, @p124, @p125, @p126, @p127, @p128, @p129, @p130, @p131, @p132, @p133, @p134, @p135, @p136, @p137, @p138, @p139, @p140, @p141, @p142, @p143, @p144, @p145, @p146, @p147, @p148, @p149, @p150, @p151, @p152, @p153, @p154, @p155, @p156, @p157, @p158, @p159, 3),
(@p160, @p161, @p162, @p163, @p164, @p165, @p166, @p167, @p168, @p169, @p170, @p171, @p172, @p173, @p174, @p175, @p176, @p177, @p178, @p179, @p180, @p181, @p182, @p183, @p184, @p185, @p186, @p187, @p188, @p189, @p190, @p191, @p192, @p193, @p194, @p195, @p196, @p197, @p198, 4)) AS i ([AccumulatedDepreciationAmortizationPPE], [CapitalLeaseObligations], [CashAndCashEquivalentsAtCarryingValue], [CashAndShortTermInvestments], [CommonStock], [CommonStockSharesOutstanding], [CurrentAccountsPayable], [CurrentDebt], [CurrentLongTermDebt], [CurrentNetReceivables], [DeferredRevenue], [FiscalDateEnding], [Goodwill], [IntangibleAssets], [IntangibleAssetsExcludingGoodwill], [Inventory], [Investments], [LongTermDebt], [LongTermDebtNoncurrent], [LongTermInvestments], [OtherCurrentAssets], [OtherCurrentLiabilities], [OtherNonCurrentAssets], [OtherNonCurrentLiabilities], [PropertyPlantEquipment], [ReportedCurrency], [RetainedEarnings], [ShortLongTermDebtTotal], [ShortTermDebt], [ShortTermInvestments], [Symbol], [TotalAssets], [TotalCurrentAssets], [TotalCurrentLiabilities], [TotalLiabilities], [TotalNonCurrentAssets], [TotalNonCurrentLiabilities], [TotalShareholderEquity], [TreasuryStock], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([AccumulatedDepreciationAmortizationPPE], [CapitalLeaseObligations], [CashAndCashEquivalentsAtCarryingValue], [CashAndShortTermInvestments], [CommonStock], [CommonStockSharesOutstanding], [CurrentAccountsPayable], [CurrentDebt], [CurrentLongTermDebt], [CurrentNetReceivables], [DeferredRevenue], [FiscalDateEnding], [Goodwill], [IntangibleAssets], [IntangibleAssetsExcludingGoodwill], [Inventory], [Investments], [LongTermDebt], [LongTermDebtNoncurrent], [LongTermInvestments], [OtherCurrentAssets], [OtherCurrentLiabilities], [OtherNonCurrentAssets], [OtherNonCurrentLiabilities], [PropertyPlantEquipment], [ReportedCurrency], [RetainedEarnings], [ShortLongTermDebtTotal], [ShortTermDebt], [ShortTermInvestments], [Symbol], [TotalAssets], [TotalCurrentAssets], [TotalCurrentLiabilities], [TotalLiabilities], [TotalNonCurrentAssets], [TotalNonCurrentLiabilities], [TotalShareholderEquity], [TreasuryStock])
VALUES (i.[AccumulatedDepreciationAmortizationPPE], i.[CapitalLeaseObligations], i.[CashAndCashEquivalentsAtCarryingValue], i.[CashAndShortTermInvestments], i.[CommonStock], i.[CommonStockSharesOutstanding], i.[CurrentAccountsPayable], i.[CurrentDebt], i.[CurrentLongTermDebt], i.[CurrentNetReceivables], i.[DeferredRevenue], i.[FiscalDateEnding], i.[Goodwill], i.[IntangibleAssets], i.[IntangibleAssetsExcludingGoodwill], i.[Inventory], i.[Investments], i.[LongTermDebt], i.[LongTermDebtNoncurrent], i.[LongTermInvestments], i.[OtherCurrentAssets], i.[OtherCurrentLiabilities], i.[OtherNonCurrentAssets], i.[OtherNonCurrentLiabilities], i.[PropertyPlantEquipment], i.[ReportedCurrency], i.[RetainedEarnings], i.[ShortLongTermDebtTotal], i.[ShortTermDebt], i.[ShortTermInvestments], i.[Symbol], i.[TotalAssets], i.[TotalCurrentAssets], i.[TotalCurrentLiabilities], i.[TotalLiabilities], i.[TotalNonCurrentAssets], i.[TotalNonCurrentLiabilities], i.[TotalShareholderEquity], i.[TreasuryStock])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted0;

SELECT [i].[Id] FROM @inserted0 i
ORDER BY [i].[_Position];

DECLARE @inserted5 TABLE ([Id] int, [_Position] [int]);
MERGE [BalanceSheetQuarterlyReports] USING (
VALUES (@p199, @p200, @p201, @p202, @p203, @p204, @p205, @p206, @p207, @p208, @p209, @p210, @p211, @p212, @p213, @p214, @p215, @p216, @p217, @p218, @p219, @p220, @p221, @p222, @p223, @p224, @p225, @p226, @p227, @p228, @p229, @p230, @p231, @p232, @p233, @p234, @p235, @p236, @p237, 0),
(@p238, @p239, @p240, @p241, @p242, @p243, @p244, @p245, @p246, @p247, @p248, @p249, @p250, @p251, @p252, @p253, @p254, @p255, @p256, @p257, @p258, @p259, @p260, @p261, @p262, @p263, @p264, @p265, @p266, @p267, @p268, @p269, @p270, @p271, @p272, @p273, @p274, @p275, @p276, 1),
(@p277, @p278, @p279, @p280, @p281, @p282, @p283, @p284, @p285, @p286, @p287, @p288, @p289, @p290, @p291, @p292, @p293, @p294, @p295, @p296, @p297, @p298, @p299, @p300, @p301, @p302, @p303, @p304, @p305, @p306, @p307, @p308, @p309, @p310, @p311, @p312, @p313, @p314, @p315, 2),
(@p316, @p317, @p318, @p319, @p320, @p321, @p322, @p323, @p324, @p325, @p326, @p327, @p328, @p329, @p330, @p331, @p332, @p333, @p334, @p335, @p336, @p337, @p338, @p339, @p340, @p341, @p342, @p343, @p344, @p345, @p346, @p347, @p348, @p349, @p350, @p351, @p352, @p353, @p354, 3),
(@p355, @p356, @p357, @p358, @p359, @p360, @p361, @p362, @p363, @p364, @p365, @p366, @p367, @p368, @p369, @p370, @p371, @p372, @p373, @p374, @p375, @p376, @p377, @p378, @p379, @p380, @p381, @p382, @p383, @p384, @p385, @p386, @p387, @p388, @p389, @p390, @p391, @p392, @p393, 4),
(@p394, @p395, @p396, @p397, @p398, @p399, @p400, @p401, @p402, @p403, @p404, @p405, @p406, @p407, @p408, @p409, @p410, @p411, @p412, @p413, @p414, @p415, @p416, @p417, @p418, @p419, @p420, @p421, @p422, @p423, @p424, @p425, @p426, @p427, @p428, @p429, @p430, @p431, @p432, 5),
(@p433, @p434, @p435, @p436, @p437, @p438, @p439, @p440, @p441, @p442, @p443, @p444, @p445, @p446, @p447, @p448, @p449, @p450, @p451, @p452, @p453, @p454, @p455, @p456, @p457, @p458, @p459, @p460, @p461, @p462, @p463, @p464, @p465, @p466, @p467, @p468, @p469, @p470, @p471, 6),
(@p472, @p473, @p474, @p475, @p476, @p477, @p478, @p479, @p480, @p481, @p482, @p483, @p484, @p485, @p486, @p487, @p488, @p489, @p490, @p491, @p492, @p493, @p494, @p495, @p496, @p497, @p498, @p499, @p500, @p501, @p502, @p503, @p504, @p505, @p506, @p507, @p508, @p509, @p510, 7),
(@p511, @p512, @p513, @p514, @p515, @p516, @p517, @p518, @p519, @p520, @p521, @p522, @p523, @p524, @p525, @p526, @p527, @p528, @p529, @p530, @p531, @p532, @p533, @p534, @p535, @p536, @p537, @p538, @p539, @p540, @p541, @p542, @p543, @p544, @p545, @p546, @p547, @p548, @p549, 8),
(@p550, @p551, @p552, @p553, @p554, @p555, @p556, @p557, @p558, @p559, @p560, @p561, @p562, @p563, @p564, @p565, @p566, @p567, @p568, @p569, @p570, @p571, @p572, @p573, @p574, @p575, @p576, @p577, @p578, @p579, @p580, @p581, @p582, @p583, @p584, @p585, @p586, @p587, @p588, 9),
(@p589, @p590, @p591, @p592, @p593, @p594, @p595, @p596, @p597, @p598, @p599, @p600, @p601, @p602, @p603, @p604, @p605, @p606, @p607, @p608, @p609, @p610, @p611, @p612, @p613, @p614, @p615, @p616, @p617, @p618, @p619, @p620, @p621, @p622, @p623, @p624, @p625, @p626, @p627, 10),
(@p628, @p629, @p630, @p631, @p632, @p633, @p634, @p635, @p636, @p637, @p638, @p639, @p640, @p641, @p642, @p643, @p644, @p645, @p646, @p647, @p648, @p649, @p650, @p651, @p652, @p653, @p654, @p655, @p656, @p657, @p658, @p659, @p660, @p661, @p662, @p663, @p664, @p665, @p666, 11),
(@p667, @p668, @p669, @p670, @p671, @p672, @p673, @p674, @p675, @p676, @p677, @p678, @p679, @p680, @p681, @p682, @p683, @p684, @p685, @p686, @p687, @p688, @p689, @p690, @p691, @p692, @p693, @p694, @p695, @p696, @p697, @p698, @p699, @p700, @p701, @p702, @p703, @p704, @p705, 12),
(@p706, @p707, @p708, @p709, @p710, @p711, @p712, @p713, @p714, @p715, @p716, @p717, @p718, @p719, @p720, @p721, @p722, @p723, @p724, @p725, @p726, @p727, @p728, @p729, @p730, @p731, @p732, @p733, @p734, @p735, @p736, @p737, @p738, @p739, @p740, @p741, @p742, @p743, @p744, 13),
(@p745, @p746, @p747, @p748, @p749, @p750, @p751, @p752, @p753, @p754, @p755, @p756, @p757, @p758, @p759, @p760, @p761, @p762, @p763, @p764, @p765, @p766, @p767, @p768, @p769, @p770, @p771, @p772, @p773, @p774, @p775, @p776, @p777, @p778, @p779, @p780, @p781, @p782, @p783, 14),
(@p784, @p785, @p786, @p787, @p788, @p789, @p790, @p791, @p792, @p793, @p794, @p795, @p796, @p797, @p798, @p799, @p800, @p801, @p802, @p803, @p804, @p805, @p806, @p807, @p808, @p809, @p810, @p811, @p812, @p813, @p814, @p815, @p816, @p817, @p818, @p819, @p820, @p821, @p822, 15),
(@p823, @p824, @p825, @p826, @p827, @p828, @p829, @p830, @p831, @p832, @p833, @p834, @p835, @p836, @p837, @p838, @p839, @p840, @p841, @p842, @p843, @p844, @p845, @p846, @p847, @p848, @p849, @p850, @p851, @p852, @p853, @p854, @p855, @p856, @p857, @p858, @p859, @p860, @p861, 16),
(@p862, @p863, @p864, @p865, @p866, @p867, @p868, @p869, @p870, @p871, @p872, @p873, @p874, @p875, @p876, @p877, @p878, @p879, @p880, @p881, @p882, @p883, @p884, @p885, @p886, @p887, @p888, @p889, @p890, @p891, @p892, @p893, @p894, @p895, @p896, @p897, @p898, @p899, @p900, 17),
(@p901, @p902, @p903, @p904, @p905, @p906, @p907, @p908, @p909, @p910, @p911, @p912, @p913, @p914, @p915, @p916, @p917, @p918, @p919, @p920, @p921, @p922, @p923, @p924, @p925, @p926, @p927, @p928, @p929, @p930, @p931, @p932, @p933, @p934, @p935, @p936, @p937, @p938, @p939, 18),
(@p940, @p941, @p942, @p943, @p944, @p945, @p946, @p947, @p948, @p949, @p950, @p951, @p952, @p953, @p954, @p955, @p956, @p957, @p958, @p959, @p960, @p961, @p962, @p963, @p964, @p965, @p966, @p967, @p968, @p969, @p970, @p971, @p972, @p973, @p974, @p975, @p976, @p977, @p978, 19)) AS i ([AccumulatedDepreciationAmortizationPPE], [CapitalLeaseObligations], [CashAndCashEquivalentsAtCarryingValue], [CashAndShortTermInvestments], [CommonStock], [CommonStockSharesOutstanding], [CurrentAccountsPayable], [CurrentDebt], [CurrentLongTermDebt], [CurrentNetReceivables], [DeferredRevenue], [FiscalDateEnding], [Goodwill], [IntangibleAssets], [IntangibleAssetsExcludingGoodwill], [Inventory], [Investments], [LongTermDebt], [LongTermDebtNoncurrent], [LongTermInvestments], [OtherCurrentAssets], [OtherCurrentLiabilities], [OtherNonCurrentAssets], [OtherNonCurrentLiabilities], [PropertyPlantEquipment], [ReportedCurrency], [RetainedEarnings], [ShortLongTermDebtTotal], [ShortTermDebt], [ShortTermInvestments], [Symbol], [TotalAssets], [TotalCurrentAssets], [TotalCurrentLiabilities], [TotalLiabilities], [TotalNonCurrentAssets], [TotalNonCurrentLiabilities], [TotalShareholderEquity], [TreasuryStock], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([AccumulatedDepreciationAmortizationPPE], [CapitalLeaseObligations], [CashAndCashEquivalentsAtCarryingValue], [CashAndShortTermInvestments], [CommonStock], [CommonStockSharesOutstanding], [CurrentAccountsPayable], [CurrentDebt], [CurrentLongTermDebt], [CurrentNetReceivables], [DeferredRevenue], [FiscalDateEnding], [Goodwill], [IntangibleAssets], [IntangibleAssetsExcludingGoodwill], [Inventory], [Investments], [LongTermDebt], [LongTermDebtNoncurrent], [LongTermInvestments], [OtherCurrentAssets], [OtherCurrentLiabilities], [OtherNonCurrentAssets], [OtherNonCurrentLiabilities], [PropertyPlantEquipment], [ReportedCurrency], [RetainedEarnings], [ShortLongTermDebtTotal], [ShortTermDebt], [ShortTermInvestments], [Symbol], [TotalAssets], [TotalCurrentAssets], [TotalCurrentLiabilities], [TotalLiabilities], [TotalNonCurrentAssets], [TotalNonCurrentLiabilities], [TotalShareholderEquity], [TreasuryStock])
VALUES (i.[AccumulatedDepreciationAmortizationPPE], i.[CapitalLeaseObligations], i.[CashAndCashEquivalentsAtCarryingValue], i.[CashAndShortTermInvestments], i.[CommonStock], i.[CommonStockSharesOutstanding], i.[CurrentAccountsPayable], i.[CurrentDebt], i.[CurrentLongTermDebt], i.[CurrentNetReceivables], i.[DeferredRevenue], i.[FiscalDateEnding], i.[Goodwill], i.[IntangibleAssets], i.[IntangibleAssetsExcludingGoodwill], i.[Inventory], i.[Investments], i.[LongTermDebt], i.[LongTermDebtNoncurrent], i.[LongTermInvestments], i.[OtherCurrentAssets], i.[OtherCurrentLiabilities], i.[OtherNonCurrentAssets], i.[OtherNonCurrentLiabilities], i.[PropertyPlantEquipment], i.[ReportedCurrency], i.[RetainedEarnings], i.[ShortLongTermDebtTotal], i.[ShortTermDebt], i.[ShortTermInvestments], i.[Symbol], i.[TotalAssets], i.[TotalCurrentAssets], i.[TotalCurrentLiabilities], i.[TotalLiabilities], i.[TotalNonCurrentAssets], i.[TotalNonCurrentLiabilities], i.[TotalShareholderEquity], i.[TreasuryStock])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted5;

SELECT [i].[Id] FROM @inserted5 i
ORDER BY [i].[_Position];
2022-05-12 00:56:19.629 +03:00 [INF] AddOrUpdate run successful.
2022-05-12 00:56:19.696 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.Earnings with Symbol AVDX
2022-05-12 00:56:19.697 +03:00 [INF] Generating URI for EARNINGS with params: symbol: AVDX
2022-05-12 00:56:19.698 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=EARNINGS&symbol=AVDX
2022-05-12 00:56:19.698 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=EARNINGS&symbol=AVDX".
2022-05-12 00:56:19.929 +03:00 [INF] Response has success status code
2022-05-12 00:56:19.929 +03:00 [INF] Trying to deserialize response.
2022-05-12 00:56:19.930 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 00:56:19.943 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__symbol_0
2022-05-12 00:56:19.945 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.Earnings.
2022-05-12 00:56:19.953 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [e].[Symbol], [e].[ExistInApi], [e].[LastApiRefresh], [e].[LastLocalRefresh]
FROM [Earnings] AS [e]
WHERE [e].[Symbol] = @__entity_Symbol_0
2022-05-12 00:56:19.954 +03:00 [INF] Entity does not exist. Adding to DB.
2022-05-12 00:56:19.968 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = Boolean), @p2='?' (DbType = DateTime2), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Earnings] ([Symbol], [ExistInApi], [LastApiRefresh], [LastLocalRefresh])
VALUES (@p0, @p1, @p2, @p3);
2022-05-12 00:56:19.989 +03:00 [INF] Executed DbCommand (19ms) [Parameters=[@p4='?' (DbType = DateTime2), @p5='?' (DbType = Double), @p6='?' (Size = 450), @p7='?' (DbType = DateTime2), @p8='?' (DbType = Double), @p9='?' (Size = 450), @p10='?' (DbType = Double), @p11='?' (DbType = DateTime2), @p12='?' (DbType = DateTime2), @p13='?' (DbType = Double), @p14='?' (DbType = Double), @p15='?' (DbType = Double), @p16='?' (Size = 450), @p17='?' (DbType = Double), @p18='?' (DbType = DateTime2), @p19='?' (DbType = DateTime2), @p20='?' (DbType = Double), @p21='?' (DbType = Double), @p22='?' (DbType = Double), @p23='?' (Size = 450), @p24='?' (DbType = Double), @p25='?' (DbType = DateTime2), @p26='?' (DbType = DateTime2), @p27='?' (DbType = Double), @p28='?' (DbType = Double), @p29='?' (DbType = Double), @p30='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
DECLARE @inserted0 TABLE ([Id] int, [_Position] [int]);
MERGE [AnnualEarning] USING (
VALUES (@p4, @p5, @p6, 0),
(@p7, @p8, @p9, 1)) AS i ([FiscalDateEnding], [ReportedEPS], [Symbol], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([FiscalDateEnding], [ReportedEPS], [Symbol])
VALUES (i.[FiscalDateEnding], i.[ReportedEPS], i.[Symbol])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted0;

SELECT [i].[Id] FROM @inserted0 i
ORDER BY [i].[_Position];

DECLARE @inserted2 TABLE ([Id] int, [_Position] [int]);
MERGE [QuarterlyEarning] USING (
VALUES (@p10, @p11, @p12, @p13, @p14, @p15, @p16, 0),
(@p17, @p18, @p19, @p20, @p21, @p22, @p23, 1),
(@p24, @p25, @p26, @p27, @p28, @p29, @p30, 2)) AS i ([EstimatedEPS], [FiscalDateEnding], [ReportedDate], [ReportedEPS], [Surprise], [SurprisePercentage], [Symbol], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([EstimatedEPS], [FiscalDateEnding], [ReportedDate], [ReportedEPS], [Surprise], [SurprisePercentage], [Symbol])
VALUES (i.[EstimatedEPS], i.[FiscalDateEnding], i.[ReportedDate], i.[ReportedEPS], i.[Surprise], i.[SurprisePercentage], i.[Symbol])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted2;

SELECT [i].[Id] FROM @inserted2 i
ORDER BY [i].[_Position];
2022-05-12 00:56:19.997 +03:00 [INF] AddOrUpdate run successful.
2022-05-12 00:56:20.450 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CashFlow with Symbol ASYS
2022-05-12 00:56:20.452 +03:00 [INF] Generating URI for CASH_FLOW with params: symbol: ASYS
2022-05-12 00:56:20.453 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=CASH_FLOW&symbol=ASYS
2022-05-12 00:56:20.453 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=CASH_FLOW&symbol=ASYS".
2022-05-12 00:56:20.816 +03:00 [INF] Response has success status code
2022-05-12 00:56:20.817 +03:00 [INF] Trying to deserialize response.
2022-05-12 00:56:20.818 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 00:56:20.826 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__symbol_0
2022-05-12 00:56:20.830 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.CashFlow.
2022-05-12 00:56:20.838 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[ExistInApi], [c].[LastApiRefresh], [c].[LastLocalRefresh]
FROM [CashFlows] AS [c]
WHERE [c].[Symbol] = @__entity_Symbol_0
2022-05-12 00:56:20.839 +03:00 [INF] Entity does not exist. Adding to DB.
2022-05-12 00:56:20.853 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = Boolean), @p2='?' (DbType = DateTime2), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [CashFlows] ([Symbol], [ExistInApi], [LastApiRefresh], [LastLocalRefresh])
VALUES (@p0, @p1, @p2, @p3);
2022-05-12 00:56:20.898 +03:00 [INF] Executed DbCommand (42ms) [Parameters=[@p4='?' (DbType = Double), @p5='?' (DbType = Double), @p6='?' (DbType = Int64), @p7='?' (DbType = Int64), @p8='?' (DbType = Int64), @p9='?' (DbType = Int64), @p10='?' (DbType = Int64), @p11='?' (DbType = Int64), @p12='?' (DbType = Int64), @p13='?' (DbType = Double), @p14='?' (DbType = Int64), @p15='?' (DbType = Double), @p16='?' (DbType = Int64), @p17='?' (Size = 4000), @p18='?' (DbType = Double), @p19='?' (DbType = Double), @p20='?' (DbType = Int64), @p21='?' (DbType = Int64), @p22='?' (DbType = Int64), @p23='?' (DbType = Int64), @p24='?' (DbType = Int64), @p25='?' (DbType = Int64), @p26='?' (DbType = Int64), @p27='?' (DbType = Int64), @p28='?' (DbType = Int64), @p29='?' (DbType = Double), @p30='?' (DbType = Int64), @p31='?' (DbType = Int64), @p32='?' (Size = 4000), @p33='?' (Size = 450), @p34='?' (DbType = Double), @p35='?' (DbType = Double), @p36='?' (DbType = Int64), @p37='?' (DbType = Int64), @p38='?' (DbType = Int64), @p39='?' (DbType = Int64), @p40='?' (DbType = Int64), @p41='?' (DbType = Int64), @p42='?' (DbType = Int64), @p43='?' (DbType = Double), @p44='?' (DbType = Int64), @p45='?' (DbType = Double), @p46='?' (DbType = Int64), @p47='?' (Size = 4000), @p48='?' (DbType = Double), @p49='?' (DbType = Double), @p50='?' (DbType = Int64), @p51='?' (DbType = Int64), @p52='?' (DbType = Int64), @p53='?' (DbType = Int64), @p54='?' (DbType = Int64), @p55='?' (DbType = Int64), @p56='?' (DbType = Int64), @p57='?' (DbType = Int64), @p58='?' (DbType = Int64), @p59='?' (DbType = Double), @p60='?' (DbType = Int64), @p61='?' (DbType = Int64), @p62='?' (Size = 4000), @p63='?' (Size = 450), @p64='?' (DbType = Double), @p65='?' (DbType = Double), @p66='?' (DbType = Int64), @p67='?' (DbType = Int64), @p68='?' (DbType = Int64), @p69='?' (DbType = Int64), @p70='?' (DbType = Int64), @p71='?' (DbType = Int64), @p72='?' (DbType = Int64), @p73='?' (DbType = Double), @p74='?' (DbType = Int64), @p75='?' (DbType = Double), @p76='?' (DbType = Int64), @p77='?' (Size = 4000), @p78='?' (DbType = Double), @p79='?' (DbType = Double), @p80='?' (DbType = Int64), @p81='?' (DbType = Int64), @p82='?' (DbType = Int64), @p83='?' (DbType = Int64), @p84='?' (DbType = Int64), @p85='?' (DbType = Int64), @p86='?' (DbType = Int64), @p87='?' (DbType = Int64), @p88='?' (DbType = Int64), @p89='?' (DbType = Double), @p90='?' (DbType = Int64), @p91='?' (DbType = Int64), @p92='?' (Size = 4000), @p93='?' (Size = 450), @p94='?' (DbType = Double), @p95='?' (DbType = Double), @p96='?' (DbType = Int64), @p97='?' (DbType = Int64), @p98='?' (DbType = Int64), @p99='?' (DbType = Int64), @p100='?' (DbType = Int64), @p101='?' (DbType = Int64), @p102='?' (DbType = Int64), @p103='?' (DbType = Double), @p104='?' (DbType = Int64), @p105='?' (DbType = Double), @p106='?' (DbType = Int64), @p107='?' (Size = 4000), @p108='?' (DbType = Double), @p109='?' (DbType = Double), @p110='?' (DbType = Int64), @p111='?' (DbType = Int64), @p112='?' (DbType = Int64), @p113='?' (DbType = Int64), @p114='?' (DbType = Int64), @p115='?' (DbType = Int64), @p116='?' (DbType = Int64), @p117='?' (DbType = Int64), @p118='?' (DbType = Int64), @p119='?' (DbType = Double), @p120='?' (DbType = Int64), @p121='?' (DbType = Int64), @p122='?' (Size = 4000), @p123='?' (Size = 450), @p124='?' (DbType = Double), @p125='?' (DbType = Double), @p126='?' (DbType = Int64), @p127='?' (DbType = Int64), @p128='?' (DbType = Int64), @p129='?' (DbType = Int64), @p130='?' (DbType = Int64), @p131='?' (DbType = Int64), @p132='?' (DbType = Int64), @p133='?' (DbType = Double), @p134='?' (DbType = Int64), @p135='?' (DbType = Double), @p136='?' (DbType = Int64), @p137='?' (Size = 4000), @p138='?' (DbType = Double), @p139='?' (DbType = Double), @p140='?' (DbType = Int64), @p141='?' (DbType = Int64), @p142='?' (DbType = Int64), @p143='?' (DbType = Int64), @p144='?' (DbType = Int64), @p145='?' (DbType = Int64), @p146='?' (DbType = Int64), @p147='?' (DbType = Int64), @p148='?' (DbType = Int64), @p149='?' (DbType = Double), @p150='?' (DbType = Int64), @p151='?' (DbType = Int64), @p152='?' (Size = 4000), @p153='?' (Size = 450), @p154='?' (DbType = Double), @p155='?' (DbType = Double), @p156='?' (DbType = Int64), @p157='?' (DbType = Int64), @p158='?' (DbType = Int64), @p159='?' (DbType = Int64), @p160='?' (DbType = Int64), @p161='?' (DbType = Int64), @p162='?' (DbType = Int64), @p163='?' (DbType = Double), @p164='?' (DbType = Int64), @p165='?' (DbType = Double), @p166='?' (DbType = Int64), @p167='?' (Size = 4000), @p168='?' (DbType = Double), @p169='?' (DbType = Double), @p170='?' (DbType = Int64), @p171='?' (DbType = Int64), @p172='?' (DbType = Int64), @p173='?' (DbType = Int64), @p174='?' (DbType = Int64), @p175='?' (DbType = Int64), @p176='?' (DbType = Int64), @p177='?' (DbType = Int64), @p178='?' (DbType = Int64), @p179='?' (DbType = Double), @p180='?' (DbType = Int64), @p181='?' (DbType = Int64), @p182='?' (Size = 4000), @p183='?' (Size = 450), @p184='?' (DbType = Double), @p185='?' (DbType = Double), @p186='?' (DbType = Int64), @p187='?' (DbType = Int64), @p188='?' (DbType = Int64), @p189='?' (DbType = Int64), @p190='?' (DbType = Int64), @p191='?' (DbType = Int64), @p192='?' (DbType = Int64), @p193='?' (DbType = Double), @p194='?' (DbType = Int64), @p195='?' (DbType = Double), @p196='?' (DbType = Int64), @p197='?' (Size = 4000), @p198='?' (DbType = Double), @p199='?' (DbType = Double), @p200='?' (DbType = Int64), @p201='?' (DbType = Int64), @p202='?' (DbType = Int64), @p203='?' (DbType = Int64), @p204='?' (DbType = Int64), @p205='?' (DbType = Int64), @p206='?' (DbType = Int64), @p207='?' (DbType = Int64), @p208='?' (DbType = Int64), @p209='?' (DbType = Double), @p210='?' (DbType = Int64), @p211='?' (DbType = Int64), @p212='?' (Size = 4000), @p213='?' (Size = 450), @p214='?' (DbType = Double), @p215='?' (DbType = Double), @p216='?' (DbType = Int64), @p217='?' (DbType = Int64), @p218='?' (DbType = Int64), @p219='?' (DbType = Int64), @p220='?' (DbType = Int64), @p221='?' (DbType = Int64), @p222='?' (DbType = Int64), @p223='?' (DbType = Double), @p224='?' (DbType = Int64), @p225='?' (DbType = Double), @p226='?' (DbType = Int64), @p227='?' (Size = 4000), @p228='?' (DbType = Double), @p229='?' (DbType = Double), @p230='?' (DbType = Int64), @p231='?' (DbType = Int64), @p232='?' (DbType = Int64), @p233='?' (DbType = Int64), @p234='?' (DbType = Int64), @p235='?' (DbType = Int64), @p236='?' (DbType = Int64), @p237='?' (DbType = Int64), @p238='?' (DbType = Int64), @p239='?' (DbType = Double), @p240='?' (DbType = Int64), @p241='?' (DbType = Int64), @p242='?' (Size = 4000), @p243='?' (Size = 450), @p244='?' (DbType = Double), @p245='?' (DbType = Double), @p246='?' (DbType = Int64), @p247='?' (DbType = Int64), @p248='?' (DbType = Int64), @p249='?' (DbType = Int64), @p250='?' (DbType = Int64), @p251='?' (DbType = Int64), @p252='?' (DbType = Int64), @p253='?' (DbType = Double), @p254='?' (DbType = Int64), @p255='?' (DbType = Double), @p256='?' (DbType = Int64), @p257='?' (Size = 4000), @p258='?' (DbType = Double), @p259='?' (DbType = Double), @p260='?' (DbType = Int64), @p261='?' (DbType = Int64), @p262='?' (DbType = Int64), @p263='?' (DbType = Int64), @p264='?' (DbType = Int64), @p265='?' (DbType = Int64), @p266='?' (DbType = Int64), @p267='?' (DbType = Int64), @p268='?' (DbType = Int64), @p269='?' (DbType = Double), @p270='?' (DbType = Int64), @p271='?' (DbType = Int64), @p272='?' (Size = 4000), @p273='?' (Size = 450), @p274='?' (DbType = Double), @p275='?' (DbType = Double), @p276='?' (DbType = Int64), @p277='?' (DbType = Int64), @p278='?' (DbType = Int64), @p279='?' (DbType = Int64), @p280='?' (DbType = Int64), @p281='?' (DbType = Int64), @p282='?' (DbType = Int64), @p283='?' (DbType = Double), @p284='?' (DbType = Int64), @p285='?' (DbType = Double), @p286='?' (DbType = Int64), @p287='?' (Size = 4000), @p288='?' (DbType = Double), @p289='?' (DbType = Double), @p290='?' (DbType = Int64), @p291='?' (DbType = Int64), @p292='?' (DbType = Int64), @p293='?' (DbType = Int64), @p294='?' (DbType = Int64), @p295='?' (DbType = Int64), @p296='?' (DbType = Int64), @p297='?' (DbType = Int64), @p298='?' (DbType = Int64), @p299='?' (DbType = Double), @p300='?' (DbType = Int64), @p301='?' (DbType = Int64), @p302='?' (Size = 4000), @p303='?' (Size = 450), @p304='?' (DbType = Double), @p305='?' (DbType = Double), @p306='?' (DbType = Int64), @p307='?' (DbType = Int64), @p308='?' (DbType = Int64), @p309='?' (DbType = Int64), @p310='?' (DbType = Int64), @p311='?' (DbType = Int64), @p312='?' (DbType = Int64), @p313='?' (DbType = Double), @p314='?' (DbType = Int64), @p315='?' (DbType = Double), @p316='?' (DbType = Int64), @p317='?' (Size = 4000), @p318='?' (DbType = Double), @p319='?' (DbType = Double), @p320='?' (DbType = Int64), @p321='?' (DbType = Int64), @p322='?' (DbType = Int64), @p323='?' (DbType = Int64), @p324='?' (DbType = Int64), @p325='?' (DbType = Int64), @p326='?' (DbType = Int64), @p327='?' (DbType = Int64), @p328='?' (DbType = Int64), @p329='?' (DbType = Double), @p330='?' (DbType = Int64), @p331='?' (DbType = Int64), @p332='?' (Size = 4000), @p333='?' (Size = 450), @p334='?' (DbType = Double), @p335='?' (DbType = Double), @p336='?' (DbType = Int64), @p337='?' (DbType = Int64), @p338='?' (DbType = Int64), @p339='?' (DbType = Int64), @p340='?' (DbType = Int64), @p341='?' (DbType = Int64), @p342='?' (DbType = Int64), @p343='?' (DbType = Double), @p344='?' (DbType = Int64), @p345='?' (DbType = Double), @p346='?' (DbType = Int64), @p347='?' (Size = 4000), @p348='?' (DbType = Double), @p349='?' (DbType = Double), @p350='?' (DbType = Int64), @p351='?' (DbType = Int64), @p352='?' (DbType = Int64), @p353='?' (DbType = Int64), @p354='?' (DbType = Int64), @p355='?' (DbType = Int64), @p356='?' (DbType = Int64), @p357='?' (DbType = Int64), @p358='?' (DbType = Int64), @p359='?' (DbType = Double), @p360='?' (DbType = Int64), @p361='?' (DbType = Int64), @p362='?' (Size = 4000), @p363='?' (Size = 450), @p364='?' (DbType = Double), @p365='?' (DbType = Double), @p366='?' (DbType = Int64), @p367='?' (DbType = Int64), @p368='?' (DbType = Int64), @p369='?' (DbType = Int64), @p370='?' (DbType = Int64), @p371='?' (DbType = Int64), @p372='?' (DbType = Int64), @p373='?' (DbType = Double), @p374='?' (DbType = Int64), @p375='?' (DbType = Double), @p376='?' (DbType = Int64), @p377='?' (Size = 4000), @p378='?' (DbType = Double), @p379='?' (DbType = Double), @p380='?' (DbType = Int64), @p381='?' (DbType = Int64), @p382='?' (DbType = Int64), @p383='?' (DbType = Int64), @p384='?' (DbType = Int64), @p385='?' (DbType = Int64), @p386='?' (DbType = Int64), @p387='?' (DbType = Int64), @p388='?' (DbType = Int64), @p389='?' (DbType = Double), @p390='?' (DbType = Int64), @p391='?' (DbType = Int64), @p392='?' (Size = 4000), @p393='?' (Size = 450), @p394='?' (DbType = Double), @p395='?' (DbType = Double), @p396='?' (DbType = Int64), @p397='?' (DbType = Int64), @p398='?' (DbType = Int64), @p399='?' (DbType = Int64), @p400='?' (DbType = Int64), @p401='?' (DbType = Int64), @p402='?' (DbType = Int64), @p403='?' (DbType = Double), @p404='?' (DbType = Int64), @p405='?' (DbType = Double), @p406='?' (DbType = Int64), @p407='?' (Size = 4000), @p408='?' (DbType = Double), @p409='?' (DbType = Double), @p410='?' (DbType = Int64), @p411='?' (DbType = Int64), @p412='?' (DbType = Int64), @p413='?' (DbType = Int64), @p414='?' (DbType = Int64), @p415='?' (DbType = Int64), @p416='?' (DbType = Int64), @p417='?' (DbType = Int64), @p418='?' (DbType = Int64), @p419='?' (DbType = Double), @p420='?' (DbType = Int64), @p421='?' (DbType = Int64), @p422='?' (Size = 4000), @p423='?' (Size = 450), @p424='?' (DbType = Double), @p425='?' (DbType = Double), @p426='?' (DbType = Int64), @p427='?' (DbType = Int64), @p428='?' (DbType = Int64), @p429='?' (DbType = Int64), @p430='?' (DbType = Int64), @p431='?' (DbType = Int64), @p432='?' (DbType = Int64), @p433='?' (DbType = Double), @p434='?' (DbType = Int64), @p435='?' (DbType = Double), @p436='?' (DbType = Int64), @p437='?' (Size = 4000), @p438='?' (DbType = Double), @p439='?' (DbType = Double), @p440='?' (DbType = Int64), @p441='?' (DbType = Int64), @p442='?' (DbType = Int64), @p443='?' (DbType = Int64), @p444='?' (DbType = Int64), @p445='?' (DbType = Int64), @p446='?' (DbType = Int64), @p447='?' (DbType = Int64), @p448='?' (DbType = Int64), @p449='?' (DbType = Double), @p450='?' (DbType = Int64), @p451='?' (DbType = Int64), @p452='?' (Size = 4000), @p453='?' (Size = 450), @p454='?' (DbType = Double), @p455='?' (DbType = Double), @p456='?' (DbType = Int64), @p457='?' (DbType = Int64), @p458='?' (DbType = Int64), @p459='?' (DbType = Int64), @p460='?' (DbType = Int64), @p461='?' (DbType = Int64), @p462='?' (DbType = Int64), @p463='?' (DbType = Double), @p464='?' (DbType = Int64), @p465='?' (DbType = Double), @p466='?' (DbType = Int64), @p467='?' (Size = 4000), @p468='?' (DbType = Double), @p469='?' (DbType = Double), @p470='?' (DbType = Int64), @p471='?' (DbType = Int64), @p472='?' (DbType = Int64), @p473='?' (DbType = Int64), @p474='?' (DbType = Int64), @p475='?' (DbType = Int64), @p476='?' (DbType = Int64), @p477='?' (DbType = Int64), @p478='?' (DbType = Int64), @p479='?' (DbType = Double), @p480='?' (DbType = Int64), @p481='?' (DbType = Int64), @p482='?' (Size = 4000), @p483='?' (Size = 450), @p484='?' (DbType = Double), @p485='?' (DbType = Double), @p486='?' (DbType = Int64), @p487='?' (DbType = Int64), @p488='?' (DbType = Int64), @p489='?' (DbType = Int64), @p490='?' (DbType = Int64), @p491='?' (DbType = Int64), @p492='?' (DbType = Int64), @p493='?' (DbType = Double), @p494='?' (DbType = Int64), @p495='?' (DbType = Double), @p496='?' (DbType = Int64), @p497='?' (Size = 4000), @p498='?' (DbType = Double), @p499='?' (DbType = Double), @p500='?' (DbType = Int64), @p501='?' (DbType = Int64), @p502='?' (DbType = Int64), @p503='?' (DbType = Int64), @p504='?' (DbType = Int64), @p505='?' (DbType = Int64), @p506='?' (DbType = Int64), @p507='?' (DbType = Int64), @p508='?' (DbType = Int64), @p509='?' (DbType = Double), @p510='?' (DbType = Int64), @p511='?' (DbType = Int64), @p512='?' (Size = 4000), @p513='?' (Size = 450), @p514='?' (DbType = Double), @p515='?' (DbType = Double), @p516='?' (DbType = Int64), @p517='?' (DbType = Int64), @p518='?' (DbType = Int64), @p519='?' (DbType = Int64), @p520='?' (DbType = Int64), @p521='?' (DbType = Int64), @p522='?' (DbType = Int64), @p523='?' (DbType = Double), @p524='?' (DbType = Int64), @p525='?' (DbType = Double), @p526='?' (DbType = Int64), @p527='?' (Size = 4000), @p528='?' (DbType = Double), @p529='?' (DbType = Double), @p530='?' (DbType = Int64), @p531='?' (DbType = Int64), @p532='?' (DbType = Int64), @p533='?' (DbType = Int64), @p534='?' (DbType = Int64), @p535='?' (DbType = Int64), @p536='?' (DbType = Int64), @p537='?' (DbType = Int64), @p538='?' (DbType = Int64), @p539='?' (DbType = Double), @p540='?' (DbType = Int64), @p541='?' (DbType = Int64), @p542='?' (Size = 4000), @p543='?' (Size = 450), @p544='?' (DbType = Double), @p545='?' (DbType = Double), @p546='?' (DbType = Int64), @p547='?' (DbType = Int64), @p548='?' (DbType = Int64), @p549='?' (DbType = Int64), @p550='?' (DbType = Int64), @p551='?' (DbType = Int64), @p552='?' (DbType = Int64), @p553='?' (DbType = Double), @p554='?' (DbType = Int64), @p555='?' (DbType = Double), @p556='?' (DbType = Int64), @p557='?' (Size = 4000), @p558='?' (DbType = Double), @p559='?' (DbType = Double), @p560='?' (DbType = Int64), @p561='?' (DbType = Int64), @p562='?' (DbType = Int64), @p563='?' (DbType = Int64), @p564='?' (DbType = Int64), @p565='?' (DbType = Int64), @p566='?' (DbType = Int64), @p567='?' (DbType = Int64), @p568='?' (DbType = Int64), @p569='?' (DbType = Double), @p570='?' (DbType = Int64), @p571='?' (DbType = Int64), @p572='?' (Size = 4000), @p573='?' (Size = 450), @p574='?' (DbType = Double), @p575='?' (DbType = Double), @p576='?' (DbType = Int64), @p577='?' (DbType = Int64), @p578='?' (DbType = Int64), @p579='?' (DbType = Int64), @p580='?' (DbType = Int64), @p581='?' (DbType = Int64), @p582='?' (DbType = Int64), @p583='?' (DbType = Double), @p584='?' (DbType = Int64), @p585='?' (DbType = Double), @p586='?' (DbType = Int64), @p587='?' (Size = 4000), @p588='?' (DbType = Double), @p589='?' (DbType = Double), @p590='?' (DbType = Int64), @p591='?' (DbType = Int64), @p592='?' (DbType = Int64), @p593='?' (DbType = Int64), @p594='?' (DbType = Int64), @p595='?' (DbType = Int64), @p596='?' (DbType = Int64), @p597='?' (DbType = Int64), @p598='?' (DbType = Int64), @p599='?' (DbType = Double), @p600='?' (DbType = Int64), @p601='?' (DbType = Int64), @p602='?' (Size = 4000), @p603='?' (Size = 450), @p604='?' (DbType = Double), @p605='?' (DbType = Double), @p606='?' (DbType = Int64), @p607='?' (DbType = Int64), @p608='?' (DbType = Int64), @p609='?' (DbType = Int64), @p610='?' (DbType = Int64), @p611='?' (DbType = Int64), @p612='?' (DbType = Int64), @p613='?' (DbType = Double), @p614='?' (DbType = Int64), @p615='?' (DbType = Double), @p616='?' (DbType = Int64), @p617='?' (Size = 4000), @p618='?' (DbType = Double), @p619='?' (DbType = Double), @p620='?' (DbType = Int64), @p621='?' (DbType = Int64), @p622='?' (DbType = Int64), @p623='?' (DbType = Int64), @p624='?' (DbType = Int64), @p625='?' (DbType = Int64), @p626='?' (DbType = Int64), @p627='?' (DbType = Int64), @p628='?' (DbType = Int64), @p629='?' (DbType = Double), @p630='?' (DbType = Int64), @p631='?' (DbType = Int64), @p632='?' (Size = 4000), @p633='?' (Size = 450), @p634='?' (DbType = Double), @p635='?' (DbType = Double), @p636='?' (DbType = Int64), @p637='?' (DbType = Int64), @p638='?' (DbType = Int64), @p639='?' (DbType = Int64), @p640='?' (DbType = Int64), @p641='?' (DbType = Int64), @p642='?' (DbType = Int64), @p643='?' (DbType = Double), @p644='?' (DbType = Int64), @p645='?' (DbType = Double), @p646='?' (DbType = Int64), @p647='?' (Size = 4000), @p648='?' (DbType = Double), @p649='?' (DbType = Double), @p650='?' (DbType = Int64), @p651='?' (DbType = Int64), @p652='?' (DbType = Int64), @p653='?' (DbType = Int64), @p654='?' (DbType = Int64), @p655='?' (DbType = Int64), @p656='?' (DbType = Int64), @p657='?' (DbType = Int64), @p658='?' (DbType = Int64), @p659='?' (DbType = Double), @p660='?' (DbType = Int64), @p661='?' (DbType = Int64), @p662='?' (Size = 4000), @p663='?' (Size = 450), @p664='?' (DbType = Double), @p665='?' (DbType = Double), @p666='?' (DbType = Int64), @p667='?' (DbType = Int64), @p668='?' (DbType = Int64), @p669='?' (DbType = Int64), @p670='?' (DbType = Int64), @p671='?' (DbType = Int64), @p672='?' (DbType = Int64), @p673='?' (DbType = Double), @p674='?' (DbType = Int64), @p675='?' (DbType = Double), @p676='?' (DbType = Int64), @p677='?' (Size = 4000), @p678='?' (DbType = Double), @p679='?' (DbType = Double), @p680='?' (DbType = Int64), @p681='?' (DbType = Int64), @p682='?' (DbType = Int64), @p683='?' (DbType = Int64), @p684='?' (DbType = Int64), @p685='?' (DbType = Int64), @p686='?' (DbType = Int64), @p687='?' (DbType = Int64), @p688='?' (DbType = Int64), @p689='?' (DbType = Double), @p690='?' (DbType = Int64), @p691='?' (DbType = Int64), @p692='?' (Size = 4000), @p693='?' (Size = 450), @p694='?' (DbType = Double), @p695='?' (DbType = Double), @p696='?' (DbType = Int64), @p697='?' (DbType = Int64), @p698='?' (DbType = Int64), @p699='?' (DbType = Int64), @p700='?' (DbType = Int64), @p701='?' (DbType = Int64), @p702='?' (DbType = Int64), @p703='?' (DbType = Double), @p704='?' (DbType = Int64), @p705='?' (DbType = Double), @p706='?' (DbType = Int64), @p707='?' (Size = 4000), @p708='?' (DbType = Double), @p709='?' (DbType = Double), @p710='?' (DbType = Int64), @p711='?' (DbType = Int64), @p712='?' (DbType = Int64), @p713='?' (DbType = Int64), @p714='?' (DbType = Int64), @p715='?' (DbType = Int64), @p716='?' (DbType = Int64), @p717='?' (DbType = Int64), @p718='?' (DbType = Int64), @p719='?' (DbType = Double), @p720='?' (DbType = Int64), @p721='?' (DbType = Int64), @p722='?' (Size = 4000), @p723='?' (Size = 450), @p724='?' (DbType = Double), @p725='?' (DbType = Double), @p726='?' (DbType = Int64), @p727='?' (DbType = Int64), @p728='?' (DbType = Int64), @p729='?' (DbType = Int64), @p730='?' (DbType = Int64), @p731='?' (DbType = Int64), @p732='?' (DbType = Int64), @p733='?' (DbType = Double), @p734='?' (DbType = Int64), @p735='?' (DbType = Double), @p736='?' (DbType = Int64), @p737='?' (Size = 4000), @p738='?' (DbType = Double), @p739='?' (DbType = Double), @p740='?' (DbType = Int64), @p741='?' (DbType = Int64), @p742='?' (DbType = Int64), @p743='?' (DbType = Int64), @p744='?' (DbType = Int64), @p745='?' (DbType = Int64), @p746='?' (DbType = Int64), @p747='?' (DbType = Int64), @p748='?' (DbType = Int64), @p749='?' (DbType = Double), @p750='?' (DbType = Int64), @p751='?' (DbType = Int64), @p752='?' (Size = 4000), @p753='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
DECLARE @inserted0 TABLE ([Id] int, [_Position] [int]);
MERGE [CashFlowAnnualReport] USING (
VALUES (@p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21, @p22, @p23, @p24, @p25, @p26, @p27, @p28, @p29, @p30, @p31, @p32, @p33, 0),
(@p34, @p35, @p36, @p37, @p38, @p39, @p40, @p41, @p42, @p43, @p44, @p45, @p46, @p47, @p48, @p49, @p50, @p51, @p52, @p53, @p54, @p55, @p56, @p57, @p58, @p59, @p60, @p61, @p62, @p63, 1),
(@p64, @p65, @p66, @p67, @p68, @p69, @p70, @p71, @p72, @p73, @p74, @p75, @p76, @p77, @p78, @p79, @p80, @p81, @p82, @p83, @p84, @p85, @p86, @p87, @p88, @p89, @p90, @p91, @p92, @p93, 2),
(@p94, @p95, @p96, @p97, @p98, @p99, @p100, @p101, @p102, @p103, @p104, @p105, @p106, @p107, @p108, @p109, @p110, @p111, @p112, @p113, @p114, @p115, @p116, @p117, @p118, @p119, @p120, @p121, @p122, @p123, 3),
(@p124, @p125, @p126, @p127, @p128, @p129, @p130, @p131, @p132, @p133, @p134, @p135, @p136, @p137, @p138, @p139, @p140, @p141, @p142, @p143, @p144, @p145, @p146, @p147, @p148, @p149, @p150, @p151, @p152, @p153, 4)) AS i ([CapitalExpenditures], [CashflowFromFinancing], [CashflowFromInvestment], [ChangeInCashAndCashEquivalents], [ChangeInExchangeRate], [ChangeInInventory], [ChangeInOperatingAssets], [ChangeInOperatingLiabilities], [ChangeInReceivables], [DepreciationDepletionAndAmortization], [DividendPayout], [DividendPayoutCommonStock], [DividendPayoutPreferredStock], [FiscalDateEnding], [NetIncome], [OperatingCashFlow], [PaymentsForOperatingActivities], [PaymentsForRepurchaseOfCommonStock], [PaymentsForRepurchaseOfEquity], [PaymentsForRepurchaseOfPreferredStock], [ProceedsFromIssuanceOfCommonStock], [ProceedsFromIssuanceOfLongTermDebtAndCapitalSecuritiesNet], [ProceedsFromIssuanceOfPreferredStock], [ProceedsFromOperatingActivities], [ProceedsFromRepaymentsOfShortTermDebt], [ProceedsFromRepurchaseOfEquity], [ProceedsFromSaleOfTreasuryStock], [ProfitLoss], [ReportedCurrency], [Symbol], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([CapitalExpenditures], [CashflowFromFinancing], [CashflowFromInvestment], [ChangeInCashAndCashEquivalents], [ChangeInExchangeRate], [ChangeInInventory], [ChangeInOperatingAssets], [ChangeInOperatingLiabilities], [ChangeInReceivables], [DepreciationDepletionAndAmortization], [DividendPayout], [DividendPayoutCommonStock], [DividendPayoutPreferredStock], [FiscalDateEnding], [NetIncome], [OperatingCashFlow], [PaymentsForOperatingActivities], [PaymentsForRepurchaseOfCommonStock], [PaymentsForRepurchaseOfEquity], [PaymentsForRepurchaseOfPreferredStock], [ProceedsFromIssuanceOfCommonStock], [ProceedsFromIssuanceOfLongTermDebtAndCapitalSecuritiesNet], [ProceedsFromIssuanceOfPreferredStock], [ProceedsFromOperatingActivities], [ProceedsFromRepaymentsOfShortTermDebt], [ProceedsFromRepurchaseOfEquity], [ProceedsFromSaleOfTreasuryStock], [ProfitLoss], [ReportedCurrency], [Symbol])
VALUES (i.[CapitalExpenditures], i.[CashflowFromFinancing], i.[CashflowFromInvestment], i.[ChangeInCashAndCashEquivalents], i.[ChangeInExchangeRate], i.[ChangeInInventory], i.[ChangeInOperatingAssets], i.[ChangeInOperatingLiabilities], i.[ChangeInReceivables], i.[DepreciationDepletionAndAmortization], i.[DividendPayout], i.[DividendPayoutCommonStock], i.[DividendPayoutPreferredStock], i.[FiscalDateEnding], i.[NetIncome], i.[OperatingCashFlow], i.[PaymentsForOperatingActivities], i.[PaymentsForRepurchaseOfCommonStock], i.[PaymentsForRepurchaseOfEquity], i.[PaymentsForRepurchaseOfPreferredStock], i.[ProceedsFromIssuanceOfCommonStock], i.[ProceedsFromIssuanceOfLongTermDebtAndCapitalSecuritiesNet], i.[ProceedsFromIssuanceOfPreferredStock], i.[ProceedsFromOperatingActivities], i.[ProceedsFromRepaymentsOfShortTermDebt], i.[ProceedsFromRepurchaseOfEquity], i.[ProceedsFromSaleOfTreasuryStock], i.[ProfitLoss], i.[ReportedCurrency], i.[Symbol])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted0;

SELECT [i].[Id] FROM @inserted0 i
ORDER BY [i].[_Position];

DECLARE @inserted5 TABLE ([Id] int, [_Position] [int]);
MERGE [CashFlowQuarterlyReport] USING (
VALUES (@p154, @p155, @p156, @p157, @p158, @p159, @p160, @p161, @p162, @p163, @p164, @p165, @p166, @p167, @p168, @p169, @p170, @p171, @p172, @p173, @p174, @p175, @p176, @p177, @p178, @p179, @p180, @p181, @p182, @p183, 0),
(@p184, @p185, @p186, @p187, @p188, @p189, @p190, @p191, @p192, @p193, @p194, @p195, @p196, @p197, @p198, @p199, @p200, @p201, @p202, @p203, @p204, @p205, @p206, @p207, @p208, @p209, @p210, @p211, @p212, @p213, 1),
(@p214, @p215, @p216, @p217, @p218, @p219, @p220, @p221, @p222, @p223, @p224, @p225, @p226, @p227, @p228, @p229, @p230, @p231, @p232, @p233, @p234, @p235, @p236, @p237, @p238, @p239, @p240, @p241, @p242, @p243, 2),
(@p244, @p245, @p246, @p247, @p248, @p249, @p250, @p251, @p252, @p253, @p254, @p255, @p256, @p257, @p258, @p259, @p260, @p261, @p262, @p263, @p264, @p265, @p266, @p267, @p268, @p269, @p270, @p271, @p272, @p273, 3),
(@p274, @p275, @p276, @p277, @p278, @p279, @p280, @p281, @p282, @p283, @p284, @p285, @p286, @p287, @p288, @p289, @p290, @p291, @p292, @p293, @p294, @p295, @p296, @p297, @p298, @p299, @p300, @p301, @p302, @p303, 4),
(@p304, @p305, @p306, @p307, @p308, @p309, @p310, @p311, @p312, @p313, @p314, @p315, @p316, @p317, @p318, @p319, @p320, @p321, @p322, @p323, @p324, @p325, @p326, @p327, @p328, @p329, @p330, @p331, @p332, @p333, 5),
(@p334, @p335, @p336, @p337, @p338, @p339, @p340, @p341, @p342, @p343, @p344, @p345, @p346, @p347, @p348, @p349, @p350, @p351, @p352, @p353, @p354, @p355, @p356, @p357, @p358, @p359, @p360, @p361, @p362, @p363, 6),
(@p364, @p365, @p366, @p367, @p368, @p369, @p370, @p371, @p372, @p373, @p374, @p375, @p376, @p377, @p378, @p379, @p380, @p381, @p382, @p383, @p384, @p385, @p386, @p387, @p388, @p389, @p390, @p391, @p392, @p393, 7),
(@p394, @p395, @p396, @p397, @p398, @p399, @p400, @p401, @p402, @p403, @p404, @p405, @p406, @p407, @p408, @p409, @p410, @p411, @p412, @p413, @p414, @p415, @p416, @p417, @p418, @p419, @p420, @p421, @p422, @p423, 8),
(@p424, @p425, @p426, @p427, @p428, @p429, @p430, @p431, @p432, @p433, @p434, @p435, @p436, @p437, @p438, @p439, @p440, @p441, @p442, @p443, @p444, @p445, @p446, @p447, @p448, @p449, @p450, @p451, @p452, @p453, 9),
(@p454, @p455, @p456, @p457, @p458, @p459, @p460, @p461, @p462, @p463, @p464, @p465, @p466, @p467, @p468, @p469, @p470, @p471, @p472, @p473, @p474, @p475, @p476, @p477, @p478, @p479, @p480, @p481, @p482, @p483, 10),
(@p484, @p485, @p486, @p487, @p488, @p489, @p490, @p491, @p492, @p493, @p494, @p495, @p496, @p497, @p498, @p499, @p500, @p501, @p502, @p503, @p504, @p505, @p506, @p507, @p508, @p509, @p510, @p511, @p512, @p513, 11),
(@p514, @p515, @p516, @p517, @p518, @p519, @p520, @p521, @p522, @p523, @p524, @p525, @p526, @p527, @p528, @p529, @p530, @p531, @p532, @p533, @p534, @p535, @p536, @p537, @p538, @p539, @p540, @p541, @p542, @p543, 12),
(@p544, @p545, @p546, @p547, @p548, @p549, @p550, @p551, @p552, @p553, @p554, @p555, @p556, @p557, @p558, @p559, @p560, @p561, @p562, @p563, @p564, @p565, @p566, @p567, @p568, @p569, @p570, @p571, @p572, @p573, 13),
(@p574, @p575, @p576, @p577, @p578, @p579, @p580, @p581, @p582, @p583, @p584, @p585, @p586, @p587, @p588, @p589, @p590, @p591, @p592, @p593, @p594, @p595, @p596, @p597, @p598, @p599, @p600, @p601, @p602, @p603, 14),
(@p604, @p605, @p606, @p607, @p608, @p609, @p610, @p611, @p612, @p613, @p614, @p615, @p616, @p617, @p618, @p619, @p620, @p621, @p622, @p623, @p624, @p625, @p626, @p627, @p628, @p629, @p630, @p631, @p632, @p633, 15),
(@p634, @p635, @p636, @p637, @p638, @p639, @p640, @p641, @p642, @p643, @p644, @p645, @p646, @p647, @p648, @p649, @p650, @p651, @p652, @p653, @p654, @p655, @p656, @p657, @p658, @p659, @p660, @p661, @p662, @p663, 16),
(@p664, @p665, @p666, @p667, @p668, @p669, @p670, @p671, @p672, @p673, @p674, @p675, @p676, @p677, @p678, @p679, @p680, @p681, @p682, @p683, @p684, @p685, @p686, @p687, @p688, @p689, @p690, @p691, @p692, @p693, 17),
(@p694, @p695, @p696, @p697, @p698, @p699, @p700, @p701, @p702, @p703, @p704, @p705, @p706, @p707, @p708, @p709, @p710, @p711, @p712, @p713, @p714, @p715, @p716, @p717, @p718, @p719, @p720, @p721, @p722, @p723, 18),
(@p724, @p725, @p726, @p727, @p728, @p729, @p730, @p731, @p732, @p733, @p734, @p735, @p736, @p737, @p738, @p739, @p740, @p741, @p742, @p743, @p744, @p745, @p746, @p747, @p748, @p749, @p750, @p751, @p752, @p753, 19)) AS i ([CapitalExpenditures], [CashflowFromFinancing], [CashflowFromInvestment], [ChangeInCashAndCashEquivalents], [ChangeInExchangeRate], [ChangeInInventory], [ChangeInOperatingAssets], [ChangeInOperatingLiabilities], [ChangeInReceivables], [DepreciationDepletionAndAmortization], [DividendPayout], [DividendPayoutCommonStock], [DividendPayoutPreferredStock], [FiscalDateEnding], [NetIncome], [OperatingCashFlow], [PaymentsForOperatingActivities], [PaymentsForRepurchaseOfCommonStock], [PaymentsForRepurchaseOfEquity], [PaymentsForRepurchaseOfPreferredStock], [ProceedsFromIssuanceOfCommonStock], [ProceedsFromIssuanceOfLongTermDebtAndCapitalSecuritiesNet], [ProceedsFromIssuanceOfPreferredStock], [ProceedsFromOperatingActivities], [ProceedsFromRepaymentsOfShortTermDebt], [ProceedsFromRepurchaseOfEquity], [ProceedsFromSaleOfTreasuryStock], [ProfitLoss], [ReportedCurrency], [Symbol], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([CapitalExpenditures], [CashflowFromFinancing], [CashflowFromInvestment], [ChangeInCashAndCashEquivalents], [ChangeInExchangeRate], [ChangeInInventory], [ChangeInOperatingAssets], [ChangeInOperatingLiabilities], [ChangeInReceivables], [DepreciationDepletionAndAmortization], [DividendPayout], [DividendPayoutCommonStock], [DividendPayoutPreferredStock], [FiscalDateEnding], [NetIncome], [OperatingCashFlow], [PaymentsForOperatingActivities], [PaymentsForRepurchaseOfCommonStock], [PaymentsForRepurchaseOfEquity], [PaymentsForRepurchaseOfPreferredStock], [ProceedsFromIssuanceOfCommonStock], [ProceedsFromIssuanceOfLongTermDebtAndCapitalSecuritiesNet], [ProceedsFromIssuanceOfPreferredStock], [ProceedsFromOperatingActivities], [ProceedsFromRepaymentsOfShortTermDebt], [ProceedsFromRepurchaseOfEquity], [ProceedsFromSaleOfTreasuryStock], [ProfitLoss], [ReportedCurrency], [Symbol])
VALUES (i.[CapitalExpenditures], i.[CashflowFromFinancing], i.[CashflowFromInvestment], i.[ChangeInCashAndCashEquivalents], i.[ChangeInExchangeRate], i.[ChangeInInventory], i.[ChangeInOperatingAssets], i.[ChangeInOperatingLiabilities], i.[ChangeInReceivables], i.[DepreciationDepletionAndAmortization], i.[DividendPayout], i.[DividendPayoutCommonStock], i.[DividendPayoutPreferredStock], i.[FiscalDateEnding], i.[NetIncome], i.[OperatingCashFlow], i.[PaymentsForOperatingActivities], i.[PaymentsForRepurchaseOfCommonStock], i.[PaymentsForRepurchaseOfEquity], i.[PaymentsForRepurchaseOfPreferredStock], i.[ProceedsFromIssuanceOfCommonStock], i.[ProceedsFromIssuanceOfLongTermDebtAndCapitalSecuritiesNet], i.[ProceedsFromIssuanceOfPreferredStock], i.[ProceedsFromOperatingActivities], i.[ProceedsFromRepaymentsOfShortTermDebt], i.[ProceedsFromRepurchaseOfEquity], i.[ProceedsFromSaleOfTreasuryStock], i.[ProfitLoss], i.[ReportedCurrency], i.[Symbol])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted5;

SELECT [i].[Id] FROM @inserted5 i
ORDER BY [i].[_Position];
2022-05-12 00:56:20.932 +03:00 [INF] AddOrUpdate run successful.
2022-05-12 00:56:48.191 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CompanyOverview with Symbol BIOTU
2022-05-12 00:56:48.194 +03:00 [INF] Generating URI for OVERVIEW with params: symbol: BIOTU
2022-05-12 00:56:48.195 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=OVERVIEW&symbol=BIOTU
2022-05-12 00:56:48.195 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=OVERVIEW&symbol=BIOTU".
2022-05-12 00:56:48.426 +03:00 [INF] Response has success status code
2022-05-12 00:56:48.427 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.CompanyOverview for symbol BIOTU
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyOverview(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 109
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 00:56:49.534 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.IncomeStatement with Symbol ATIF
2022-05-12 00:56:49.537 +03:00 [INF] Generating URI for INCOME_STATEMENT with params: symbol: ATIF
2022-05-12 00:56:49.538 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=INCOME_STATEMENT&symbol=ATIF
2022-05-12 00:56:49.538 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=INCOME_STATEMENT&symbol=ATIF".
2022-05-12 00:56:49.642 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.BalanceSheet with Symbol BCS
2022-05-12 00:56:49.644 +03:00 [INF] Generating URI for BALANCE_SHEET with params: symbol: BCS
2022-05-12 00:56:49.644 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BCS
2022-05-12 00:56:49.645 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BCS".
2022-05-12 00:56:49.772 +03:00 [INF] Response has success status code
2022-05-12 00:56:49.773 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.IncomeStatement for symbol ATIF
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetIncomeStatement(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 69
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 00:56:49.871 +03:00 [INF] Response has success status code
2022-05-12 00:56:49.872 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.BalanceSheet for symbol BCS
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetBalanceSheet(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 82
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 00:56:50.017 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.Earnings with Symbol AVGO
2022-05-12 00:56:50.019 +03:00 [INF] Generating URI for EARNINGS with params: symbol: AVGO
2022-05-12 00:56:50.019 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=EARNINGS&symbol=AVGO
2022-05-12 00:56:50.020 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=EARNINGS&symbol=AVGO".
2022-05-12 00:56:50.234 +03:00 [INF] Response has success status code
2022-05-12 00:56:50.235 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.Earnings for symbol AVGO
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyEarnings(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 142
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 00:56:50.942 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CashFlow with Symbol ATAKR
2022-05-12 00:56:50.945 +03:00 [INF] Generating URI for CASH_FLOW with params: symbol: ATAKR
2022-05-12 00:56:50.946 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=CASH_FLOW&symbol=ATAKR
2022-05-12 00:56:50.947 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=CASH_FLOW&symbol=ATAKR".
2022-05-12 00:56:51.169 +03:00 [INF] Response has success status code
2022-05-12 00:56:51.170 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.CashFlow for symbol ATAKR
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCashFlow(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 96
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 00:57:18.429 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CompanyOverview with Symbol BIP
2022-05-12 00:57:18.432 +03:00 [INF] Generating URI for OVERVIEW with params: symbol: BIP
2022-05-12 00:57:18.432 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=OVERVIEW&symbol=BIP
2022-05-12 00:57:18.433 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=OVERVIEW&symbol=BIP".
2022-05-12 00:57:18.702 +03:00 [INF] Response has success status code
2022-05-12 00:57:18.702 +03:00 [INF] Trying to deserialize response.
2022-05-12 00:57:18.703 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.CompanyOverview.
2022-05-12 00:57:18.704 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 00:57:18.716 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__entity_Symbol_0
2022-05-12 00:57:18.717 +03:00 [INF] Entity does not exist. Adding to DB.
2022-05-12 00:57:18.736 +03:00 [INF] Executed DbCommand (12ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (Size = 4000), @p2='?' (DbType = Double), @p3='?' (Size = 4000), @p4='?' (DbType = Double), @p5='?' (DbType = Double), @p6='?' (DbType = Int64), @p7='?' (Size = 4000), @p8='?' (Size = 4000), @p9='?' (Size = 4000), @p10='?' (DbType = Double), @p11='?' (DbType = DateTime2), @p12='?' (DbType = Double), @p13='?' (DbType = Double), @p14='?' (DbType = Int64), @p15='?' (DbType = Double), @p16='?' (DbType = Double), @p17='?' (DbType = Double), @p18='?' (DbType = DateTime2), @p19='?' (Size = 4000), @p20='?' (DbType = Boolean), @p21='?' (Size = 4000), @p22='?' (DbType = Double), @p23='?' (DbType = Int64), @p24='?' (Size = 4000), @p25='?' (DbType = DateTime2), @p26='?' (DbType = DateTime2), @p27='?' (DbType = DateTime2), @p28='?' (DbType = Int64), @p29='?' (Size = 4000), @p30='?' (DbType = Double), @p31='?' (DbType = Double), @p32='?' (DbType = Double), @p33='?' (DbType = Double), @p34='?' (DbType = Double), @p35='?' (DbType = Double), @p36='?' (DbType = Double), @p37='?' (DbType = Double), @p38='?' (DbType = Double), @p39='?' (DbType = Double), @p40='?' (DbType = Double), @p41='?' (DbType = Int64), @p42='?' (Size = 4000), @p43='?' (DbType = Int64), @p44='?' (DbType = Double), @p45='?' (DbType = Double), @p46='?' (DbType = Double), @p47='?' (DbType = Double), @p48='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [CompanyOverviews] ([Symbol], [Address], [AnalystTargetPrice], [AssetType], [Beta], [BookValue], [CIK], [Country], [Currency], [Description], [DilutedEPSTTM], [DividendDate], [DividendPerShare], [DividendYield], [EBITDA], [EPS], [EVToEBITDA], [EVToRevenue], [ExDividendDate], [Exchange], [ExistInApi], [FiscalYearEnd], [ForwardPE], [GrossProfitTTM], [Industry], [LastApiRefresh], [LastLocalRefresh], [LatestQuarter], [MarketCapitalization], [Name], [OperatingMarginTTM], [PEGRatio], [PERatio], [PriceToBookRatio], [PriceToSalesRatioTTM], [ProfitMargin], [QuarterlyEarningsGrowthYOY], [QuarterlyRevenueGrowthYOY], [ReturnOnAssetsTTM], [ReturnOnEquityTTM], [RevenuePerShareTTM], [RevenueTTM], [Sector], [SharesOutstanding], [TrailingPE], [_200DayMovingAverage], [_50DayMovingAverage], [_52WeekHigh], [_52WeekLow])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21, @p22, @p23, @p24, @p25, @p26, @p27, @p28, @p29, @p30, @p31, @p32, @p33, @p34, @p35, @p36, @p37, @p38, @p39, @p40, @p41, @p42, @p43, @p44, @p45, @p46, @p47, @p48);
2022-05-12 00:57:18.744 +03:00 [INF] AddOrUpdate run successful.
2022-05-12 00:57:19.785 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.IncomeStatement with Symbol ATKR
2022-05-12 00:57:19.786 +03:00 [INF] Generating URI for INCOME_STATEMENT with params: symbol: ATKR
2022-05-12 00:57:19.787 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=INCOME_STATEMENT&symbol=ATKR
2022-05-12 00:57:19.787 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=INCOME_STATEMENT&symbol=ATKR".
2022-05-12 00:57:19.879 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.BalanceSheet with Symbol BCSAW
2022-05-12 00:57:19.880 +03:00 [INF] Generating URI for BALANCE_SHEET with params: symbol: BCSAW
2022-05-12 00:57:19.881 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BCSAW
2022-05-12 00:57:19.882 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BCSAW".
2022-05-12 00:57:20.148 +03:00 [INF] Response has success status code
2022-05-12 00:57:20.149 +03:00 [INF] Trying to deserialize response.
2022-05-12 00:57:20.152 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 00:57:20.162 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__symbol_0
2022-05-12 00:57:20.164 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.IncomeStatement.
2022-05-12 00:57:20.171 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [i].[Symbol], [i].[ExistInApi], [i].[LastApiRefresh], [i].[LastLocalRefresh]
FROM [IncomeStatements] AS [i]
WHERE [i].[Symbol] = @__entity_Symbol_0
2022-05-12 00:57:20.173 +03:00 [INF] Entity does not exist. Adding to DB.
2022-05-12 00:57:20.239 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.Earnings with Symbol AVHIU
2022-05-12 00:57:20.242 +03:00 [INF] Generating URI for EARNINGS with params: symbol: AVHIU
2022-05-12 00:57:20.243 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=EARNINGS&symbol=AVHIU
2022-05-12 00:57:20.243 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=EARNINGS&symbol=AVHIU".
2022-05-12 00:57:20.270 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = Boolean), @p2='?' (DbType = DateTime2), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [IncomeStatements] ([Symbol], [ExistInApi], [LastApiRefresh], [LastLocalRefresh])
VALUES (@p0, @p1, @p2, @p3);
2022-05-12 00:57:20.321 +03:00 [INF] Executed DbCommand (46ms) [Parameters=[@p4='?' (DbType = Int64), @p5='?' (DbType = Double), @p6='?' (DbType = Double), @p7='?' (DbType = Int64), @p8='?' (DbType = Int64), @p9='?' (DbType = Int64), @p10='?' (DbType = Double), @p11='?' (DbType = DateTime2), @p12='?' (DbType = Double), @p13='?' (DbType = Double), @p14='?' (DbType = Int64), @p15='?' (DbType = Int64), @p16='?' (DbType = Double), @p17='?' (DbType = Int64), @p18='?' (DbType = Int64), @p19='?' (DbType = Double), @p20='?' (DbType = Double), @p21='?' (DbType = Double), @p22='?' (DbType = Int64), @p23='?' (DbType = Double), @p24='?' (DbType = Double), @p25='?' (DbType = Int64), @p26='?' (Size = 4000), @p27='?' (DbType = Int64), @p28='?' (DbType = Double), @p29='?' (Size = 450), @p30='?' (DbType = Int64), @p31='?' (DbType = Int64), @p32='?' (DbType = Double), @p33='?' (DbType = Double), @p34='?' (DbType = Int64), @p35='?' (DbType = Int64), @p36='?' (DbType = Int64), @p37='?' (DbType = Double), @p38='?' (DbType = DateTime2), @p39='?' (DbType = Double), @p40='?' (DbType = Double), @p41='?' (DbType = Int64), @p42='?' (DbType = Int64), @p43='?' (DbType = Double), @p44='?' (DbType = Int64), @p45='?' (DbType = Int64), @p46='?' (DbType = Double), @p47='?' (DbType = Double), @p48='?' (DbType = Double), @p49='?' (DbType = Int64), @p50='?' (DbType = Double), @p51='?' (DbType = Double), @p52='?' (DbType = Int64), @p53='?' (Size = 4000), @p54='?' (DbType = Int64), @p55='?' (DbType = Double), @p56='?' (Size = 450), @p57='?' (DbType = Int64), @p58='?' (DbType = Int64), @p59='?' (DbType = Double), @p60='?' (DbType = Double), @p61='?' (DbType = Int64), @p62='?' (DbType = Int64), @p63='?' (DbType = Int64), @p64='?' (DbType = Double), @p65='?' (DbType = DateTime2), @p66='?' (DbType = Double), @p67='?' (DbType = Double), @p68='?' (DbType = Int64), @p69='?' (DbType = Int64), @p70='?' (DbType = Double), @p71='?' (DbType = Int64), @p72='?' (DbType = Int64), @p73='?' (DbType = Double), @p74='?' (DbType = Double), @p75='?' (DbType = Double), @p76='?' (DbType = Int64), @p77='?' (DbType = Double), @p78='?' (DbType = Double), @p79='?' (DbType = Int64), @p80='?' (Size = 4000), @p81='?' (DbType = Int64), @p82='?' (DbType = Double), @p83='?' (Size = 450), @p84='?' (DbType = Int64), @p85='?' (DbType = Int64), @p86='?' (DbType = Double), @p87='?' (DbType = Double), @p88='?' (DbType = Int64), @p89='?' (DbType = Int64), @p90='?' (DbType = Int64), @p91='?' (DbType = Double), @p92='?' (DbType = DateTime2), @p93='?' (DbType = Double), @p94='?' (DbType = Double), @p95='?' (DbType = Int64), @p96='?' (DbType = Int64), @p97='?' (DbType = Double), @p98='?' (DbType = Int64), @p99='?' (DbType = Int64), @p100='?' (DbType = Double), @p101='?' (DbType = Double), @p102='?' (DbType = Double), @p103='?' (DbType = Int64), @p104='?' (DbType = Double), @p105='?' (DbType = Double), @p106='?' (DbType = Int64), @p107='?' (Size = 4000), @p108='?' (DbType = Int64), @p109='?' (DbType = Double), @p110='?' (Size = 450), @p111='?' (DbType = Int64), @p112='?' (DbType = Int64), @p113='?' (DbType = Double), @p114='?' (DbType = Double), @p115='?' (DbType = Int64), @p116='?' (DbType = Int64), @p117='?' (DbType = Int64), @p118='?' (DbType = Double), @p119='?' (DbType = DateTime2), @p120='?' (DbType = Double), @p121='?' (DbType = Double), @p122='?' (DbType = Int64), @p123='?' (DbType = Int64), @p124='?' (DbType = Double), @p125='?' (DbType = Int64), @p126='?' (DbType = Int64), @p127='?' (DbType = Double), @p128='?' (DbType = Double), @p129='?' (DbType = Double), @p130='?' (DbType = Int64), @p131='?' (DbType = Double), @p132='?' (DbType = Double), @p133='?' (DbType = Int64), @p134='?' (Size = 4000), @p135='?' (DbType = Int64), @p136='?' (DbType = Double), @p137='?' (Size = 450), @p138='?' (DbType = Int64), @p139='?' (DbType = Int64), @p140='?' (DbType = Double), @p141='?' (DbType = Double), @p142='?' (DbType = Int64), @p143='?' (DbType = Int64), @p144='?' (DbType = Int64), @p145='?' (DbType = Double), @p146='?' (DbType = DateTime2), @p147='?' (DbType = Double), @p148='?' (DbType = Double), @p149='?' (DbType = Int64), @p150='?' (DbType = Int64), @p151='?' (DbType = Double), @p152='?' (DbType = Int64), @p153='?' (DbType = Int64), @p154='?' (DbType = Double), @p155='?' (DbType = Double), @p156='?' (DbType = Double), @p157='?' (DbType = Int64), @p158='?' (DbType = Double), @p159='?' (DbType = Double), @p160='?' (DbType = Int64), @p161='?' (Size = 4000), @p162='?' (DbType = Int64), @p163='?' (DbType = Double), @p164='?' (Size = 450), @p165='?' (DbType = Int64), @p166='?' (DbType = Int64), @p167='?' (DbType = Double), @p168='?' (DbType = Double), @p169='?' (DbType = Int64), @p170='?' (DbType = Int64), @p171='?' (DbType = Int64), @p172='?' (DbType = Double), @p173='?' (DbType = DateTime2), @p174='?' (DbType = Double), @p175='?' (DbType = Double), @p176='?' (DbType = Int64), @p177='?' (DbType = Int64), @p178='?' (DbType = Double), @p179='?' (DbType = Int64), @p180='?' (DbType = Int64), @p181='?' (DbType = Double), @p182='?' (DbType = Double), @p183='?' (DbType = Double), @p184='?' (DbType = Int64), @p185='?' (DbType = Double), @p186='?' (DbType = Double), @p187='?' (DbType = Int64), @p188='?' (Size = 4000), @p189='?' (DbType = Int64), @p190='?' (DbType = Double), @p191='?' (Size = 450), @p192='?' (DbType = Int64), @p193='?' (DbType = Int64), @p194='?' (DbType = Double), @p195='?' (DbType = Double), @p196='?' (DbType = Int64), @p197='?' (DbType = Int64), @p198='?' (DbType = Int64), @p199='?' (DbType = Double), @p200='?' (DbType = DateTime2), @p201='?' (DbType = Double), @p202='?' (DbType = Double), @p203='?' (DbType = Int64), @p204='?' (DbType = Int64), @p205='?' (DbType = Double), @p206='?' (DbType = Int64), @p207='?' (DbType = Int64), @p208='?' (DbType = Double), @p209='?' (DbType = Double), @p210='?' (DbType = Double), @p211='?' (DbType = Int64), @p212='?' (DbType = Double), @p213='?' (DbType = Double), @p214='?' (DbType = Int64), @p215='?' (Size = 4000), @p216='?' (DbType = Int64), @p217='?' (DbType = Double), @p218='?' (Size = 450), @p219='?' (DbType = Int64), @p220='?' (DbType = Int64), @p221='?' (DbType = Double), @p222='?' (DbType = Double), @p223='?' (DbType = Int64), @p224='?' (DbType = Int64), @p225='?' (DbType = Int64), @p226='?' (DbType = Double), @p227='?' (DbType = DateTime2), @p228='?' (DbType = Double), @p229='?' (DbType = Double), @p230='?' (DbType = Int64), @p231='?' (DbType = Int64), @p232='?' (DbType = Double), @p233='?' (DbType = Int64), @p234='?' (DbType = Int64), @p235='?' (DbType = Double), @p236='?' (DbType = Double), @p237='?' (DbType = Double), @p238='?' (DbType = Int64), @p239='?' (DbType = Double), @p240='?' (DbType = Double), @p241='?' (DbType = Int64), @p242='?' (Size = 4000), @p243='?' (DbType = Int64), @p244='?' (DbType = Double), @p245='?' (Size = 450), @p246='?' (DbType = Int64), @p247='?' (DbType = Int64), @p248='?' (DbType = Double), @p249='?' (DbType = Double), @p250='?' (DbType = Int64), @p251='?' (DbType = Int64), @p252='?' (DbType = Int64), @p253='?' (DbType = Double), @p254='?' (DbType = DateTime2), @p255='?' (DbType = Double), @p256='?' (DbType = Double), @p257='?' (DbType = Int64), @p258='?' (DbType = Int64), @p259='?' (DbType = Double), @p260='?' (DbType = Int64), @p261='?' (DbType = Int64), @p262='?' (DbType = Double), @p263='?' (DbType = Double), @p264='?' (DbType = Double), @p265='?' (DbType = Int64), @p266='?' (DbType = Double), @p267='?' (DbType = Double), @p268='?' (DbType = Int64), @p269='?' (Size = 4000), @p270='?' (DbType = Int64), @p271='?' (DbType = Double), @p272='?' (Size = 450), @p273='?' (DbType = Int64), @p274='?' (DbType = Int64), @p275='?' (DbType = Double), @p276='?' (DbType = Double), @p277='?' (DbType = Int64), @p278='?' (DbType = Int64), @p279='?' (DbType = Int64), @p280='?' (DbType = Double), @p281='?' (DbType = DateTime2), @p282='?' (DbType = Double), @p283='?' (DbType = Double), @p284='?' (DbType = Int64), @p285='?' (DbType = Int64), @p286='?' (DbType = Double), @p287='?' (DbType = Int64), @p288='?' (DbType = Int64), @p289='?' (DbType = Double), @p290='?' (DbType = Double), @p291='?' (DbType = Double), @p292='?' (DbType = Int64), @p293='?' (DbType = Double), @p294='?' (DbType = Double), @p295='?' (DbType = Int64), @p296='?' (Size = 4000), @p297='?' (DbType = Int64), @p298='?' (DbType = Double), @p299='?' (Size = 450), @p300='?' (DbType = Int64), @p301='?' (DbType = Int64), @p302='?' (DbType = Double), @p303='?' (DbType = Double), @p304='?' (DbType = Int64), @p305='?' (DbType = Int64), @p306='?' (DbType = Int64), @p307='?' (DbType = Double), @p308='?' (DbType = DateTime2), @p309='?' (DbType = Double), @p310='?' (DbType = Double), @p311='?' (DbType = Int64), @p312='?' (DbType = Int64), @p313='?' (DbType = Double), @p314='?' (DbType = Int64), @p315='?' (DbType = Int64), @p316='?' (DbType = Double), @p317='?' (DbType = Double), @p318='?' (DbType = Double), @p319='?' (DbType = Int64), @p320='?' (DbType = Double), @p321='?' (DbType = Double), @p322='?' (DbType = Int64), @p323='?' (Size = 4000), @p324='?' (DbType = Int64), @p325='?' (DbType = Double), @p326='?' (Size = 450), @p327='?' (DbType = Int64), @p328='?' (DbType = Int64), @p329='?' (DbType = Double), @p330='?' (DbType = Double), @p331='?' (DbType = Int64), @p332='?' (DbType = Int64), @p333='?' (DbType = Int64), @p334='?' (DbType = Double), @p335='?' (DbType = DateTime2), @p336='?' (DbType = Double), @p337='?' (DbType = Double), @p338='?' (DbType = Int64), @p339='?' (DbType = Int64), @p340='?' (DbType = Double), @p341='?' (DbType = Int64), @p342='?' (DbType = Int64), @p343='?' (DbType = Double), @p344='?' (DbType = Double), @p345='?' (DbType = Double), @p346='?' (DbType = Int64), @p347='?' (DbType = Double), @p348='?' (DbType = Double), @p349='?' (DbType = Int64), @p350='?' (Size = 4000), @p351='?' (DbType = Int64), @p352='?' (DbType = Double), @p353='?' (Size = 450), @p354='?' (DbType = Int64), @p355='?' (DbType = Int64), @p356='?' (DbType = Double), @p357='?' (DbType = Double), @p358='?' (DbType = Int64), @p359='?' (DbType = Int64), @p360='?' (DbType = Int64), @p361='?' (DbType = Double), @p362='?' (DbType = DateTime2), @p363='?' (DbType = Double), @p364='?' (DbType = Double), @p365='?' (DbType = Int64), @p366='?' (DbType = Int64), @p367='?' (DbType = Double), @p368='?' (DbType = Int64), @p369='?' (DbType = Int64), @p370='?' (DbType = Double), @p371='?' (DbType = Double), @p372='?' (DbType = Double), @p373='?' (DbType = Int64), @p374='?' (DbType = Double), @p375='?' (DbType = Double), @p376='?' (DbType = Int64), @p377='?' (Size = 4000), @p378='?' (DbType = Int64), @p379='?' (DbType = Double), @p380='?' (Size = 450), @p381='?' (DbType = Int64), @p382='?' (DbType = Int64), @p383='?' (DbType = Double), @p384='?' (DbType = Double), @p385='?' (DbType = Int64), @p386='?' (DbType = Int64), @p387='?' (DbType = Int64), @p388='?' (DbType = Double), @p389='?' (DbType = DateTime2), @p390='?' (DbType = Double), @p391='?' (DbType = Double), @p392='?' (DbType = Int64), @p393='?' (DbType = Int64), @p394='?' (DbType = Double), @p395='?' (DbType = Int64), @p396='?' (DbType = Int64), @p397='?' (DbType = Double), @p398='?' (DbType = Double), @p399='?' (DbType = Double), @p400='?' (DbType = Int64), @p401='?' (DbType = Double), @p402='?' (DbType = Double), @p403='?' (DbType = Int64), @p404='?' (Size = 4000), @p405='?' (DbType = Int64), @p406='?' (DbType = Double), @p407='?' (Size = 450), @p408='?' (DbType = Int64), @p409='?' (DbType = Int64), @p410='?' (DbType = Double), @p411='?' (DbType = Double), @p412='?' (DbType = Int64), @p413='?' (DbType = Int64), @p414='?' (DbType = Int64), @p415='?' (DbType = Double), @p416='?' (DbType = DateTime2), @p417='?' (DbType = Double), @p418='?' (DbType = Double), @p419='?' (DbType = Int64), @p420='?' (DbType = Int64), @p421='?' (DbType = Double), @p422='?' (DbType = Int64), @p423='?' (DbType = Int64), @p424='?' (DbType = Double), @p425='?' (DbType = Double), @p426='?' (DbType = Double), @p427='?' (DbType = Int64), @p428='?' (DbType = Double), @p429='?' (DbType = Double), @p430='?' (DbType = Int64), @p431='?' (Size = 4000), @p432='?' (DbType = Int64), @p433='?' (DbType = Double), @p434='?' (Size = 450), @p435='?' (DbType = Int64), @p436='?' (DbType = Int64), @p437='?' (DbType = Double), @p438='?' (DbType = Double), @p439='?' (DbType = Int64), @p440='?' (DbType = Int64), @p441='?' (DbType = Int64), @p442='?' (DbType = Double), @p443='?' (DbType = DateTime2), @p444='?' (DbType = Double), @p445='?' (DbType = Double), @p446='?' (DbType = Int64), @p447='?' (DbType = Int64), @p448='?' (DbType = Double), @p449='?' (DbType = Int64), @p450='?' (DbType = Int64), @p451='?' (DbType = Double), @p452='?' (DbType = Double), @p453='?' (DbType = Double), @p454='?' (DbType = Int64), @p455='?' (DbType = Double), @p456='?' (DbType = Double), @p457='?' (DbType = Int64), @p458='?' (Size = 4000), @p459='?' (DbType = Int64), @p460='?' (DbType = Double), @p461='?' (Size = 450), @p462='?' (DbType = Int64), @p463='?' (DbType = Int64), @p464='?' (DbType = Double), @p465='?' (DbType = Double), @p466='?' (DbType = Int64), @p467='?' (DbType = Int64), @p468='?' (DbType = Int64), @p469='?' (DbType = Double), @p470='?' (DbType = DateTime2), @p471='?' (DbType = Double), @p472='?' (DbType = Double), @p473='?' (DbType = Int64), @p474='?' (DbType = Int64), @p475='?' (DbType = Double), @p476='?' (DbType = Int64), @p477='?' (DbType = Int64), @p478='?' (DbType = Double), @p479='?' (DbType = Double), @p480='?' (DbType = Double), @p481='?' (DbType = Int64), @p482='?' (DbType = Double), @p483='?' (DbType = Double), @p484='?' (DbType = Int64), @p485='?' (Size = 4000), @p486='?' (DbType = Int64), @p487='?' (DbType = Double), @p488='?' (Size = 450), @p489='?' (DbType = Int64), @p490='?' (DbType = Int64), @p491='?' (DbType = Double), @p492='?' (DbType = Double), @p493='?' (DbType = Int64), @p494='?' (DbType = Int64), @p495='?' (DbType = Int64), @p496='?' (DbType = Double), @p497='?' (DbType = DateTime2), @p498='?' (DbType = Double), @p499='?' (DbType = Double), @p500='?' (DbType = Int64), @p501='?' (DbType = Int64), @p502='?' (DbType = Double), @p503='?' (DbType = Int64), @p504='?' (DbType = Int64), @p505='?' (DbType = Double), @p506='?' (DbType = Double), @p507='?' (DbType = Double), @p508='?' (DbType = Int64), @p509='?' (DbType = Double), @p510='?' (DbType = Double), @p511='?' (DbType = Int64), @p512='?' (Size = 4000), @p513='?' (DbType = Int64), @p514='?' (DbType = Double), @p515='?' (Size = 450), @p516='?' (DbType = Int64), @p517='?' (DbType = Int64), @p518='?' (DbType = Double), @p519='?' (DbType = Double), @p520='?' (DbType = Int64), @p521='?' (DbType = Int64), @p522='?' (DbType = Int64), @p523='?' (DbType = Double), @p524='?' (DbType = DateTime2), @p525='?' (DbType = Double), @p526='?' (DbType = Double), @p527='?' (DbType = Int64), @p528='?' (DbType = Int64), @p529='?' (DbType = Double), @p530='?' (DbType = Int64), @p531='?' (DbType = Int64), @p532='?' (DbType = Double), @p533='?' (DbType = Double), @p534='?' (DbType = Double), @p535='?' (DbType = Int64), @p536='?' (DbType = Double), @p537='?' (DbType = Double), @p538='?' (DbType = Int64), @p539='?' (Size = 4000), @p540='?' (DbType = Int64), @p541='?' (DbType = Double), @p542='?' (Size = 450), @p543='?' (DbType = Int64), @p544='?' (DbType = Int64), @p545='?' (DbType = Double), @p546='?' (DbType = Double), @p547='?' (DbType = Int64), @p548='?' (DbType = Int64), @p549='?' (DbType = Int64), @p550='?' (DbType = Double), @p551='?' (DbType = DateTime2), @p552='?' (DbType = Double), @p553='?' (DbType = Double), @p554='?' (DbType = Int64), @p555='?' (DbType = Int64), @p556='?' (DbType = Double), @p557='?' (DbType = Int64), @p558='?' (DbType = Int64), @p559='?' (DbType = Double), @p560='?' (DbType = Double), @p561='?' (DbType = Double), @p562='?' (DbType = Int64), @p563='?' (DbType = Double), @p564='?' (DbType = Double), @p565='?' (DbType = Int64), @p566='?' (Size = 4000), @p567='?' (DbType = Int64), @p568='?' (DbType = Double), @p569='?' (Size = 450), @p570='?' (DbType = Int64), @p571='?' (DbType = Int64), @p572='?' (DbType = Double), @p573='?' (DbType = Double), @p574='?' (DbType = Int64), @p575='?' (DbType = Int64), @p576='?' (DbType = Int64), @p577='?' (DbType = Double), @p578='?' (DbType = DateTime2), @p579='?' (DbType = Double), @p580='?' (DbType = Double), @p581='?' (DbType = Int64), @p582='?' (DbType = Int64), @p583='?' (DbType = Double), @p584='?' (DbType = Int64), @p585='?' (DbType = Int64), @p586='?' (DbType = Double), @p587='?' (DbType = Double), @p588='?' (DbType = Double), @p589='?' (DbType = Int64), @p590='?' (DbType = Double), @p591='?' (DbType = Double), @p592='?' (DbType = Int64), @p593='?' (Size = 4000), @p594='?' (DbType = Int64), @p595='?' (DbType = Double), @p596='?' (Size = 450), @p597='?' (DbType = Int64), @p598='?' (DbType = Int64), @p599='?' (DbType = Double), @p600='?' (DbType = Double), @p601='?' (DbType = Int64), @p602='?' (DbType = Int64), @p603='?' (DbType = Int64), @p604='?' (DbType = Double), @p605='?' (DbType = DateTime2), @p606='?' (DbType = Double), @p607='?' (DbType = Double), @p608='?' (DbType = Int64), @p609='?' (DbType = Int64), @p610='?' (DbType = Double), @p611='?' (DbType = Int64), @p612='?' (DbType = Int64), @p613='?' (DbType = Double), @p614='?' (DbType = Double), @p615='?' (DbType = Double), @p616='?' (DbType = Int64), @p617='?' (DbType = Double), @p618='?' (DbType = Double), @p619='?' (DbType = Int64), @p620='?' (Size = 4000), @p621='?' (DbType = Int64), @p622='?' (DbType = Double), @p623='?' (Size = 450), @p624='?' (DbType = Int64), @p625='?' (DbType = Int64), @p626='?' (DbType = Double), @p627='?' (DbType = Double), @p628='?' (DbType = Int64), @p629='?' (DbType = Int64), @p630='?' (DbType = Int64), @p631='?' (DbType = Double), @p632='?' (DbType = DateTime2), @p633='?' (DbType = Double), @p634='?' (DbType = Double), @p635='?' (DbType = Int64), @p636='?' (DbType = Int64), @p637='?' (DbType = Double), @p638='?' (DbType = Int64), @p639='?' (DbType = Int64), @p640='?' (DbType = Double), @p641='?' (DbType = Double), @p642='?' (DbType = Double), @p643='?' (DbType = Int64), @p644='?' (DbType = Double), @p645='?' (DbType = Double), @p646='?' (DbType = Int64), @p647='?' (Size = 4000), @p648='?' (DbType = Int64), @p649='?' (DbType = Double), @p650='?' (Size = 450), @p651='?' (DbType = Int64), @p652='?' (DbType = Int64), @p653='?' (DbType = Double), @p654='?' (DbType = Double), @p655='?' (DbType = Int64), @p656='?' (DbType = Int64), @p657='?' (DbType = Int64), @p658='?' (DbType = Double), @p659='?' (DbType = DateTime2), @p660='?' (DbType = Double), @p661='?' (DbType = Double), @p662='?' (DbType = Int64), @p663='?' (DbType = Int64), @p664='?' (DbType = Double), @p665='?' (DbType = Int64), @p666='?' (DbType = Int64), @p667='?' (DbType = Double), @p668='?' (DbType = Double), @p669='?' (DbType = Double), @p670='?' (DbType = Int64), @p671='?' (DbType = Double), @p672='?' (DbType = Double), @p673='?' (DbType = Int64), @p674='?' (Size = 4000), @p675='?' (DbType = Int64), @p676='?' (DbType = Double), @p677='?' (Size = 450), @p678='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
DECLARE @inserted0 TABLE ([Id] int, [_Position] [int]);
MERGE [IncomeStatementAnnualReport] USING (
VALUES (@p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21, @p22, @p23, @p24, @p25, @p26, @p27, @p28, @p29, @p30, 0),
(@p31, @p32, @p33, @p34, @p35, @p36, @p37, @p38, @p39, @p40, @p41, @p42, @p43, @p44, @p45, @p46, @p47, @p48, @p49, @p50, @p51, @p52, @p53, @p54, @p55, @p56, @p57, 1),
(@p58, @p59, @p60, @p61, @p62, @p63, @p64, @p65, @p66, @p67, @p68, @p69, @p70, @p71, @p72, @p73, @p74, @p75, @p76, @p77, @p78, @p79, @p80, @p81, @p82, @p83, @p84, 2),
(@p85, @p86, @p87, @p88, @p89, @p90, @p91, @p92, @p93, @p94, @p95, @p96, @p97, @p98, @p99, @p100, @p101, @p102, @p103, @p104, @p105, @p106, @p107, @p108, @p109, @p110, @p111, 3),
(@p112, @p113, @p114, @p115, @p116, @p117, @p118, @p119, @p120, @p121, @p122, @p123, @p124, @p125, @p126, @p127, @p128, @p129, @p130, @p131, @p132, @p133, @p134, @p135, @p136, @p137, @p138, 4)) AS i ([ComprehensiveIncomeNetOfTax], [CostOfRevenue], [CostofGoodsAndServicesSold], [Depreciation], [DepreciationAndAmortization], [Ebit], [Ebitda], [FiscalDateEnding], [GrossProfit], [IncomeBeforeTax], [IncomeTaxExpense], [InterestAndDebtExpense], [InterestExpense], [InterestIncome], [InvestmentIncomeNet], [NetIncome], [NetIncomeFromContinuingOperations], [NetInterestIncome], [NonInterestIncome], [OperatingExpenses], [OperatingIncome], [OtherNonOperatingIncome], [ReportedCurrency], [ResearchAndDevelopment], [SellingGeneralAndAdministrative], [Symbol], [TotalRevenue], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([ComprehensiveIncomeNetOfTax], [CostOfRevenue], [CostofGoodsAndServicesSold], [Depreciation], [DepreciationAndAmortization], [Ebit], [Ebitda], [FiscalDateEnding], [GrossProfit], [IncomeBeforeTax], [IncomeTaxExpense], [InterestAndDebtExpense], [InterestExpense], [InterestIncome], [InvestmentIncomeNet], [NetIncome], [NetIncomeFromContinuingOperations], [NetInterestIncome], [NonInterestIncome], [OperatingExpenses], [OperatingIncome], [OtherNonOperatingIncome], [ReportedCurrency], [ResearchAndDevelopment], [SellingGeneralAndAdministrative], [Symbol], [TotalRevenue])
VALUES (i.[ComprehensiveIncomeNetOfTax], i.[CostOfRevenue], i.[CostofGoodsAndServicesSold], i.[Depreciation], i.[DepreciationAndAmortization], i.[Ebit], i.[Ebitda], i.[FiscalDateEnding], i.[GrossProfit], i.[IncomeBeforeTax], i.[IncomeTaxExpense], i.[InterestAndDebtExpense], i.[InterestExpense], i.[InterestIncome], i.[InvestmentIncomeNet], i.[NetIncome], i.[NetIncomeFromContinuingOperations], i.[NetInterestIncome], i.[NonInterestIncome], i.[OperatingExpenses], i.[OperatingIncome], i.[OtherNonOperatingIncome], i.[ReportedCurrency], i.[ResearchAndDevelopment], i.[SellingGeneralAndAdministrative], i.[Symbol], i.[TotalRevenue])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted0;

SELECT [i].[Id] FROM @inserted0 i
ORDER BY [i].[_Position];

DECLARE @inserted5 TABLE ([Id] int, [_Position] [int]);
MERGE [IncomeStatementQuarterlyReport] USING (
VALUES (@p139, @p140, @p141, @p142, @p143, @p144, @p145, @p146, @p147, @p148, @p149, @p150, @p151, @p152, @p153, @p154, @p155, @p156, @p157, @p158, @p159, @p160, @p161, @p162, @p163, @p164, @p165, 0),
(@p166, @p167, @p168, @p169, @p170, @p171, @p172, @p173, @p174, @p175, @p176, @p177, @p178, @p179, @p180, @p181, @p182, @p183, @p184, @p185, @p186, @p187, @p188, @p189, @p190, @p191, @p192, 1),
(@p193, @p194, @p195, @p196, @p197, @p198, @p199, @p200, @p201, @p202, @p203, @p204, @p205, @p206, @p207, @p208, @p209, @p210, @p211, @p212, @p213, @p214, @p215, @p216, @p217, @p218, @p219, 2),
(@p220, @p221, @p222, @p223, @p224, @p225, @p226, @p227, @p228, @p229, @p230, @p231, @p232, @p233, @p234, @p235, @p236, @p237, @p238, @p239, @p240, @p241, @p242, @p243, @p244, @p245, @p246, 3),
(@p247, @p248, @p249, @p250, @p251, @p252, @p253, @p254, @p255, @p256, @p257, @p258, @p259, @p260, @p261, @p262, @p263, @p264, @p265, @p266, @p267, @p268, @p269, @p270, @p271, @p272, @p273, 4),
(@p274, @p275, @p276, @p277, @p278, @p279, @p280, @p281, @p282, @p283, @p284, @p285, @p286, @p287, @p288, @p289, @p290, @p291, @p292, @p293, @p294, @p295, @p296, @p297, @p298, @p299, @p300, 5),
(@p301, @p302, @p303, @p304, @p305, @p306, @p307, @p308, @p309, @p310, @p311, @p312, @p313, @p314, @p315, @p316, @p317, @p318, @p319, @p320, @p321, @p322, @p323, @p324, @p325, @p326, @p327, 6),
(@p328, @p329, @p330, @p331, @p332, @p333, @p334, @p335, @p336, @p337, @p338, @p339, @p340, @p341, @p342, @p343, @p344, @p345, @p346, @p347, @p348, @p349, @p350, @p351, @p352, @p353, @p354, 7),
(@p355, @p356, @p357, @p358, @p359, @p360, @p361, @p362, @p363, @p364, @p365, @p366, @p367, @p368, @p369, @p370, @p371, @p372, @p373, @p374, @p375, @p376, @p377, @p378, @p379, @p380, @p381, 8),
(@p382, @p383, @p384, @p385, @p386, @p387, @p388, @p389, @p390, @p391, @p392, @p393, @p394, @p395, @p396, @p397, @p398, @p399, @p400, @p401, @p402, @p403, @p404, @p405, @p406, @p407, @p408, 9),
(@p409, @p410, @p411, @p412, @p413, @p414, @p415, @p416, @p417, @p418, @p419, @p420, @p421, @p422, @p423, @p424, @p425, @p426, @p427, @p428, @p429, @p430, @p431, @p432, @p433, @p434, @p435, 10),
(@p436, @p437, @p438, @p439, @p440, @p441, @p442, @p443, @p444, @p445, @p446, @p447, @p448, @p449, @p450, @p451, @p452, @p453, @p454, @p455, @p456, @p457, @p458, @p459, @p460, @p461, @p462, 11),
(@p463, @p464, @p465, @p466, @p467, @p468, @p469, @p470, @p471, @p472, @p473, @p474, @p475, @p476, @p477, @p478, @p479, @p480, @p481, @p482, @p483, @p484, @p485, @p486, @p487, @p488, @p489, 12),
(@p490, @p491, @p492, @p493, @p494, @p495, @p496, @p497, @p498, @p499, @p500, @p501, @p502, @p503, @p504, @p505, @p506, @p507, @p508, @p509, @p510, @p511, @p512, @p513, @p514, @p515, @p516, 13),
(@p517, @p518, @p519, @p520, @p521, @p522, @p523, @p524, @p525, @p526, @p527, @p528, @p529, @p530, @p531, @p532, @p533, @p534, @p535, @p536, @p537, @p538, @p539, @p540, @p541, @p542, @p543, 14),
(@p544, @p545, @p546, @p547, @p548, @p549, @p550, @p551, @p552, @p553, @p554, @p555, @p556, @p557, @p558, @p559, @p560, @p561, @p562, @p563, @p564, @p565, @p566, @p567, @p568, @p569, @p570, 15),
(@p571, @p572, @p573, @p574, @p575, @p576, @p577, @p578, @p579, @p580, @p581, @p582, @p583, @p584, @p585, @p586, @p587, @p588, @p589, @p590, @p591, @p592, @p593, @p594, @p595, @p596, @p597, 16),
(@p598, @p599, @p600, @p601, @p602, @p603, @p604, @p605, @p606, @p607, @p608, @p609, @p610, @p611, @p612, @p613, @p614, @p615, @p616, @p617, @p618, @p619, @p620, @p621, @p622, @p623, @p624, 17),
(@p625, @p626, @p627, @p628, @p629, @p630, @p631, @p632, @p633, @p634, @p635, @p636, @p637, @p638, @p639, @p640, @p641, @p642, @p643, @p644, @p645, @p646, @p647, @p648, @p649, @p650, @p651, 18),
(@p652, @p653, @p654, @p655, @p656, @p657, @p658, @p659, @p660, @p661, @p662, @p663, @p664, @p665, @p666, @p667, @p668, @p669, @p670, @p671, @p672, @p673, @p674, @p675, @p676, @p677, @p678, 19)) AS i ([ComprehensiveIncomeNetOfTax], [CostOfRevenue], [CostofGoodsAndServicesSold], [Depreciation], [DepreciationAndAmortization], [Ebit], [Ebitda], [FiscalDateEnding], [GrossProfit], [IncomeBeforeTax], [IncomeTaxExpense], [InterestAndDebtExpense], [InterestExpense], [InterestIncome], [InvestmentIncomeNet], [NetIncome], [NetIncomeFromContinuingOperations], [NetInterestIncome], [NonInterestIncome], [OperatingExpenses], [OperatingIncome], [OtherNonOperatingIncome], [ReportedCurrency], [ResearchAndDevelopment], [SellingGeneralAndAdministrative], [Symbol], [TotalRevenue], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([ComprehensiveIncomeNetOfTax], [CostOfRevenue], [CostofGoodsAndServicesSold], [Depreciation], [DepreciationAndAmortization], [Ebit], [Ebitda], [FiscalDateEnding], [GrossProfit], [IncomeBeforeTax], [IncomeTaxExpense], [InterestAndDebtExpense], [InterestExpense], [InterestIncome], [InvestmentIncomeNet], [NetIncome], [NetIncomeFromContinuingOperations], [NetInterestIncome], [NonInterestIncome], [OperatingExpenses], [OperatingIncome], [OtherNonOperatingIncome], [ReportedCurrency], [ResearchAndDevelopment], [SellingGeneralAndAdministrative], [Symbol], [TotalRevenue])
VALUES (i.[ComprehensiveIncomeNetOfTax], i.[CostOfRevenue], i.[CostofGoodsAndServicesSold], i.[Depreciation], i.[DepreciationAndAmortization], i.[Ebit], i.[Ebitda], i.[FiscalDateEnding], i.[GrossProfit], i.[IncomeBeforeTax], i.[IncomeTaxExpense], i.[InterestAndDebtExpense], i.[InterestExpense], i.[InterestIncome], i.[InvestmentIncomeNet], i.[NetIncome], i.[NetIncomeFromContinuingOperations], i.[NetInterestIncome], i.[NonInterestIncome], i.[OperatingExpenses], i.[OperatingIncome], i.[OtherNonOperatingIncome], i.[ReportedCurrency], i.[ResearchAndDevelopment], i.[SellingGeneralAndAdministrative], i.[Symbol], i.[TotalRevenue])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted5;

SELECT [i].[Id] FROM @inserted5 i
ORDER BY [i].[_Position];
2022-05-12 00:57:20.352 +03:00 [INF] AddOrUpdate run successful.
2022-05-12 00:57:20.466 +03:00 [INF] Response has success status code
2022-05-12 00:57:20.466 +03:00 [INF] Trying to deserialize response.
2022-05-12 00:57:20.467 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 00:57:20.478 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__symbol_0
2022-05-12 00:57:20.480 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.Earnings.
2022-05-12 00:57:20.487 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [e].[Symbol], [e].[ExistInApi], [e].[LastApiRefresh], [e].[LastLocalRefresh]
FROM [Earnings] AS [e]
WHERE [e].[Symbol] = @__entity_Symbol_0
2022-05-12 00:57:20.491 +03:00 [INF] Entity does not exist. Adding to DB.
2022-05-12 00:57:20.503 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = Boolean), @p2='?' (DbType = DateTime2), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Earnings] ([Symbol], [ExistInApi], [LastApiRefresh], [LastLocalRefresh])
VALUES (@p0, @p1, @p2, @p3);
2022-05-12 00:57:20.516 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (DbType = Double), @p2='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AnnualEarning] ([FiscalDateEnding], [ReportedEPS], [Symbol])
VALUES (@p0, @p1, @p2);
SELECT [Id]
FROM [AnnualEarning]
WHERE @@ROWCOUNT = 1 AND [Id] = scope_identity();
2022-05-12 00:57:20.528 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@p0='?' (DbType = Double), @p1='?' (DbType = DateTime2), @p2='?' (DbType = DateTime2), @p3='?' (DbType = Double), @p4='?' (DbType = Double), @p5='?' (DbType = Double), @p6='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [QuarterlyEarning] ([EstimatedEPS], [FiscalDateEnding], [ReportedDate], [ReportedEPS], [Surprise], [SurprisePercentage], [Symbol])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
SELECT [Id]
FROM [QuarterlyEarning]
WHERE @@ROWCOUNT = 1 AND [Id] = scope_identity();
2022-05-12 00:57:20.537 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@p0='?' (DbType = Double), @p1='?' (DbType = DateTime2), @p2='?' (DbType = DateTime2), @p3='?' (DbType = Double), @p4='?' (DbType = Double), @p5='?' (DbType = Double), @p6='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [QuarterlyEarning] ([EstimatedEPS], [FiscalDateEnding], [ReportedDate], [ReportedEPS], [Surprise], [SurprisePercentage], [Symbol])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
SELECT [Id]
FROM [QuarterlyEarning]
WHERE @@ROWCOUNT = 1 AND [Id] = scope_identity();
2022-05-12 00:57:20.545 +03:00 [INF] AddOrUpdate run successful.
2022-05-12 00:57:20.635 +03:00 [INF] Response has success status code
2022-05-12 00:57:20.636 +03:00 [INF] Trying to deserialize response.
2022-05-12 00:57:20.637 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 00:57:20.647 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__symbol_0
2022-05-12 00:57:20.649 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.BalanceSheet.
2022-05-12 00:57:20.660 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [b].[Symbol], [b].[ExistInApi], [b].[LastApiRefresh], [b].[LastLocalRefresh]
FROM [BalanceSheets] AS [b]
WHERE [b].[Symbol] = @__entity_Symbol_0
2022-05-12 00:57:20.662 +03:00 [INF] Entity does not exist. Adding to DB.
2022-05-12 00:57:20.675 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = Boolean), @p2='?' (DbType = DateTime2), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [BalanceSheets] ([Symbol], [ExistInApi], [LastApiRefresh], [LastLocalRefresh])
VALUES (@p0, @p1, @p2, @p3);
2022-05-12 00:57:20.689 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@p0='?' (DbType = Int64), @p1='?' (DbType = Double), @p2='?' (DbType = Double), @p3='?' (DbType = Double), @p4='?' (DbType = Double), @p5='?' (DbType = Int64), @p6='?' (DbType = Int64), @p7='?' (DbType = Int64), @p8='?' (DbType = Double), @p9='?' (DbType = Int64), @p10='?' (DbType = Int64), @p11='?' (DbType = DateTime2), @p12='?' (DbType = Double), @p13='?' (DbType = Double), @p14='?' (DbType = Double), @p15='?' (DbType = Double), @p16='?' (DbType = Int64), @p17='?' (DbType = Double), @p18='?' (DbType = Int64), @p19='?' (DbType = Double), @p20='?' (DbType = Double), @p21='?' (DbType = Double), @p22='?' (DbType = Double), @p23='?' (DbType = Double), @p24='?' (DbType = Int64), @p25='?' (Size = 4000), @p26='?' (DbType = Double), @p27='?' (DbType = Double), @p28='?' (DbType = Double), @p29='?' (DbType = Double), @p30='?' (Size = 450), @p31='?' (DbType = Double), @p32='?' (DbType = Double), @p33='?' (DbType = Double), @p34='?' (DbType = Double), @p35='?' (DbType = Double), @p36='?' (DbType = Double), @p37='?' (DbType = Double), @p38='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [BalanceSheetAnnualReport] ([AccumulatedDepreciationAmortizationPPE], [CapitalLeaseObligations], [CashAndCashEquivalentsAtCarryingValue], [CashAndShortTermInvestments], [CommonStock], [CommonStockSharesOutstanding], [CurrentAccountsPayable], [CurrentDebt], [CurrentLongTermDebt], [CurrentNetReceivables], [DeferredRevenue], [FiscalDateEnding], [Goodwill], [IntangibleAssets], [IntangibleAssetsExcludingGoodwill], [Inventory], [Investments], [LongTermDebt], [LongTermDebtNoncurrent], [LongTermInvestments], [OtherCurrentAssets], [OtherCurrentLiabilities], [OtherNonCurrentAssets], [OtherNonCurrentLiabilities], [PropertyPlantEquipment], [ReportedCurrency], [RetainedEarnings], [ShortLongTermDebtTotal], [ShortTermDebt], [ShortTermInvestments], [Symbol], [TotalAssets], [TotalCurrentAssets], [TotalCurrentLiabilities], [TotalLiabilities], [TotalNonCurrentAssets], [TotalNonCurrentLiabilities], [TotalShareholderEquity], [TreasuryStock])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21, @p22, @p23, @p24, @p25, @p26, @p27, @p28, @p29, @p30, @p31, @p32, @p33, @p34, @p35, @p36, @p37, @p38);
SELECT [Id]
FROM [BalanceSheetAnnualReport]
WHERE @@ROWCOUNT = 1 AND [Id] = scope_identity();
2022-05-12 00:57:20.703 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@p0='?' (DbType = Int64), @p1='?' (DbType = Double), @p2='?' (DbType = Double), @p3='?' (DbType = Double), @p4='?' (DbType = Double), @p5='?' (DbType = Int64), @p6='?' (DbType = Int64), @p7='?' (DbType = Int64), @p8='?' (DbType = Double), @p9='?' (DbType = Int64), @p10='?' (DbType = Int64), @p11='?' (DbType = DateTime2), @p12='?' (DbType = Double), @p13='?' (DbType = Double), @p14='?' (DbType = Double), @p15='?' (DbType = Double), @p16='?' (DbType = Int64), @p17='?' (DbType = Double), @p18='?' (DbType = Int64), @p19='?' (DbType = Double), @p20='?' (DbType = Double), @p21='?' (DbType = Double), @p22='?' (DbType = Double), @p23='?' (DbType = Double), @p24='?' (DbType = Int64), @p25='?' (Size = 4000), @p26='?' (DbType = Double), @p27='?' (DbType = Double), @p28='?' (DbType = Double), @p29='?' (DbType = Double), @p30='?' (Size = 450), @p31='?' (DbType = Double), @p32='?' (DbType = Double), @p33='?' (DbType = Double), @p34='?' (DbType = Double), @p35='?' (DbType = Double), @p36='?' (DbType = Double), @p37='?' (DbType = Double), @p38='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [BalanceSheetQuarterlyReports] ([AccumulatedDepreciationAmortizationPPE], [CapitalLeaseObligations], [CashAndCashEquivalentsAtCarryingValue], [CashAndShortTermInvestments], [CommonStock], [CommonStockSharesOutstanding], [CurrentAccountsPayable], [CurrentDebt], [CurrentLongTermDebt], [CurrentNetReceivables], [DeferredRevenue], [FiscalDateEnding], [Goodwill], [IntangibleAssets], [IntangibleAssetsExcludingGoodwill], [Inventory], [Investments], [LongTermDebt], [LongTermDebtNoncurrent], [LongTermInvestments], [OtherCurrentAssets], [OtherCurrentLiabilities], [OtherNonCurrentAssets], [OtherNonCurrentLiabilities], [PropertyPlantEquipment], [ReportedCurrency], [RetainedEarnings], [ShortLongTermDebtTotal], [ShortTermDebt], [ShortTermInvestments], [Symbol], [TotalAssets], [TotalCurrentAssets], [TotalCurrentLiabilities], [TotalLiabilities], [TotalNonCurrentAssets], [TotalNonCurrentLiabilities], [TotalShareholderEquity], [TreasuryStock])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21, @p22, @p23, @p24, @p25, @p26, @p27, @p28, @p29, @p30, @p31, @p32, @p33, @p34, @p35, @p36, @p37, @p38);
SELECT [Id]
FROM [BalanceSheetQuarterlyReports]
WHERE @@ROWCOUNT = 1 AND [Id] = scope_identity();
2022-05-12 00:57:20.719 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@p0='?' (DbType = Int64), @p1='?' (DbType = Double), @p2='?' (DbType = Double), @p3='?' (DbType = Double), @p4='?' (DbType = Double), @p5='?' (DbType = Int64), @p6='?' (DbType = Int64), @p7='?' (DbType = Int64), @p8='?' (DbType = Double), @p9='?' (DbType = Int64), @p10='?' (DbType = Int64), @p11='?' (DbType = DateTime2), @p12='?' (DbType = Double), @p13='?' (DbType = Double), @p14='?' (DbType = Double), @p15='?' (DbType = Double), @p16='?' (DbType = Int64), @p17='?' (DbType = Double), @p18='?' (DbType = Int64), @p19='?' (DbType = Double), @p20='?' (DbType = Double), @p21='?' (DbType = Double), @p22='?' (DbType = Double), @p23='?' (DbType = Double), @p24='?' (DbType = Int64), @p25='?' (Size = 4000), @p26='?' (DbType = Double), @p27='?' (DbType = Double), @p28='?' (DbType = Double), @p29='?' (DbType = Double), @p30='?' (Size = 450), @p31='?' (DbType = Double), @p32='?' (DbType = Double), @p33='?' (DbType = Double), @p34='?' (DbType = Double), @p35='?' (DbType = Double), @p36='?' (DbType = Double), @p37='?' (DbType = Double), @p38='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [BalanceSheetQuarterlyReports] ([AccumulatedDepreciationAmortizationPPE], [CapitalLeaseObligations], [CashAndCashEquivalentsAtCarryingValue], [CashAndShortTermInvestments], [CommonStock], [CommonStockSharesOutstanding], [CurrentAccountsPayable], [CurrentDebt], [CurrentLongTermDebt], [CurrentNetReceivables], [DeferredRevenue], [FiscalDateEnding], [Goodwill], [IntangibleAssets], [IntangibleAssetsExcludingGoodwill], [Inventory], [Investments], [LongTermDebt], [LongTermDebtNoncurrent], [LongTermInvestments], [OtherCurrentAssets], [OtherCurrentLiabilities], [OtherNonCurrentAssets], [OtherNonCurrentLiabilities], [PropertyPlantEquipment], [ReportedCurrency], [RetainedEarnings], [ShortLongTermDebtTotal], [ShortTermDebt], [ShortTermInvestments], [Symbol], [TotalAssets], [TotalCurrentAssets], [TotalCurrentLiabilities], [TotalLiabilities], [TotalNonCurrentAssets], [TotalNonCurrentLiabilities], [TotalShareholderEquity], [TreasuryStock])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21, @p22, @p23, @p24, @p25, @p26, @p27, @p28, @p29, @p30, @p31, @p32, @p33, @p34, @p35, @p36, @p37, @p38);
SELECT [Id]
FROM [BalanceSheetQuarterlyReports]
WHERE @@ROWCOUNT = 1 AND [Id] = scope_identity();
2022-05-12 00:57:20.729 +03:00 [INF] AddOrUpdate run successful.
2022-05-12 00:57:21.188 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CashFlow with Symbol ATAQ-WS
2022-05-12 00:57:21.190 +03:00 [INF] Generating URI for CASH_FLOW with params: symbol: ATAQ-WS
2022-05-12 00:57:21.190 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=CASH_FLOW&symbol=ATAQ-WS
2022-05-12 00:57:21.191 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=CASH_FLOW&symbol=ATAQ-WS".
2022-05-12 00:57:21.935 +03:00 [INF] Response has success status code
2022-05-12 00:57:21.936 +03:00 [INF] Trying to deserialize response.
2022-05-12 00:57:21.937 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 00:57:21.947 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__symbol_0
2022-05-12 00:57:21.949 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.CashFlow.
2022-05-12 00:57:21.956 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[ExistInApi], [c].[LastApiRefresh], [c].[LastLocalRefresh]
FROM [CashFlows] AS [c]
WHERE [c].[Symbol] = @__entity_Symbol_0
2022-05-12 00:57:21.958 +03:00 [INF] Entity does not exist. Adding to DB.
2022-05-12 00:57:21.971 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = Boolean), @p2='?' (DbType = DateTime2), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [CashFlows] ([Symbol], [ExistInApi], [LastApiRefresh], [LastLocalRefresh])
VALUES (@p0, @p1, @p2, @p3);
2022-05-12 00:57:21.978 +03:00 [INF] AddOrUpdate run successful.
2022-05-12 00:57:48.747 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CompanyOverview with Symbol BIPH
2022-05-12 00:57:48.751 +03:00 [INF] Generating URI for OVERVIEW with params: symbol: BIPH
2022-05-12 00:57:48.751 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=OVERVIEW&symbol=BIPH
2022-05-12 00:57:48.752 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=OVERVIEW&symbol=BIPH".
2022-05-12 00:57:48.978 +03:00 [INF] Response has success status code
2022-05-12 00:57:48.979 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.CompanyOverview for symbol BIPH
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyOverview(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 109
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 00:57:50.367 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.IncomeStatement with Symbol ATMP
2022-05-12 00:57:50.369 +03:00 [INF] Generating URI for INCOME_STATEMENT with params: symbol: ATMP
2022-05-12 00:57:50.369 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=INCOME_STATEMENT&symbol=ATMP
2022-05-12 00:57:50.370 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=INCOME_STATEMENT&symbol=ATMP".
2022-05-12 00:57:50.556 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.Earnings with Symbol AVIR
2022-05-12 00:57:50.558 +03:00 [INF] Generating URI for EARNINGS with params: symbol: AVIR
2022-05-12 00:57:50.559 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=EARNINGS&symbol=AVIR
2022-05-12 00:57:50.560 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=EARNINGS&symbol=AVIR".
2022-05-12 00:57:50.590 +03:00 [INF] Response has success status code
2022-05-12 00:57:50.590 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.IncomeStatement for symbol ATMP
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetIncomeStatement(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 69
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 00:57:50.745 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.BalanceSheet with Symbol BCV
2022-05-12 00:57:50.747 +03:00 [INF] Generating URI for BALANCE_SHEET with params: symbol: BCV
2022-05-12 00:57:50.748 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BCV
2022-05-12 00:57:50.748 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BCV".
2022-05-12 00:57:50.782 +03:00 [INF] Response has success status code
2022-05-12 00:57:50.783 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.Earnings for symbol AVIR
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyEarnings(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 142
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 00:57:50.985 +03:00 [INF] Response has success status code
2022-05-12 00:57:50.985 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.BalanceSheet for symbol BCV
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetBalanceSheet(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 82
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 00:57:51.985 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CashFlow with Symbol ATCO-P-E
2022-05-12 00:57:51.987 +03:00 [INF] Generating URI for CASH_FLOW with params: symbol: ATCO-P-E
2022-05-12 00:57:51.987 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=CASH_FLOW&symbol=ATCO-P-E
2022-05-12 00:57:51.988 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=CASH_FLOW&symbol=ATCO-P-E".
2022-05-12 00:57:52.221 +03:00 [INF] Response has success status code
2022-05-12 00:57:52.224 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.CashFlow for symbol ATCO-P-E
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCashFlow(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 96
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 00:58:02.545 +03:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/screener-model - -
2022-05-12 00:58:02.545 +03:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/distribution/market-cap/30 - -
2022-05-12 00:58:02.546 +03:00 [INF] CORS policy execution successful.
2022-05-12 00:58:02.547 +03:00 [INF] CORS policy execution successful.
2022-05-12 00:58:02.547 +03:00 [INF] Executing endpoint 'SaluteStocksAPI.Controllers.ApiController.GetScreenerModel (SaluteStocksAPI)'
2022-05-12 00:58:02.547 +03:00 [INF] Executing endpoint 'SaluteStocksAPI.Controllers.ApiController.GetMarketCapDistribution (SaluteStocksAPI)'
2022-05-12 00:58:02.548 +03:00 [INF] Route matched with {action = "GetScreenerModel", controller = "Api"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetScreenerModel() on controller SaluteStocksAPI.Controllers.ApiController (SaluteStocksAPI).
2022-05-12 00:58:02.549 +03:00 [INF] Route matched with {action = "GetMarketCapDistribution", controller = "Api"}. Executing controller action with signature System.Threading.Tasks.Task`1[System.String] GetMarketCapDistribution(Int32) on controller SaluteStocksAPI.Controllers.ApiController (SaluteStocksAPI).
2022-05-12 00:58:02.550 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 00:58:02.551 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 00:58:02.564 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[MarketCapitalization])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 00:58:02.564 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[MarketCapitalization])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 00:58:02.577 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[MarketCapitalization])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 00:58:02.580 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[MarketCapitalization])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 00:58:02.589 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[EBITDA])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 00:58:02.591 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 00:58:02.600 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[EBITDA])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 00:58:02.603 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 00:58:02.611 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[PERatio])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 00:58:02.615 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 00:58:02.622 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[PERatio])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 00:58:02.624 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2022-05-12 00:58:02.626 +03:00 [INF] Executed action SaluteStocksAPI.Controllers.ApiController.GetScreenerModel (SaluteStocksAPI) in 75.8573ms
2022-05-12 00:58:02.627 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 00:58:02.627 +03:00 [INF] Executed endpoint 'SaluteStocksAPI.Controllers.ApiController.GetScreenerModel (SaluteStocksAPI)'
2022-05-12 00:58:02.630 +03:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/screener-model - - - 200 - text/plain;+charset=utf-8 84.4108ms
2022-05-12 00:58:02.640 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 00:58:02.654 +03:00 [INF] Executed DbCommand (12ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 00:58:02.665 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 00:58:02.675 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 00:58:02.686 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 00:58:02.699 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 00:58:02.715 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 00:58:02.729 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 00:58:02.739 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 00:58:02.749 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 00:58:02.761 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 00:58:02.776 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 00:58:02.786 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 00:58:02.796 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 00:58:02.806 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 00:58:02.818 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 00:58:02.830 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 00:58:02.842 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 00:58:02.859 +03:00 [INF] Executed DbCommand (12ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 00:58:02.873 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 00:58:02.891 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 00:58:02.903 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 00:58:02.919 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 00:58:02.935 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 00:58:02.951 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 00:58:02.954 +03:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2022-05-12 00:58:02.954 +03:00 [INF] Executed action SaluteStocksAPI.Controllers.ApiController.GetMarketCapDistribution (SaluteStocksAPI) in 403.5428ms
2022-05-12 00:58:02.955 +03:00 [INF] Executed endpoint 'SaluteStocksAPI.Controllers.ApiController.GetMarketCapDistribution (SaluteStocksAPI)'
2022-05-12 00:58:02.956 +03:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/distribution/market-cap/30 - - - 200 - text/plain;+charset=utf-8 410.7949ms
2022-05-12 00:58:18.992 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CompanyOverview with Symbol BIP-P-A
2022-05-12 00:58:18.994 +03:00 [INF] Generating URI for OVERVIEW with params: symbol: BIP-P-A
2022-05-12 00:58:18.994 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=OVERVIEW&symbol=BIP-P-A
2022-05-12 00:58:18.995 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=OVERVIEW&symbol=BIP-P-A".
2022-05-12 00:58:19.331 +03:00 [INF] Response has success status code
2022-05-12 00:58:19.331 +03:00 [INF] Trying to deserialize response.
2022-05-12 00:58:19.332 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.CompanyOverview.
2022-05-12 00:58:19.333 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 00:58:19.386 +03:00 [INF] Executed DbCommand (52ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__entity_Symbol_0
2022-05-12 00:58:19.388 +03:00 [INF] Entity does not exist. Adding to DB.
2022-05-12 00:58:19.405 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (Size = 4000), @p2='?' (DbType = Double), @p3='?' (Size = 4000), @p4='?' (DbType = Double), @p5='?' (DbType = Double), @p6='?' (DbType = Int64), @p7='?' (Size = 4000), @p8='?' (Size = 4000), @p9='?' (Size = 4000), @p10='?' (DbType = Double), @p11='?' (DbType = DateTime2), @p12='?' (DbType = Double), @p13='?' (DbType = Double), @p14='?' (DbType = Int64), @p15='?' (DbType = Double), @p16='?' (DbType = Double), @p17='?' (DbType = Double), @p18='?' (DbType = DateTime2), @p19='?' (Size = 4000), @p20='?' (DbType = Boolean), @p21='?' (Size = 4000), @p22='?' (DbType = Double), @p23='?' (DbType = Int64), @p24='?' (Size = 4000), @p25='?' (DbType = DateTime2), @p26='?' (DbType = DateTime2), @p27='?' (DbType = DateTime2), @p28='?' (DbType = Int64), @p29='?' (Size = 4000), @p30='?' (DbType = Double), @p31='?' (DbType = Double), @p32='?' (DbType = Double), @p33='?' (DbType = Double), @p34='?' (DbType = Double), @p35='?' (DbType = Double), @p36='?' (DbType = Double), @p37='?' (DbType = Double), @p38='?' (DbType = Double), @p39='?' (DbType = Double), @p40='?' (DbType = Double), @p41='?' (DbType = Int64), @p42='?' (Size = 4000), @p43='?' (DbType = Int64), @p44='?' (DbType = Double), @p45='?' (DbType = Double), @p46='?' (DbType = Double), @p47='?' (DbType = Double), @p48='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [CompanyOverviews] ([Symbol], [Address], [AnalystTargetPrice], [AssetType], [Beta], [BookValue], [CIK], [Country], [Currency], [Description], [DilutedEPSTTM], [DividendDate], [DividendPerShare], [DividendYield], [EBITDA], [EPS], [EVToEBITDA], [EVToRevenue], [ExDividendDate], [Exchange], [ExistInApi], [FiscalYearEnd], [ForwardPE], [GrossProfitTTM], [Industry], [LastApiRefresh], [LastLocalRefresh], [LatestQuarter], [MarketCapitalization], [Name], [OperatingMarginTTM], [PEGRatio], [PERatio], [PriceToBookRatio], [PriceToSalesRatioTTM], [ProfitMargin], [QuarterlyEarningsGrowthYOY], [QuarterlyRevenueGrowthYOY], [ReturnOnAssetsTTM], [ReturnOnEquityTTM], [RevenuePerShareTTM], [RevenueTTM], [Sector], [SharesOutstanding], [TrailingPE], [_200DayMovingAverage], [_50DayMovingAverage], [_52WeekHigh], [_52WeekLow])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21, @p22, @p23, @p24, @p25, @p26, @p27, @p28, @p29, @p30, @p31, @p32, @p33, @p34, @p35, @p36, @p37, @p38, @p39, @p40, @p41, @p42, @p43, @p44, @p45, @p46, @p47, @p48);
2022-05-12 00:58:19.413 +03:00 [INF] AddOrUpdate run successful.
2022-05-12 00:58:20.597 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.IncomeStatement with Symbol ATNM
2022-05-12 00:58:20.601 +03:00 [INF] Generating URI for INCOME_STATEMENT with params: symbol: ATNM
2022-05-12 00:58:20.602 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=INCOME_STATEMENT&symbol=ATNM
2022-05-12 00:58:20.602 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=INCOME_STATEMENT&symbol=ATNM".
2022-05-12 00:58:20.805 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.Earnings with Symbol AVLV
2022-05-12 00:58:20.806 +03:00 [INF] Generating URI for EARNINGS with params: symbol: AVLV
2022-05-12 00:58:20.807 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=EARNINGS&symbol=AVLV
2022-05-12 00:58:20.807 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=EARNINGS&symbol=AVLV".
2022-05-12 00:58:20.990 +03:00 [INF] Response has success status code
2022-05-12 00:58:20.991 +03:00 [INF] Trying to deserialize response.
2022-05-12 00:58:20.992 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 00:58:20.995 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.BalanceSheet with Symbol BDC
2022-05-12 00:58:20.996 +03:00 [INF] Generating URI for BALANCE_SHEET with params: symbol: BDC
2022-05-12 00:58:20.997 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BDC
2022-05-12 00:58:20.997 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BDC".
2022-05-12 00:58:21.040 +03:00 [INF] Response has success status code
2022-05-12 00:58:21.041 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 00:58:21.051 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__symbol_0
2022-05-12 00:58:21.052 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.Earnings.
2022-05-12 00:58:21.060 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [e].[Symbol], [e].[ExistInApi], [e].[LastApiRefresh], [e].[LastLocalRefresh]
FROM [Earnings] AS [e]
WHERE [e].[Symbol] = @__entity_Symbol_0
2022-05-12 00:58:21.062 +03:00 [INF] Entity does not exist. Adding to DB.
2022-05-12 00:58:21.074 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = Boolean), @p2='?' (DbType = DateTime2), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Earnings] ([Symbol], [ExistInApi], [LastApiRefresh], [LastLocalRefresh])
VALUES (@p0, @p1, @p2, @p3);
2022-05-12 00:58:21.078 +03:00 [INF] Executed DbCommand (84ms) [Parameters=[@__symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__symbol_0
2022-05-12 00:58:21.079 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.IncomeStatement.
2022-05-12 00:58:21.081 +03:00 [INF] AddOrUpdate run successful.
2022-05-12 00:58:21.081 +03:00 [WRN] Alpha Vantage has no SaluteStocksAPI.Models.FundamentalData.Earnings for symbol AVLV
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageEmptyResponse: Response was empty.
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyEarnings(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 142
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 00:58:21.089 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [i].[Symbol], [i].[ExistInApi], [i].[LastApiRefresh], [i].[LastLocalRefresh]
FROM [IncomeStatements] AS [i]
WHERE [i].[Symbol] = @__entity_Symbol_0
2022-05-12 00:58:21.092 +03:00 [INF] Entity does not exist. Adding to DB.
2022-05-12 00:58:21.106 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = Boolean), @p2='?' (DbType = DateTime2), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [IncomeStatements] ([Symbol], [ExistInApi], [LastApiRefresh], [LastLocalRefresh])
VALUES (@p0, @p1, @p2, @p3);
2022-05-12 00:58:21.151 +03:00 [INF] Executed DbCommand (39ms) [Parameters=[@p4='?' (DbType = Int64), @p5='?' (DbType = Double), @p6='?' (DbType = Double), @p7='?' (DbType = Int64), @p8='?' (DbType = Int64), @p9='?' (DbType = Int64), @p10='?' (DbType = Double), @p11='?' (DbType = DateTime2), @p12='?' (DbType = Double), @p13='?' (DbType = Double), @p14='?' (DbType = Int64), @p15='?' (DbType = Int64), @p16='?' (DbType = Double), @p17='?' (DbType = Int64), @p18='?' (DbType = Int64), @p19='?' (DbType = Double), @p20='?' (DbType = Double), @p21='?' (DbType = Double), @p22='?' (DbType = Int64), @p23='?' (DbType = Double), @p24='?' (DbType = Double), @p25='?' (DbType = Int64), @p26='?' (Size = 4000), @p27='?' (DbType = Int64), @p28='?' (DbType = Double), @p29='?' (Size = 450), @p30='?' (DbType = Int64), @p31='?' (DbType = Int64), @p32='?' (DbType = Double), @p33='?' (DbType = Double), @p34='?' (DbType = Int64), @p35='?' (DbType = Int64), @p36='?' (DbType = Int64), @p37='?' (DbType = Double), @p38='?' (DbType = DateTime2), @p39='?' (DbType = Double), @p40='?' (DbType = Double), @p41='?' (DbType = Int64), @p42='?' (DbType = Int64), @p43='?' (DbType = Double), @p44='?' (DbType = Int64), @p45='?' (DbType = Int64), @p46='?' (DbType = Double), @p47='?' (DbType = Double), @p48='?' (DbType = Double), @p49='?' (DbType = Int64), @p50='?' (DbType = Double), @p51='?' (DbType = Double), @p52='?' (DbType = Int64), @p53='?' (Size = 4000), @p54='?' (DbType = Int64), @p55='?' (DbType = Double), @p56='?' (Size = 450), @p57='?' (DbType = Int64), @p58='?' (DbType = Int64), @p59='?' (DbType = Double), @p60='?' (DbType = Double), @p61='?' (DbType = Int64), @p62='?' (DbType = Int64), @p63='?' (DbType = Int64), @p64='?' (DbType = Double), @p65='?' (DbType = DateTime2), @p66='?' (DbType = Double), @p67='?' (DbType = Double), @p68='?' (DbType = Int64), @p69='?' (DbType = Int64), @p70='?' (DbType = Double), @p71='?' (DbType = Int64), @p72='?' (DbType = Int64), @p73='?' (DbType = Double), @p74='?' (DbType = Double), @p75='?' (DbType = Double), @p76='?' (DbType = Int64), @p77='?' (DbType = Double), @p78='?' (DbType = Double), @p79='?' (DbType = Int64), @p80='?' (Size = 4000), @p81='?' (DbType = Int64), @p82='?' (DbType = Double), @p83='?' (Size = 450), @p84='?' (DbType = Int64), @p85='?' (DbType = Int64), @p86='?' (DbType = Double), @p87='?' (DbType = Double), @p88='?' (DbType = Int64), @p89='?' (DbType = Int64), @p90='?' (DbType = Int64), @p91='?' (DbType = Double), @p92='?' (DbType = DateTime2), @p93='?' (DbType = Double), @p94='?' (DbType = Double), @p95='?' (DbType = Int64), @p96='?' (DbType = Int64), @p97='?' (DbType = Double), @p98='?' (DbType = Int64), @p99='?' (DbType = Int64), @p100='?' (DbType = Double), @p101='?' (DbType = Double), @p102='?' (DbType = Double), @p103='?' (DbType = Int64), @p104='?' (DbType = Double), @p105='?' (DbType = Double), @p106='?' (DbType = Int64), @p107='?' (Size = 4000), @p108='?' (DbType = Int64), @p109='?' (DbType = Double), @p110='?' (Size = 450), @p111='?' (DbType = Int64), @p112='?' (DbType = Int64), @p113='?' (DbType = Double), @p114='?' (DbType = Double), @p115='?' (DbType = Int64), @p116='?' (DbType = Int64), @p117='?' (DbType = Int64), @p118='?' (DbType = Double), @p119='?' (DbType = DateTime2), @p120='?' (DbType = Double), @p121='?' (DbType = Double), @p122='?' (DbType = Int64), @p123='?' (DbType = Int64), @p124='?' (DbType = Double), @p125='?' (DbType = Int64), @p126='?' (DbType = Int64), @p127='?' (DbType = Double), @p128='?' (DbType = Double), @p129='?' (DbType = Double), @p130='?' (DbType = Int64), @p131='?' (DbType = Double), @p132='?' (DbType = Double), @p133='?' (DbType = Int64), @p134='?' (Size = 4000), @p135='?' (DbType = Int64), @p136='?' (DbType = Double), @p137='?' (Size = 450), @p138='?' (DbType = Int64), @p139='?' (DbType = Int64), @p140='?' (DbType = Double), @p141='?' (DbType = Double), @p142='?' (DbType = Int64), @p143='?' (DbType = Int64), @p144='?' (DbType = Int64), @p145='?' (DbType = Double), @p146='?' (DbType = DateTime2), @p147='?' (DbType = Double), @p148='?' (DbType = Double), @p149='?' (DbType = Int64), @p150='?' (DbType = Int64), @p151='?' (DbType = Double), @p152='?' (DbType = Int64), @p153='?' (DbType = Int64), @p154='?' (DbType = Double), @p155='?' (DbType = Double), @p156='?' (DbType = Double), @p157='?' (DbType = Int64), @p158='?' (DbType = Double), @p159='?' (DbType = Double), @p160='?' (DbType = Int64), @p161='?' (Size = 4000), @p162='?' (DbType = Int64), @p163='?' (DbType = Double), @p164='?' (Size = 450), @p165='?' (DbType = Int64), @p166='?' (DbType = Int64), @p167='?' (DbType = Double), @p168='?' (DbType = Double), @p169='?' (DbType = Int64), @p170='?' (DbType = Int64), @p171='?' (DbType = Int64), @p172='?' (DbType = Double), @p173='?' (DbType = DateTime2), @p174='?' (DbType = Double), @p175='?' (DbType = Double), @p176='?' (DbType = Int64), @p177='?' (DbType = Int64), @p178='?' (DbType = Double), @p179='?' (DbType = Int64), @p180='?' (DbType = Int64), @p181='?' (DbType = Double), @p182='?' (DbType = Double), @p183='?' (DbType = Double), @p184='?' (DbType = Int64), @p185='?' (DbType = Double), @p186='?' (DbType = Double), @p187='?' (DbType = Int64), @p188='?' (Size = 4000), @p189='?' (DbType = Int64), @p190='?' (DbType = Double), @p191='?' (Size = 450), @p192='?' (DbType = Int64), @p193='?' (DbType = Int64), @p194='?' (DbType = Double), @p195='?' (DbType = Double), @p196='?' (DbType = Int64), @p197='?' (DbType = Int64), @p198='?' (DbType = Int64), @p199='?' (DbType = Double), @p200='?' (DbType = DateTime2), @p201='?' (DbType = Double), @p202='?' (DbType = Double), @p203='?' (DbType = Int64), @p204='?' (DbType = Int64), @p205='?' (DbType = Double), @p206='?' (DbType = Int64), @p207='?' (DbType = Int64), @p208='?' (DbType = Double), @p209='?' (DbType = Double), @p210='?' (DbType = Double), @p211='?' (DbType = Int64), @p212='?' (DbType = Double), @p213='?' (DbType = Double), @p214='?' (DbType = Int64), @p215='?' (Size = 4000), @p216='?' (DbType = Int64), @p217='?' (DbType = Double), @p218='?' (Size = 450), @p219='?' (DbType = Int64), @p220='?' (DbType = Int64), @p221='?' (DbType = Double), @p222='?' (DbType = Double), @p223='?' (DbType = Int64), @p224='?' (DbType = Int64), @p225='?' (DbType = Int64), @p226='?' (DbType = Double), @p227='?' (DbType = DateTime2), @p228='?' (DbType = Double), @p229='?' (DbType = Double), @p230='?' (DbType = Int64), @p231='?' (DbType = Int64), @p232='?' (DbType = Double), @p233='?' (DbType = Int64), @p234='?' (DbType = Int64), @p235='?' (DbType = Double), @p236='?' (DbType = Double), @p237='?' (DbType = Double), @p238='?' (DbType = Int64), @p239='?' (DbType = Double), @p240='?' (DbType = Double), @p241='?' (DbType = Int64), @p242='?' (Size = 4000), @p243='?' (DbType = Int64), @p244='?' (DbType = Double), @p245='?' (Size = 450), @p246='?' (DbType = Int64), @p247='?' (DbType = Int64), @p248='?' (DbType = Double), @p249='?' (DbType = Double), @p250='?' (DbType = Int64), @p251='?' (DbType = Int64), @p252='?' (DbType = Int64), @p253='?' (DbType = Double), @p254='?' (DbType = DateTime2), @p255='?' (DbType = Double), @p256='?' (DbType = Double), @p257='?' (DbType = Int64), @p258='?' (DbType = Int64), @p259='?' (DbType = Double), @p260='?' (DbType = Int64), @p261='?' (DbType = Int64), @p262='?' (DbType = Double), @p263='?' (DbType = Double), @p264='?' (DbType = Double), @p265='?' (DbType = Int64), @p266='?' (DbType = Double), @p267='?' (DbType = Double), @p268='?' (DbType = Int64), @p269='?' (Size = 4000), @p270='?' (DbType = Int64), @p271='?' (DbType = Double), @p272='?' (Size = 450), @p273='?' (DbType = Int64), @p274='?' (DbType = Int64), @p275='?' (DbType = Double), @p276='?' (DbType = Double), @p277='?' (DbType = Int64), @p278='?' (DbType = Int64), @p279='?' (DbType = Int64), @p280='?' (DbType = Double), @p281='?' (DbType = DateTime2), @p282='?' (DbType = Double), @p283='?' (DbType = Double), @p284='?' (DbType = Int64), @p285='?' (DbType = Int64), @p286='?' (DbType = Double), @p287='?' (DbType = Int64), @p288='?' (DbType = Int64), @p289='?' (DbType = Double), @p290='?' (DbType = Double), @p291='?' (DbType = Double), @p292='?' (DbType = Int64), @p293='?' (DbType = Double), @p294='?' (DbType = Double), @p295='?' (DbType = Int64), @p296='?' (Size = 4000), @p297='?' (DbType = Int64), @p298='?' (DbType = Double), @p299='?' (Size = 450), @p300='?' (DbType = Int64), @p301='?' (DbType = Int64), @p302='?' (DbType = Double), @p303='?' (DbType = Double), @p304='?' (DbType = Int64), @p305='?' (DbType = Int64), @p306='?' (DbType = Int64), @p307='?' (DbType = Double), @p308='?' (DbType = DateTime2), @p309='?' (DbType = Double), @p310='?' (DbType = Double), @p311='?' (DbType = Int64), @p312='?' (DbType = Int64), @p313='?' (DbType = Double), @p314='?' (DbType = Int64), @p315='?' (DbType = Int64), @p316='?' (DbType = Double), @p317='?' (DbType = Double), @p318='?' (DbType = Double), @p319='?' (DbType = Int64), @p320='?' (DbType = Double), @p321='?' (DbType = Double), @p322='?' (DbType = Int64), @p323='?' (Size = 4000), @p324='?' (DbType = Int64), @p325='?' (DbType = Double), @p326='?' (Size = 450), @p327='?' (DbType = Int64), @p328='?' (DbType = Int64), @p329='?' (DbType = Double), @p330='?' (DbType = Double), @p331='?' (DbType = Int64), @p332='?' (DbType = Int64), @p333='?' (DbType = Int64), @p334='?' (DbType = Double), @p335='?' (DbType = DateTime2), @p336='?' (DbType = Double), @p337='?' (DbType = Double), @p338='?' (DbType = Int64), @p339='?' (DbType = Int64), @p340='?' (DbType = Double), @p341='?' (DbType = Int64), @p342='?' (DbType = Int64), @p343='?' (DbType = Double), @p344='?' (DbType = Double), @p345='?' (DbType = Double), @p346='?' (DbType = Int64), @p347='?' (DbType = Double), @p348='?' (DbType = Double), @p349='?' (DbType = Int64), @p350='?' (Size = 4000), @p351='?' (DbType = Int64), @p352='?' (DbType = Double), @p353='?' (Size = 450), @p354='?' (DbType = Int64), @p355='?' (DbType = Int64), @p356='?' (DbType = Double), @p357='?' (DbType = Double), @p358='?' (DbType = Int64), @p359='?' (DbType = Int64), @p360='?' (DbType = Int64), @p361='?' (DbType = Double), @p362='?' (DbType = DateTime2), @p363='?' (DbType = Double), @p364='?' (DbType = Double), @p365='?' (DbType = Int64), @p366='?' (DbType = Int64), @p367='?' (DbType = Double), @p368='?' (DbType = Int64), @p369='?' (DbType = Int64), @p370='?' (DbType = Double), @p371='?' (DbType = Double), @p372='?' (DbType = Double), @p373='?' (DbType = Int64), @p374='?' (DbType = Double), @p375='?' (DbType = Double), @p376='?' (DbType = Int64), @p377='?' (Size = 4000), @p378='?' (DbType = Int64), @p379='?' (DbType = Double), @p380='?' (Size = 450), @p381='?' (DbType = Int64), @p382='?' (DbType = Int64), @p383='?' (DbType = Double), @p384='?' (DbType = Double), @p385='?' (DbType = Int64), @p386='?' (DbType = Int64), @p387='?' (DbType = Int64), @p388='?' (DbType = Double), @p389='?' (DbType = DateTime2), @p390='?' (DbType = Double), @p391='?' (DbType = Double), @p392='?' (DbType = Int64), @p393='?' (DbType = Int64), @p394='?' (DbType = Double), @p395='?' (DbType = Int64), @p396='?' (DbType = Int64), @p397='?' (DbType = Double), @p398='?' (DbType = Double), @p399='?' (DbType = Double), @p400='?' (DbType = Int64), @p401='?' (DbType = Double), @p402='?' (DbType = Double), @p403='?' (DbType = Int64), @p404='?' (Size = 4000), @p405='?' (DbType = Int64), @p406='?' (DbType = Double), @p407='?' (Size = 450), @p408='?' (DbType = Int64), @p409='?' (DbType = Int64), @p410='?' (DbType = Double), @p411='?' (DbType = Double), @p412='?' (DbType = Int64), @p413='?' (DbType = Int64), @p414='?' (DbType = Int64), @p415='?' (DbType = Double), @p416='?' (DbType = DateTime2), @p417='?' (DbType = Double), @p418='?' (DbType = Double), @p419='?' (DbType = Int64), @p420='?' (DbType = Int64), @p421='?' (DbType = Double), @p422='?' (DbType = Int64), @p423='?' (DbType = Int64), @p424='?' (DbType = Double), @p425='?' (DbType = Double), @p426='?' (DbType = Double), @p427='?' (DbType = Int64), @p428='?' (DbType = Double), @p429='?' (DbType = Double), @p430='?' (DbType = Int64), @p431='?' (Size = 4000), @p432='?' (DbType = Int64), @p433='?' (DbType = Double), @p434='?' (Size = 450), @p435='?' (DbType = Int64), @p436='?' (DbType = Int64), @p437='?' (DbType = Double), @p438='?' (DbType = Double), @p439='?' (DbType = Int64), @p440='?' (DbType = Int64), @p441='?' (DbType = Int64), @p442='?' (DbType = Double), @p443='?' (DbType = DateTime2), @p444='?' (DbType = Double), @p445='?' (DbType = Double), @p446='?' (DbType = Int64), @p447='?' (DbType = Int64), @p448='?' (DbType = Double), @p449='?' (DbType = Int64), @p450='?' (DbType = Int64), @p451='?' (DbType = Double), @p452='?' (DbType = Double), @p453='?' (DbType = Double), @p454='?' (DbType = Int64), @p455='?' (DbType = Double), @p456='?' (DbType = Double), @p457='?' (DbType = Int64), @p458='?' (Size = 4000), @p459='?' (DbType = Int64), @p460='?' (DbType = Double), @p461='?' (Size = 450), @p462='?' (DbType = Int64), @p463='?' (DbType = Int64), @p464='?' (DbType = Double), @p465='?' (DbType = Double), @p466='?' (DbType = Int64), @p467='?' (DbType = Int64), @p468='?' (DbType = Int64), @p469='?' (DbType = Double), @p470='?' (DbType = DateTime2), @p471='?' (DbType = Double), @p472='?' (DbType = Double), @p473='?' (DbType = Int64), @p474='?' (DbType = Int64), @p475='?' (DbType = Double), @p476='?' (DbType = Int64), @p477='?' (DbType = Int64), @p478='?' (DbType = Double), @p479='?' (DbType = Double), @p480='?' (DbType = Double), @p481='?' (DbType = Int64), @p482='?' (DbType = Double), @p483='?' (DbType = Double), @p484='?' (DbType = Int64), @p485='?' (Size = 4000), @p486='?' (DbType = Int64), @p487='?' (DbType = Double), @p488='?' (Size = 450), @p489='?' (DbType = Int64), @p490='?' (DbType = Int64), @p491='?' (DbType = Double), @p492='?' (DbType = Double), @p493='?' (DbType = Int64), @p494='?' (DbType = Int64), @p495='?' (DbType = Int64), @p496='?' (DbType = Double), @p497='?' (DbType = DateTime2), @p498='?' (DbType = Double), @p499='?' (DbType = Double), @p500='?' (DbType = Int64), @p501='?' (DbType = Int64), @p502='?' (DbType = Double), @p503='?' (DbType = Int64), @p504='?' (DbType = Int64), @p505='?' (DbType = Double), @p506='?' (DbType = Double), @p507='?' (DbType = Double), @p508='?' (DbType = Int64), @p509='?' (DbType = Double), @p510='?' (DbType = Double), @p511='?' (DbType = Int64), @p512='?' (Size = 4000), @p513='?' (DbType = Int64), @p514='?' (DbType = Double), @p515='?' (Size = 450), @p516='?' (DbType = Int64), @p517='?' (DbType = Int64), @p518='?' (DbType = Double), @p519='?' (DbType = Double), @p520='?' (DbType = Int64), @p521='?' (DbType = Int64), @p522='?' (DbType = Int64), @p523='?' (DbType = Double), @p524='?' (DbType = DateTime2), @p525='?' (DbType = Double), @p526='?' (DbType = Double), @p527='?' (DbType = Int64), @p528='?' (DbType = Int64), @p529='?' (DbType = Double), @p530='?' (DbType = Int64), @p531='?' (DbType = Int64), @p532='?' (DbType = Double), @p533='?' (DbType = Double), @p534='?' (DbType = Double), @p535='?' (DbType = Int64), @p536='?' (DbType = Double), @p537='?' (DbType = Double), @p538='?' (DbType = Int64), @p539='?' (Size = 4000), @p540='?' (DbType = Int64), @p541='?' (DbType = Double), @p542='?' (Size = 450), @p543='?' (DbType = Int64), @p544='?' (DbType = Int64), @p545='?' (DbType = Double), @p546='?' (DbType = Double), @p547='?' (DbType = Int64), @p548='?' (DbType = Int64), @p549='?' (DbType = Int64), @p550='?' (DbType = Double), @p551='?' (DbType = DateTime2), @p552='?' (DbType = Double), @p553='?' (DbType = Double), @p554='?' (DbType = Int64), @p555='?' (DbType = Int64), @p556='?' (DbType = Double), @p557='?' (DbType = Int64), @p558='?' (DbType = Int64), @p559='?' (DbType = Double), @p560='?' (DbType = Double), @p561='?' (DbType = Double), @p562='?' (DbType = Int64), @p563='?' (DbType = Double), @p564='?' (DbType = Double), @p565='?' (DbType = Int64), @p566='?' (Size = 4000), @p567='?' (DbType = Int64), @p568='?' (DbType = Double), @p569='?' (Size = 450), @p570='?' (DbType = Int64), @p571='?' (DbType = Int64), @p572='?' (DbType = Double), @p573='?' (DbType = Double), @p574='?' (DbType = Int64), @p575='?' (DbType = Int64), @p576='?' (DbType = Int64), @p577='?' (DbType = Double), @p578='?' (DbType = DateTime2), @p579='?' (DbType = Double), @p580='?' (DbType = Double), @p581='?' (DbType = Int64), @p582='?' (DbType = Int64), @p583='?' (DbType = Double), @p584='?' (DbType = Int64), @p585='?' (DbType = Int64), @p586='?' (DbType = Double), @p587='?' (DbType = Double), @p588='?' (DbType = Double), @p589='?' (DbType = Int64), @p590='?' (DbType = Double), @p591='?' (DbType = Double), @p592='?' (DbType = Int64), @p593='?' (Size = 4000), @p594='?' (DbType = Int64), @p595='?' (DbType = Double), @p596='?' (Size = 450), @p597='?' (DbType = Int64), @p598='?' (DbType = Int64), @p599='?' (DbType = Double), @p600='?' (DbType = Double), @p601='?' (DbType = Int64), @p602='?' (DbType = Int64), @p603='?' (DbType = Int64), @p604='?' (DbType = Double), @p605='?' (DbType = DateTime2), @p606='?' (DbType = Double), @p607='?' (DbType = Double), @p608='?' (DbType = Int64), @p609='?' (DbType = Int64), @p610='?' (DbType = Double), @p611='?' (DbType = Int64), @p612='?' (DbType = Int64), @p613='?' (DbType = Double), @p614='?' (DbType = Double), @p615='?' (DbType = Double), @p616='?' (DbType = Int64), @p617='?' (DbType = Double), @p618='?' (DbType = Double), @p619='?' (DbType = Int64), @p620='?' (Size = 4000), @p621='?' (DbType = Int64), @p622='?' (DbType = Double), @p623='?' (Size = 450), @p624='?' (DbType = Int64), @p625='?' (DbType = Int64), @p626='?' (DbType = Double), @p627='?' (DbType = Double), @p628='?' (DbType = Int64), @p629='?' (DbType = Int64), @p630='?' (DbType = Int64), @p631='?' (DbType = Double), @p632='?' (DbType = DateTime2), @p633='?' (DbType = Double), @p634='?' (DbType = Double), @p635='?' (DbType = Int64), @p636='?' (DbType = Int64), @p637='?' (DbType = Double), @p638='?' (DbType = Int64), @p639='?' (DbType = Int64), @p640='?' (DbType = Double), @p641='?' (DbType = Double), @p642='?' (DbType = Double), @p643='?' (DbType = Int64), @p644='?' (DbType = Double), @p645='?' (DbType = Double), @p646='?' (DbType = Int64), @p647='?' (Size = 4000), @p648='?' (DbType = Int64), @p649='?' (DbType = Double), @p650='?' (Size = 450), @p651='?' (DbType = Int64), @p652='?' (DbType = Int64), @p653='?' (DbType = Double), @p654='?' (DbType = Double), @p655='?' (DbType = Int64), @p656='?' (DbType = Int64), @p657='?' (DbType = Int64), @p658='?' (DbType = Double), @p659='?' (DbType = DateTime2), @p660='?' (DbType = Double), @p661='?' (DbType = Double), @p662='?' (DbType = Int64), @p663='?' (DbType = Int64), @p664='?' (DbType = Double), @p665='?' (DbType = Int64), @p666='?' (DbType = Int64), @p667='?' (DbType = Double), @p668='?' (DbType = Double), @p669='?' (DbType = Double), @p670='?' (DbType = Int64), @p671='?' (DbType = Double), @p672='?' (DbType = Double), @p673='?' (DbType = Int64), @p674='?' (Size = 4000), @p675='?' (DbType = Int64), @p676='?' (DbType = Double), @p677='?' (Size = 450), @p678='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
DECLARE @inserted0 TABLE ([Id] int, [_Position] [int]);
MERGE [IncomeStatementAnnualReport] USING (
VALUES (@p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21, @p22, @p23, @p24, @p25, @p26, @p27, @p28, @p29, @p30, 0),
(@p31, @p32, @p33, @p34, @p35, @p36, @p37, @p38, @p39, @p40, @p41, @p42, @p43, @p44, @p45, @p46, @p47, @p48, @p49, @p50, @p51, @p52, @p53, @p54, @p55, @p56, @p57, 1),
(@p58, @p59, @p60, @p61, @p62, @p63, @p64, @p65, @p66, @p67, @p68, @p69, @p70, @p71, @p72, @p73, @p74, @p75, @p76, @p77, @p78, @p79, @p80, @p81, @p82, @p83, @p84, 2),
(@p85, @p86, @p87, @p88, @p89, @p90, @p91, @p92, @p93, @p94, @p95, @p96, @p97, @p98, @p99, @p100, @p101, @p102, @p103, @p104, @p105, @p106, @p107, @p108, @p109, @p110, @p111, 3),
(@p112, @p113, @p114, @p115, @p116, @p117, @p118, @p119, @p120, @p121, @p122, @p123, @p124, @p125, @p126, @p127, @p128, @p129, @p130, @p131, @p132, @p133, @p134, @p135, @p136, @p137, @p138, 4)) AS i ([ComprehensiveIncomeNetOfTax], [CostOfRevenue], [CostofGoodsAndServicesSold], [Depreciation], [DepreciationAndAmortization], [Ebit], [Ebitda], [FiscalDateEnding], [GrossProfit], [IncomeBeforeTax], [IncomeTaxExpense], [InterestAndDebtExpense], [InterestExpense], [InterestIncome], [InvestmentIncomeNet], [NetIncome], [NetIncomeFromContinuingOperations], [NetInterestIncome], [NonInterestIncome], [OperatingExpenses], [OperatingIncome], [OtherNonOperatingIncome], [ReportedCurrency], [ResearchAndDevelopment], [SellingGeneralAndAdministrative], [Symbol], [TotalRevenue], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([ComprehensiveIncomeNetOfTax], [CostOfRevenue], [CostofGoodsAndServicesSold], [Depreciation], [DepreciationAndAmortization], [Ebit], [Ebitda], [FiscalDateEnding], [GrossProfit], [IncomeBeforeTax], [IncomeTaxExpense], [InterestAndDebtExpense], [InterestExpense], [InterestIncome], [InvestmentIncomeNet], [NetIncome], [NetIncomeFromContinuingOperations], [NetInterestIncome], [NonInterestIncome], [OperatingExpenses], [OperatingIncome], [OtherNonOperatingIncome], [ReportedCurrency], [ResearchAndDevelopment], [SellingGeneralAndAdministrative], [Symbol], [TotalRevenue])
VALUES (i.[ComprehensiveIncomeNetOfTax], i.[CostOfRevenue], i.[CostofGoodsAndServicesSold], i.[Depreciation], i.[DepreciationAndAmortization], i.[Ebit], i.[Ebitda], i.[FiscalDateEnding], i.[GrossProfit], i.[IncomeBeforeTax], i.[IncomeTaxExpense], i.[InterestAndDebtExpense], i.[InterestExpense], i.[InterestIncome], i.[InvestmentIncomeNet], i.[NetIncome], i.[NetIncomeFromContinuingOperations], i.[NetInterestIncome], i.[NonInterestIncome], i.[OperatingExpenses], i.[OperatingIncome], i.[OtherNonOperatingIncome], i.[ReportedCurrency], i.[ResearchAndDevelopment], i.[SellingGeneralAndAdministrative], i.[Symbol], i.[TotalRevenue])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted0;

SELECT [i].[Id] FROM @inserted0 i
ORDER BY [i].[_Position];

DECLARE @inserted5 TABLE ([Id] int, [_Position] [int]);
MERGE [IncomeStatementQuarterlyReport] USING (
VALUES (@p139, @p140, @p141, @p142, @p143, @p144, @p145, @p146, @p147, @p148, @p149, @p150, @p151, @p152, @p153, @p154, @p155, @p156, @p157, @p158, @p159, @p160, @p161, @p162, @p163, @p164, @p165, 0),
(@p166, @p167, @p168, @p169, @p170, @p171, @p172, @p173, @p174, @p175, @p176, @p177, @p178, @p179, @p180, @p181, @p182, @p183, @p184, @p185, @p186, @p187, @p188, @p189, @p190, @p191, @p192, 1),
(@p193, @p194, @p195, @p196, @p197, @p198, @p199, @p200, @p201, @p202, @p203, @p204, @p205, @p206, @p207, @p208, @p209, @p210, @p211, @p212, @p213, @p214, @p215, @p216, @p217, @p218, @p219, 2),
(@p220, @p221, @p222, @p223, @p224, @p225, @p226, @p227, @p228, @p229, @p230, @p231, @p232, @p233, @p234, @p235, @p236, @p237, @p238, @p239, @p240, @p241, @p242, @p243, @p244, @p245, @p246, 3),
(@p247, @p248, @p249, @p250, @p251, @p252, @p253, @p254, @p255, @p256, @p257, @p258, @p259, @p260, @p261, @p262, @p263, @p264, @p265, @p266, @p267, @p268, @p269, @p270, @p271, @p272, @p273, 4),
(@p274, @p275, @p276, @p277, @p278, @p279, @p280, @p281, @p282, @p283, @p284, @p285, @p286, @p287, @p288, @p289, @p290, @p291, @p292, @p293, @p294, @p295, @p296, @p297, @p298, @p299, @p300, 5),
(@p301, @p302, @p303, @p304, @p305, @p306, @p307, @p308, @p309, @p310, @p311, @p312, @p313, @p314, @p315, @p316, @p317, @p318, @p319, @p320, @p321, @p322, @p323, @p324, @p325, @p326, @p327, 6),
(@p328, @p329, @p330, @p331, @p332, @p333, @p334, @p335, @p336, @p337, @p338, @p339, @p340, @p341, @p342, @p343, @p344, @p345, @p346, @p347, @p348, @p349, @p350, @p351, @p352, @p353, @p354, 7),
(@p355, @p356, @p357, @p358, @p359, @p360, @p361, @p362, @p363, @p364, @p365, @p366, @p367, @p368, @p369, @p370, @p371, @p372, @p373, @p374, @p375, @p376, @p377, @p378, @p379, @p380, @p381, 8),
(@p382, @p383, @p384, @p385, @p386, @p387, @p388, @p389, @p390, @p391, @p392, @p393, @p394, @p395, @p396, @p397, @p398, @p399, @p400, @p401, @p402, @p403, @p404, @p405, @p406, @p407, @p408, 9),
(@p409, @p410, @p411, @p412, @p413, @p414, @p415, @p416, @p417, @p418, @p419, @p420, @p421, @p422, @p423, @p424, @p425, @p426, @p427, @p428, @p429, @p430, @p431, @p432, @p433, @p434, @p435, 10),
(@p436, @p437, @p438, @p439, @p440, @p441, @p442, @p443, @p444, @p445, @p446, @p447, @p448, @p449, @p450, @p451, @p452, @p453, @p454, @p455, @p456, @p457, @p458, @p459, @p460, @p461, @p462, 11),
(@p463, @p464, @p465, @p466, @p467, @p468, @p469, @p470, @p471, @p472, @p473, @p474, @p475, @p476, @p477, @p478, @p479, @p480, @p481, @p482, @p483, @p484, @p485, @p486, @p487, @p488, @p489, 12),
(@p490, @p491, @p492, @p493, @p494, @p495, @p496, @p497, @p498, @p499, @p500, @p501, @p502, @p503, @p504, @p505, @p506, @p507, @p508, @p509, @p510, @p511, @p512, @p513, @p514, @p515, @p516, 13),
(@p517, @p518, @p519, @p520, @p521, @p522, @p523, @p524, @p525, @p526, @p527, @p528, @p529, @p530, @p531, @p532, @p533, @p534, @p535, @p536, @p537, @p538, @p539, @p540, @p541, @p542, @p543, 14),
(@p544, @p545, @p546, @p547, @p548, @p549, @p550, @p551, @p552, @p553, @p554, @p555, @p556, @p557, @p558, @p559, @p560, @p561, @p562, @p563, @p564, @p565, @p566, @p567, @p568, @p569, @p570, 15),
(@p571, @p572, @p573, @p574, @p575, @p576, @p577, @p578, @p579, @p580, @p581, @p582, @p583, @p584, @p585, @p586, @p587, @p588, @p589, @p590, @p591, @p592, @p593, @p594, @p595, @p596, @p597, 16),
(@p598, @p599, @p600, @p601, @p602, @p603, @p604, @p605, @p606, @p607, @p608, @p609, @p610, @p611, @p612, @p613, @p614, @p615, @p616, @p617, @p618, @p619, @p620, @p621, @p622, @p623, @p624, 17),
(@p625, @p626, @p627, @p628, @p629, @p630, @p631, @p632, @p633, @p634, @p635, @p636, @p637, @p638, @p639, @p640, @p641, @p642, @p643, @p644, @p645, @p646, @p647, @p648, @p649, @p650, @p651, 18),
(@p652, @p653, @p654, @p655, @p656, @p657, @p658, @p659, @p660, @p661, @p662, @p663, @p664, @p665, @p666, @p667, @p668, @p669, @p670, @p671, @p672, @p673, @p674, @p675, @p676, @p677, @p678, 19)) AS i ([ComprehensiveIncomeNetOfTax], [CostOfRevenue], [CostofGoodsAndServicesSold], [Depreciation], [DepreciationAndAmortization], [Ebit], [Ebitda], [FiscalDateEnding], [GrossProfit], [IncomeBeforeTax], [IncomeTaxExpense], [InterestAndDebtExpense], [InterestExpense], [InterestIncome], [InvestmentIncomeNet], [NetIncome], [NetIncomeFromContinuingOperations], [NetInterestIncome], [NonInterestIncome], [OperatingExpenses], [OperatingIncome], [OtherNonOperatingIncome], [ReportedCurrency], [ResearchAndDevelopment], [SellingGeneralAndAdministrative], [Symbol], [TotalRevenue], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([ComprehensiveIncomeNetOfTax], [CostOfRevenue], [CostofGoodsAndServicesSold], [Depreciation], [DepreciationAndAmortization], [Ebit], [Ebitda], [FiscalDateEnding], [GrossProfit], [IncomeBeforeTax], [IncomeTaxExpense], [InterestAndDebtExpense], [InterestExpense], [InterestIncome], [InvestmentIncomeNet], [NetIncome], [NetIncomeFromContinuingOperations], [NetInterestIncome], [NonInterestIncome], [OperatingExpenses], [OperatingIncome], [OtherNonOperatingIncome], [ReportedCurrency], [ResearchAndDevelopment], [SellingGeneralAndAdministrative], [Symbol], [TotalRevenue])
VALUES (i.[ComprehensiveIncomeNetOfTax], i.[CostOfRevenue], i.[CostofGoodsAndServicesSold], i.[Depreciation], i.[DepreciationAndAmortization], i.[Ebit], i.[Ebitda], i.[FiscalDateEnding], i.[GrossProfit], i.[IncomeBeforeTax], i.[IncomeTaxExpense], i.[InterestAndDebtExpense], i.[InterestExpense], i.[InterestIncome], i.[InvestmentIncomeNet], i.[NetIncome], i.[NetIncomeFromContinuingOperations], i.[NetInterestIncome], i.[NonInterestIncome], i.[OperatingExpenses], i.[OperatingIncome], i.[OtherNonOperatingIncome], i.[ReportedCurrency], i.[ResearchAndDevelopment], i.[SellingGeneralAndAdministrative], i.[Symbol], i.[TotalRevenue])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted5;

SELECT [i].[Id] FROM @inserted5 i
ORDER BY [i].[_Position];
2022-05-12 00:58:21.163 +03:00 [INF] AddOrUpdate run successful.
2022-05-12 00:58:21.485 +03:00 [INF] Response has success status code
2022-05-12 00:58:21.486 +03:00 [INF] Trying to deserialize response.
2022-05-12 00:58:21.487 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 00:58:21.549 +03:00 [INF] Executed DbCommand (61ms) [Parameters=[@__symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__symbol_0
2022-05-12 00:58:21.550 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.BalanceSheet.
2022-05-12 00:58:21.558 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [b].[Symbol], [b].[ExistInApi], [b].[LastApiRefresh], [b].[LastLocalRefresh]
FROM [BalanceSheets] AS [b]
WHERE [b].[Symbol] = @__entity_Symbol_0
2022-05-12 00:58:21.559 +03:00 [INF] Entity does not exist. Adding to DB.
2022-05-12 00:58:21.573 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = Boolean), @p2='?' (DbType = DateTime2), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [BalanceSheets] ([Symbol], [ExistInApi], [LastApiRefresh], [LastLocalRefresh])
VALUES (@p0, @p1, @p2, @p3);
2022-05-12 00:58:21.655 +03:00 [INF] Executed DbCommand (79ms) [Parameters=[@p4='?' (DbType = Int64), @p5='?' (DbType = Double), @p6='?' (DbType = Double), @p7='?' (DbType = Double), @p8='?' (DbType = Double), @p9='?' (DbType = Int64), @p10='?' (DbType = Int64), @p11='?' (DbType = Int64), @p12='?' (DbType = Double), @p13='?' (DbType = Int64), @p14='?' (DbType = Int64), @p15='?' (DbType = DateTime2), @p16='?' (DbType = Double), @p17='?' (DbType = Double), @p18='?' (DbType = Double), @p19='?' (DbType = Double), @p20='?' (DbType = Int64), @p21='?' (DbType = Double), @p22='?' (DbType = Int64), @p23='?' (DbType = Double), @p24='?' (DbType = Double), @p25='?' (DbType = Double), @p26='?' (DbType = Double), @p27='?' (DbType = Double), @p28='?' (DbType = Int64), @p29='?' (Size = 4000), @p30='?' (DbType = Double), @p31='?' (DbType = Double), @p32='?' (DbType = Double), @p33='?' (DbType = Double), @p34='?' (Size = 450), @p35='?' (DbType = Double), @p36='?' (DbType = Double), @p37='?' (DbType = Double), @p38='?' (DbType = Double), @p39='?' (DbType = Double), @p40='?' (DbType = Double), @p41='?' (DbType = Double), @p42='?' (DbType = Double), @p43='?' (DbType = Int64), @p44='?' (DbType = Double), @p45='?' (DbType = Double), @p46='?' (DbType = Double), @p47='?' (DbType = Double), @p48='?' (DbType = Int64), @p49='?' (DbType = Int64), @p50='?' (DbType = Int64), @p51='?' (DbType = Double), @p52='?' (DbType = Int64), @p53='?' (DbType = Int64), @p54='?' (DbType = DateTime2), @p55='?' (DbType = Double), @p56='?' (DbType = Double), @p57='?' (DbType = Double), @p58='?' (DbType = Double), @p59='?' (DbType = Int64), @p60='?' (DbType = Double), @p61='?' (DbType = Int64), @p62='?' (DbType = Double), @p63='?' (DbType = Double), @p64='?' (DbType = Double), @p65='?' (DbType = Double), @p66='?' (DbType = Double), @p67='?' (DbType = Int64), @p68='?' (Size = 4000), @p69='?' (DbType = Double), @p70='?' (DbType = Double), @p71='?' (DbType = Double), @p72='?' (DbType = Double), @p73='?' (Size = 450), @p74='?' (DbType = Double), @p75='?' (DbType = Double), @p76='?' (DbType = Double), @p77='?' (DbType = Double), @p78='?' (DbType = Double), @p79='?' (DbType = Double), @p80='?' (DbType = Double), @p81='?' (DbType = Double), @p82='?' (DbType = Int64), @p83='?' (DbType = Double), @p84='?' (DbType = Double), @p85='?' (DbType = Double), @p86='?' (DbType = Double), @p87='?' (DbType = Int64), @p88='?' (DbType = Int64), @p89='?' (DbType = Int64), @p90='?' (DbType = Double), @p91='?' (DbType = Int64), @p92='?' (DbType = Int64), @p93='?' (DbType = DateTime2), @p94='?' (DbType = Double), @p95='?' (DbType = Double), @p96='?' (DbType = Double), @p97='?' (DbType = Double), @p98='?' (DbType = Int64), @p99='?' (DbType = Double), @p100='?' (DbType = Int64), @p101='?' (DbType = Double), @p102='?' (DbType = Double), @p103='?' (DbType = Double), @p104='?' (DbType = Double), @p105='?' (DbType = Double), @p106='?' (DbType = Int64), @p107='?' (Size = 4000), @p108='?' (DbType = Double), @p109='?' (DbType = Double), @p110='?' (DbType = Double), @p111='?' (DbType = Double), @p112='?' (Size = 450), @p113='?' (DbType = Double), @p114='?' (DbType = Double), @p115='?' (DbType = Double), @p116='?' (DbType = Double), @p117='?' (DbType = Double), @p118='?' (DbType = Double), @p119='?' (DbType = Double), @p120='?' (DbType = Double), @p121='?' (DbType = Int64), @p122='?' (DbType = Double), @p123='?' (DbType = Double), @p124='?' (DbType = Double), @p125='?' (DbType = Double), @p126='?' (DbType = Int64), @p127='?' (DbType = Int64), @p128='?' (DbType = Int64), @p129='?' (DbType = Double), @p130='?' (DbType = Int64), @p131='?' (DbType = Int64), @p132='?' (DbType = DateTime2), @p133='?' (DbType = Double), @p134='?' (DbType = Double), @p135='?' (DbType = Double), @p136='?' (DbType = Double), @p137='?' (DbType = Int64), @p138='?' (DbType = Double), @p139='?' (DbType = Int64), @p140='?' (DbType = Double), @p141='?' (DbType = Double), @p142='?' (DbType = Double), @p143='?' (DbType = Double), @p144='?' (DbType = Double), @p145='?' (DbType = Int64), @p146='?' (Size = 4000), @p147='?' (DbType = Double), @p148='?' (DbType = Double), @p149='?' (DbType = Double), @p150='?' (DbType = Double), @p151='?' (Size = 450), @p152='?' (DbType = Double), @p153='?' (DbType = Double), @p154='?' (DbType = Double), @p155='?' (DbType = Double), @p156='?' (DbType = Double), @p157='?' (DbType = Double), @p158='?' (DbType = Double), @p159='?' (DbType = Double), @p160='?' (DbType = Int64), @p161='?' (DbType = Double), @p162='?' (DbType = Double), @p163='?' (DbType = Double), @p164='?' (DbType = Double), @p165='?' (DbType = Int64), @p166='?' (DbType = Int64), @p167='?' (DbType = Int64), @p168='?' (DbType = Double), @p169='?' (DbType = Int64), @p170='?' (DbType = Int64), @p171='?' (DbType = DateTime2), @p172='?' (DbType = Double), @p173='?' (DbType = Double), @p174='?' (DbType = Double), @p175='?' (DbType = Double), @p176='?' (DbType = Int64), @p177='?' (DbType = Double), @p178='?' (DbType = Int64), @p179='?' (DbType = Double), @p180='?' (DbType = Double), @p181='?' (DbType = Double), @p182='?' (DbType = Double), @p183='?' (DbType = Double), @p184='?' (DbType = Int64), @p185='?' (Size = 4000), @p186='?' (DbType = Double), @p187='?' (DbType = Double), @p188='?' (DbType = Double), @p189='?' (DbType = Double), @p190='?' (Size = 450), @p191='?' (DbType = Double), @p192='?' (DbType = Double), @p193='?' (DbType = Double), @p194='?' (DbType = Double), @p195='?' (DbType = Double), @p196='?' (DbType = Double), @p197='?' (DbType = Double), @p198='?' (DbType = Double), @p199='?' (DbType = Int64), @p200='?' (DbType = Double), @p201='?' (DbType = Double), @p202='?' (DbType = Double), @p203='?' (DbType = Double), @p204='?' (DbType = Int64), @p205='?' (DbType = Int64), @p206='?' (DbType = Int64), @p207='?' (DbType = Double), @p208='?' (DbType = Int64), @p209='?' (DbType = Int64), @p210='?' (DbType = DateTime2), @p211='?' (DbType = Double), @p212='?' (DbType = Double), @p213='?' (DbType = Double), @p214='?' (DbType = Double), @p215='?' (DbType = Int64), @p216='?' (DbType = Double), @p217='?' (DbType = Int64), @p218='?' (DbType = Double), @p219='?' (DbType = Double), @p220='?' (DbType = Double), @p221='?' (DbType = Double), @p222='?' (DbType = Double), @p223='?' (DbType = Int64), @p224='?' (Size = 4000), @p225='?' (DbType = Double), @p226='?' (DbType = Double), @p227='?' (DbType = Double), @p228='?' (DbType = Double), @p229='?' (Size = 450), @p230='?' (DbType = Double), @p231='?' (DbType = Double), @p232='?' (DbType = Double), @p233='?' (DbType = Double), @p234='?' (DbType = Double), @p235='?' (DbType = Double), @p236='?' (DbType = Double), @p237='?' (DbType = Double), @p238='?' (DbType = Int64), @p239='?' (DbType = Double), @p240='?' (DbType = Double), @p241='?' (DbType = Double), @p242='?' (DbType = Double), @p243='?' (DbType = Int64), @p244='?' (DbType = Int64), @p245='?' (DbType = Int64), @p246='?' (DbType = Double), @p247='?' (DbType = Int64), @p248='?' (DbType = Int64), @p249='?' (DbType = DateTime2), @p250='?' (DbType = Double), @p251='?' (DbType = Double), @p252='?' (DbType = Double), @p253='?' (DbType = Double), @p254='?' (DbType = Int64), @p255='?' (DbType = Double), @p256='?' (DbType = Int64), @p257='?' (DbType = Double), @p258='?' (DbType = Double), @p259='?' (DbType = Double), @p260='?' (DbType = Double), @p261='?' (DbType = Double), @p262='?' (DbType = Int64), @p263='?' (Size = 4000), @p264='?' (DbType = Double), @p265='?' (DbType = Double), @p266='?' (DbType = Double), @p267='?' (DbType = Double), @p268='?' (Size = 450), @p269='?' (DbType = Double), @p270='?' (DbType = Double), @p271='?' (DbType = Double), @p272='?' (DbType = Double), @p273='?' (DbType = Double), @p274='?' (DbType = Double), @p275='?' (DbType = Double), @p276='?' (DbType = Double), @p277='?' (DbType = Int64), @p278='?' (DbType = Double), @p279='?' (DbType = Double), @p280='?' (DbType = Double), @p281='?' (DbType = Double), @p282='?' (DbType = Int64), @p283='?' (DbType = Int64), @p284='?' (DbType = Int64), @p285='?' (DbType = Double), @p286='?' (DbType = Int64), @p287='?' (DbType = Int64), @p288='?' (DbType = DateTime2), @p289='?' (DbType = Double), @p290='?' (DbType = Double), @p291='?' (DbType = Double), @p292='?' (DbType = Double), @p293='?' (DbType = Int64), @p294='?' (DbType = Double), @p295='?' (DbType = Int64), @p296='?' (DbType = Double), @p297='?' (DbType = Double), @p298='?' (DbType = Double), @p299='?' (DbType = Double), @p300='?' (DbType = Double), @p301='?' (DbType = Int64), @p302='?' (Size = 4000), @p303='?' (DbType = Double), @p304='?' (DbType = Double), @p305='?' (DbType = Double), @p306='?' (DbType = Double), @p307='?' (Size = 450), @p308='?' (DbType = Double), @p309='?' (DbType = Double), @p310='?' (DbType = Double), @p311='?' (DbType = Double), @p312='?' (DbType = Double), @p313='?' (DbType = Double), @p314='?' (DbType = Double), @p315='?' (DbType = Double), @p316='?' (DbType = Int64), @p317='?' (DbType = Double), @p318='?' (DbType = Double), @p319='?' (DbType = Double), @p320='?' (DbType = Double), @p321='?' (DbType = Int64), @p322='?' (DbType = Int64), @p323='?' (DbType = Int64), @p324='?' (DbType = Double), @p325='?' (DbType = Int64), @p326='?' (DbType = Int64), @p327='?' (DbType = DateTime2), @p328='?' (DbType = Double), @p329='?' (DbType = Double), @p330='?' (DbType = Double), @p331='?' (DbType = Double), @p332='?' (DbType = Int64), @p333='?' (DbType = Double), @p334='?' (DbType = Int64), @p335='?' (DbType = Double), @p336='?' (DbType = Double), @p337='?' (DbType = Double), @p338='?' (DbType = Double), @p339='?' (DbType = Double), @p340='?' (DbType = Int64), @p341='?' (Size = 4000), @p342='?' (DbType = Double), @p343='?' (DbType = Double), @p344='?' (DbType = Double), @p345='?' (DbType = Double), @p346='?' (Size = 450), @p347='?' (DbType = Double), @p348='?' (DbType = Double), @p349='?' (DbType = Double), @p350='?' (DbType = Double), @p351='?' (DbType = Double), @p352='?' (DbType = Double), @p353='?' (DbType = Double), @p354='?' (DbType = Double), @p355='?' (DbType = Int64), @p356='?' (DbType = Double), @p357='?' (DbType = Double), @p358='?' (DbType = Double), @p359='?' (DbType = Double), @p360='?' (DbType = Int64), @p361='?' (DbType = Int64), @p362='?' (DbType = Int64), @p363='?' (DbType = Double), @p364='?' (DbType = Int64), @p365='?' (DbType = Int64), @p366='?' (DbType = DateTime2), @p367='?' (DbType = Double), @p368='?' (DbType = Double), @p369='?' (DbType = Double), @p370='?' (DbType = Double), @p371='?' (DbType = Int64), @p372='?' (DbType = Double), @p373='?' (DbType = Int64), @p374='?' (DbType = Double), @p375='?' (DbType = Double), @p376='?' (DbType = Double), @p377='?' (DbType = Double), @p378='?' (DbType = Double), @p379='?' (DbType = Int64), @p380='?' (Size = 4000), @p381='?' (DbType = Double), @p382='?' (DbType = Double), @p383='?' (DbType = Double), @p384='?' (DbType = Double), @p385='?' (Size = 450), @p386='?' (DbType = Double), @p387='?' (DbType = Double), @p388='?' (DbType = Double), @p389='?' (DbType = Double), @p390='?' (DbType = Double), @p391='?' (DbType = Double), @p392='?' (DbType = Double), @p393='?' (DbType = Double), @p394='?' (DbType = Int64), @p395='?' (DbType = Double), @p396='?' (DbType = Double), @p397='?' (DbType = Double), @p398='?' (DbType = Double), @p399='?' (DbType = Int64), @p400='?' (DbType = Int64), @p401='?' (DbType = Int64), @p402='?' (DbType = Double), @p403='?' (DbType = Int64), @p404='?' (DbType = Int64), @p405='?' (DbType = DateTime2), @p406='?' (DbType = Double), @p407='?' (DbType = Double), @p408='?' (DbType = Double), @p409='?' (DbType = Double), @p410='?' (DbType = Int64), @p411='?' (DbType = Double), @p412='?' (DbType = Int64), @p413='?' (DbType = Double), @p414='?' (DbType = Double), @p415='?' (DbType = Double), @p416='?' (DbType = Double), @p417='?' (DbType = Double), @p418='?' (DbType = Int64), @p419='?' (Size = 4000), @p420='?' (DbType = Double), @p421='?' (DbType = Double), @p422='?' (DbType = Double), @p423='?' (DbType = Double), @p424='?' (Size = 450), @p425='?' (DbType = Double), @p426='?' (DbType = Double), @p427='?' (DbType = Double), @p428='?' (DbType = Double), @p429='?' (DbType = Double), @p430='?' (DbType = Double), @p431='?' (DbType = Double), @p432='?' (DbType = Double), @p433='?' (DbType = Int64), @p434='?' (DbType = Double), @p435='?' (DbType = Double), @p436='?' (DbType = Double), @p437='?' (DbType = Double), @p438='?' (DbType = Int64), @p439='?' (DbType = Int64), @p440='?' (DbType = Int64), @p441='?' (DbType = Double), @p442='?' (DbType = Int64), @p443='?' (DbType = Int64), @p444='?' (DbType = DateTime2), @p445='?' (DbType = Double), @p446='?' (DbType = Double), @p447='?' (DbType = Double), @p448='?' (DbType = Double), @p449='?' (DbType = Int64), @p450='?' (DbType = Double), @p451='?' (DbType = Int64), @p452='?' (DbType = Double), @p453='?' (DbType = Double), @p454='?' (DbType = Double), @p455='?' (DbType = Double), @p456='?' (DbType = Double), @p457='?' (DbType = Int64), @p458='?' (Size = 4000), @p459='?' (DbType = Double), @p460='?' (DbType = Double), @p461='?' (DbType = Double), @p462='?' (DbType = Double), @p463='?' (Size = 450), @p464='?' (DbType = Double), @p465='?' (DbType = Double), @p466='?' (DbType = Double), @p467='?' (DbType = Double), @p468='?' (DbType = Double), @p469='?' (DbType = Double), @p470='?' (DbType = Double), @p471='?' (DbType = Double), @p472='?' (DbType = Int64), @p473='?' (DbType = Double), @p474='?' (DbType = Double), @p475='?' (DbType = Double), @p476='?' (DbType = Double), @p477='?' (DbType = Int64), @p478='?' (DbType = Int64), @p479='?' (DbType = Int64), @p480='?' (DbType = Double), @p481='?' (DbType = Int64), @p482='?' (DbType = Int64), @p483='?' (DbType = DateTime2), @p484='?' (DbType = Double), @p485='?' (DbType = Double), @p486='?' (DbType = Double), @p487='?' (DbType = Double), @p488='?' (DbType = Int64), @p489='?' (DbType = Double), @p490='?' (DbType = Int64), @p491='?' (DbType = Double), @p492='?' (DbType = Double), @p493='?' (DbType = Double), @p494='?' (DbType = Double), @p495='?' (DbType = Double), @p496='?' (DbType = Int64), @p497='?' (Size = 4000), @p498='?' (DbType = Double), @p499='?' (DbType = Double), @p500='?' (DbType = Double), @p501='?' (DbType = Double), @p502='?' (Size = 450), @p503='?' (DbType = Double), @p504='?' (DbType = Double), @p505='?' (DbType = Double), @p506='?' (DbType = Double), @p507='?' (DbType = Double), @p508='?' (DbType = Double), @p509='?' (DbType = Double), @p510='?' (DbType = Double), @p511='?' (DbType = Int64), @p512='?' (DbType = Double), @p513='?' (DbType = Double), @p514='?' (DbType = Double), @p515='?' (DbType = Double), @p516='?' (DbType = Int64), @p517='?' (DbType = Int64), @p518='?' (DbType = Int64), @p519='?' (DbType = Double), @p520='?' (DbType = Int64), @p521='?' (DbType = Int64), @p522='?' (DbType = DateTime2), @p523='?' (DbType = Double), @p524='?' (DbType = Double), @p525='?' (DbType = Double), @p526='?' (DbType = Double), @p527='?' (DbType = Int64), @p528='?' (DbType = Double), @p529='?' (DbType = Int64), @p530='?' (DbType = Double), @p531='?' (DbType = Double), @p532='?' (DbType = Double), @p533='?' (DbType = Double), @p534='?' (DbType = Double), @p535='?' (DbType = Int64), @p536='?' (Size = 4000), @p537='?' (DbType = Double), @p538='?' (DbType = Double), @p539='?' (DbType = Double), @p540='?' (DbType = Double), @p541='?' (Size = 450), @p542='?' (DbType = Double), @p543='?' (DbType = Double), @p544='?' (DbType = Double), @p545='?' (DbType = Double), @p546='?' (DbType = Double), @p547='?' (DbType = Double), @p548='?' (DbType = Double), @p549='?' (DbType = Double), @p550='?' (DbType = Int64), @p551='?' (DbType = Double), @p552='?' (DbType = Double), @p553='?' (DbType = Double), @p554='?' (DbType = Double), @p555='?' (DbType = Int64), @p556='?' (DbType = Int64), @p557='?' (DbType = Int64), @p558='?' (DbType = Double), @p559='?' (DbType = Int64), @p560='?' (DbType = Int64), @p561='?' (DbType = DateTime2), @p562='?' (DbType = Double), @p563='?' (DbType = Double), @p564='?' (DbType = Double), @p565='?' (DbType = Double), @p566='?' (DbType = Int64), @p567='?' (DbType = Double), @p568='?' (DbType = Int64), @p569='?' (DbType = Double), @p570='?' (DbType = Double), @p571='?' (DbType = Double), @p572='?' (DbType = Double), @p573='?' (DbType = Double), @p574='?' (DbType = Int64), @p575='?' (Size = 4000), @p576='?' (DbType = Double), @p577='?' (DbType = Double), @p578='?' (DbType = Double), @p579='?' (DbType = Double), @p580='?' (Size = 450), @p581='?' (DbType = Double), @p582='?' (DbType = Double), @p583='?' (DbType = Double), @p584='?' (DbType = Double), @p585='?' (DbType = Double), @p586='?' (DbType = Double), @p587='?' (DbType = Double), @p588='?' (DbType = Double), @p589='?' (DbType = Int64), @p590='?' (DbType = Double), @p591='?' (DbType = Double), @p592='?' (DbType = Double), @p593='?' (DbType = Double), @p594='?' (DbType = Int64), @p595='?' (DbType = Int64), @p596='?' (DbType = Int64), @p597='?' (DbType = Double), @p598='?' (DbType = Int64), @p599='?' (DbType = Int64), @p600='?' (DbType = DateTime2), @p601='?' (DbType = Double), @p602='?' (DbType = Double), @p603='?' (DbType = Double), @p604='?' (DbType = Double), @p605='?' (DbType = Int64), @p606='?' (DbType = Double), @p607='?' (DbType = Int64), @p608='?' (DbType = Double), @p609='?' (DbType = Double), @p610='?' (DbType = Double), @p611='?' (DbType = Double), @p612='?' (DbType = Double), @p613='?' (DbType = Int64), @p614='?' (Size = 4000), @p615='?' (DbType = Double), @p616='?' (DbType = Double), @p617='?' (DbType = Double), @p618='?' (DbType = Double), @p619='?' (Size = 450), @p620='?' (DbType = Double), @p621='?' (DbType = Double), @p622='?' (DbType = Double), @p623='?' (DbType = Double), @p624='?' (DbType = Double), @p625='?' (DbType = Double), @p626='?' (DbType = Double), @p627='?' (DbType = Double), @p628='?' (DbType = Int64), @p629='?' (DbType = Double), @p630='?' (DbType = Double), @p631='?' (DbType = Double), @p632='?' (DbType = Double), @p633='?' (DbType = Int64), @p634='?' (DbType = Int64), @p635='?' (DbType = Int64), @p636='?' (DbType = Double), @p637='?' (DbType = Int64), @p638='?' (DbType = Int64), @p639='?' (DbType = DateTime2), @p640='?' (DbType = Double), @p641='?' (DbType = Double), @p642='?' (DbType = Double), @p643='?' (DbType = Double), @p644='?' (DbType = Int64), @p645='?' (DbType = Double), @p646='?' (DbType = Int64), @p647='?' (DbType = Double), @p648='?' (DbType = Double), @p649='?' (DbType = Double), @p650='?' (DbType = Double), @p651='?' (DbType = Double), @p652='?' (DbType = Int64), @p653='?' (Size = 4000), @p654='?' (DbType = Double), @p655='?' (DbType = Double), @p656='?' (DbType = Double), @p657='?' (DbType = Double), @p658='?' (Size = 450), @p659='?' (DbType = Double), @p660='?' (DbType = Double), @p661='?' (DbType = Double), @p662='?' (DbType = Double), @p663='?' (DbType = Double), @p664='?' (DbType = Double), @p665='?' (DbType = Double), @p666='?' (DbType = Double), @p667='?' (DbType = Int64), @p668='?' (DbType = Double), @p669='?' (DbType = Double), @p670='?' (DbType = Double), @p671='?' (DbType = Double), @p672='?' (DbType = Int64), @p673='?' (DbType = Int64), @p674='?' (DbType = Int64), @p675='?' (DbType = Double), @p676='?' (DbType = Int64), @p677='?' (DbType = Int64), @p678='?' (DbType = DateTime2), @p679='?' (DbType = Double), @p680='?' (DbType = Double), @p681='?' (DbType = Double), @p682='?' (DbType = Double), @p683='?' (DbType = Int64), @p684='?' (DbType = Double), @p685='?' (DbType = Int64), @p686='?' (DbType = Double), @p687='?' (DbType = Double), @p688='?' (DbType = Double), @p689='?' (DbType = Double), @p690='?' (DbType = Double), @p691='?' (DbType = Int64), @p692='?' (Size = 4000), @p693='?' (DbType = Double), @p694='?' (DbType = Double), @p695='?' (DbType = Double), @p696='?' (DbType = Double), @p697='?' (Size = 450), @p698='?' (DbType = Double), @p699='?' (DbType = Double), @p700='?' (DbType = Double), @p701='?' (DbType = Double), @p702='?' (DbType = Double), @p703='?' (DbType = Double), @p704='?' (DbType = Double), @p705='?' (DbType = Double), @p706='?' (DbType = Int64), @p707='?' (DbType = Double), @p708='?' (DbType = Double), @p709='?' (DbType = Double), @p710='?' (DbType = Double), @p711='?' (DbType = Int64), @p712='?' (DbType = Int64), @p713='?' (DbType = Int64), @p714='?' (DbType = Double), @p715='?' (DbType = Int64), @p716='?' (DbType = Int64), @p717='?' (DbType = DateTime2), @p718='?' (DbType = Double), @p719='?' (DbType = Double), @p720='?' (DbType = Double), @p721='?' (DbType = Double), @p722='?' (DbType = Int64), @p723='?' (DbType = Double), @p724='?' (DbType = Int64), @p725='?' (DbType = Double), @p726='?' (DbType = Double), @p727='?' (DbType = Double), @p728='?' (DbType = Double), @p729='?' (DbType = Double), @p730='?' (DbType = Int64), @p731='?' (Size = 4000), @p732='?' (DbType = Double), @p733='?' (DbType = Double), @p734='?' (DbType = Double), @p735='?' (DbType = Double), @p736='?' (Size = 450), @p737='?' (DbType = Double), @p738='?' (DbType = Double), @p739='?' (DbType = Double), @p740='?' (DbType = Double), @p741='?' (DbType = Double), @p742='?' (DbType = Double), @p743='?' (DbType = Double), @p744='?' (DbType = Double), @p745='?' (DbType = Int64), @p746='?' (DbType = Double), @p747='?' (DbType = Double), @p748='?' (DbType = Double), @p749='?' (DbType = Double), @p750='?' (DbType = Int64), @p751='?' (DbType = Int64), @p752='?' (DbType = Int64), @p753='?' (DbType = Double), @p754='?' (DbType = Int64), @p755='?' (DbType = Int64), @p756='?' (DbType = DateTime2), @p757='?' (DbType = Double), @p758='?' (DbType = Double), @p759='?' (DbType = Double), @p760='?' (DbType = Double), @p761='?' (DbType = Int64), @p762='?' (DbType = Double), @p763='?' (DbType = Int64), @p764='?' (DbType = Double), @p765='?' (DbType = Double), @p766='?' (DbType = Double), @p767='?' (DbType = Double), @p768='?' (DbType = Double), @p769='?' (DbType = Int64), @p770='?' (Size = 4000), @p771='?' (DbType = Double), @p772='?' (DbType = Double), @p773='?' (DbType = Double), @p774='?' (DbType = Double), @p775='?' (Size = 450), @p776='?' (DbType = Double), @p777='?' (DbType = Double), @p778='?' (DbType = Double), @p779='?' (DbType = Double), @p780='?' (DbType = Double), @p781='?' (DbType = Double), @p782='?' (DbType = Double), @p783='?' (DbType = Double), @p784='?' (DbType = Int64), @p785='?' (DbType = Double), @p786='?' (DbType = Double), @p787='?' (DbType = Double), @p788='?' (DbType = Double), @p789='?' (DbType = Int64), @p790='?' (DbType = Int64), @p791='?' (DbType = Int64), @p792='?' (DbType = Double), @p793='?' (DbType = Int64), @p794='?' (DbType = Int64), @p795='?' (DbType = DateTime2), @p796='?' (DbType = Double), @p797='?' (DbType = Double), @p798='?' (DbType = Double), @p799='?' (DbType = Double), @p800='?' (DbType = Int64), @p801='?' (DbType = Double), @p802='?' (DbType = Int64), @p803='?' (DbType = Double), @p804='?' (DbType = Double), @p805='?' (DbType = Double), @p806='?' (DbType = Double), @p807='?' (DbType = Double), @p808='?' (DbType = Int64), @p809='?' (Size = 4000), @p810='?' (DbType = Double), @p811='?' (DbType = Double), @p812='?' (DbType = Double), @p813='?' (DbType = Double), @p814='?' (Size = 450), @p815='?' (DbType = Double), @p816='?' (DbType = Double), @p817='?' (DbType = Double), @p818='?' (DbType = Double), @p819='?' (DbType = Double), @p820='?' (DbType = Double), @p821='?' (DbType = Double), @p822='?' (DbType = Double), @p823='?' (DbType = Int64), @p824='?' (DbType = Double), @p825='?' (DbType = Double), @p826='?' (DbType = Double), @p827='?' (DbType = Double), @p828='?' (DbType = Int64), @p829='?' (DbType = Int64), @p830='?' (DbType = Int64), @p831='?' (DbType = Double), @p832='?' (DbType = Int64), @p833='?' (DbType = Int64), @p834='?' (DbType = DateTime2), @p835='?' (DbType = Double), @p836='?' (DbType = Double), @p837='?' (DbType = Double), @p838='?' (DbType = Double), @p839='?' (DbType = Int64), @p840='?' (DbType = Double), @p841='?' (DbType = Int64), @p842='?' (DbType = Double), @p843='?' (DbType = Double), @p844='?' (DbType = Double), @p845='?' (DbType = Double), @p846='?' (DbType = Double), @p847='?' (DbType = Int64), @p848='?' (Size = 4000), @p849='?' (DbType = Double), @p850='?' (DbType = Double), @p851='?' (DbType = Double), @p852='?' (DbType = Double), @p853='?' (Size = 450), @p854='?' (DbType = Double), @p855='?' (DbType = Double), @p856='?' (DbType = Double), @p857='?' (DbType = Double), @p858='?' (DbType = Double), @p859='?' (DbType = Double), @p860='?' (DbType = Double), @p861='?' (DbType = Double), @p862='?' (DbType = Int64), @p863='?' (DbType = Double), @p864='?' (DbType = Double), @p865='?' (DbType = Double), @p866='?' (DbType = Double), @p867='?' (DbType = Int64), @p868='?' (DbType = Int64), @p869='?' (DbType = Int64), @p870='?' (DbType = Double), @p871='?' (DbType = Int64), @p872='?' (DbType = Int64), @p873='?' (DbType = DateTime2), @p874='?' (DbType = Double), @p875='?' (DbType = Double), @p876='?' (DbType = Double), @p877='?' (DbType = Double), @p878='?' (DbType = Int64), @p879='?' (DbType = Double), @p880='?' (DbType = Int64), @p881='?' (DbType = Double), @p882='?' (DbType = Double), @p883='?' (DbType = Double), @p884='?' (DbType = Double), @p885='?' (DbType = Double), @p886='?' (DbType = Int64), @p887='?' (Size = 4000), @p888='?' (DbType = Double), @p889='?' (DbType = Double), @p890='?' (DbType = Double), @p891='?' (DbType = Double), @p892='?' (Size = 450), @p893='?' (DbType = Double), @p894='?' (DbType = Double), @p895='?' (DbType = Double), @p896='?' (DbType = Double), @p897='?' (DbType = Double), @p898='?' (DbType = Double), @p899='?' (DbType = Double), @p900='?' (DbType = Double), @p901='?' (DbType = Int64), @p902='?' (DbType = Double), @p903='?' (DbType = Double), @p904='?' (DbType = Double), @p905='?' (DbType = Double), @p906='?' (DbType = Int64), @p907='?' (DbType = Int64), @p908='?' (DbType = Int64), @p909='?' (DbType = Double), @p910='?' (DbType = Int64), @p911='?' (DbType = Int64), @p912='?' (DbType = DateTime2), @p913='?' (DbType = Double), @p914='?' (DbType = Double), @p915='?' (DbType = Double), @p916='?' (DbType = Double), @p917='?' (DbType = Int64), @p918='?' (DbType = Double), @p919='?' (DbType = Int64), @p920='?' (DbType = Double), @p921='?' (DbType = Double), @p922='?' (DbType = Double), @p923='?' (DbType = Double), @p924='?' (DbType = Double), @p925='?' (DbType = Int64), @p926='?' (Size = 4000), @p927='?' (DbType = Double), @p928='?' (DbType = Double), @p929='?' (DbType = Double), @p930='?' (DbType = Double), @p931='?' (Size = 450), @p932='?' (DbType = Double), @p933='?' (DbType = Double), @p934='?' (DbType = Double), @p935='?' (DbType = Double), @p936='?' (DbType = Double), @p937='?' (DbType = Double), @p938='?' (DbType = Double), @p939='?' (DbType = Double), @p940='?' (DbType = Int64), @p941='?' (DbType = Double), @p942='?' (DbType = Double), @p943='?' (DbType = Double), @p944='?' (DbType = Double), @p945='?' (DbType = Int64), @p946='?' (DbType = Int64), @p947='?' (DbType = Int64), @p948='?' (DbType = Double), @p949='?' (DbType = Int64), @p950='?' (DbType = Int64), @p951='?' (DbType = DateTime2), @p952='?' (DbType = Double), @p953='?' (DbType = Double), @p954='?' (DbType = Double), @p955='?' (DbType = Double), @p956='?' (DbType = Int64), @p957='?' (DbType = Double), @p958='?' (DbType = Int64), @p959='?' (DbType = Double), @p960='?' (DbType = Double), @p961='?' (DbType = Double), @p962='?' (DbType = Double), @p963='?' (DbType = Double), @p964='?' (DbType = Int64), @p965='?' (Size = 4000), @p966='?' (DbType = Double), @p967='?' (DbType = Double), @p968='?' (DbType = Double), @p969='?' (DbType = Double), @p970='?' (Size = 450), @p971='?' (DbType = Double), @p972='?' (DbType = Double), @p973='?' (DbType = Double), @p974='?' (DbType = Double), @p975='?' (DbType = Double), @p976='?' (DbType = Double), @p977='?' (DbType = Double), @p978='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
DECLARE @inserted0 TABLE ([Id] int, [_Position] [int]);
MERGE [BalanceSheetAnnualReport] USING (
VALUES (@p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21, @p22, @p23, @p24, @p25, @p26, @p27, @p28, @p29, @p30, @p31, @p32, @p33, @p34, @p35, @p36, @p37, @p38, @p39, @p40, @p41, @p42, 0),
(@p43, @p44, @p45, @p46, @p47, @p48, @p49, @p50, @p51, @p52, @p53, @p54, @p55, @p56, @p57, @p58, @p59, @p60, @p61, @p62, @p63, @p64, @p65, @p66, @p67, @p68, @p69, @p70, @p71, @p72, @p73, @p74, @p75, @p76, @p77, @p78, @p79, @p80, @p81, 1),
(@p82, @p83, @p84, @p85, @p86, @p87, @p88, @p89, @p90, @p91, @p92, @p93, @p94, @p95, @p96, @p97, @p98, @p99, @p100, @p101, @p102, @p103, @p104, @p105, @p106, @p107, @p108, @p109, @p110, @p111, @p112, @p113, @p114, @p115, @p116, @p117, @p118, @p119, @p120, 2),
(@p121, @p122, @p123, @p124, @p125, @p126, @p127, @p128, @p129, @p130, @p131, @p132, @p133, @p134, @p135, @p136, @p137, @p138, @p139, @p140, @p141, @p142, @p143, @p144, @p145, @p146, @p147, @p148, @p149, @p150, @p151, @p152, @p153, @p154, @p155, @p156, @p157, @p158, @p159, 3),
(@p160, @p161, @p162, @p163, @p164, @p165, @p166, @p167, @p168, @p169, @p170, @p171, @p172, @p173, @p174, @p175, @p176, @p177, @p178, @p179, @p180, @p181, @p182, @p183, @p184, @p185, @p186, @p187, @p188, @p189, @p190, @p191, @p192, @p193, @p194, @p195, @p196, @p197, @p198, 4)) AS i ([AccumulatedDepreciationAmortizationPPE], [CapitalLeaseObligations], [CashAndCashEquivalentsAtCarryingValue], [CashAndShortTermInvestments], [CommonStock], [CommonStockSharesOutstanding], [CurrentAccountsPayable], [CurrentDebt], [CurrentLongTermDebt], [CurrentNetReceivables], [DeferredRevenue], [FiscalDateEnding], [Goodwill], [IntangibleAssets], [IntangibleAssetsExcludingGoodwill], [Inventory], [Investments], [LongTermDebt], [LongTermDebtNoncurrent], [LongTermInvestments], [OtherCurrentAssets], [OtherCurrentLiabilities], [OtherNonCurrentAssets], [OtherNonCurrentLiabilities], [PropertyPlantEquipment], [ReportedCurrency], [RetainedEarnings], [ShortLongTermDebtTotal], [ShortTermDebt], [ShortTermInvestments], [Symbol], [TotalAssets], [TotalCurrentAssets], [TotalCurrentLiabilities], [TotalLiabilities], [TotalNonCurrentAssets], [TotalNonCurrentLiabilities], [TotalShareholderEquity], [TreasuryStock], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([AccumulatedDepreciationAmortizationPPE], [CapitalLeaseObligations], [CashAndCashEquivalentsAtCarryingValue], [CashAndShortTermInvestments], [CommonStock], [CommonStockSharesOutstanding], [CurrentAccountsPayable], [CurrentDebt], [CurrentLongTermDebt], [CurrentNetReceivables], [DeferredRevenue], [FiscalDateEnding], [Goodwill], [IntangibleAssets], [IntangibleAssetsExcludingGoodwill], [Inventory], [Investments], [LongTermDebt], [LongTermDebtNoncurrent], [LongTermInvestments], [OtherCurrentAssets], [OtherCurrentLiabilities], [OtherNonCurrentAssets], [OtherNonCurrentLiabilities], [PropertyPlantEquipment], [ReportedCurrency], [RetainedEarnings], [ShortLongTermDebtTotal], [ShortTermDebt], [ShortTermInvestments], [Symbol], [TotalAssets], [TotalCurrentAssets], [TotalCurrentLiabilities], [TotalLiabilities], [TotalNonCurrentAssets], [TotalNonCurrentLiabilities], [TotalShareholderEquity], [TreasuryStock])
VALUES (i.[AccumulatedDepreciationAmortizationPPE], i.[CapitalLeaseObligations], i.[CashAndCashEquivalentsAtCarryingValue], i.[CashAndShortTermInvestments], i.[CommonStock], i.[CommonStockSharesOutstanding], i.[CurrentAccountsPayable], i.[CurrentDebt], i.[CurrentLongTermDebt], i.[CurrentNetReceivables], i.[DeferredRevenue], i.[FiscalDateEnding], i.[Goodwill], i.[IntangibleAssets], i.[IntangibleAssetsExcludingGoodwill], i.[Inventory], i.[Investments], i.[LongTermDebt], i.[LongTermDebtNoncurrent], i.[LongTermInvestments], i.[OtherCurrentAssets], i.[OtherCurrentLiabilities], i.[OtherNonCurrentAssets], i.[OtherNonCurrentLiabilities], i.[PropertyPlantEquipment], i.[ReportedCurrency], i.[RetainedEarnings], i.[ShortLongTermDebtTotal], i.[ShortTermDebt], i.[ShortTermInvestments], i.[Symbol], i.[TotalAssets], i.[TotalCurrentAssets], i.[TotalCurrentLiabilities], i.[TotalLiabilities], i.[TotalNonCurrentAssets], i.[TotalNonCurrentLiabilities], i.[TotalShareholderEquity], i.[TreasuryStock])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted0;

SELECT [i].[Id] FROM @inserted0 i
ORDER BY [i].[_Position];

DECLARE @inserted5 TABLE ([Id] int, [_Position] [int]);
MERGE [BalanceSheetQuarterlyReports] USING (
VALUES (@p199, @p200, @p201, @p202, @p203, @p204, @p205, @p206, @p207, @p208, @p209, @p210, @p211, @p212, @p213, @p214, @p215, @p216, @p217, @p218, @p219, @p220, @p221, @p222, @p223, @p224, @p225, @p226, @p227, @p228, @p229, @p230, @p231, @p232, @p233, @p234, @p235, @p236, @p237, 0),
(@p238, @p239, @p240, @p241, @p242, @p243, @p244, @p245, @p246, @p247, @p248, @p249, @p250, @p251, @p252, @p253, @p254, @p255, @p256, @p257, @p258, @p259, @p260, @p261, @p262, @p263, @p264, @p265, @p266, @p267, @p268, @p269, @p270, @p271, @p272, @p273, @p274, @p275, @p276, 1),
(@p277, @p278, @p279, @p280, @p281, @p282, @p283, @p284, @p285, @p286, @p287, @p288, @p289, @p290, @p291, @p292, @p293, @p294, @p295, @p296, @p297, @p298, @p299, @p300, @p301, @p302, @p303, @p304, @p305, @p306, @p307, @p308, @p309, @p310, @p311, @p312, @p313, @p314, @p315, 2),
(@p316, @p317, @p318, @p319, @p320, @p321, @p322, @p323, @p324, @p325, @p326, @p327, @p328, @p329, @p330, @p331, @p332, @p333, @p334, @p335, @p336, @p337, @p338, @p339, @p340, @p341, @p342, @p343, @p344, @p345, @p346, @p347, @p348, @p349, @p350, @p351, @p352, @p353, @p354, 3),
(@p355, @p356, @p357, @p358, @p359, @p360, @p361, @p362, @p363, @p364, @p365, @p366, @p367, @p368, @p369, @p370, @p371, @p372, @p373, @p374, @p375, @p376, @p377, @p378, @p379, @p380, @p381, @p382, @p383, @p384, @p385, @p386, @p387, @p388, @p389, @p390, @p391, @p392, @p393, 4),
(@p394, @p395, @p396, @p397, @p398, @p399, @p400, @p401, @p402, @p403, @p404, @p405, @p406, @p407, @p408, @p409, @p410, @p411, @p412, @p413, @p414, @p415, @p416, @p417, @p418, @p419, @p420, @p421, @p422, @p423, @p424, @p425, @p426, @p427, @p428, @p429, @p430, @p431, @p432, 5),
(@p433, @p434, @p435, @p436, @p437, @p438, @p439, @p440, @p441, @p442, @p443, @p444, @p445, @p446, @p447, @p448, @p449, @p450, @p451, @p452, @p453, @p454, @p455, @p456, @p457, @p458, @p459, @p460, @p461, @p462, @p463, @p464, @p465, @p466, @p467, @p468, @p469, @p470, @p471, 6),
(@p472, @p473, @p474, @p475, @p476, @p477, @p478, @p479, @p480, @p481, @p482, @p483, @p484, @p485, @p486, @p487, @p488, @p489, @p490, @p491, @p492, @p493, @p494, @p495, @p496, @p497, @p498, @p499, @p500, @p501, @p502, @p503, @p504, @p505, @p506, @p507, @p508, @p509, @p510, 7),
(@p511, @p512, @p513, @p514, @p515, @p516, @p517, @p518, @p519, @p520, @p521, @p522, @p523, @p524, @p525, @p526, @p527, @p528, @p529, @p530, @p531, @p532, @p533, @p534, @p535, @p536, @p537, @p538, @p539, @p540, @p541, @p542, @p543, @p544, @p545, @p546, @p547, @p548, @p549, 8),
(@p550, @p551, @p552, @p553, @p554, @p555, @p556, @p557, @p558, @p559, @p560, @p561, @p562, @p563, @p564, @p565, @p566, @p567, @p568, @p569, @p570, @p571, @p572, @p573, @p574, @p575, @p576, @p577, @p578, @p579, @p580, @p581, @p582, @p583, @p584, @p585, @p586, @p587, @p588, 9),
(@p589, @p590, @p591, @p592, @p593, @p594, @p595, @p596, @p597, @p598, @p599, @p600, @p601, @p602, @p603, @p604, @p605, @p606, @p607, @p608, @p609, @p610, @p611, @p612, @p613, @p614, @p615, @p616, @p617, @p618, @p619, @p620, @p621, @p622, @p623, @p624, @p625, @p626, @p627, 10),
(@p628, @p629, @p630, @p631, @p632, @p633, @p634, @p635, @p636, @p637, @p638, @p639, @p640, @p641, @p642, @p643, @p644, @p645, @p646, @p647, @p648, @p649, @p650, @p651, @p652, @p653, @p654, @p655, @p656, @p657, @p658, @p659, @p660, @p661, @p662, @p663, @p664, @p665, @p666, 11),
(@p667, @p668, @p669, @p670, @p671, @p672, @p673, @p674, @p675, @p676, @p677, @p678, @p679, @p680, @p681, @p682, @p683, @p684, @p685, @p686, @p687, @p688, @p689, @p690, @p691, @p692, @p693, @p694, @p695, @p696, @p697, @p698, @p699, @p700, @p701, @p702, @p703, @p704, @p705, 12),
(@p706, @p707, @p708, @p709, @p710, @p711, @p712, @p713, @p714, @p715, @p716, @p717, @p718, @p719, @p720, @p721, @p722, @p723, @p724, @p725, @p726, @p727, @p728, @p729, @p730, @p731, @p732, @p733, @p734, @p735, @p736, @p737, @p738, @p739, @p740, @p741, @p742, @p743, @p744, 13),
(@p745, @p746, @p747, @p748, @p749, @p750, @p751, @p752, @p753, @p754, @p755, @p756, @p757, @p758, @p759, @p760, @p761, @p762, @p763, @p764, @p765, @p766, @p767, @p768, @p769, @p770, @p771, @p772, @p773, @p774, @p775, @p776, @p777, @p778, @p779, @p780, @p781, @p782, @p783, 14),
(@p784, @p785, @p786, @p787, @p788, @p789, @p790, @p791, @p792, @p793, @p794, @p795, @p796, @p797, @p798, @p799, @p800, @p801, @p802, @p803, @p804, @p805, @p806, @p807, @p808, @p809, @p810, @p811, @p812, @p813, @p814, @p815, @p816, @p817, @p818, @p819, @p820, @p821, @p822, 15),
(@p823, @p824, @p825, @p826, @p827, @p828, @p829, @p830, @p831, @p832, @p833, @p834, @p835, @p836, @p837, @p838, @p839, @p840, @p841, @p842, @p843, @p844, @p845, @p846, @p847, @p848, @p849, @p850, @p851, @p852, @p853, @p854, @p855, @p856, @p857, @p858, @p859, @p860, @p861, 16),
(@p862, @p863, @p864, @p865, @p866, @p867, @p868, @p869, @p870, @p871, @p872, @p873, @p874, @p875, @p876, @p877, @p878, @p879, @p880, @p881, @p882, @p883, @p884, @p885, @p886, @p887, @p888, @p889, @p890, @p891, @p892, @p893, @p894, @p895, @p896, @p897, @p898, @p899, @p900, 17),
(@p901, @p902, @p903, @p904, @p905, @p906, @p907, @p908, @p909, @p910, @p911, @p912, @p913, @p914, @p915, @p916, @p917, @p918, @p919, @p920, @p921, @p922, @p923, @p924, @p925, @p926, @p927, @p928, @p929, @p930, @p931, @p932, @p933, @p934, @p935, @p936, @p937, @p938, @p939, 18),
(@p940, @p941, @p942, @p943, @p944, @p945, @p946, @p947, @p948, @p949, @p950, @p951, @p952, @p953, @p954, @p955, @p956, @p957, @p958, @p959, @p960, @p961, @p962, @p963, @p964, @p965, @p966, @p967, @p968, @p969, @p970, @p971, @p972, @p973, @p974, @p975, @p976, @p977, @p978, 19)) AS i ([AccumulatedDepreciationAmortizationPPE], [CapitalLeaseObligations], [CashAndCashEquivalentsAtCarryingValue], [CashAndShortTermInvestments], [CommonStock], [CommonStockSharesOutstanding], [CurrentAccountsPayable], [CurrentDebt], [CurrentLongTermDebt], [CurrentNetReceivables], [DeferredRevenue], [FiscalDateEnding], [Goodwill], [IntangibleAssets], [IntangibleAssetsExcludingGoodwill], [Inventory], [Investments], [LongTermDebt], [LongTermDebtNoncurrent], [LongTermInvestments], [OtherCurrentAssets], [OtherCurrentLiabilities], [OtherNonCurrentAssets], [OtherNonCurrentLiabilities], [PropertyPlantEquipment], [ReportedCurrency], [RetainedEarnings], [ShortLongTermDebtTotal], [ShortTermDebt], [ShortTermInvestments], [Symbol], [TotalAssets], [TotalCurrentAssets], [TotalCurrentLiabilities], [TotalLiabilities], [TotalNonCurrentAssets], [TotalNonCurrentLiabilities], [TotalShareholderEquity], [TreasuryStock], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([AccumulatedDepreciationAmortizationPPE], [CapitalLeaseObligations], [CashAndCashEquivalentsAtCarryingValue], [CashAndShortTermInvestments], [CommonStock], [CommonStockSharesOutstanding], [CurrentAccountsPayable], [CurrentDebt], [CurrentLongTermDebt], [CurrentNetReceivables], [DeferredRevenue], [FiscalDateEnding], [Goodwill], [IntangibleAssets], [IntangibleAssetsExcludingGoodwill], [Inventory], [Investments], [LongTermDebt], [LongTermDebtNoncurrent], [LongTermInvestments], [OtherCurrentAssets], [OtherCurrentLiabilities], [OtherNonCurrentAssets], [OtherNonCurrentLiabilities], [PropertyPlantEquipment], [ReportedCurrency], [RetainedEarnings], [ShortLongTermDebtTotal], [ShortTermDebt], [ShortTermInvestments], [Symbol], [TotalAssets], [TotalCurrentAssets], [TotalCurrentLiabilities], [TotalLiabilities], [TotalNonCurrentAssets], [TotalNonCurrentLiabilities], [TotalShareholderEquity], [TreasuryStock])
VALUES (i.[AccumulatedDepreciationAmortizationPPE], i.[CapitalLeaseObligations], i.[CashAndCashEquivalentsAtCarryingValue], i.[CashAndShortTermInvestments], i.[CommonStock], i.[CommonStockSharesOutstanding], i.[CurrentAccountsPayable], i.[CurrentDebt], i.[CurrentLongTermDebt], i.[CurrentNetReceivables], i.[DeferredRevenue], i.[FiscalDateEnding], i.[Goodwill], i.[IntangibleAssets], i.[IntangibleAssetsExcludingGoodwill], i.[Inventory], i.[Investments], i.[LongTermDebt], i.[LongTermDebtNoncurrent], i.[LongTermInvestments], i.[OtherCurrentAssets], i.[OtherCurrentLiabilities], i.[OtherNonCurrentAssets], i.[OtherNonCurrentLiabilities], i.[PropertyPlantEquipment], i.[ReportedCurrency], i.[RetainedEarnings], i.[ShortLongTermDebtTotal], i.[ShortTermDebt], i.[ShortTermInvestments], i.[Symbol], i.[TotalAssets], i.[TotalCurrentAssets], i.[TotalCurrentLiabilities], i.[TotalLiabilities], i.[TotalNonCurrentAssets], i.[TotalNonCurrentLiabilities], i.[TotalShareholderEquity], i.[TreasuryStock])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted5;

SELECT [i].[Id] FROM @inserted5 i
ORDER BY [i].[_Position];
2022-05-12 00:58:21.668 +03:00 [INF] AddOrUpdate run successful.
2022-05-12 00:58:22.237 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CashFlow with Symbol ATEK-WS
2022-05-12 00:58:22.239 +03:00 [INF] Generating URI for CASH_FLOW with params: symbol: ATEK-WS
2022-05-12 00:58:22.239 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=CASH_FLOW&symbol=ATEK-WS
2022-05-12 00:58:22.240 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=CASH_FLOW&symbol=ATEK-WS".
2022-05-12 00:58:22.933 +03:00 [INF] Response has success status code
2022-05-12 00:58:22.933 +03:00 [INF] Trying to deserialize response.
2022-05-12 00:58:22.934 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 00:58:22.945 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__symbol_0
2022-05-12 00:58:22.947 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.CashFlow.
2022-05-12 00:58:22.955 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[ExistInApi], [c].[LastApiRefresh], [c].[LastLocalRefresh]
FROM [CashFlows] AS [c]
WHERE [c].[Symbol] = @__entity_Symbol_0
2022-05-12 00:58:22.956 +03:00 [INF] Entity does not exist. Adding to DB.
2022-05-12 00:58:22.971 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = Boolean), @p2='?' (DbType = DateTime2), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [CashFlows] ([Symbol], [ExistInApi], [LastApiRefresh], [LastLocalRefresh])
VALUES (@p0, @p1, @p2, @p3);
2022-05-12 00:58:22.981 +03:00 [INF] AddOrUpdate run successful.
2022-05-12 00:58:49.414 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CompanyOverview with Symbol BIRD
2022-05-12 00:58:49.415 +03:00 [INF] Generating URI for OVERVIEW with params: symbol: BIRD
2022-05-12 00:58:49.416 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=OVERVIEW&symbol=BIRD
2022-05-12 00:58:49.416 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=OVERVIEW&symbol=BIRD".
2022-05-12 00:58:49.640 +03:00 [INF] Response has success status code
2022-05-12 00:58:49.641 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.CompanyOverview for symbol BIRD
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyOverview(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 109
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 00:58:51.088 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.Earnings with Symbol AVNT
2022-05-12 00:58:51.090 +03:00 [INF] Generating URI for EARNINGS with params: symbol: AVNT
2022-05-12 00:58:51.091 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=EARNINGS&symbol=AVNT
2022-05-12 00:58:51.091 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=EARNINGS&symbol=AVNT".
2022-05-12 00:58:51.183 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.IncomeStatement with Symbol ATOS
2022-05-12 00:58:51.184 +03:00 [INF] Generating URI for INCOME_STATEMENT with params: symbol: ATOS
2022-05-12 00:58:51.185 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=INCOME_STATEMENT&symbol=ATOS
2022-05-12 00:58:51.185 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=INCOME_STATEMENT&symbol=ATOS".
2022-05-12 00:58:51.329 +03:00 [INF] Response has success status code
2022-05-12 00:58:51.329 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.Earnings for symbol AVNT
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyEarnings(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 142
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 00:58:51.682 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.BalanceSheet with Symbol BDCZ
2022-05-12 00:58:51.684 +03:00 [INF] Generating URI for BALANCE_SHEET with params: symbol: BDCZ
2022-05-12 00:58:51.685 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BDCZ
2022-05-12 00:58:51.685 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BDCZ".
2022-05-12 00:58:51.898 +03:00 [INF] Response has success status code
2022-05-12 00:58:51.899 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.BalanceSheet for symbol BDCZ
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetBalanceSheet(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 82
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 00:58:52.044 +03:00 [INF] Response has success status code
2022-05-12 00:58:52.045 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.IncomeStatement for symbol ATOS
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetIncomeStatement(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 69
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 00:58:52.996 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CashFlow with Symbol ATEST-G
2022-05-12 00:58:52.998 +03:00 [INF] Generating URI for CASH_FLOW with params: symbol: ATEST-G
2022-05-12 00:58:52.998 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=CASH_FLOW&symbol=ATEST-G
2022-05-12 00:58:52.999 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=CASH_FLOW&symbol=ATEST-G".
2022-05-12 00:58:53.244 +03:00 [INF] Response has success status code
2022-05-12 00:58:53.245 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.CashFlow for symbol ATEST-G
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCashFlow(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 96
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 00:59:19.654 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CompanyOverview with Symbol BIT
2022-05-12 00:59:19.656 +03:00 [INF] Generating URI for OVERVIEW with params: symbol: BIT
2022-05-12 00:59:19.657 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=OVERVIEW&symbol=BIT
2022-05-12 00:59:19.657 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=OVERVIEW&symbol=BIT".
2022-05-12 00:59:20.128 +03:00 [INF] Response has success status code
2022-05-12 00:59:20.129 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.CompanyOverview.
2022-05-12 00:59:20.130 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 00:59:20.141 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__entity_Symbol_0
2022-05-12 00:59:20.142 +03:00 [INF] Entity does not exist. Adding to DB.
2022-05-12 00:59:20.158 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (Size = 4000), @p2='?' (DbType = Double), @p3='?' (Size = 4000), @p4='?' (DbType = Double), @p5='?' (DbType = Double), @p6='?' (DbType = Int64), @p7='?' (Size = 4000), @p8='?' (Size = 4000), @p9='?' (Size = 4000), @p10='?' (DbType = Double), @p11='?' (DbType = DateTime2), @p12='?' (DbType = Double), @p13='?' (DbType = Double), @p14='?' (DbType = Int64), @p15='?' (DbType = Double), @p16='?' (DbType = Double), @p17='?' (DbType = Double), @p18='?' (DbType = DateTime2), @p19='?' (Size = 4000), @p20='?' (DbType = Boolean), @p21='?' (Size = 4000), @p22='?' (DbType = Double), @p23='?' (DbType = Int64), @p24='?' (Size = 4000), @p25='?' (DbType = DateTime2), @p26='?' (DbType = DateTime2), @p27='?' (DbType = DateTime2), @p28='?' (DbType = Int64), @p29='?' (Size = 4000), @p30='?' (DbType = Double), @p31='?' (DbType = Double), @p32='?' (DbType = Double), @p33='?' (DbType = Double), @p34='?' (DbType = Double), @p35='?' (DbType = Double), @p36='?' (DbType = Double), @p37='?' (DbType = Double), @p38='?' (DbType = Double), @p39='?' (DbType = Double), @p40='?' (DbType = Double), @p41='?' (DbType = Int64), @p42='?' (Size = 4000), @p43='?' (DbType = Int64), @p44='?' (DbType = Double), @p45='?' (DbType = Double), @p46='?' (DbType = Double), @p47='?' (DbType = Double), @p48='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [CompanyOverviews] ([Symbol], [Address], [AnalystTargetPrice], [AssetType], [Beta], [BookValue], [CIK], [Country], [Currency], [Description], [DilutedEPSTTM], [DividendDate], [DividendPerShare], [DividendYield], [EBITDA], [EPS], [EVToEBITDA], [EVToRevenue], [ExDividendDate], [Exchange], [ExistInApi], [FiscalYearEnd], [ForwardPE], [GrossProfitTTM], [Industry], [LastApiRefresh], [LastLocalRefresh], [LatestQuarter], [MarketCapitalization], [Name], [OperatingMarginTTM], [PEGRatio], [PERatio], [PriceToBookRatio], [PriceToSalesRatioTTM], [ProfitMargin], [QuarterlyEarningsGrowthYOY], [QuarterlyRevenueGrowthYOY], [ReturnOnAssetsTTM], [ReturnOnEquityTTM], [RevenuePerShareTTM], [RevenueTTM], [Sector], [SharesOutstanding], [TrailingPE], [_200DayMovingAverage], [_50DayMovingAverage], [_52WeekHigh], [_52WeekLow])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21, @p22, @p23, @p24, @p25, @p26, @p27, @p28, @p29, @p30, @p31, @p32, @p33, @p34, @p35, @p36, @p37, @p38, @p39, @p40, @p41, @p42, @p43, @p44, @p45, @p46, @p47, @p48);
2022-05-12 00:59:20.165 +03:00 [INF] AddOrUpdate run successful.
2022-05-12 00:59:20.166 +03:00 [WRN] Alpha Vantage has no SaluteStocksAPI.Models.FundamentalData.CompanyOverview for symbol BIT
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageEmptyResponse: Response was empty.
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyOverview(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 109
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 00:59:21.345 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.Earnings with Symbol AVO
2022-05-12 00:59:21.347 +03:00 [INF] Generating URI for EARNINGS with params: symbol: AVO
2022-05-12 00:59:21.347 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=EARNINGS&symbol=AVO
2022-05-12 00:59:21.347 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=EARNINGS&symbol=AVO".
2022-05-12 00:59:21.907 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.BalanceSheet with Symbol BDJ
2022-05-12 00:59:21.909 +03:00 [INF] Generating URI for BALANCE_SHEET with params: symbol: BDJ
2022-05-12 00:59:21.909 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BDJ
2022-05-12 00:59:21.910 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BDJ".
2022-05-12 00:59:22.028 +03:00 [INF] Response has success status code
2022-05-12 00:59:22.029 +03:00 [INF] Trying to deserialize response.
2022-05-12 00:59:22.029 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 00:59:22.049 +03:00 [INF] Executed DbCommand (18ms) [Parameters=[@__symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__symbol_0
2022-05-12 00:59:22.050 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.Earnings.
2022-05-12 00:59:22.051 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.IncomeStatement with Symbol ATRA
2022-05-12 00:59:22.052 +03:00 [INF] Generating URI for INCOME_STATEMENT with params: symbol: ATRA
2022-05-12 00:59:22.053 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=INCOME_STATEMENT&symbol=ATRA
2022-05-12 00:59:22.053 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=INCOME_STATEMENT&symbol=ATRA".
2022-05-12 00:59:22.059 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [e].[Symbol], [e].[ExistInApi], [e].[LastApiRefresh], [e].[LastLocalRefresh]
FROM [Earnings] AS [e]
WHERE [e].[Symbol] = @__entity_Symbol_0
2022-05-12 00:59:22.060 +03:00 [INF] Entity does not exist. Adding to DB.
2022-05-12 00:59:22.073 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = Boolean), @p2='?' (DbType = DateTime2), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Earnings] ([Symbol], [ExistInApi], [LastApiRefresh], [LastLocalRefresh])
VALUES (@p0, @p1, @p2, @p3);
2022-05-12 00:59:22.108 +03:00 [INF] Executed DbCommand (34ms) [Parameters=[@p4='?' (DbType = DateTime2), @p5='?' (DbType = Double), @p6='?' (Size = 450), @p7='?' (DbType = DateTime2), @p8='?' (DbType = Double), @p9='?' (Size = 450), @p10='?' (DbType = DateTime2), @p11='?' (DbType = Double), @p12='?' (Size = 450), @p13='?' (DbType = DateTime2), @p14='?' (DbType = Double), @p15='?' (Size = 450), @p16='?' (DbType = DateTime2), @p17='?' (DbType = Double), @p18='?' (Size = 450), @p19='?' (DbType = Double), @p20='?' (DbType = DateTime2), @p21='?' (DbType = DateTime2), @p22='?' (DbType = Double), @p23='?' (DbType = Double), @p24='?' (DbType = Double), @p25='?' (Size = 450), @p26='?' (DbType = Double), @p27='?' (DbType = DateTime2), @p28='?' (DbType = DateTime2), @p29='?' (DbType = Double), @p30='?' (DbType = Double), @p31='?' (DbType = Double), @p32='?' (Size = 450), @p33='?' (DbType = Double), @p34='?' (DbType = DateTime2), @p35='?' (DbType = DateTime2), @p36='?' (DbType = Double), @p37='?' (DbType = Double), @p38='?' (DbType = Double), @p39='?' (Size = 450), @p40='?' (DbType = Double), @p41='?' (DbType = DateTime2), @p42='?' (DbType = DateTime2), @p43='?' (DbType = Double), @p44='?' (DbType = Double), @p45='?' (DbType = Double), @p46='?' (Size = 450), @p47='?' (DbType = Double), @p48='?' (DbType = DateTime2), @p49='?' (DbType = DateTime2), @p50='?' (DbType = Double), @p51='?' (DbType = Double), @p52='?' (DbType = Double), @p53='?' (Size = 450), @p54='?' (DbType = Double), @p55='?' (DbType = DateTime2), @p56='?' (DbType = DateTime2), @p57='?' (DbType = Double), @p58='?' (DbType = Double), @p59='?' (DbType = Double), @p60='?' (Size = 450), @p61='?' (DbType = Double), @p62='?' (DbType = DateTime2), @p63='?' (DbType = DateTime2), @p64='?' (DbType = Double), @p65='?' (DbType = Double), @p66='?' (DbType = Double), @p67='?' (Size = 450), @p68='?' (DbType = Double), @p69='?' (DbType = DateTime2), @p70='?' (DbType = DateTime2), @p71='?' (DbType = Double), @p72='?' (DbType = Double), @p73='?' (DbType = Double), @p74='?' (Size = 450), @p75='?' (DbType = Double), @p76='?' (DbType = DateTime2), @p77='?' (DbType = DateTime2), @p78='?' (DbType = Double), @p79='?' (DbType = Double), @p80='?' (DbType = Double), @p81='?' (Size = 450), @p82='?' (DbType = Double), @p83='?' (DbType = DateTime2), @p84='?' (DbType = DateTime2), @p85='?' (DbType = Double), @p86='?' (DbType = Double), @p87='?' (DbType = Double), @p88='?' (Size = 450), @p89='?' (DbType = Double), @p90='?' (DbType = DateTime2), @p91='?' (DbType = DateTime2), @p92='?' (DbType = Double), @p93='?' (DbType = Double), @p94='?' (DbType = Double), @p95='?' (Size = 450), @p96='?' (DbType = Double), @p97='?' (DbType = DateTime2), @p98='?' (DbType = DateTime2), @p99='?' (DbType = Double), @p100='?' (DbType = Double), @p101='?' (DbType = Double), @p102='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
DECLARE @inserted0 TABLE ([Id] int, [_Position] [int]);
MERGE [AnnualEarning] USING (
VALUES (@p4, @p5, @p6, 0),
(@p7, @p8, @p9, 1),
(@p10, @p11, @p12, 2),
(@p13, @p14, @p15, 3),
(@p16, @p17, @p18, 4)) AS i ([FiscalDateEnding], [ReportedEPS], [Symbol], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([FiscalDateEnding], [ReportedEPS], [Symbol])
VALUES (i.[FiscalDateEnding], i.[ReportedEPS], i.[Symbol])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted0;

SELECT [i].[Id] FROM @inserted0 i
ORDER BY [i].[_Position];

DECLARE @inserted5 TABLE ([Id] int, [_Position] [int]);
MERGE [QuarterlyEarning] USING (
VALUES (@p19, @p20, @p21, @p22, @p23, @p24, @p25, 0),
(@p26, @p27, @p28, @p29, @p30, @p31, @p32, 1),
(@p33, @p34, @p35, @p36, @p37, @p38, @p39, 2),
(@p40, @p41, @p42, @p43, @p44, @p45, @p46, 3),
(@p47, @p48, @p49, @p50, @p51, @p52, @p53, 4),
(@p54, @p55, @p56, @p57, @p58, @p59, @p60, 5),
(@p61, @p62, @p63, @p64, @p65, @p66, @p67, 6),
(@p68, @p69, @p70, @p71, @p72, @p73, @p74, 7),
(@p75, @p76, @p77, @p78, @p79, @p80, @p81, 8),
(@p82, @p83, @p84, @p85, @p86, @p87, @p88, 9),
(@p89, @p90, @p91, @p92, @p93, @p94, @p95, 10),
(@p96, @p97, @p98, @p99, @p100, @p101, @p102, 11)) AS i ([EstimatedEPS], [FiscalDateEnding], [ReportedDate], [ReportedEPS], [Surprise], [SurprisePercentage], [Symbol], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([EstimatedEPS], [FiscalDateEnding], [ReportedDate], [ReportedEPS], [Surprise], [SurprisePercentage], [Symbol])
VALUES (i.[EstimatedEPS], i.[FiscalDateEnding], i.[ReportedDate], i.[ReportedEPS], i.[Surprise], i.[SurprisePercentage], i.[Symbol])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted5;

SELECT [i].[Id] FROM @inserted5 i
ORDER BY [i].[_Position];
2022-05-12 00:59:22.119 +03:00 [INF] AddOrUpdate run successful.
2022-05-12 00:59:22.366 +03:00 [INF] Response has success status code
2022-05-12 00:59:22.367 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 00:59:22.377 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__symbol_0
2022-05-12 00:59:22.379 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.BalanceSheet.
2022-05-12 00:59:22.388 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [b].[Symbol], [b].[ExistInApi], [b].[LastApiRefresh], [b].[LastLocalRefresh]
FROM [BalanceSheets] AS [b]
WHERE [b].[Symbol] = @__entity_Symbol_0
2022-05-12 00:59:22.389 +03:00 [INF] Entity does not exist. Adding to DB.
2022-05-12 00:59:22.404 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = Boolean), @p2='?' (DbType = DateTime2), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [BalanceSheets] ([Symbol], [ExistInApi], [LastApiRefresh], [LastLocalRefresh])
VALUES (@p0, @p1, @p2, @p3);
2022-05-12 00:59:22.411 +03:00 [INF] AddOrUpdate run successful.
2022-05-12 00:59:22.411 +03:00 [WRN] Alpha Vantage has no SaluteStocksAPI.Models.FundamentalData.BalanceSheet for symbol BDJ
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageEmptyResponse: Response was empty.
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetBalanceSheet(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 82
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 00:59:22.720 +03:00 [INF] Response has success status code
2022-05-12 00:59:22.721 +03:00 [INF] Trying to deserialize response.
2022-05-12 00:59:22.722 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 00:59:22.732 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__symbol_0
2022-05-12 00:59:22.733 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.IncomeStatement.
2022-05-12 00:59:22.742 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [i].[Symbol], [i].[ExistInApi], [i].[LastApiRefresh], [i].[LastLocalRefresh]
FROM [IncomeStatements] AS [i]
WHERE [i].[Symbol] = @__entity_Symbol_0
2022-05-12 00:59:22.743 +03:00 [INF] Entity does not exist. Adding to DB.
2022-05-12 00:59:22.758 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = Boolean), @p2='?' (DbType = DateTime2), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [IncomeStatements] ([Symbol], [ExistInApi], [LastApiRefresh], [LastLocalRefresh])
VALUES (@p0, @p1, @p2, @p3);
2022-05-12 00:59:22.797 +03:00 [INF] Executed DbCommand (36ms) [Parameters=[@p4='?' (DbType = Int64), @p5='?' (DbType = Double), @p6='?' (DbType = Double), @p7='?' (DbType = Int64), @p8='?' (DbType = Int64), @p9='?' (DbType = Int64), @p10='?' (DbType = Double), @p11='?' (DbType = DateTime2), @p12='?' (DbType = Double), @p13='?' (DbType = Double), @p14='?' (DbType = Int64), @p15='?' (DbType = Int64), @p16='?' (DbType = Double), @p17='?' (DbType = Int64), @p18='?' (DbType = Int64), @p19='?' (DbType = Double), @p20='?' (DbType = Double), @p21='?' (DbType = Double), @p22='?' (DbType = Int64), @p23='?' (DbType = Double), @p24='?' (DbType = Double), @p25='?' (DbType = Int64), @p26='?' (Size = 4000), @p27='?' (DbType = Int64), @p28='?' (DbType = Double), @p29='?' (Size = 450), @p30='?' (DbType = Int64), @p31='?' (DbType = Int64), @p32='?' (DbType = Double), @p33='?' (DbType = Double), @p34='?' (DbType = Int64), @p35='?' (DbType = Int64), @p36='?' (DbType = Int64), @p37='?' (DbType = Double), @p38='?' (DbType = DateTime2), @p39='?' (DbType = Double), @p40='?' (DbType = Double), @p41='?' (DbType = Int64), @p42='?' (DbType = Int64), @p43='?' (DbType = Double), @p44='?' (DbType = Int64), @p45='?' (DbType = Int64), @p46='?' (DbType = Double), @p47='?' (DbType = Double), @p48='?' (DbType = Double), @p49='?' (DbType = Int64), @p50='?' (DbType = Double), @p51='?' (DbType = Double), @p52='?' (DbType = Int64), @p53='?' (Size = 4000), @p54='?' (DbType = Int64), @p55='?' (DbType = Double), @p56='?' (Size = 450), @p57='?' (DbType = Int64), @p58='?' (DbType = Int64), @p59='?' (DbType = Double), @p60='?' (DbType = Double), @p61='?' (DbType = Int64), @p62='?' (DbType = Int64), @p63='?' (DbType = Int64), @p64='?' (DbType = Double), @p65='?' (DbType = DateTime2), @p66='?' (DbType = Double), @p67='?' (DbType = Double), @p68='?' (DbType = Int64), @p69='?' (DbType = Int64), @p70='?' (DbType = Double), @p71='?' (DbType = Int64), @p72='?' (DbType = Int64), @p73='?' (DbType = Double), @p74='?' (DbType = Double), @p75='?' (DbType = Double), @p76='?' (DbType = Int64), @p77='?' (DbType = Double), @p78='?' (DbType = Double), @p79='?' (DbType = Int64), @p80='?' (Size = 4000), @p81='?' (DbType = Int64), @p82='?' (DbType = Double), @p83='?' (Size = 450), @p84='?' (DbType = Int64), @p85='?' (DbType = Int64), @p86='?' (DbType = Double), @p87='?' (DbType = Double), @p88='?' (DbType = Int64), @p89='?' (DbType = Int64), @p90='?' (DbType = Int64), @p91='?' (DbType = Double), @p92='?' (DbType = DateTime2), @p93='?' (DbType = Double), @p94='?' (DbType = Double), @p95='?' (DbType = Int64), @p96='?' (DbType = Int64), @p97='?' (DbType = Double), @p98='?' (DbType = Int64), @p99='?' (DbType = Int64), @p100='?' (DbType = Double), @p101='?' (DbType = Double), @p102='?' (DbType = Double), @p103='?' (DbType = Int64), @p104='?' (DbType = Double), @p105='?' (DbType = Double), @p106='?' (DbType = Int64), @p107='?' (Size = 4000), @p108='?' (DbType = Int64), @p109='?' (DbType = Double), @p110='?' (Size = 450), @p111='?' (DbType = Int64), @p112='?' (DbType = Int64), @p113='?' (DbType = Double), @p114='?' (DbType = Double), @p115='?' (DbType = Int64), @p116='?' (DbType = Int64), @p117='?' (DbType = Int64), @p118='?' (DbType = Double), @p119='?' (DbType = DateTime2), @p120='?' (DbType = Double), @p121='?' (DbType = Double), @p122='?' (DbType = Int64), @p123='?' (DbType = Int64), @p124='?' (DbType = Double), @p125='?' (DbType = Int64), @p126='?' (DbType = Int64), @p127='?' (DbType = Double), @p128='?' (DbType = Double), @p129='?' (DbType = Double), @p130='?' (DbType = Int64), @p131='?' (DbType = Double), @p132='?' (DbType = Double), @p133='?' (DbType = Int64), @p134='?' (Size = 4000), @p135='?' (DbType = Int64), @p136='?' (DbType = Double), @p137='?' (Size = 450), @p138='?' (DbType = Int64), @p139='?' (DbType = Int64), @p140='?' (DbType = Double), @p141='?' (DbType = Double), @p142='?' (DbType = Int64), @p143='?' (DbType = Int64), @p144='?' (DbType = Int64), @p145='?' (DbType = Double), @p146='?' (DbType = DateTime2), @p147='?' (DbType = Double), @p148='?' (DbType = Double), @p149='?' (DbType = Int64), @p150='?' (DbType = Int64), @p151='?' (DbType = Double), @p152='?' (DbType = Int64), @p153='?' (DbType = Int64), @p154='?' (DbType = Double), @p155='?' (DbType = Double), @p156='?' (DbType = Double), @p157='?' (DbType = Int64), @p158='?' (DbType = Double), @p159='?' (DbType = Double), @p160='?' (DbType = Int64), @p161='?' (Size = 4000), @p162='?' (DbType = Int64), @p163='?' (DbType = Double), @p164='?' (Size = 450), @p165='?' (DbType = Int64), @p166='?' (DbType = Int64), @p167='?' (DbType = Double), @p168='?' (DbType = Double), @p169='?' (DbType = Int64), @p170='?' (DbType = Int64), @p171='?' (DbType = Int64), @p172='?' (DbType = Double), @p173='?' (DbType = DateTime2), @p174='?' (DbType = Double), @p175='?' (DbType = Double), @p176='?' (DbType = Int64), @p177='?' (DbType = Int64), @p178='?' (DbType = Double), @p179='?' (DbType = Int64), @p180='?' (DbType = Int64), @p181='?' (DbType = Double), @p182='?' (DbType = Double), @p183='?' (DbType = Double), @p184='?' (DbType = Int64), @p185='?' (DbType = Double), @p186='?' (DbType = Double), @p187='?' (DbType = Int64), @p188='?' (Size = 4000), @p189='?' (DbType = Int64), @p190='?' (DbType = Double), @p191='?' (Size = 450), @p192='?' (DbType = Int64), @p193='?' (DbType = Int64), @p194='?' (DbType = Double), @p195='?' (DbType = Double), @p196='?' (DbType = Int64), @p197='?' (DbType = Int64), @p198='?' (DbType = Int64), @p199='?' (DbType = Double), @p200='?' (DbType = DateTime2), @p201='?' (DbType = Double), @p202='?' (DbType = Double), @p203='?' (DbType = Int64), @p204='?' (DbType = Int64), @p205='?' (DbType = Double), @p206='?' (DbType = Int64), @p207='?' (DbType = Int64), @p208='?' (DbType = Double), @p209='?' (DbType = Double), @p210='?' (DbType = Double), @p211='?' (DbType = Int64), @p212='?' (DbType = Double), @p213='?' (DbType = Double), @p214='?' (DbType = Int64), @p215='?' (Size = 4000), @p216='?' (DbType = Int64), @p217='?' (DbType = Double), @p218='?' (Size = 450), @p219='?' (DbType = Int64), @p220='?' (DbType = Int64), @p221='?' (DbType = Double), @p222='?' (DbType = Double), @p223='?' (DbType = Int64), @p224='?' (DbType = Int64), @p225='?' (DbType = Int64), @p226='?' (DbType = Double), @p227='?' (DbType = DateTime2), @p228='?' (DbType = Double), @p229='?' (DbType = Double), @p230='?' (DbType = Int64), @p231='?' (DbType = Int64), @p232='?' (DbType = Double), @p233='?' (DbType = Int64), @p234='?' (DbType = Int64), @p235='?' (DbType = Double), @p236='?' (DbType = Double), @p237='?' (DbType = Double), @p238='?' (DbType = Int64), @p239='?' (DbType = Double), @p240='?' (DbType = Double), @p241='?' (DbType = Int64), @p242='?' (Size = 4000), @p243='?' (DbType = Int64), @p244='?' (DbType = Double), @p245='?' (Size = 450), @p246='?' (DbType = Int64), @p247='?' (DbType = Int64), @p248='?' (DbType = Double), @p249='?' (DbType = Double), @p250='?' (DbType = Int64), @p251='?' (DbType = Int64), @p252='?' (DbType = Int64), @p253='?' (DbType = Double), @p254='?' (DbType = DateTime2), @p255='?' (DbType = Double), @p256='?' (DbType = Double), @p257='?' (DbType = Int64), @p258='?' (DbType = Int64), @p259='?' (DbType = Double), @p260='?' (DbType = Int64), @p261='?' (DbType = Int64), @p262='?' (DbType = Double), @p263='?' (DbType = Double), @p264='?' (DbType = Double), @p265='?' (DbType = Int64), @p266='?' (DbType = Double), @p267='?' (DbType = Double), @p268='?' (DbType = Int64), @p269='?' (Size = 4000), @p270='?' (DbType = Int64), @p271='?' (DbType = Double), @p272='?' (Size = 450), @p273='?' (DbType = Int64), @p274='?' (DbType = Int64), @p275='?' (DbType = Double), @p276='?' (DbType = Double), @p277='?' (DbType = Int64), @p278='?' (DbType = Int64), @p279='?' (DbType = Int64), @p280='?' (DbType = Double), @p281='?' (DbType = DateTime2), @p282='?' (DbType = Double), @p283='?' (DbType = Double), @p284='?' (DbType = Int64), @p285='?' (DbType = Int64), @p286='?' (DbType = Double), @p287='?' (DbType = Int64), @p288='?' (DbType = Int64), @p289='?' (DbType = Double), @p290='?' (DbType = Double), @p291='?' (DbType = Double), @p292='?' (DbType = Int64), @p293='?' (DbType = Double), @p294='?' (DbType = Double), @p295='?' (DbType = Int64), @p296='?' (Size = 4000), @p297='?' (DbType = Int64), @p298='?' (DbType = Double), @p299='?' (Size = 450), @p300='?' (DbType = Int64), @p301='?' (DbType = Int64), @p302='?' (DbType = Double), @p303='?' (DbType = Double), @p304='?' (DbType = Int64), @p305='?' (DbType = Int64), @p306='?' (DbType = Int64), @p307='?' (DbType = Double), @p308='?' (DbType = DateTime2), @p309='?' (DbType = Double), @p310='?' (DbType = Double), @p311='?' (DbType = Int64), @p312='?' (DbType = Int64), @p313='?' (DbType = Double), @p314='?' (DbType = Int64), @p315='?' (DbType = Int64), @p316='?' (DbType = Double), @p317='?' (DbType = Double), @p318='?' (DbType = Double), @p319='?' (DbType = Int64), @p320='?' (DbType = Double), @p321='?' (DbType = Double), @p322='?' (DbType = Int64), @p323='?' (Size = 4000), @p324='?' (DbType = Int64), @p325='?' (DbType = Double), @p326='?' (Size = 450), @p327='?' (DbType = Int64), @p328='?' (DbType = Int64), @p329='?' (DbType = Double), @p330='?' (DbType = Double), @p331='?' (DbType = Int64), @p332='?' (DbType = Int64), @p333='?' (DbType = Int64), @p334='?' (DbType = Double), @p335='?' (DbType = DateTime2), @p336='?' (DbType = Double), @p337='?' (DbType = Double), @p338='?' (DbType = Int64), @p339='?' (DbType = Int64), @p340='?' (DbType = Double), @p341='?' (DbType = Int64), @p342='?' (DbType = Int64), @p343='?' (DbType = Double), @p344='?' (DbType = Double), @p345='?' (DbType = Double), @p346='?' (DbType = Int64), @p347='?' (DbType = Double), @p348='?' (DbType = Double), @p349='?' (DbType = Int64), @p350='?' (Size = 4000), @p351='?' (DbType = Int64), @p352='?' (DbType = Double), @p353='?' (Size = 450), @p354='?' (DbType = Int64), @p355='?' (DbType = Int64), @p356='?' (DbType = Double), @p357='?' (DbType = Double), @p358='?' (DbType = Int64), @p359='?' (DbType = Int64), @p360='?' (DbType = Int64), @p361='?' (DbType = Double), @p362='?' (DbType = DateTime2), @p363='?' (DbType = Double), @p364='?' (DbType = Double), @p365='?' (DbType = Int64), @p366='?' (DbType = Int64), @p367='?' (DbType = Double), @p368='?' (DbType = Int64), @p369='?' (DbType = Int64), @p370='?' (DbType = Double), @p371='?' (DbType = Double), @p372='?' (DbType = Double), @p373='?' (DbType = Int64), @p374='?' (DbType = Double), @p375='?' (DbType = Double), @p376='?' (DbType = Int64), @p377='?' (Size = 4000), @p378='?' (DbType = Int64), @p379='?' (DbType = Double), @p380='?' (Size = 450), @p381='?' (DbType = Int64), @p382='?' (DbType = Int64), @p383='?' (DbType = Double), @p384='?' (DbType = Double), @p385='?' (DbType = Int64), @p386='?' (DbType = Int64), @p387='?' (DbType = Int64), @p388='?' (DbType = Double), @p389='?' (DbType = DateTime2), @p390='?' (DbType = Double), @p391='?' (DbType = Double), @p392='?' (DbType = Int64), @p393='?' (DbType = Int64), @p394='?' (DbType = Double), @p395='?' (DbType = Int64), @p396='?' (DbType = Int64), @p397='?' (DbType = Double), @p398='?' (DbType = Double), @p399='?' (DbType = Double), @p400='?' (DbType = Int64), @p401='?' (DbType = Double), @p402='?' (DbType = Double), @p403='?' (DbType = Int64), @p404='?' (Size = 4000), @p405='?' (DbType = Int64), @p406='?' (DbType = Double), @p407='?' (Size = 450), @p408='?' (DbType = Int64), @p409='?' (DbType = Int64), @p410='?' (DbType = Double), @p411='?' (DbType = Double), @p412='?' (DbType = Int64), @p413='?' (DbType = Int64), @p414='?' (DbType = Int64), @p415='?' (DbType = Double), @p416='?' (DbType = DateTime2), @p417='?' (DbType = Double), @p418='?' (DbType = Double), @p419='?' (DbType = Int64), @p420='?' (DbType = Int64), @p421='?' (DbType = Double), @p422='?' (DbType = Int64), @p423='?' (DbType = Int64), @p424='?' (DbType = Double), @p425='?' (DbType = Double), @p426='?' (DbType = Double), @p427='?' (DbType = Int64), @p428='?' (DbType = Double), @p429='?' (DbType = Double), @p430='?' (DbType = Int64), @p431='?' (Size = 4000), @p432='?' (DbType = Int64), @p433='?' (DbType = Double), @p434='?' (Size = 450), @p435='?' (DbType = Int64), @p436='?' (DbType = Int64), @p437='?' (DbType = Double), @p438='?' (DbType = Double), @p439='?' (DbType = Int64), @p440='?' (DbType = Int64), @p441='?' (DbType = Int64), @p442='?' (DbType = Double), @p443='?' (DbType = DateTime2), @p444='?' (DbType = Double), @p445='?' (DbType = Double), @p446='?' (DbType = Int64), @p447='?' (DbType = Int64), @p448='?' (DbType = Double), @p449='?' (DbType = Int64), @p450='?' (DbType = Int64), @p451='?' (DbType = Double), @p452='?' (DbType = Double), @p453='?' (DbType = Double), @p454='?' (DbType = Int64), @p455='?' (DbType = Double), @p456='?' (DbType = Double), @p457='?' (DbType = Int64), @p458='?' (Size = 4000), @p459='?' (DbType = Int64), @p460='?' (DbType = Double), @p461='?' (Size = 450), @p462='?' (DbType = Int64), @p463='?' (DbType = Int64), @p464='?' (DbType = Double), @p465='?' (DbType = Double), @p466='?' (DbType = Int64), @p467='?' (DbType = Int64), @p468='?' (DbType = Int64), @p469='?' (DbType = Double), @p470='?' (DbType = DateTime2), @p471='?' (DbType = Double), @p472='?' (DbType = Double), @p473='?' (DbType = Int64), @p474='?' (DbType = Int64), @p475='?' (DbType = Double), @p476='?' (DbType = Int64), @p477='?' (DbType = Int64), @p478='?' (DbType = Double), @p479='?' (DbType = Double), @p480='?' (DbType = Double), @p481='?' (DbType = Int64), @p482='?' (DbType = Double), @p483='?' (DbType = Double), @p484='?' (DbType = Int64), @p485='?' (Size = 4000), @p486='?' (DbType = Int64), @p487='?' (DbType = Double), @p488='?' (Size = 450), @p489='?' (DbType = Int64), @p490='?' (DbType = Int64), @p491='?' (DbType = Double), @p492='?' (DbType = Double), @p493='?' (DbType = Int64), @p494='?' (DbType = Int64), @p495='?' (DbType = Int64), @p496='?' (DbType = Double), @p497='?' (DbType = DateTime2), @p498='?' (DbType = Double), @p499='?' (DbType = Double), @p500='?' (DbType = Int64), @p501='?' (DbType = Int64), @p502='?' (DbType = Double), @p503='?' (DbType = Int64), @p504='?' (DbType = Int64), @p505='?' (DbType = Double), @p506='?' (DbType = Double), @p507='?' (DbType = Double), @p508='?' (DbType = Int64), @p509='?' (DbType = Double), @p510='?' (DbType = Double), @p511='?' (DbType = Int64), @p512='?' (Size = 4000), @p513='?' (DbType = Int64), @p514='?' (DbType = Double), @p515='?' (Size = 450), @p516='?' (DbType = Int64), @p517='?' (DbType = Int64), @p518='?' (DbType = Double), @p519='?' (DbType = Double), @p520='?' (DbType = Int64), @p521='?' (DbType = Int64), @p522='?' (DbType = Int64), @p523='?' (DbType = Double), @p524='?' (DbType = DateTime2), @p525='?' (DbType = Double), @p526='?' (DbType = Double), @p527='?' (DbType = Int64), @p528='?' (DbType = Int64), @p529='?' (DbType = Double), @p530='?' (DbType = Int64), @p531='?' (DbType = Int64), @p532='?' (DbType = Double), @p533='?' (DbType = Double), @p534='?' (DbType = Double), @p535='?' (DbType = Int64), @p536='?' (DbType = Double), @p537='?' (DbType = Double), @p538='?' (DbType = Int64), @p539='?' (Size = 4000), @p540='?' (DbType = Int64), @p541='?' (DbType = Double), @p542='?' (Size = 450), @p543='?' (DbType = Int64), @p544='?' (DbType = Int64), @p545='?' (DbType = Double), @p546='?' (DbType = Double), @p547='?' (DbType = Int64), @p548='?' (DbType = Int64), @p549='?' (DbType = Int64), @p550='?' (DbType = Double), @p551='?' (DbType = DateTime2), @p552='?' (DbType = Double), @p553='?' (DbType = Double), @p554='?' (DbType = Int64), @p555='?' (DbType = Int64), @p556='?' (DbType = Double), @p557='?' (DbType = Int64), @p558='?' (DbType = Int64), @p559='?' (DbType = Double), @p560='?' (DbType = Double), @p561='?' (DbType = Double), @p562='?' (DbType = Int64), @p563='?' (DbType = Double), @p564='?' (DbType = Double), @p565='?' (DbType = Int64), @p566='?' (Size = 4000), @p567='?' (DbType = Int64), @p568='?' (DbType = Double), @p569='?' (Size = 450), @p570='?' (DbType = Int64), @p571='?' (DbType = Int64), @p572='?' (DbType = Double), @p573='?' (DbType = Double), @p574='?' (DbType = Int64), @p575='?' (DbType = Int64), @p576='?' (DbType = Int64), @p577='?' (DbType = Double), @p578='?' (DbType = DateTime2), @p579='?' (DbType = Double), @p580='?' (DbType = Double), @p581='?' (DbType = Int64), @p582='?' (DbType = Int64), @p583='?' (DbType = Double), @p584='?' (DbType = Int64), @p585='?' (DbType = Int64), @p586='?' (DbType = Double), @p587='?' (DbType = Double), @p588='?' (DbType = Double), @p589='?' (DbType = Int64), @p590='?' (DbType = Double), @p591='?' (DbType = Double), @p592='?' (DbType = Int64), @p593='?' (Size = 4000), @p594='?' (DbType = Int64), @p595='?' (DbType = Double), @p596='?' (Size = 450), @p597='?' (DbType = Int64), @p598='?' (DbType = Int64), @p599='?' (DbType = Double), @p600='?' (DbType = Double), @p601='?' (DbType = Int64), @p602='?' (DbType = Int64), @p603='?' (DbType = Int64), @p604='?' (DbType = Double), @p605='?' (DbType = DateTime2), @p606='?' (DbType = Double), @p607='?' (DbType = Double), @p608='?' (DbType = Int64), @p609='?' (DbType = Int64), @p610='?' (DbType = Double), @p611='?' (DbType = Int64), @p612='?' (DbType = Int64), @p613='?' (DbType = Double), @p614='?' (DbType = Double), @p615='?' (DbType = Double), @p616='?' (DbType = Int64), @p617='?' (DbType = Double), @p618='?' (DbType = Double), @p619='?' (DbType = Int64), @p620='?' (Size = 4000), @p621='?' (DbType = Int64), @p622='?' (DbType = Double), @p623='?' (Size = 450), @p624='?' (DbType = Int64), @p625='?' (DbType = Int64), @p626='?' (DbType = Double), @p627='?' (DbType = Double), @p628='?' (DbType = Int64), @p629='?' (DbType = Int64), @p630='?' (DbType = Int64), @p631='?' (DbType = Double), @p632='?' (DbType = DateTime2), @p633='?' (DbType = Double), @p634='?' (DbType = Double), @p635='?' (DbType = Int64), @p636='?' (DbType = Int64), @p637='?' (DbType = Double), @p638='?' (DbType = Int64), @p639='?' (DbType = Int64), @p640='?' (DbType = Double), @p641='?' (DbType = Double), @p642='?' (DbType = Double), @p643='?' (DbType = Int64), @p644='?' (DbType = Double), @p645='?' (DbType = Double), @p646='?' (DbType = Int64), @p647='?' (Size = 4000), @p648='?' (DbType = Int64), @p649='?' (DbType = Double), @p650='?' (Size = 450), @p651='?' (DbType = Int64), @p652='?' (DbType = Int64), @p653='?' (DbType = Double), @p654='?' (DbType = Double), @p655='?' (DbType = Int64), @p656='?' (DbType = Int64), @p657='?' (DbType = Int64), @p658='?' (DbType = Double), @p659='?' (DbType = DateTime2), @p660='?' (DbType = Double), @p661='?' (DbType = Double), @p662='?' (DbType = Int64), @p663='?' (DbType = Int64), @p664='?' (DbType = Double), @p665='?' (DbType = Int64), @p666='?' (DbType = Int64), @p667='?' (DbType = Double), @p668='?' (DbType = Double), @p669='?' (DbType = Double), @p670='?' (DbType = Int64), @p671='?' (DbType = Double), @p672='?' (DbType = Double), @p673='?' (DbType = Int64), @p674='?' (Size = 4000), @p675='?' (DbType = Int64), @p676='?' (DbType = Double), @p677='?' (Size = 450), @p678='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
DECLARE @inserted0 TABLE ([Id] int, [_Position] [int]);
MERGE [IncomeStatementAnnualReport] USING (
VALUES (@p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21, @p22, @p23, @p24, @p25, @p26, @p27, @p28, @p29, @p30, 0),
(@p31, @p32, @p33, @p34, @p35, @p36, @p37, @p38, @p39, @p40, @p41, @p42, @p43, @p44, @p45, @p46, @p47, @p48, @p49, @p50, @p51, @p52, @p53, @p54, @p55, @p56, @p57, 1),
(@p58, @p59, @p60, @p61, @p62, @p63, @p64, @p65, @p66, @p67, @p68, @p69, @p70, @p71, @p72, @p73, @p74, @p75, @p76, @p77, @p78, @p79, @p80, @p81, @p82, @p83, @p84, 2),
(@p85, @p86, @p87, @p88, @p89, @p90, @p91, @p92, @p93, @p94, @p95, @p96, @p97, @p98, @p99, @p100, @p101, @p102, @p103, @p104, @p105, @p106, @p107, @p108, @p109, @p110, @p111, 3),
(@p112, @p113, @p114, @p115, @p116, @p117, @p118, @p119, @p120, @p121, @p122, @p123, @p124, @p125, @p126, @p127, @p128, @p129, @p130, @p131, @p132, @p133, @p134, @p135, @p136, @p137, @p138, 4)) AS i ([ComprehensiveIncomeNetOfTax], [CostOfRevenue], [CostofGoodsAndServicesSold], [Depreciation], [DepreciationAndAmortization], [Ebit], [Ebitda], [FiscalDateEnding], [GrossProfit], [IncomeBeforeTax], [IncomeTaxExpense], [InterestAndDebtExpense], [InterestExpense], [InterestIncome], [InvestmentIncomeNet], [NetIncome], [NetIncomeFromContinuingOperations], [NetInterestIncome], [NonInterestIncome], [OperatingExpenses], [OperatingIncome], [OtherNonOperatingIncome], [ReportedCurrency], [ResearchAndDevelopment], [SellingGeneralAndAdministrative], [Symbol], [TotalRevenue], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([ComprehensiveIncomeNetOfTax], [CostOfRevenue], [CostofGoodsAndServicesSold], [Depreciation], [DepreciationAndAmortization], [Ebit], [Ebitda], [FiscalDateEnding], [GrossProfit], [IncomeBeforeTax], [IncomeTaxExpense], [InterestAndDebtExpense], [InterestExpense], [InterestIncome], [InvestmentIncomeNet], [NetIncome], [NetIncomeFromContinuingOperations], [NetInterestIncome], [NonInterestIncome], [OperatingExpenses], [OperatingIncome], [OtherNonOperatingIncome], [ReportedCurrency], [ResearchAndDevelopment], [SellingGeneralAndAdministrative], [Symbol], [TotalRevenue])
VALUES (i.[ComprehensiveIncomeNetOfTax], i.[CostOfRevenue], i.[CostofGoodsAndServicesSold], i.[Depreciation], i.[DepreciationAndAmortization], i.[Ebit], i.[Ebitda], i.[FiscalDateEnding], i.[GrossProfit], i.[IncomeBeforeTax], i.[IncomeTaxExpense], i.[InterestAndDebtExpense], i.[InterestExpense], i.[InterestIncome], i.[InvestmentIncomeNet], i.[NetIncome], i.[NetIncomeFromContinuingOperations], i.[NetInterestIncome], i.[NonInterestIncome], i.[OperatingExpenses], i.[OperatingIncome], i.[OtherNonOperatingIncome], i.[ReportedCurrency], i.[ResearchAndDevelopment], i.[SellingGeneralAndAdministrative], i.[Symbol], i.[TotalRevenue])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted0;

SELECT [i].[Id] FROM @inserted0 i
ORDER BY [i].[_Position];

DECLARE @inserted5 TABLE ([Id] int, [_Position] [int]);
MERGE [IncomeStatementQuarterlyReport] USING (
VALUES (@p139, @p140, @p141, @p142, @p143, @p144, @p145, @p146, @p147, @p148, @p149, @p150, @p151, @p152, @p153, @p154, @p155, @p156, @p157, @p158, @p159, @p160, @p161, @p162, @p163, @p164, @p165, 0),
(@p166, @p167, @p168, @p169, @p170, @p171, @p172, @p173, @p174, @p175, @p176, @p177, @p178, @p179, @p180, @p181, @p182, @p183, @p184, @p185, @p186, @p187, @p188, @p189, @p190, @p191, @p192, 1),
(@p193, @p194, @p195, @p196, @p197, @p198, @p199, @p200, @p201, @p202, @p203, @p204, @p205, @p206, @p207, @p208, @p209, @p210, @p211, @p212, @p213, @p214, @p215, @p216, @p217, @p218, @p219, 2),
(@p220, @p221, @p222, @p223, @p224, @p225, @p226, @p227, @p228, @p229, @p230, @p231, @p232, @p233, @p234, @p235, @p236, @p237, @p238, @p239, @p240, @p241, @p242, @p243, @p244, @p245, @p246, 3),
(@p247, @p248, @p249, @p250, @p251, @p252, @p253, @p254, @p255, @p256, @p257, @p258, @p259, @p260, @p261, @p262, @p263, @p264, @p265, @p266, @p267, @p268, @p269, @p270, @p271, @p272, @p273, 4),
(@p274, @p275, @p276, @p277, @p278, @p279, @p280, @p281, @p282, @p283, @p284, @p285, @p286, @p287, @p288, @p289, @p290, @p291, @p292, @p293, @p294, @p295, @p296, @p297, @p298, @p299, @p300, 5),
(@p301, @p302, @p303, @p304, @p305, @p306, @p307, @p308, @p309, @p310, @p311, @p312, @p313, @p314, @p315, @p316, @p317, @p318, @p319, @p320, @p321, @p322, @p323, @p324, @p325, @p326, @p327, 6),
(@p328, @p329, @p330, @p331, @p332, @p333, @p334, @p335, @p336, @p337, @p338, @p339, @p340, @p341, @p342, @p343, @p344, @p345, @p346, @p347, @p348, @p349, @p350, @p351, @p352, @p353, @p354, 7),
(@p355, @p356, @p357, @p358, @p359, @p360, @p361, @p362, @p363, @p364, @p365, @p366, @p367, @p368, @p369, @p370, @p371, @p372, @p373, @p374, @p375, @p376, @p377, @p378, @p379, @p380, @p381, 8),
(@p382, @p383, @p384, @p385, @p386, @p387, @p388, @p389, @p390, @p391, @p392, @p393, @p394, @p395, @p396, @p397, @p398, @p399, @p400, @p401, @p402, @p403, @p404, @p405, @p406, @p407, @p408, 9),
(@p409, @p410, @p411, @p412, @p413, @p414, @p415, @p416, @p417, @p418, @p419, @p420, @p421, @p422, @p423, @p424, @p425, @p426, @p427, @p428, @p429, @p430, @p431, @p432, @p433, @p434, @p435, 10),
(@p436, @p437, @p438, @p439, @p440, @p441, @p442, @p443, @p444, @p445, @p446, @p447, @p448, @p449, @p450, @p451, @p452, @p453, @p454, @p455, @p456, @p457, @p458, @p459, @p460, @p461, @p462, 11),
(@p463, @p464, @p465, @p466, @p467, @p468, @p469, @p470, @p471, @p472, @p473, @p474, @p475, @p476, @p477, @p478, @p479, @p480, @p481, @p482, @p483, @p484, @p485, @p486, @p487, @p488, @p489, 12),
(@p490, @p491, @p492, @p493, @p494, @p495, @p496, @p497, @p498, @p499, @p500, @p501, @p502, @p503, @p504, @p505, @p506, @p507, @p508, @p509, @p510, @p511, @p512, @p513, @p514, @p515, @p516, 13),
(@p517, @p518, @p519, @p520, @p521, @p522, @p523, @p524, @p525, @p526, @p527, @p528, @p529, @p530, @p531, @p532, @p533, @p534, @p535, @p536, @p537, @p538, @p539, @p540, @p541, @p542, @p543, 14),
(@p544, @p545, @p546, @p547, @p548, @p549, @p550, @p551, @p552, @p553, @p554, @p555, @p556, @p557, @p558, @p559, @p560, @p561, @p562, @p563, @p564, @p565, @p566, @p567, @p568, @p569, @p570, 15),
(@p571, @p572, @p573, @p574, @p575, @p576, @p577, @p578, @p579, @p580, @p581, @p582, @p583, @p584, @p585, @p586, @p587, @p588, @p589, @p590, @p591, @p592, @p593, @p594, @p595, @p596, @p597, 16),
(@p598, @p599, @p600, @p601, @p602, @p603, @p604, @p605, @p606, @p607, @p608, @p609, @p610, @p611, @p612, @p613, @p614, @p615, @p616, @p617, @p618, @p619, @p620, @p621, @p622, @p623, @p624, 17),
(@p625, @p626, @p627, @p628, @p629, @p630, @p631, @p632, @p633, @p634, @p635, @p636, @p637, @p638, @p639, @p640, @p641, @p642, @p643, @p644, @p645, @p646, @p647, @p648, @p649, @p650, @p651, 18),
(@p652, @p653, @p654, @p655, @p656, @p657, @p658, @p659, @p660, @p661, @p662, @p663, @p664, @p665, @p666, @p667, @p668, @p669, @p670, @p671, @p672, @p673, @p674, @p675, @p676, @p677, @p678, 19)) AS i ([ComprehensiveIncomeNetOfTax], [CostOfRevenue], [CostofGoodsAndServicesSold], [Depreciation], [DepreciationAndAmortization], [Ebit], [Ebitda], [FiscalDateEnding], [GrossProfit], [IncomeBeforeTax], [IncomeTaxExpense], [InterestAndDebtExpense], [InterestExpense], [InterestIncome], [InvestmentIncomeNet], [NetIncome], [NetIncomeFromContinuingOperations], [NetInterestIncome], [NonInterestIncome], [OperatingExpenses], [OperatingIncome], [OtherNonOperatingIncome], [ReportedCurrency], [ResearchAndDevelopment], [SellingGeneralAndAdministrative], [Symbol], [TotalRevenue], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([ComprehensiveIncomeNetOfTax], [CostOfRevenue], [CostofGoodsAndServicesSold], [Depreciation], [DepreciationAndAmortization], [Ebit], [Ebitda], [FiscalDateEnding], [GrossProfit], [IncomeBeforeTax], [IncomeTaxExpense], [InterestAndDebtExpense], [InterestExpense], [InterestIncome], [InvestmentIncomeNet], [NetIncome], [NetIncomeFromContinuingOperations], [NetInterestIncome], [NonInterestIncome], [OperatingExpenses], [OperatingIncome], [OtherNonOperatingIncome], [ReportedCurrency], [ResearchAndDevelopment], [SellingGeneralAndAdministrative], [Symbol], [TotalRevenue])
VALUES (i.[ComprehensiveIncomeNetOfTax], i.[CostOfRevenue], i.[CostofGoodsAndServicesSold], i.[Depreciation], i.[DepreciationAndAmortization], i.[Ebit], i.[Ebitda], i.[FiscalDateEnding], i.[GrossProfit], i.[IncomeBeforeTax], i.[IncomeTaxExpense], i.[InterestAndDebtExpense], i.[InterestExpense], i.[InterestIncome], i.[InvestmentIncomeNet], i.[NetIncome], i.[NetIncomeFromContinuingOperations], i.[NetInterestIncome], i.[NonInterestIncome], i.[OperatingExpenses], i.[OperatingIncome], i.[OtherNonOperatingIncome], i.[ReportedCurrency], i.[ResearchAndDevelopment], i.[SellingGeneralAndAdministrative], i.[Symbol], i.[TotalRevenue])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted5;

SELECT [i].[Id] FROM @inserted5 i
ORDER BY [i].[_Position];
2022-05-12 00:59:22.813 +03:00 [INF] AddOrUpdate run successful.
2022-05-12 00:59:23.256 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CashFlow with Symbol ATFV
2022-05-12 00:59:23.258 +03:00 [INF] Generating URI for CASH_FLOW with params: symbol: ATFV
2022-05-12 00:59:23.258 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=CASH_FLOW&symbol=ATFV
2022-05-12 00:59:23.259 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=CASH_FLOW&symbol=ATFV".
2022-05-12 00:59:23.513 +03:00 [INF] Response has success status code
2022-05-12 00:59:23.515 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 00:59:23.537 +03:00 [INF] Executed DbCommand (21ms) [Parameters=[@__symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__symbol_0
2022-05-12 00:59:23.539 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.CashFlow.
2022-05-12 00:59:23.548 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[ExistInApi], [c].[LastApiRefresh], [c].[LastLocalRefresh]
FROM [CashFlows] AS [c]
WHERE [c].[Symbol] = @__entity_Symbol_0
2022-05-12 00:59:23.549 +03:00 [INF] Entity does not exist. Adding to DB.
2022-05-12 00:59:23.562 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = Boolean), @p2='?' (DbType = DateTime2), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [CashFlows] ([Symbol], [ExistInApi], [LastApiRefresh], [LastLocalRefresh])
VALUES (@p0, @p1, @p2, @p3);
2022-05-12 00:59:23.569 +03:00 [INF] AddOrUpdate run successful.
2022-05-12 00:59:23.569 +03:00 [WRN] Alpha Vantage has no SaluteStocksAPI.Models.FundamentalData.CashFlow for symbol ATFV
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageEmptyResponse: Response was empty.
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCashFlow(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 96
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 00:59:50.187 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CompanyOverview with Symbol BITE-U
2022-05-12 00:59:50.191 +03:00 [INF] Generating URI for OVERVIEW with params: symbol: BITE-U
2022-05-12 00:59:50.192 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=OVERVIEW&symbol=BITE-U
2022-05-12 00:59:50.193 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=OVERVIEW&symbol=BITE-U".
2022-05-12 00:59:50.488 +03:00 [INF] Response has success status code
2022-05-12 00:59:50.490 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.CompanyOverview for symbol BITE-U
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyOverview(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 109
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 00:59:52.129 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.Earnings with Symbol AVPTW
2022-05-12 00:59:52.130 +03:00 [INF] Generating URI for EARNINGS with params: symbol: AVPTW
2022-05-12 00:59:52.131 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=EARNINGS&symbol=AVPTW
2022-05-12 00:59:52.131 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=EARNINGS&symbol=AVPTW".
2022-05-12 00:59:52.357 +03:00 [INF] Response has success status code
2022-05-12 00:59:52.358 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.Earnings for symbol AVPTW
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyEarnings(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 142
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 00:59:52.424 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.BalanceSheet with Symbol BDN
2022-05-12 00:59:52.428 +03:00 [INF] Generating URI for BALANCE_SHEET with params: symbol: BDN
2022-05-12 00:59:52.428 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BDN
2022-05-12 00:59:52.429 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BDN".
2022-05-12 00:59:52.647 +03:00 [INF] Response has success status code
2022-05-12 00:59:52.648 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.BalanceSheet for symbol BDN
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetBalanceSheet(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 82
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 00:59:52.821 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.IncomeStatement with Symbol ATRI
2022-05-12 00:59:52.822 +03:00 [INF] Generating URI for INCOME_STATEMENT with params: symbol: ATRI
2022-05-12 00:59:52.823 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=INCOME_STATEMENT&symbol=ATRI
2022-05-12 00:59:52.823 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=INCOME_STATEMENT&symbol=ATRI".
2022-05-12 00:59:53.145 +03:00 [INF] Response has success status code
2022-05-12 00:59:53.146 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.IncomeStatement for symbol ATRI
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetIncomeStatement(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 69
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 00:59:53.588 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CashFlow with Symbol ATHE
2022-05-12 00:59:53.589 +03:00 [INF] Generating URI for CASH_FLOW with params: symbol: ATHE
2022-05-12 00:59:53.589 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=CASH_FLOW&symbol=ATHE
2022-05-12 00:59:53.590 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=CASH_FLOW&symbol=ATHE".
2022-05-12 00:59:53.827 +03:00 [INF] Response has success status code
2022-05-12 00:59:53.828 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.CashFlow for symbol ATHE
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCashFlow(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 96
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:00:20.508 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CompanyOverview with Symbol BITF
2022-05-12 01:00:20.512 +03:00 [INF] Generating URI for OVERVIEW with params: symbol: BITF
2022-05-12 01:00:20.512 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=OVERVIEW&symbol=BITF
2022-05-12 01:00:20.513 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=OVERVIEW&symbol=BITF".
2022-05-12 01:00:20.749 +03:00 [INF] Response has success status code
2022-05-12 01:00:20.750 +03:00 [INF] Trying to deserialize response.
2022-05-12 01:00:20.750 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.CompanyOverview.
2022-05-12 01:00:20.751 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 01:00:20.763 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__entity_Symbol_0
2022-05-12 01:00:20.764 +03:00 [INF] Entity does not exist. Adding to DB.
2022-05-12 01:00:20.782 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (Size = 4000), @p2='?' (DbType = Double), @p3='?' (Size = 4000), @p4='?' (DbType = Double), @p5='?' (DbType = Double), @p6='?' (DbType = Int64), @p7='?' (Size = 4000), @p8='?' (Size = 4000), @p9='?' (Size = 4000), @p10='?' (DbType = Double), @p11='?' (DbType = DateTime2), @p12='?' (DbType = Double), @p13='?' (DbType = Double), @p14='?' (DbType = Int64), @p15='?' (DbType = Double), @p16='?' (DbType = Double), @p17='?' (DbType = Double), @p18='?' (DbType = DateTime2), @p19='?' (Size = 4000), @p20='?' (DbType = Boolean), @p21='?' (Size = 4000), @p22='?' (DbType = Double), @p23='?' (DbType = Int64), @p24='?' (Size = 4000), @p25='?' (DbType = DateTime2), @p26='?' (DbType = DateTime2), @p27='?' (DbType = DateTime2), @p28='?' (DbType = Int64), @p29='?' (Size = 4000), @p30='?' (DbType = Double), @p31='?' (DbType = Double), @p32='?' (DbType = Double), @p33='?' (DbType = Double), @p34='?' (DbType = Double), @p35='?' (DbType = Double), @p36='?' (DbType = Double), @p37='?' (DbType = Double), @p38='?' (DbType = Double), @p39='?' (DbType = Double), @p40='?' (DbType = Double), @p41='?' (DbType = Int64), @p42='?' (Size = 4000), @p43='?' (DbType = Int64), @p44='?' (DbType = Double), @p45='?' (DbType = Double), @p46='?' (DbType = Double), @p47='?' (DbType = Double), @p48='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [CompanyOverviews] ([Symbol], [Address], [AnalystTargetPrice], [AssetType], [Beta], [BookValue], [CIK], [Country], [Currency], [Description], [DilutedEPSTTM], [DividendDate], [DividendPerShare], [DividendYield], [EBITDA], [EPS], [EVToEBITDA], [EVToRevenue], [ExDividendDate], [Exchange], [ExistInApi], [FiscalYearEnd], [ForwardPE], [GrossProfitTTM], [Industry], [LastApiRefresh], [LastLocalRefresh], [LatestQuarter], [MarketCapitalization], [Name], [OperatingMarginTTM], [PEGRatio], [PERatio], [PriceToBookRatio], [PriceToSalesRatioTTM], [ProfitMargin], [QuarterlyEarningsGrowthYOY], [QuarterlyRevenueGrowthYOY], [ReturnOnAssetsTTM], [ReturnOnEquityTTM], [RevenuePerShareTTM], [RevenueTTM], [Sector], [SharesOutstanding], [TrailingPE], [_200DayMovingAverage], [_50DayMovingAverage], [_52WeekHigh], [_52WeekLow])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21, @p22, @p23, @p24, @p25, @p26, @p27, @p28, @p29, @p30, @p31, @p32, @p33, @p34, @p35, @p36, @p37, @p38, @p39, @p40, @p41, @p42, @p43, @p44, @p45, @p46, @p47, @p48);
2022-05-12 01:00:20.790 +03:00 [INF] AddOrUpdate run successful.
2022-05-12 01:00:22.361 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.Earnings with Symbol AVRO
2022-05-12 01:00:22.363 +03:00 [INF] Generating URI for EARNINGS with params: symbol: AVRO
2022-05-12 01:00:22.363 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=EARNINGS&symbol=AVRO
2022-05-12 01:00:22.364 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=EARNINGS&symbol=AVRO".
2022-05-12 01:00:22.621 +03:00 [INF] Response has success status code
2022-05-12 01:00:22.621 +03:00 [INF] Trying to deserialize response.
2022-05-12 01:00:22.622 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 01:00:22.633 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__symbol_0
2022-05-12 01:00:22.634 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.Earnings.
2022-05-12 01:00:22.643 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [e].[Symbol], [e].[ExistInApi], [e].[LastApiRefresh], [e].[LastLocalRefresh]
FROM [Earnings] AS [e]
WHERE [e].[Symbol] = @__entity_Symbol_0
2022-05-12 01:00:22.644 +03:00 [INF] Entity does not exist. Adding to DB.
2022-05-12 01:00:22.658 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = Boolean), @p2='?' (DbType = DateTime2), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Earnings] ([Symbol], [ExistInApi], [LastApiRefresh], [LastLocalRefresh])
VALUES (@p0, @p1, @p2, @p3);
2022-05-12 01:00:22.658 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.BalanceSheet with Symbol BDRY
2022-05-12 01:00:22.663 +03:00 [INF] Generating URI for BALANCE_SHEET with params: symbol: BDRY
2022-05-12 01:00:22.663 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BDRY
2022-05-12 01:00:22.664 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BDRY".
2022-05-12 01:00:22.679 +03:00 [INF] Executed DbCommand (17ms) [Parameters=[@p4='?' (DbType = DateTime2), @p5='?' (DbType = Double), @p6='?' (Size = 450), @p7='?' (DbType = DateTime2), @p8='?' (DbType = Double), @p9='?' (Size = 450), @p10='?' (DbType = DateTime2), @p11='?' (DbType = Double), @p12='?' (Size = 450), @p13='?' (DbType = DateTime2), @p14='?' (DbType = Double), @p15='?' (Size = 450), @p16='?' (DbType = DateTime2), @p17='?' (DbType = Double), @p18='?' (Size = 450), @p19='?' (DbType = Double), @p20='?' (DbType = DateTime2), @p21='?' (DbType = DateTime2), @p22='?' (DbType = Double), @p23='?' (DbType = Double), @p24='?' (DbType = Double), @p25='?' (Size = 450), @p26='?' (DbType = Double), @p27='?' (DbType = DateTime2), @p28='?' (DbType = DateTime2), @p29='?' (DbType = Double), @p30='?' (DbType = Double), @p31='?' (DbType = Double), @p32='?' (Size = 450), @p33='?' (DbType = Double), @p34='?' (DbType = DateTime2), @p35='?' (DbType = DateTime2), @p36='?' (DbType = Double), @p37='?' (DbType = Double), @p38='?' (DbType = Double), @p39='?' (Size = 450), @p40='?' (DbType = Double), @p41='?' (DbType = DateTime2), @p42='?' (DbType = DateTime2), @p43='?' (DbType = Double), @p44='?' (DbType = Double), @p45='?' (DbType = Double), @p46='?' (Size = 450), @p47='?' (DbType = Double), @p48='?' (DbType = DateTime2), @p49='?' (DbType = DateTime2), @p50='?' (DbType = Double), @p51='?' (DbType = Double), @p52='?' (DbType = Double), @p53='?' (Size = 450), @p54='?' (DbType = Double), @p55='?' (DbType = DateTime2), @p56='?' (DbType = DateTime2), @p57='?' (DbType = Double), @p58='?' (DbType = Double), @p59='?' (DbType = Double), @p60='?' (Size = 450), @p61='?' (DbType = Double), @p62='?' (DbType = DateTime2), @p63='?' (DbType = DateTime2), @p64='?' (DbType = Double), @p65='?' (DbType = Double), @p66='?' (DbType = Double), @p67='?' (Size = 450), @p68='?' (DbType = Double), @p69='?' (DbType = DateTime2), @p70='?' (DbType = DateTime2), @p71='?' (DbType = Double), @p72='?' (DbType = Double), @p73='?' (DbType = Double), @p74='?' (Size = 450), @p75='?' (DbType = Double), @p76='?' (DbType = DateTime2), @p77='?' (DbType = DateTime2), @p78='?' (DbType = Double), @p79='?' (DbType = Double), @p80='?' (DbType = Double), @p81='?' (Size = 450), @p82='?' (DbType = Double), @p83='?' (DbType = DateTime2), @p84='?' (DbType = DateTime2), @p85='?' (DbType = Double), @p86='?' (DbType = Double), @p87='?' (DbType = Double), @p88='?' (Size = 450), @p89='?' (DbType = Double), @p90='?' (DbType = DateTime2), @p91='?' (DbType = DateTime2), @p92='?' (DbType = Double), @p93='?' (DbType = Double), @p94='?' (DbType = Double), @p95='?' (Size = 450), @p96='?' (DbType = Double), @p97='?' (DbType = DateTime2), @p98='?' (DbType = DateTime2), @p99='?' (DbType = Double), @p100='?' (DbType = Double), @p101='?' (DbType = Double), @p102='?' (Size = 450), @p103='?' (DbType = Double), @p104='?' (DbType = DateTime2), @p105='?' (DbType = DateTime2), @p106='?' (DbType = Double), @p107='?' (DbType = Double), @p108='?' (DbType = Double), @p109='?' (Size = 450), @p110='?' (DbType = Double), @p111='?' (DbType = DateTime2), @p112='?' (DbType = DateTime2), @p113='?' (DbType = Double), @p114='?' (DbType = Double), @p115='?' (DbType = Double), @p116='?' (Size = 450), @p117='?' (DbType = Double), @p118='?' (DbType = DateTime2), @p119='?' (DbType = DateTime2), @p120='?' (DbType = Double), @p121='?' (DbType = Double), @p122='?' (DbType = Double), @p123='?' (Size = 450), @p124='?' (DbType = Double), @p125='?' (DbType = DateTime2), @p126='?' (DbType = DateTime2), @p127='?' (DbType = Double), @p128='?' (DbType = Double), @p129='?' (DbType = Double), @p130='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
DECLARE @inserted0 TABLE ([Id] int, [_Position] [int]);
MERGE [AnnualEarning] USING (
VALUES (@p4, @p5, @p6, 0),
(@p7, @p8, @p9, 1),
(@p10, @p11, @p12, 2),
(@p13, @p14, @p15, 3),
(@p16, @p17, @p18, 4)) AS i ([FiscalDateEnding], [ReportedEPS], [Symbol], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([FiscalDateEnding], [ReportedEPS], [Symbol])
VALUES (i.[FiscalDateEnding], i.[ReportedEPS], i.[Symbol])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted0;

SELECT [i].[Id] FROM @inserted0 i
ORDER BY [i].[_Position];

DECLARE @inserted5 TABLE ([Id] int, [_Position] [int]);
MERGE [QuarterlyEarning] USING (
VALUES (@p19, @p20, @p21, @p22, @p23, @p24, @p25, 0),
(@p26, @p27, @p28, @p29, @p30, @p31, @p32, 1),
(@p33, @p34, @p35, @p36, @p37, @p38, @p39, 2),
(@p40, @p41, @p42, @p43, @p44, @p45, @p46, 3),
(@p47, @p48, @p49, @p50, @p51, @p52, @p53, 4),
(@p54, @p55, @p56, @p57, @p58, @p59, @p60, 5),
(@p61, @p62, @p63, @p64, @p65, @p66, @p67, 6),
(@p68, @p69, @p70, @p71, @p72, @p73, @p74, 7),
(@p75, @p76, @p77, @p78, @p79, @p80, @p81, 8),
(@p82, @p83, @p84, @p85, @p86, @p87, @p88, 9),
(@p89, @p90, @p91, @p92, @p93, @p94, @p95, 10),
(@p96, @p97, @p98, @p99, @p100, @p101, @p102, 11),
(@p103, @p104, @p105, @p106, @p107, @p108, @p109, 12),
(@p110, @p111, @p112, @p113, @p114, @p115, @p116, 13),
(@p117, @p118, @p119, @p120, @p121, @p122, @p123, 14),
(@p124, @p125, @p126, @p127, @p128, @p129, @p130, 15)) AS i ([EstimatedEPS], [FiscalDateEnding], [ReportedDate], [ReportedEPS], [Surprise], [SurprisePercentage], [Symbol], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([EstimatedEPS], [FiscalDateEnding], [ReportedDate], [ReportedEPS], [Surprise], [SurprisePercentage], [Symbol])
VALUES (i.[EstimatedEPS], i.[FiscalDateEnding], i.[ReportedDate], i.[ReportedEPS], i.[Surprise], i.[SurprisePercentage], i.[Symbol])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted5;

SELECT [i].[Id] FROM @inserted5 i
ORDER BY [i].[_Position];
2022-05-12 01:00:22.687 +03:00 [INF] AddOrUpdate run successful.
2022-05-12 01:00:23.161 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.IncomeStatement with Symbol ATRS
2022-05-12 01:00:23.164 +03:00 [INF] Generating URI for INCOME_STATEMENT with params: symbol: ATRS
2022-05-12 01:00:23.165 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=INCOME_STATEMENT&symbol=ATRS
2022-05-12 01:00:23.165 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=INCOME_STATEMENT&symbol=ATRS".
2022-05-12 01:00:23.193 +03:00 [INF] Response has success status code
2022-05-12 01:00:23.194 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 01:00:23.207 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__symbol_0
2022-05-12 01:00:23.209 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.BalanceSheet.
2022-05-12 01:00:23.220 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [b].[Symbol], [b].[ExistInApi], [b].[LastApiRefresh], [b].[LastLocalRefresh]
FROM [BalanceSheets] AS [b]
WHERE [b].[Symbol] = @__entity_Symbol_0
2022-05-12 01:00:23.221 +03:00 [INF] Entity does not exist. Adding to DB.
2022-05-12 01:00:23.234 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = Boolean), @p2='?' (DbType = DateTime2), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [BalanceSheets] ([Symbol], [ExistInApi], [LastApiRefresh], [LastLocalRefresh])
VALUES (@p0, @p1, @p2, @p3);
2022-05-12 01:00:23.240 +03:00 [INF] AddOrUpdate run successful.
2022-05-12 01:00:23.241 +03:00 [WRN] Alpha Vantage has no SaluteStocksAPI.Models.FundamentalData.BalanceSheet for symbol BDRY
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageEmptyResponse: Response was empty.
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetBalanceSheet(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 82
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:00:23.570 +03:00 [INF] Response has success status code
2022-05-12 01:00:23.571 +03:00 [INF] Trying to deserialize response.
2022-05-12 01:00:23.572 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 01:00:23.583 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__symbol_0
2022-05-12 01:00:23.584 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.IncomeStatement.
2022-05-12 01:00:23.592 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [i].[Symbol], [i].[ExistInApi], [i].[LastApiRefresh], [i].[LastLocalRefresh]
FROM [IncomeStatements] AS [i]
WHERE [i].[Symbol] = @__entity_Symbol_0
2022-05-12 01:00:23.593 +03:00 [INF] Entity does not exist. Adding to DB.
2022-05-12 01:00:23.608 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = Boolean), @p2='?' (DbType = DateTime2), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [IncomeStatements] ([Symbol], [ExistInApi], [LastApiRefresh], [LastLocalRefresh])
VALUES (@p0, @p1, @p2, @p3);
2022-05-12 01:00:23.665 +03:00 [INF] Executed DbCommand (55ms) [Parameters=[@p4='?' (DbType = Int64), @p5='?' (DbType = Double), @p6='?' (DbType = Double), @p7='?' (DbType = Int64), @p8='?' (DbType = Int64), @p9='?' (DbType = Int64), @p10='?' (DbType = Double), @p11='?' (DbType = DateTime2), @p12='?' (DbType = Double), @p13='?' (DbType = Double), @p14='?' (DbType = Int64), @p15='?' (DbType = Int64), @p16='?' (DbType = Double), @p17='?' (DbType = Int64), @p18='?' (DbType = Int64), @p19='?' (DbType = Double), @p20='?' (DbType = Double), @p21='?' (DbType = Double), @p22='?' (DbType = Int64), @p23='?' (DbType = Double), @p24='?' (DbType = Double), @p25='?' (DbType = Int64), @p26='?' (Size = 4000), @p27='?' (DbType = Int64), @p28='?' (DbType = Double), @p29='?' (Size = 450), @p30='?' (DbType = Int64), @p31='?' (DbType = Int64), @p32='?' (DbType = Double), @p33='?' (DbType = Double), @p34='?' (DbType = Int64), @p35='?' (DbType = Int64), @p36='?' (DbType = Int64), @p37='?' (DbType = Double), @p38='?' (DbType = DateTime2), @p39='?' (DbType = Double), @p40='?' (DbType = Double), @p41='?' (DbType = Int64), @p42='?' (DbType = Int64), @p43='?' (DbType = Double), @p44='?' (DbType = Int64), @p45='?' (DbType = Int64), @p46='?' (DbType = Double), @p47='?' (DbType = Double), @p48='?' (DbType = Double), @p49='?' (DbType = Int64), @p50='?' (DbType = Double), @p51='?' (DbType = Double), @p52='?' (DbType = Int64), @p53='?' (Size = 4000), @p54='?' (DbType = Int64), @p55='?' (DbType = Double), @p56='?' (Size = 450), @p57='?' (DbType = Int64), @p58='?' (DbType = Int64), @p59='?' (DbType = Double), @p60='?' (DbType = Double), @p61='?' (DbType = Int64), @p62='?' (DbType = Int64), @p63='?' (DbType = Int64), @p64='?' (DbType = Double), @p65='?' (DbType = DateTime2), @p66='?' (DbType = Double), @p67='?' (DbType = Double), @p68='?' (DbType = Int64), @p69='?' (DbType = Int64), @p70='?' (DbType = Double), @p71='?' (DbType = Int64), @p72='?' (DbType = Int64), @p73='?' (DbType = Double), @p74='?' (DbType = Double), @p75='?' (DbType = Double), @p76='?' (DbType = Int64), @p77='?' (DbType = Double), @p78='?' (DbType = Double), @p79='?' (DbType = Int64), @p80='?' (Size = 4000), @p81='?' (DbType = Int64), @p82='?' (DbType = Double), @p83='?' (Size = 450), @p84='?' (DbType = Int64), @p85='?' (DbType = Int64), @p86='?' (DbType = Double), @p87='?' (DbType = Double), @p88='?' (DbType = Int64), @p89='?' (DbType = Int64), @p90='?' (DbType = Int64), @p91='?' (DbType = Double), @p92='?' (DbType = DateTime2), @p93='?' (DbType = Double), @p94='?' (DbType = Double), @p95='?' (DbType = Int64), @p96='?' (DbType = Int64), @p97='?' (DbType = Double), @p98='?' (DbType = Int64), @p99='?' (DbType = Int64), @p100='?' (DbType = Double), @p101='?' (DbType = Double), @p102='?' (DbType = Double), @p103='?' (DbType = Int64), @p104='?' (DbType = Double), @p105='?' (DbType = Double), @p106='?' (DbType = Int64), @p107='?' (Size = 4000), @p108='?' (DbType = Int64), @p109='?' (DbType = Double), @p110='?' (Size = 450), @p111='?' (DbType = Int64), @p112='?' (DbType = Int64), @p113='?' (DbType = Double), @p114='?' (DbType = Double), @p115='?' (DbType = Int64), @p116='?' (DbType = Int64), @p117='?' (DbType = Int64), @p118='?' (DbType = Double), @p119='?' (DbType = DateTime2), @p120='?' (DbType = Double), @p121='?' (DbType = Double), @p122='?' (DbType = Int64), @p123='?' (DbType = Int64), @p124='?' (DbType = Double), @p125='?' (DbType = Int64), @p126='?' (DbType = Int64), @p127='?' (DbType = Double), @p128='?' (DbType = Double), @p129='?' (DbType = Double), @p130='?' (DbType = Int64), @p131='?' (DbType = Double), @p132='?' (DbType = Double), @p133='?' (DbType = Int64), @p134='?' (Size = 4000), @p135='?' (DbType = Int64), @p136='?' (DbType = Double), @p137='?' (Size = 450), @p138='?' (DbType = Int64), @p139='?' (DbType = Int64), @p140='?' (DbType = Double), @p141='?' (DbType = Double), @p142='?' (DbType = Int64), @p143='?' (DbType = Int64), @p144='?' (DbType = Int64), @p145='?' (DbType = Double), @p146='?' (DbType = DateTime2), @p147='?' (DbType = Double), @p148='?' (DbType = Double), @p149='?' (DbType = Int64), @p150='?' (DbType = Int64), @p151='?' (DbType = Double), @p152='?' (DbType = Int64), @p153='?' (DbType = Int64), @p154='?' (DbType = Double), @p155='?' (DbType = Double), @p156='?' (DbType = Double), @p157='?' (DbType = Int64), @p158='?' (DbType = Double), @p159='?' (DbType = Double), @p160='?' (DbType = Int64), @p161='?' (Size = 4000), @p162='?' (DbType = Int64), @p163='?' (DbType = Double), @p164='?' (Size = 450), @p165='?' (DbType = Int64), @p166='?' (DbType = Int64), @p167='?' (DbType = Double), @p168='?' (DbType = Double), @p169='?' (DbType = Int64), @p170='?' (DbType = Int64), @p171='?' (DbType = Int64), @p172='?' (DbType = Double), @p173='?' (DbType = DateTime2), @p174='?' (DbType = Double), @p175='?' (DbType = Double), @p176='?' (DbType = Int64), @p177='?' (DbType = Int64), @p178='?' (DbType = Double), @p179='?' (DbType = Int64), @p180='?' (DbType = Int64), @p181='?' (DbType = Double), @p182='?' (DbType = Double), @p183='?' (DbType = Double), @p184='?' (DbType = Int64), @p185='?' (DbType = Double), @p186='?' (DbType = Double), @p187='?' (DbType = Int64), @p188='?' (Size = 4000), @p189='?' (DbType = Int64), @p190='?' (DbType = Double), @p191='?' (Size = 450), @p192='?' (DbType = Int64), @p193='?' (DbType = Int64), @p194='?' (DbType = Double), @p195='?' (DbType = Double), @p196='?' (DbType = Int64), @p197='?' (DbType = Int64), @p198='?' (DbType = Int64), @p199='?' (DbType = Double), @p200='?' (DbType = DateTime2), @p201='?' (DbType = Double), @p202='?' (DbType = Double), @p203='?' (DbType = Int64), @p204='?' (DbType = Int64), @p205='?' (DbType = Double), @p206='?' (DbType = Int64), @p207='?' (DbType = Int64), @p208='?' (DbType = Double), @p209='?' (DbType = Double), @p210='?' (DbType = Double), @p211='?' (DbType = Int64), @p212='?' (DbType = Double), @p213='?' (DbType = Double), @p214='?' (DbType = Int64), @p215='?' (Size = 4000), @p216='?' (DbType = Int64), @p217='?' (DbType = Double), @p218='?' (Size = 450), @p219='?' (DbType = Int64), @p220='?' (DbType = Int64), @p221='?' (DbType = Double), @p222='?' (DbType = Double), @p223='?' (DbType = Int64), @p224='?' (DbType = Int64), @p225='?' (DbType = Int64), @p226='?' (DbType = Double), @p227='?' (DbType = DateTime2), @p228='?' (DbType = Double), @p229='?' (DbType = Double), @p230='?' (DbType = Int64), @p231='?' (DbType = Int64), @p232='?' (DbType = Double), @p233='?' (DbType = Int64), @p234='?' (DbType = Int64), @p235='?' (DbType = Double), @p236='?' (DbType = Double), @p237='?' (DbType = Double), @p238='?' (DbType = Int64), @p239='?' (DbType = Double), @p240='?' (DbType = Double), @p241='?' (DbType = Int64), @p242='?' (Size = 4000), @p243='?' (DbType = Int64), @p244='?' (DbType = Double), @p245='?' (Size = 450), @p246='?' (DbType = Int64), @p247='?' (DbType = Int64), @p248='?' (DbType = Double), @p249='?' (DbType = Double), @p250='?' (DbType = Int64), @p251='?' (DbType = Int64), @p252='?' (DbType = Int64), @p253='?' (DbType = Double), @p254='?' (DbType = DateTime2), @p255='?' (DbType = Double), @p256='?' (DbType = Double), @p257='?' (DbType = Int64), @p258='?' (DbType = Int64), @p259='?' (DbType = Double), @p260='?' (DbType = Int64), @p261='?' (DbType = Int64), @p262='?' (DbType = Double), @p263='?' (DbType = Double), @p264='?' (DbType = Double), @p265='?' (DbType = Int64), @p266='?' (DbType = Double), @p267='?' (DbType = Double), @p268='?' (DbType = Int64), @p269='?' (Size = 4000), @p270='?' (DbType = Int64), @p271='?' (DbType = Double), @p272='?' (Size = 450), @p273='?' (DbType = Int64), @p274='?' (DbType = Int64), @p275='?' (DbType = Double), @p276='?' (DbType = Double), @p277='?' (DbType = Int64), @p278='?' (DbType = Int64), @p279='?' (DbType = Int64), @p280='?' (DbType = Double), @p281='?' (DbType = DateTime2), @p282='?' (DbType = Double), @p283='?' (DbType = Double), @p284='?' (DbType = Int64), @p285='?' (DbType = Int64), @p286='?' (DbType = Double), @p287='?' (DbType = Int64), @p288='?' (DbType = Int64), @p289='?' (DbType = Double), @p290='?' (DbType = Double), @p291='?' (DbType = Double), @p292='?' (DbType = Int64), @p293='?' (DbType = Double), @p294='?' (DbType = Double), @p295='?' (DbType = Int64), @p296='?' (Size = 4000), @p297='?' (DbType = Int64), @p298='?' (DbType = Double), @p299='?' (Size = 450), @p300='?' (DbType = Int64), @p301='?' (DbType = Int64), @p302='?' (DbType = Double), @p303='?' (DbType = Double), @p304='?' (DbType = Int64), @p305='?' (DbType = Int64), @p306='?' (DbType = Int64), @p307='?' (DbType = Double), @p308='?' (DbType = DateTime2), @p309='?' (DbType = Double), @p310='?' (DbType = Double), @p311='?' (DbType = Int64), @p312='?' (DbType = Int64), @p313='?' (DbType = Double), @p314='?' (DbType = Int64), @p315='?' (DbType = Int64), @p316='?' (DbType = Double), @p317='?' (DbType = Double), @p318='?' (DbType = Double), @p319='?' (DbType = Int64), @p320='?' (DbType = Double), @p321='?' (DbType = Double), @p322='?' (DbType = Int64), @p323='?' (Size = 4000), @p324='?' (DbType = Int64), @p325='?' (DbType = Double), @p326='?' (Size = 450), @p327='?' (DbType = Int64), @p328='?' (DbType = Int64), @p329='?' (DbType = Double), @p330='?' (DbType = Double), @p331='?' (DbType = Int64), @p332='?' (DbType = Int64), @p333='?' (DbType = Int64), @p334='?' (DbType = Double), @p335='?' (DbType = DateTime2), @p336='?' (DbType = Double), @p337='?' (DbType = Double), @p338='?' (DbType = Int64), @p339='?' (DbType = Int64), @p340='?' (DbType = Double), @p341='?' (DbType = Int64), @p342='?' (DbType = Int64), @p343='?' (DbType = Double), @p344='?' (DbType = Double), @p345='?' (DbType = Double), @p346='?' (DbType = Int64), @p347='?' (DbType = Double), @p348='?' (DbType = Double), @p349='?' (DbType = Int64), @p350='?' (Size = 4000), @p351='?' (DbType = Int64), @p352='?' (DbType = Double), @p353='?' (Size = 450), @p354='?' (DbType = Int64), @p355='?' (DbType = Int64), @p356='?' (DbType = Double), @p357='?' (DbType = Double), @p358='?' (DbType = Int64), @p359='?' (DbType = Int64), @p360='?' (DbType = Int64), @p361='?' (DbType = Double), @p362='?' (DbType = DateTime2), @p363='?' (DbType = Double), @p364='?' (DbType = Double), @p365='?' (DbType = Int64), @p366='?' (DbType = Int64), @p367='?' (DbType = Double), @p368='?' (DbType = Int64), @p369='?' (DbType = Int64), @p370='?' (DbType = Double), @p371='?' (DbType = Double), @p372='?' (DbType = Double), @p373='?' (DbType = Int64), @p374='?' (DbType = Double), @p375='?' (DbType = Double), @p376='?' (DbType = Int64), @p377='?' (Size = 4000), @p378='?' (DbType = Int64), @p379='?' (DbType = Double), @p380='?' (Size = 450), @p381='?' (DbType = Int64), @p382='?' (DbType = Int64), @p383='?' (DbType = Double), @p384='?' (DbType = Double), @p385='?' (DbType = Int64), @p386='?' (DbType = Int64), @p387='?' (DbType = Int64), @p388='?' (DbType = Double), @p389='?' (DbType = DateTime2), @p390='?' (DbType = Double), @p391='?' (DbType = Double), @p392='?' (DbType = Int64), @p393='?' (DbType = Int64), @p394='?' (DbType = Double), @p395='?' (DbType = Int64), @p396='?' (DbType = Int64), @p397='?' (DbType = Double), @p398='?' (DbType = Double), @p399='?' (DbType = Double), @p400='?' (DbType = Int64), @p401='?' (DbType = Double), @p402='?' (DbType = Double), @p403='?' (DbType = Int64), @p404='?' (Size = 4000), @p405='?' (DbType = Int64), @p406='?' (DbType = Double), @p407='?' (Size = 450), @p408='?' (DbType = Int64), @p409='?' (DbType = Int64), @p410='?' (DbType = Double), @p411='?' (DbType = Double), @p412='?' (DbType = Int64), @p413='?' (DbType = Int64), @p414='?' (DbType = Int64), @p415='?' (DbType = Double), @p416='?' (DbType = DateTime2), @p417='?' (DbType = Double), @p418='?' (DbType = Double), @p419='?' (DbType = Int64), @p420='?' (DbType = Int64), @p421='?' (DbType = Double), @p422='?' (DbType = Int64), @p423='?' (DbType = Int64), @p424='?' (DbType = Double), @p425='?' (DbType = Double), @p426='?' (DbType = Double), @p427='?' (DbType = Int64), @p428='?' (DbType = Double), @p429='?' (DbType = Double), @p430='?' (DbType = Int64), @p431='?' (Size = 4000), @p432='?' (DbType = Int64), @p433='?' (DbType = Double), @p434='?' (Size = 450), @p435='?' (DbType = Int64), @p436='?' (DbType = Int64), @p437='?' (DbType = Double), @p438='?' (DbType = Double), @p439='?' (DbType = Int64), @p440='?' (DbType = Int64), @p441='?' (DbType = Int64), @p442='?' (DbType = Double), @p443='?' (DbType = DateTime2), @p444='?' (DbType = Double), @p445='?' (DbType = Double), @p446='?' (DbType = Int64), @p447='?' (DbType = Int64), @p448='?' (DbType = Double), @p449='?' (DbType = Int64), @p450='?' (DbType = Int64), @p451='?' (DbType = Double), @p452='?' (DbType = Double), @p453='?' (DbType = Double), @p454='?' (DbType = Int64), @p455='?' (DbType = Double), @p456='?' (DbType = Double), @p457='?' (DbType = Int64), @p458='?' (Size = 4000), @p459='?' (DbType = Int64), @p460='?' (DbType = Double), @p461='?' (Size = 450), @p462='?' (DbType = Int64), @p463='?' (DbType = Int64), @p464='?' (DbType = Double), @p465='?' (DbType = Double), @p466='?' (DbType = Int64), @p467='?' (DbType = Int64), @p468='?' (DbType = Int64), @p469='?' (DbType = Double), @p470='?' (DbType = DateTime2), @p471='?' (DbType = Double), @p472='?' (DbType = Double), @p473='?' (DbType = Int64), @p474='?' (DbType = Int64), @p475='?' (DbType = Double), @p476='?' (DbType = Int64), @p477='?' (DbType = Int64), @p478='?' (DbType = Double), @p479='?' (DbType = Double), @p480='?' (DbType = Double), @p481='?' (DbType = Int64), @p482='?' (DbType = Double), @p483='?' (DbType = Double), @p484='?' (DbType = Int64), @p485='?' (Size = 4000), @p486='?' (DbType = Int64), @p487='?' (DbType = Double), @p488='?' (Size = 450), @p489='?' (DbType = Int64), @p490='?' (DbType = Int64), @p491='?' (DbType = Double), @p492='?' (DbType = Double), @p493='?' (DbType = Int64), @p494='?' (DbType = Int64), @p495='?' (DbType = Int64), @p496='?' (DbType = Double), @p497='?' (DbType = DateTime2), @p498='?' (DbType = Double), @p499='?' (DbType = Double), @p500='?' (DbType = Int64), @p501='?' (DbType = Int64), @p502='?' (DbType = Double), @p503='?' (DbType = Int64), @p504='?' (DbType = Int64), @p505='?' (DbType = Double), @p506='?' (DbType = Double), @p507='?' (DbType = Double), @p508='?' (DbType = Int64), @p509='?' (DbType = Double), @p510='?' (DbType = Double), @p511='?' (DbType = Int64), @p512='?' (Size = 4000), @p513='?' (DbType = Int64), @p514='?' (DbType = Double), @p515='?' (Size = 450), @p516='?' (DbType = Int64), @p517='?' (DbType = Int64), @p518='?' (DbType = Double), @p519='?' (DbType = Double), @p520='?' (DbType = Int64), @p521='?' (DbType = Int64), @p522='?' (DbType = Int64), @p523='?' (DbType = Double), @p524='?' (DbType = DateTime2), @p525='?' (DbType = Double), @p526='?' (DbType = Double), @p527='?' (DbType = Int64), @p528='?' (DbType = Int64), @p529='?' (DbType = Double), @p530='?' (DbType = Int64), @p531='?' (DbType = Int64), @p532='?' (DbType = Double), @p533='?' (DbType = Double), @p534='?' (DbType = Double), @p535='?' (DbType = Int64), @p536='?' (DbType = Double), @p537='?' (DbType = Double), @p538='?' (DbType = Int64), @p539='?' (Size = 4000), @p540='?' (DbType = Int64), @p541='?' (DbType = Double), @p542='?' (Size = 450), @p543='?' (DbType = Int64), @p544='?' (DbType = Int64), @p545='?' (DbType = Double), @p546='?' (DbType = Double), @p547='?' (DbType = Int64), @p548='?' (DbType = Int64), @p549='?' (DbType = Int64), @p550='?' (DbType = Double), @p551='?' (DbType = DateTime2), @p552='?' (DbType = Double), @p553='?' (DbType = Double), @p554='?' (DbType = Int64), @p555='?' (DbType = Int64), @p556='?' (DbType = Double), @p557='?' (DbType = Int64), @p558='?' (DbType = Int64), @p559='?' (DbType = Double), @p560='?' (DbType = Double), @p561='?' (DbType = Double), @p562='?' (DbType = Int64), @p563='?' (DbType = Double), @p564='?' (DbType = Double), @p565='?' (DbType = Int64), @p566='?' (Size = 4000), @p567='?' (DbType = Int64), @p568='?' (DbType = Double), @p569='?' (Size = 450), @p570='?' (DbType = Int64), @p571='?' (DbType = Int64), @p572='?' (DbType = Double), @p573='?' (DbType = Double), @p574='?' (DbType = Int64), @p575='?' (DbType = Int64), @p576='?' (DbType = Int64), @p577='?' (DbType = Double), @p578='?' (DbType = DateTime2), @p579='?' (DbType = Double), @p580='?' (DbType = Double), @p581='?' (DbType = Int64), @p582='?' (DbType = Int64), @p583='?' (DbType = Double), @p584='?' (DbType = Int64), @p585='?' (DbType = Int64), @p586='?' (DbType = Double), @p587='?' (DbType = Double), @p588='?' (DbType = Double), @p589='?' (DbType = Int64), @p590='?' (DbType = Double), @p591='?' (DbType = Double), @p592='?' (DbType = Int64), @p593='?' (Size = 4000), @p594='?' (DbType = Int64), @p595='?' (DbType = Double), @p596='?' (Size = 450), @p597='?' (DbType = Int64), @p598='?' (DbType = Int64), @p599='?' (DbType = Double), @p600='?' (DbType = Double), @p601='?' (DbType = Int64), @p602='?' (DbType = Int64), @p603='?' (DbType = Int64), @p604='?' (DbType = Double), @p605='?' (DbType = DateTime2), @p606='?' (DbType = Double), @p607='?' (DbType = Double), @p608='?' (DbType = Int64), @p609='?' (DbType = Int64), @p610='?' (DbType = Double), @p611='?' (DbType = Int64), @p612='?' (DbType = Int64), @p613='?' (DbType = Double), @p614='?' (DbType = Double), @p615='?' (DbType = Double), @p616='?' (DbType = Int64), @p617='?' (DbType = Double), @p618='?' (DbType = Double), @p619='?' (DbType = Int64), @p620='?' (Size = 4000), @p621='?' (DbType = Int64), @p622='?' (DbType = Double), @p623='?' (Size = 450), @p624='?' (DbType = Int64), @p625='?' (DbType = Int64), @p626='?' (DbType = Double), @p627='?' (DbType = Double), @p628='?' (DbType = Int64), @p629='?' (DbType = Int64), @p630='?' (DbType = Int64), @p631='?' (DbType = Double), @p632='?' (DbType = DateTime2), @p633='?' (DbType = Double), @p634='?' (DbType = Double), @p635='?' (DbType = Int64), @p636='?' (DbType = Int64), @p637='?' (DbType = Double), @p638='?' (DbType = Int64), @p639='?' (DbType = Int64), @p640='?' (DbType = Double), @p641='?' (DbType = Double), @p642='?' (DbType = Double), @p643='?' (DbType = Int64), @p644='?' (DbType = Double), @p645='?' (DbType = Double), @p646='?' (DbType = Int64), @p647='?' (Size = 4000), @p648='?' (DbType = Int64), @p649='?' (DbType = Double), @p650='?' (Size = 450), @p651='?' (DbType = Int64), @p652='?' (DbType = Int64), @p653='?' (DbType = Double), @p654='?' (DbType = Double), @p655='?' (DbType = Int64), @p656='?' (DbType = Int64), @p657='?' (DbType = Int64), @p658='?' (DbType = Double), @p659='?' (DbType = DateTime2), @p660='?' (DbType = Double), @p661='?' (DbType = Double), @p662='?' (DbType = Int64), @p663='?' (DbType = Int64), @p664='?' (DbType = Double), @p665='?' (DbType = Int64), @p666='?' (DbType = Int64), @p667='?' (DbType = Double), @p668='?' (DbType = Double), @p669='?' (DbType = Double), @p670='?' (DbType = Int64), @p671='?' (DbType = Double), @p672='?' (DbType = Double), @p673='?' (DbType = Int64), @p674='?' (Size = 4000), @p675='?' (DbType = Int64), @p676='?' (DbType = Double), @p677='?' (Size = 450), @p678='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
DECLARE @inserted0 TABLE ([Id] int, [_Position] [int]);
MERGE [IncomeStatementAnnualReport] USING (
VALUES (@p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21, @p22, @p23, @p24, @p25, @p26, @p27, @p28, @p29, @p30, 0),
(@p31, @p32, @p33, @p34, @p35, @p36, @p37, @p38, @p39, @p40, @p41, @p42, @p43, @p44, @p45, @p46, @p47, @p48, @p49, @p50, @p51, @p52, @p53, @p54, @p55, @p56, @p57, 1),
(@p58, @p59, @p60, @p61, @p62, @p63, @p64, @p65, @p66, @p67, @p68, @p69, @p70, @p71, @p72, @p73, @p74, @p75, @p76, @p77, @p78, @p79, @p80, @p81, @p82, @p83, @p84, 2),
(@p85, @p86, @p87, @p88, @p89, @p90, @p91, @p92, @p93, @p94, @p95, @p96, @p97, @p98, @p99, @p100, @p101, @p102, @p103, @p104, @p105, @p106, @p107, @p108, @p109, @p110, @p111, 3),
(@p112, @p113, @p114, @p115, @p116, @p117, @p118, @p119, @p120, @p121, @p122, @p123, @p124, @p125, @p126, @p127, @p128, @p129, @p130, @p131, @p132, @p133, @p134, @p135, @p136, @p137, @p138, 4)) AS i ([ComprehensiveIncomeNetOfTax], [CostOfRevenue], [CostofGoodsAndServicesSold], [Depreciation], [DepreciationAndAmortization], [Ebit], [Ebitda], [FiscalDateEnding], [GrossProfit], [IncomeBeforeTax], [IncomeTaxExpense], [InterestAndDebtExpense], [InterestExpense], [InterestIncome], [InvestmentIncomeNet], [NetIncome], [NetIncomeFromContinuingOperations], [NetInterestIncome], [NonInterestIncome], [OperatingExpenses], [OperatingIncome], [OtherNonOperatingIncome], [ReportedCurrency], [ResearchAndDevelopment], [SellingGeneralAndAdministrative], [Symbol], [TotalRevenue], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([ComprehensiveIncomeNetOfTax], [CostOfRevenue], [CostofGoodsAndServicesSold], [Depreciation], [DepreciationAndAmortization], [Ebit], [Ebitda], [FiscalDateEnding], [GrossProfit], [IncomeBeforeTax], [IncomeTaxExpense], [InterestAndDebtExpense], [InterestExpense], [InterestIncome], [InvestmentIncomeNet], [NetIncome], [NetIncomeFromContinuingOperations], [NetInterestIncome], [NonInterestIncome], [OperatingExpenses], [OperatingIncome], [OtherNonOperatingIncome], [ReportedCurrency], [ResearchAndDevelopment], [SellingGeneralAndAdministrative], [Symbol], [TotalRevenue])
VALUES (i.[ComprehensiveIncomeNetOfTax], i.[CostOfRevenue], i.[CostofGoodsAndServicesSold], i.[Depreciation], i.[DepreciationAndAmortization], i.[Ebit], i.[Ebitda], i.[FiscalDateEnding], i.[GrossProfit], i.[IncomeBeforeTax], i.[IncomeTaxExpense], i.[InterestAndDebtExpense], i.[InterestExpense], i.[InterestIncome], i.[InvestmentIncomeNet], i.[NetIncome], i.[NetIncomeFromContinuingOperations], i.[NetInterestIncome], i.[NonInterestIncome], i.[OperatingExpenses], i.[OperatingIncome], i.[OtherNonOperatingIncome], i.[ReportedCurrency], i.[ResearchAndDevelopment], i.[SellingGeneralAndAdministrative], i.[Symbol], i.[TotalRevenue])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted0;

SELECT [i].[Id] FROM @inserted0 i
ORDER BY [i].[_Position];

DECLARE @inserted5 TABLE ([Id] int, [_Position] [int]);
MERGE [IncomeStatementQuarterlyReport] USING (
VALUES (@p139, @p140, @p141, @p142, @p143, @p144, @p145, @p146, @p147, @p148, @p149, @p150, @p151, @p152, @p153, @p154, @p155, @p156, @p157, @p158, @p159, @p160, @p161, @p162, @p163, @p164, @p165, 0),
(@p166, @p167, @p168, @p169, @p170, @p171, @p172, @p173, @p174, @p175, @p176, @p177, @p178, @p179, @p180, @p181, @p182, @p183, @p184, @p185, @p186, @p187, @p188, @p189, @p190, @p191, @p192, 1),
(@p193, @p194, @p195, @p196, @p197, @p198, @p199, @p200, @p201, @p202, @p203, @p204, @p205, @p206, @p207, @p208, @p209, @p210, @p211, @p212, @p213, @p214, @p215, @p216, @p217, @p218, @p219, 2),
(@p220, @p221, @p222, @p223, @p224, @p225, @p226, @p227, @p228, @p229, @p230, @p231, @p232, @p233, @p234, @p235, @p236, @p237, @p238, @p239, @p240, @p241, @p242, @p243, @p244, @p245, @p246, 3),
(@p247, @p248, @p249, @p250, @p251, @p252, @p253, @p254, @p255, @p256, @p257, @p258, @p259, @p260, @p261, @p262, @p263, @p264, @p265, @p266, @p267, @p268, @p269, @p270, @p271, @p272, @p273, 4),
(@p274, @p275, @p276, @p277, @p278, @p279, @p280, @p281, @p282, @p283, @p284, @p285, @p286, @p287, @p288, @p289, @p290, @p291, @p292, @p293, @p294, @p295, @p296, @p297, @p298, @p299, @p300, 5),
(@p301, @p302, @p303, @p304, @p305, @p306, @p307, @p308, @p309, @p310, @p311, @p312, @p313, @p314, @p315, @p316, @p317, @p318, @p319, @p320, @p321, @p322, @p323, @p324, @p325, @p326, @p327, 6),
(@p328, @p329, @p330, @p331, @p332, @p333, @p334, @p335, @p336, @p337, @p338, @p339, @p340, @p341, @p342, @p343, @p344, @p345, @p346, @p347, @p348, @p349, @p350, @p351, @p352, @p353, @p354, 7),
(@p355, @p356, @p357, @p358, @p359, @p360, @p361, @p362, @p363, @p364, @p365, @p366, @p367, @p368, @p369, @p370, @p371, @p372, @p373, @p374, @p375, @p376, @p377, @p378, @p379, @p380, @p381, 8),
(@p382, @p383, @p384, @p385, @p386, @p387, @p388, @p389, @p390, @p391, @p392, @p393, @p394, @p395, @p396, @p397, @p398, @p399, @p400, @p401, @p402, @p403, @p404, @p405, @p406, @p407, @p408, 9),
(@p409, @p410, @p411, @p412, @p413, @p414, @p415, @p416, @p417, @p418, @p419, @p420, @p421, @p422, @p423, @p424, @p425, @p426, @p427, @p428, @p429, @p430, @p431, @p432, @p433, @p434, @p435, 10),
(@p436, @p437, @p438, @p439, @p440, @p441, @p442, @p443, @p444, @p445, @p446, @p447, @p448, @p449, @p450, @p451, @p452, @p453, @p454, @p455, @p456, @p457, @p458, @p459, @p460, @p461, @p462, 11),
(@p463, @p464, @p465, @p466, @p467, @p468, @p469, @p470, @p471, @p472, @p473, @p474, @p475, @p476, @p477, @p478, @p479, @p480, @p481, @p482, @p483, @p484, @p485, @p486, @p487, @p488, @p489, 12),
(@p490, @p491, @p492, @p493, @p494, @p495, @p496, @p497, @p498, @p499, @p500, @p501, @p502, @p503, @p504, @p505, @p506, @p507, @p508, @p509, @p510, @p511, @p512, @p513, @p514, @p515, @p516, 13),
(@p517, @p518, @p519, @p520, @p521, @p522, @p523, @p524, @p525, @p526, @p527, @p528, @p529, @p530, @p531, @p532, @p533, @p534, @p535, @p536, @p537, @p538, @p539, @p540, @p541, @p542, @p543, 14),
(@p544, @p545, @p546, @p547, @p548, @p549, @p550, @p551, @p552, @p553, @p554, @p555, @p556, @p557, @p558, @p559, @p560, @p561, @p562, @p563, @p564, @p565, @p566, @p567, @p568, @p569, @p570, 15),
(@p571, @p572, @p573, @p574, @p575, @p576, @p577, @p578, @p579, @p580, @p581, @p582, @p583, @p584, @p585, @p586, @p587, @p588, @p589, @p590, @p591, @p592, @p593, @p594, @p595, @p596, @p597, 16),
(@p598, @p599, @p600, @p601, @p602, @p603, @p604, @p605, @p606, @p607, @p608, @p609, @p610, @p611, @p612, @p613, @p614, @p615, @p616, @p617, @p618, @p619, @p620, @p621, @p622, @p623, @p624, 17),
(@p625, @p626, @p627, @p628, @p629, @p630, @p631, @p632, @p633, @p634, @p635, @p636, @p637, @p638, @p639, @p640, @p641, @p642, @p643, @p644, @p645, @p646, @p647, @p648, @p649, @p650, @p651, 18),
(@p652, @p653, @p654, @p655, @p656, @p657, @p658, @p659, @p660, @p661, @p662, @p663, @p664, @p665, @p666, @p667, @p668, @p669, @p670, @p671, @p672, @p673, @p674, @p675, @p676, @p677, @p678, 19)) AS i ([ComprehensiveIncomeNetOfTax], [CostOfRevenue], [CostofGoodsAndServicesSold], [Depreciation], [DepreciationAndAmortization], [Ebit], [Ebitda], [FiscalDateEnding], [GrossProfit], [IncomeBeforeTax], [IncomeTaxExpense], [InterestAndDebtExpense], [InterestExpense], [InterestIncome], [InvestmentIncomeNet], [NetIncome], [NetIncomeFromContinuingOperations], [NetInterestIncome], [NonInterestIncome], [OperatingExpenses], [OperatingIncome], [OtherNonOperatingIncome], [ReportedCurrency], [ResearchAndDevelopment], [SellingGeneralAndAdministrative], [Symbol], [TotalRevenue], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([ComprehensiveIncomeNetOfTax], [CostOfRevenue], [CostofGoodsAndServicesSold], [Depreciation], [DepreciationAndAmortization], [Ebit], [Ebitda], [FiscalDateEnding], [GrossProfit], [IncomeBeforeTax], [IncomeTaxExpense], [InterestAndDebtExpense], [InterestExpense], [InterestIncome], [InvestmentIncomeNet], [NetIncome], [NetIncomeFromContinuingOperations], [NetInterestIncome], [NonInterestIncome], [OperatingExpenses], [OperatingIncome], [OtherNonOperatingIncome], [ReportedCurrency], [ResearchAndDevelopment], [SellingGeneralAndAdministrative], [Symbol], [TotalRevenue])
VALUES (i.[ComprehensiveIncomeNetOfTax], i.[CostOfRevenue], i.[CostofGoodsAndServicesSold], i.[Depreciation], i.[DepreciationAndAmortization], i.[Ebit], i.[Ebitda], i.[FiscalDateEnding], i.[GrossProfit], i.[IncomeBeforeTax], i.[IncomeTaxExpense], i.[InterestAndDebtExpense], i.[InterestExpense], i.[InterestIncome], i.[InvestmentIncomeNet], i.[NetIncome], i.[NetIncomeFromContinuingOperations], i.[NetInterestIncome], i.[NonInterestIncome], i.[OperatingExpenses], i.[OperatingIncome], i.[OtherNonOperatingIncome], i.[ReportedCurrency], i.[ResearchAndDevelopment], i.[SellingGeneralAndAdministrative], i.[Symbol], i.[TotalRevenue])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted5;

SELECT [i].[Id] FROM @inserted5 i
ORDER BY [i].[_Position];
2022-05-12 01:00:23.677 +03:00 [INF] AddOrUpdate run successful.
2022-05-12 01:00:23.834 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CashFlow with Symbol ATH-P-C
2022-05-12 01:00:23.835 +03:00 [INF] Generating URI for CASH_FLOW with params: symbol: ATH-P-C
2022-05-12 01:00:23.836 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=CASH_FLOW&symbol=ATH-P-C
2022-05-12 01:00:23.837 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=CASH_FLOW&symbol=ATH-P-C".
2022-05-12 01:00:24.949 +03:00 [INF] Response has success status code
2022-05-12 01:00:24.949 +03:00 [INF] Trying to deserialize response.
2022-05-12 01:00:24.950 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 01:00:24.960 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__symbol_0
2022-05-12 01:00:24.962 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.CashFlow.
2022-05-12 01:00:24.970 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[ExistInApi], [c].[LastApiRefresh], [c].[LastLocalRefresh]
FROM [CashFlows] AS [c]
WHERE [c].[Symbol] = @__entity_Symbol_0
2022-05-12 01:00:24.971 +03:00 [INF] Entity does not exist. Adding to DB.
2022-05-12 01:00:24.984 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = Boolean), @p2='?' (DbType = DateTime2), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [CashFlows] ([Symbol], [ExistInApi], [LastApiRefresh], [LastLocalRefresh])
VALUES (@p0, @p1, @p2, @p3);
2022-05-12 01:00:24.993 +03:00 [INF] AddOrUpdate run successful.
2022-05-12 01:00:50.792 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CompanyOverview with Symbol BIV
2022-05-12 01:00:50.793 +03:00 [INF] Generating URI for OVERVIEW with params: symbol: BIV
2022-05-12 01:00:50.794 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=OVERVIEW&symbol=BIV
2022-05-12 01:00:50.794 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=OVERVIEW&symbol=BIV".
2022-05-12 01:00:51.017 +03:00 [INF] Response has success status code
2022-05-12 01:00:51.018 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.CompanyOverview for symbol BIV
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyOverview(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 116
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:00:52.702 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.Earnings with Symbol AVSE
2022-05-12 01:00:52.707 +03:00 [INF] Generating URI for EARNINGS with params: symbol: AVSE
2022-05-12 01:00:52.708 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=EARNINGS&symbol=AVSE
2022-05-12 01:00:52.709 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=EARNINGS&symbol=AVSE".
2022-05-12 01:00:52.926 +03:00 [INF] Response has success status code
2022-05-12 01:00:52.927 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.Earnings for symbol AVSE
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyEarnings(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 142
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:00:53.252 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.BalanceSheet with Symbol BDTX
2022-05-12 01:00:53.253 +03:00 [INF] Generating URI for BALANCE_SHEET with params: symbol: BDTX
2022-05-12 01:00:53.254 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BDTX
2022-05-12 01:00:53.254 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BDTX".
2022-05-12 01:00:53.471 +03:00 [INF] Response has success status code
2022-05-12 01:00:53.471 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.BalanceSheet for symbol BDTX
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetBalanceSheet(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 82
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:00:53.691 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.IncomeStatement with Symbol ATTO
2022-05-12 01:00:53.693 +03:00 [INF] Generating URI for INCOME_STATEMENT with params: symbol: ATTO
2022-05-12 01:00:53.693 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=INCOME_STATEMENT&symbol=ATTO
2022-05-12 01:00:53.693 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=INCOME_STATEMENT&symbol=ATTO".
2022-05-12 01:00:53.907 +03:00 [INF] Response has success status code
2022-05-12 01:00:53.908 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.IncomeStatement for symbol ATTO
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetIncomeStatement(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 69
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:00:54.998 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CashFlow with Symbol ATIP-WS
2022-05-12 01:00:55.002 +03:00 [INF] Generating URI for CASH_FLOW with params: symbol: ATIP-WS
2022-05-12 01:00:55.002 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=CASH_FLOW&symbol=ATIP-WS
2022-05-12 01:00:55.003 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=CASH_FLOW&symbol=ATIP-WS".
2022-05-12 01:00:55.221 +03:00 [INF] Response has success status code
2022-05-12 01:00:55.221 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.CashFlow for symbol ATIP-WS
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCashFlow(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 96
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:01:21.028 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CompanyOverview with Symbol BJAN
2022-05-12 01:01:21.030 +03:00 [INF] Generating URI for OVERVIEW with params: symbol: BJAN
2022-05-12 01:01:21.031 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=OVERVIEW&symbol=BJAN
2022-05-12 01:01:21.031 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=OVERVIEW&symbol=BJAN".
2022-05-12 01:01:21.267 +03:00 [INF] Response has success status code
2022-05-12 01:01:21.268 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.CompanyOverview.
2022-05-12 01:01:21.269 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 01:01:21.280 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__entity_Symbol_0
2022-05-12 01:01:21.281 +03:00 [INF] Entity does not exist. Adding to DB.
2022-05-12 01:01:21.296 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (Size = 4000), @p2='?' (DbType = Double), @p3='?' (Size = 4000), @p4='?' (DbType = Double), @p5='?' (DbType = Double), @p6='?' (DbType = Int64), @p7='?' (Size = 4000), @p8='?' (Size = 4000), @p9='?' (Size = 4000), @p10='?' (DbType = Double), @p11='?' (DbType = DateTime2), @p12='?' (DbType = Double), @p13='?' (DbType = Double), @p14='?' (DbType = Int64), @p15='?' (DbType = Double), @p16='?' (DbType = Double), @p17='?' (DbType = Double), @p18='?' (DbType = DateTime2), @p19='?' (Size = 4000), @p20='?' (DbType = Boolean), @p21='?' (Size = 4000), @p22='?' (DbType = Double), @p23='?' (DbType = Int64), @p24='?' (Size = 4000), @p25='?' (DbType = DateTime2), @p26='?' (DbType = DateTime2), @p27='?' (DbType = DateTime2), @p28='?' (DbType = Int64), @p29='?' (Size = 4000), @p30='?' (DbType = Double), @p31='?' (DbType = Double), @p32='?' (DbType = Double), @p33='?' (DbType = Double), @p34='?' (DbType = Double), @p35='?' (DbType = Double), @p36='?' (DbType = Double), @p37='?' (DbType = Double), @p38='?' (DbType = Double), @p39='?' (DbType = Double), @p40='?' (DbType = Double), @p41='?' (DbType = Int64), @p42='?' (Size = 4000), @p43='?' (DbType = Int64), @p44='?' (DbType = Double), @p45='?' (DbType = Double), @p46='?' (DbType = Double), @p47='?' (DbType = Double), @p48='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [CompanyOverviews] ([Symbol], [Address], [AnalystTargetPrice], [AssetType], [Beta], [BookValue], [CIK], [Country], [Currency], [Description], [DilutedEPSTTM], [DividendDate], [DividendPerShare], [DividendYield], [EBITDA], [EPS], [EVToEBITDA], [EVToRevenue], [ExDividendDate], [Exchange], [ExistInApi], [FiscalYearEnd], [ForwardPE], [GrossProfitTTM], [Industry], [LastApiRefresh], [LastLocalRefresh], [LatestQuarter], [MarketCapitalization], [Name], [OperatingMarginTTM], [PEGRatio], [PERatio], [PriceToBookRatio], [PriceToSalesRatioTTM], [ProfitMargin], [QuarterlyEarningsGrowthYOY], [QuarterlyRevenueGrowthYOY], [ReturnOnAssetsTTM], [ReturnOnEquityTTM], [RevenuePerShareTTM], [RevenueTTM], [Sector], [SharesOutstanding], [TrailingPE], [_200DayMovingAverage], [_50DayMovingAverage], [_52WeekHigh], [_52WeekLow])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21, @p22, @p23, @p24, @p25, @p26, @p27, @p28, @p29, @p30, @p31, @p32, @p33, @p34, @p35, @p36, @p37, @p38, @p39, @p40, @p41, @p42, @p43, @p44, @p45, @p46, @p47, @p48);
2022-05-12 01:01:21.306 +03:00 [INF] AddOrUpdate run successful.
2022-05-12 01:01:21.307 +03:00 [WRN] Alpha Vantage has no SaluteStocksAPI.Models.FundamentalData.CompanyOverview for symbol BJAN
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageEmptyResponse: Response was empty.
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyOverview(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 116
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:01:22.931 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.Earnings with Symbol AVSU
2022-05-12 01:01:22.934 +03:00 [INF] Generating URI for EARNINGS with params: symbol: AVSU
2022-05-12 01:01:22.935 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=EARNINGS&symbol=AVSU
2022-05-12 01:01:22.935 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=EARNINGS&symbol=AVSU".
2022-05-12 01:01:23.164 +03:00 [INF] Response has success status code
2022-05-12 01:01:23.165 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 01:01:23.175 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__symbol_0
2022-05-12 01:01:23.176 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.Earnings.
2022-05-12 01:01:23.185 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [e].[Symbol], [e].[ExistInApi], [e].[LastApiRefresh], [e].[LastLocalRefresh]
FROM [Earnings] AS [e]
WHERE [e].[Symbol] = @__entity_Symbol_0
2022-05-12 01:01:23.186 +03:00 [INF] Entity does not exist. Adding to DB.
2022-05-12 01:01:23.199 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = Boolean), @p2='?' (DbType = DateTime2), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Earnings] ([Symbol], [ExistInApi], [LastApiRefresh], [LastLocalRefresh])
VALUES (@p0, @p1, @p2, @p3);
2022-05-12 01:01:23.207 +03:00 [INF] AddOrUpdate run successful.
2022-05-12 01:01:23.207 +03:00 [WRN] Alpha Vantage has no SaluteStocksAPI.Models.FundamentalData.Earnings for symbol AVSU
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageEmptyResponse: Response was empty.
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyEarnings(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 142
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:01:23.482 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.BalanceSheet with Symbol BDXA
2022-05-12 01:01:23.483 +03:00 [INF] Generating URI for BALANCE_SHEET with params: symbol: BDXA
2022-05-12 01:01:23.484 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BDXA
2022-05-12 01:01:23.484 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BDXA".
2022-05-12 01:01:23.707 +03:00 [INF] Response has success status code
2022-05-12 01:01:23.708 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 01:01:23.719 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__symbol_0
2022-05-12 01:01:23.720 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.BalanceSheet.
2022-05-12 01:01:23.729 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [b].[Symbol], [b].[ExistInApi], [b].[LastApiRefresh], [b].[LastLocalRefresh]
FROM [BalanceSheets] AS [b]
WHERE [b].[Symbol] = @__entity_Symbol_0
2022-05-12 01:01:23.730 +03:00 [INF] Entity does not exist. Adding to DB.
2022-05-12 01:01:23.742 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = Boolean), @p2='?' (DbType = DateTime2), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [BalanceSheets] ([Symbol], [ExistInApi], [LastApiRefresh], [LastLocalRefresh])
VALUES (@p0, @p1, @p2, @p3);
2022-05-12 01:01:23.749 +03:00 [INF] AddOrUpdate run successful.
2022-05-12 01:01:23.750 +03:00 [WRN] Alpha Vantage has no SaluteStocksAPI.Models.FundamentalData.BalanceSheet for symbol BDXA
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageEmptyResponse: Response was empty.
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetBalanceSheet(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 82
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:01:23.922 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.IncomeStatement with Symbol ATVCW
2022-05-12 01:01:23.926 +03:00 [INF] Generating URI for INCOME_STATEMENT with params: symbol: ATVCW
2022-05-12 01:01:23.926 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=INCOME_STATEMENT&symbol=ATVCW
2022-05-12 01:01:23.927 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=INCOME_STATEMENT&symbol=ATVCW".
2022-05-12 01:01:24.183 +03:00 [INF] Response has success status code
2022-05-12 01:01:24.184 +03:00 [INF] Trying to deserialize response.
2022-05-12 01:01:24.185 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 01:01:24.194 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__symbol_0
2022-05-12 01:01:24.195 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.IncomeStatement.
2022-05-12 01:01:24.204 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [i].[Symbol], [i].[ExistInApi], [i].[LastApiRefresh], [i].[LastLocalRefresh]
FROM [IncomeStatements] AS [i]
WHERE [i].[Symbol] = @__entity_Symbol_0
2022-05-12 01:01:24.205 +03:00 [INF] Entity does not exist. Adding to DB.
2022-05-12 01:01:24.222 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = Boolean), @p2='?' (DbType = DateTime2), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [IncomeStatements] ([Symbol], [ExistInApi], [LastApiRefresh], [LastLocalRefresh])
VALUES (@p0, @p1, @p2, @p3);
2022-05-12 01:01:24.239 +03:00 [INF] Executed DbCommand (15ms) [Parameters=[@p4='?' (DbType = Int64), @p5='?' (DbType = Double), @p6='?' (DbType = Double), @p7='?' (DbType = Int64), @p8='?' (DbType = Int64), @p9='?' (DbType = Int64), @p10='?' (DbType = Double), @p11='?' (DbType = DateTime2), @p12='?' (DbType = Double), @p13='?' (DbType = Double), @p14='?' (DbType = Int64), @p15='?' (DbType = Int64), @p16='?' (DbType = Double), @p17='?' (DbType = Int64), @p18='?' (DbType = Int64), @p19='?' (DbType = Double), @p20='?' (DbType = Double), @p21='?' (DbType = Double), @p22='?' (DbType = Int64), @p23='?' (DbType = Double), @p24='?' (DbType = Double), @p25='?' (DbType = Int64), @p26='?' (Size = 4000), @p27='?' (DbType = Int64), @p28='?' (DbType = Double), @p29='?' (Size = 450), @p30='?' (DbType = Int64), @p31='?' (DbType = Int64), @p32='?' (DbType = Double), @p33='?' (DbType = Double), @p34='?' (DbType = Int64), @p35='?' (DbType = Int64), @p36='?' (DbType = Int64), @p37='?' (DbType = Double), @p38='?' (DbType = DateTime2), @p39='?' (DbType = Double), @p40='?' (DbType = Double), @p41='?' (DbType = Int64), @p42='?' (DbType = Int64), @p43='?' (DbType = Double), @p44='?' (DbType = Int64), @p45='?' (DbType = Int64), @p46='?' (DbType = Double), @p47='?' (DbType = Double), @p48='?' (DbType = Double), @p49='?' (DbType = Int64), @p50='?' (DbType = Double), @p51='?' (DbType = Double), @p52='?' (DbType = Int64), @p53='?' (Size = 4000), @p54='?' (DbType = Int64), @p55='?' (DbType = Double), @p56='?' (Size = 450), @p57='?' (DbType = Int64), @p58='?' (DbType = Int64), @p59='?' (DbType = Double), @p60='?' (DbType = Double), @p61='?' (DbType = Int64), @p62='?' (DbType = Int64), @p63='?' (DbType = Int64), @p64='?' (DbType = Double), @p65='?' (DbType = DateTime2), @p66='?' (DbType = Double), @p67='?' (DbType = Double), @p68='?' (DbType = Int64), @p69='?' (DbType = Int64), @p70='?' (DbType = Double), @p71='?' (DbType = Int64), @p72='?' (DbType = Int64), @p73='?' (DbType = Double), @p74='?' (DbType = Double), @p75='?' (DbType = Double), @p76='?' (DbType = Int64), @p77='?' (DbType = Double), @p78='?' (DbType = Double), @p79='?' (DbType = Int64), @p80='?' (Size = 4000), @p81='?' (DbType = Int64), @p82='?' (DbType = Double), @p83='?' (Size = 450), @p84='?' (DbType = Int64), @p85='?' (DbType = Int64), @p86='?' (DbType = Double), @p87='?' (DbType = Double), @p88='?' (DbType = Int64), @p89='?' (DbType = Int64), @p90='?' (DbType = Int64), @p91='?' (DbType = Double), @p92='?' (DbType = DateTime2), @p93='?' (DbType = Double), @p94='?' (DbType = Double), @p95='?' (DbType = Int64), @p96='?' (DbType = Int64), @p97='?' (DbType = Double), @p98='?' (DbType = Int64), @p99='?' (DbType = Int64), @p100='?' (DbType = Double), @p101='?' (DbType = Double), @p102='?' (DbType = Double), @p103='?' (DbType = Int64), @p104='?' (DbType = Double), @p105='?' (DbType = Double), @p106='?' (DbType = Int64), @p107='?' (Size = 4000), @p108='?' (DbType = Int64), @p109='?' (DbType = Double), @p110='?' (Size = 450), @p111='?' (DbType = Int64), @p112='?' (DbType = Int64), @p113='?' (DbType = Double), @p114='?' (DbType = Double), @p115='?' (DbType = Int64), @p116='?' (DbType = Int64), @p117='?' (DbType = Int64), @p118='?' (DbType = Double), @p119='?' (DbType = DateTime2), @p120='?' (DbType = Double), @p121='?' (DbType = Double), @p122='?' (DbType = Int64), @p123='?' (DbType = Int64), @p124='?' (DbType = Double), @p125='?' (DbType = Int64), @p126='?' (DbType = Int64), @p127='?' (DbType = Double), @p128='?' (DbType = Double), @p129='?' (DbType = Double), @p130='?' (DbType = Int64), @p131='?' (DbType = Double), @p132='?' (DbType = Double), @p133='?' (DbType = Int64), @p134='?' (Size = 4000), @p135='?' (DbType = Int64), @p136='?' (DbType = Double), @p137='?' (Size = 450), @p138='?' (DbType = Int64), @p139='?' (DbType = Int64), @p140='?' (DbType = Double), @p141='?' (DbType = Double), @p142='?' (DbType = Int64), @p143='?' (DbType = Int64), @p144='?' (DbType = Int64), @p145='?' (DbType = Double), @p146='?' (DbType = DateTime2), @p147='?' (DbType = Double), @p148='?' (DbType = Double), @p149='?' (DbType = Int64), @p150='?' (DbType = Int64), @p151='?' (DbType = Double), @p152='?' (DbType = Int64), @p153='?' (DbType = Int64), @p154='?' (DbType = Double), @p155='?' (DbType = Double), @p156='?' (DbType = Double), @p157='?' (DbType = Int64), @p158='?' (DbType = Double), @p159='?' (DbType = Double), @p160='?' (DbType = Int64), @p161='?' (Size = 4000), @p162='?' (DbType = Int64), @p163='?' (DbType = Double), @p164='?' (Size = 450), @p165='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [IncomeStatementAnnualReport] ([ComprehensiveIncomeNetOfTax], [CostOfRevenue], [CostofGoodsAndServicesSold], [Depreciation], [DepreciationAndAmortization], [Ebit], [Ebitda], [FiscalDateEnding], [GrossProfit], [IncomeBeforeTax], [IncomeTaxExpense], [InterestAndDebtExpense], [InterestExpense], [InterestIncome], [InvestmentIncomeNet], [NetIncome], [NetIncomeFromContinuingOperations], [NetInterestIncome], [NonInterestIncome], [OperatingExpenses], [OperatingIncome], [OtherNonOperatingIncome], [ReportedCurrency], [ResearchAndDevelopment], [SellingGeneralAndAdministrative], [Symbol], [TotalRevenue])
VALUES (@p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21, @p22, @p23, @p24, @p25, @p26, @p27, @p28, @p29, @p30);
SELECT [Id]
FROM [IncomeStatementAnnualReport]
WHERE @@ROWCOUNT = 1 AND [Id] = scope_identity();

DECLARE @inserted1 TABLE ([Id] int, [_Position] [int]);
MERGE [IncomeStatementQuarterlyReport] USING (
VALUES (@p31, @p32, @p33, @p34, @p35, @p36, @p37, @p38, @p39, @p40, @p41, @p42, @p43, @p44, @p45, @p46, @p47, @p48, @p49, @p50, @p51, @p52, @p53, @p54, @p55, @p56, @p57, 0),
(@p58, @p59, @p60, @p61, @p62, @p63, @p64, @p65, @p66, @p67, @p68, @p69, @p70, @p71, @p72, @p73, @p74, @p75, @p76, @p77, @p78, @p79, @p80, @p81, @p82, @p83, @p84, 1),
(@p85, @p86, @p87, @p88, @p89, @p90, @p91, @p92, @p93, @p94, @p95, @p96, @p97, @p98, @p99, @p100, @p101, @p102, @p103, @p104, @p105, @p106, @p107, @p108, @p109, @p110, @p111, 2),
(@p112, @p113, @p114, @p115, @p116, @p117, @p118, @p119, @p120, @p121, @p122, @p123, @p124, @p125, @p126, @p127, @p128, @p129, @p130, @p131, @p132, @p133, @p134, @p135, @p136, @p137, @p138, 3),
(@p139, @p140, @p141, @p142, @p143, @p144, @p145, @p146, @p147, @p148, @p149, @p150, @p151, @p152, @p153, @p154, @p155, @p156, @p157, @p158, @p159, @p160, @p161, @p162, @p163, @p164, @p165, 4)) AS i ([ComprehensiveIncomeNetOfTax], [CostOfRevenue], [CostofGoodsAndServicesSold], [Depreciation], [DepreciationAndAmortization], [Ebit], [Ebitda], [FiscalDateEnding], [GrossProfit], [IncomeBeforeTax], [IncomeTaxExpense], [InterestAndDebtExpense], [InterestExpense], [InterestIncome], [InvestmentIncomeNet], [NetIncome], [NetIncomeFromContinuingOperations], [NetInterestIncome], [NonInterestIncome], [OperatingExpenses], [OperatingIncome], [OtherNonOperatingIncome], [ReportedCurrency], [ResearchAndDevelopment], [SellingGeneralAndAdministrative], [Symbol], [TotalRevenue], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([ComprehensiveIncomeNetOfTax], [CostOfRevenue], [CostofGoodsAndServicesSold], [Depreciation], [DepreciationAndAmortization], [Ebit], [Ebitda], [FiscalDateEnding], [GrossProfit], [IncomeBeforeTax], [IncomeTaxExpense], [InterestAndDebtExpense], [InterestExpense], [InterestIncome], [InvestmentIncomeNet], [NetIncome], [NetIncomeFromContinuingOperations], [NetInterestIncome], [NonInterestIncome], [OperatingExpenses], [OperatingIncome], [OtherNonOperatingIncome], [ReportedCurrency], [ResearchAndDevelopment], [SellingGeneralAndAdministrative], [Symbol], [TotalRevenue])
VALUES (i.[ComprehensiveIncomeNetOfTax], i.[CostOfRevenue], i.[CostofGoodsAndServicesSold], i.[Depreciation], i.[DepreciationAndAmortization], i.[Ebit], i.[Ebitda], i.[FiscalDateEnding], i.[GrossProfit], i.[IncomeBeforeTax], i.[IncomeTaxExpense], i.[InterestAndDebtExpense], i.[InterestExpense], i.[InterestIncome], i.[InvestmentIncomeNet], i.[NetIncome], i.[NetIncomeFromContinuingOperations], i.[NetInterestIncome], i.[NonInterestIncome], i.[OperatingExpenses], i.[OperatingIncome], i.[OtherNonOperatingIncome], i.[ReportedCurrency], i.[ResearchAndDevelopment], i.[SellingGeneralAndAdministrative], i.[Symbol], i.[TotalRevenue])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted1;

SELECT [i].[Id] FROM @inserted1 i
ORDER BY [i].[_Position];
2022-05-12 01:01:24.246 +03:00 [INF] AddOrUpdate run successful.
2022-05-12 01:01:25.242 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CashFlow with Symbol ATLCL
2022-05-12 01:01:25.245 +03:00 [INF] Generating URI for CASH_FLOW with params: symbol: ATLCL
2022-05-12 01:01:25.246 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=CASH_FLOW&symbol=ATLCL
2022-05-12 01:01:25.247 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=CASH_FLOW&symbol=ATLCL".
2022-05-12 01:01:26.352 +03:00 [INF] Response has success status code
2022-05-12 01:01:26.353 +03:00 [INF] Trying to deserialize response.
2022-05-12 01:01:26.354 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 01:01:26.363 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__symbol_0
2022-05-12 01:01:26.364 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.CashFlow.
2022-05-12 01:01:26.372 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[ExistInApi], [c].[LastApiRefresh], [c].[LastLocalRefresh]
FROM [CashFlows] AS [c]
WHERE [c].[Symbol] = @__entity_Symbol_0
2022-05-12 01:01:26.374 +03:00 [INF] Entity does not exist. Adding to DB.
2022-05-12 01:01:26.388 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = Boolean), @p2='?' (DbType = DateTime2), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [CashFlows] ([Symbol], [ExistInApi], [LastApiRefresh], [LastLocalRefresh])
VALUES (@p0, @p1, @p2, @p3);
2022-05-12 01:01:26.434 +03:00 [INF] Executed DbCommand (44ms) [Parameters=[@p4='?' (DbType = Double), @p5='?' (DbType = Double), @p6='?' (DbType = Int64), @p7='?' (DbType = Int64), @p8='?' (DbType = Int64), @p9='?' (DbType = Int64), @p10='?' (DbType = Int64), @p11='?' (DbType = Int64), @p12='?' (DbType = Int64), @p13='?' (DbType = Double), @p14='?' (DbType = Int64), @p15='?' (DbType = Double), @p16='?' (DbType = Int64), @p17='?' (Size = 4000), @p18='?' (DbType = Double), @p19='?' (DbType = Double), @p20='?' (DbType = Int64), @p21='?' (DbType = Int64), @p22='?' (DbType = Int64), @p23='?' (DbType = Int64), @p24='?' (DbType = Int64), @p25='?' (DbType = Int64), @p26='?' (DbType = Int64), @p27='?' (DbType = Int64), @p28='?' (DbType = Int64), @p29='?' (DbType = Double), @p30='?' (DbType = Int64), @p31='?' (DbType = Int64), @p32='?' (Size = 4000), @p33='?' (Size = 450), @p34='?' (DbType = Double), @p35='?' (DbType = Double), @p36='?' (DbType = Int64), @p37='?' (DbType = Int64), @p38='?' (DbType = Int64), @p39='?' (DbType = Int64), @p40='?' (DbType = Int64), @p41='?' (DbType = Int64), @p42='?' (DbType = Int64), @p43='?' (DbType = Double), @p44='?' (DbType = Int64), @p45='?' (DbType = Double), @p46='?' (DbType = Int64), @p47='?' (Size = 4000), @p48='?' (DbType = Double), @p49='?' (DbType = Double), @p50='?' (DbType = Int64), @p51='?' (DbType = Int64), @p52='?' (DbType = Int64), @p53='?' (DbType = Int64), @p54='?' (DbType = Int64), @p55='?' (DbType = Int64), @p56='?' (DbType = Int64), @p57='?' (DbType = Int64), @p58='?' (DbType = Int64), @p59='?' (DbType = Double), @p60='?' (DbType = Int64), @p61='?' (DbType = Int64), @p62='?' (Size = 4000), @p63='?' (Size = 450), @p64='?' (DbType = Double), @p65='?' (DbType = Double), @p66='?' (DbType = Int64), @p67='?' (DbType = Int64), @p68='?' (DbType = Int64), @p69='?' (DbType = Int64), @p70='?' (DbType = Int64), @p71='?' (DbType = Int64), @p72='?' (DbType = Int64), @p73='?' (DbType = Double), @p74='?' (DbType = Int64), @p75='?' (DbType = Double), @p76='?' (DbType = Int64), @p77='?' (Size = 4000), @p78='?' (DbType = Double), @p79='?' (DbType = Double), @p80='?' (DbType = Int64), @p81='?' (DbType = Int64), @p82='?' (DbType = Int64), @p83='?' (DbType = Int64), @p84='?' (DbType = Int64), @p85='?' (DbType = Int64), @p86='?' (DbType = Int64), @p87='?' (DbType = Int64), @p88='?' (DbType = Int64), @p89='?' (DbType = Double), @p90='?' (DbType = Int64), @p91='?' (DbType = Int64), @p92='?' (Size = 4000), @p93='?' (Size = 450), @p94='?' (DbType = Double), @p95='?' (DbType = Double), @p96='?' (DbType = Int64), @p97='?' (DbType = Int64), @p98='?' (DbType = Int64), @p99='?' (DbType = Int64), @p100='?' (DbType = Int64), @p101='?' (DbType = Int64), @p102='?' (DbType = Int64), @p103='?' (DbType = Double), @p104='?' (DbType = Int64), @p105='?' (DbType = Double), @p106='?' (DbType = Int64), @p107='?' (Size = 4000), @p108='?' (DbType = Double), @p109='?' (DbType = Double), @p110='?' (DbType = Int64), @p111='?' (DbType = Int64), @p112='?' (DbType = Int64), @p113='?' (DbType = Int64), @p114='?' (DbType = Int64), @p115='?' (DbType = Int64), @p116='?' (DbType = Int64), @p117='?' (DbType = Int64), @p118='?' (DbType = Int64), @p119='?' (DbType = Double), @p120='?' (DbType = Int64), @p121='?' (DbType = Int64), @p122='?' (Size = 4000), @p123='?' (Size = 450), @p124='?' (DbType = Double), @p125='?' (DbType = Double), @p126='?' (DbType = Int64), @p127='?' (DbType = Int64), @p128='?' (DbType = Int64), @p129='?' (DbType = Int64), @p130='?' (DbType = Int64), @p131='?' (DbType = Int64), @p132='?' (DbType = Int64), @p133='?' (DbType = Double), @p134='?' (DbType = Int64), @p135='?' (DbType = Double), @p136='?' (DbType = Int64), @p137='?' (Size = 4000), @p138='?' (DbType = Double), @p139='?' (DbType = Double), @p140='?' (DbType = Int64), @p141='?' (DbType = Int64), @p142='?' (DbType = Int64), @p143='?' (DbType = Int64), @p144='?' (DbType = Int64), @p145='?' (DbType = Int64), @p146='?' (DbType = Int64), @p147='?' (DbType = Int64), @p148='?' (DbType = Int64), @p149='?' (DbType = Double), @p150='?' (DbType = Int64), @p151='?' (DbType = Int64), @p152='?' (Size = 4000), @p153='?' (Size = 450), @p154='?' (DbType = Double), @p155='?' (DbType = Double), @p156='?' (DbType = Int64), @p157='?' (DbType = Int64), @p158='?' (DbType = Int64), @p159='?' (DbType = Int64), @p160='?' (DbType = Int64), @p161='?' (DbType = Int64), @p162='?' (DbType = Int64), @p163='?' (DbType = Double), @p164='?' (DbType = Int64), @p165='?' (DbType = Double), @p166='?' (DbType = Int64), @p167='?' (Size = 4000), @p168='?' (DbType = Double), @p169='?' (DbType = Double), @p170='?' (DbType = Int64), @p171='?' (DbType = Int64), @p172='?' (DbType = Int64), @p173='?' (DbType = Int64), @p174='?' (DbType = Int64), @p175='?' (DbType = Int64), @p176='?' (DbType = Int64), @p177='?' (DbType = Int64), @p178='?' (DbType = Int64), @p179='?' (DbType = Double), @p180='?' (DbType = Int64), @p181='?' (DbType = Int64), @p182='?' (Size = 4000), @p183='?' (Size = 450), @p184='?' (DbType = Double), @p185='?' (DbType = Double), @p186='?' (DbType = Int64), @p187='?' (DbType = Int64), @p188='?' (DbType = Int64), @p189='?' (DbType = Int64), @p190='?' (DbType = Int64), @p191='?' (DbType = Int64), @p192='?' (DbType = Int64), @p193='?' (DbType = Double), @p194='?' (DbType = Int64), @p195='?' (DbType = Double), @p196='?' (DbType = Int64), @p197='?' (Size = 4000), @p198='?' (DbType = Double), @p199='?' (DbType = Double), @p200='?' (DbType = Int64), @p201='?' (DbType = Int64), @p202='?' (DbType = Int64), @p203='?' (DbType = Int64), @p204='?' (DbType = Int64), @p205='?' (DbType = Int64), @p206='?' (DbType = Int64), @p207='?' (DbType = Int64), @p208='?' (DbType = Int64), @p209='?' (DbType = Double), @p210='?' (DbType = Int64), @p211='?' (DbType = Int64), @p212='?' (Size = 4000), @p213='?' (Size = 450), @p214='?' (DbType = Double), @p215='?' (DbType = Double), @p216='?' (DbType = Int64), @p217='?' (DbType = Int64), @p218='?' (DbType = Int64), @p219='?' (DbType = Int64), @p220='?' (DbType = Int64), @p221='?' (DbType = Int64), @p222='?' (DbType = Int64), @p223='?' (DbType = Double), @p224='?' (DbType = Int64), @p225='?' (DbType = Double), @p226='?' (DbType = Int64), @p227='?' (Size = 4000), @p228='?' (DbType = Double), @p229='?' (DbType = Double), @p230='?' (DbType = Int64), @p231='?' (DbType = Int64), @p232='?' (DbType = Int64), @p233='?' (DbType = Int64), @p234='?' (DbType = Int64), @p235='?' (DbType = Int64), @p236='?' (DbType = Int64), @p237='?' (DbType = Int64), @p238='?' (DbType = Int64), @p239='?' (DbType = Double), @p240='?' (DbType = Int64), @p241='?' (DbType = Int64), @p242='?' (Size = 4000), @p243='?' (Size = 450), @p244='?' (DbType = Double), @p245='?' (DbType = Double), @p246='?' (DbType = Int64), @p247='?' (DbType = Int64), @p248='?' (DbType = Int64), @p249='?' (DbType = Int64), @p250='?' (DbType = Int64), @p251='?' (DbType = Int64), @p252='?' (DbType = Int64), @p253='?' (DbType = Double), @p254='?' (DbType = Int64), @p255='?' (DbType = Double), @p256='?' (DbType = Int64), @p257='?' (Size = 4000), @p258='?' (DbType = Double), @p259='?' (DbType = Double), @p260='?' (DbType = Int64), @p261='?' (DbType = Int64), @p262='?' (DbType = Int64), @p263='?' (DbType = Int64), @p264='?' (DbType = Int64), @p265='?' (DbType = Int64), @p266='?' (DbType = Int64), @p267='?' (DbType = Int64), @p268='?' (DbType = Int64), @p269='?' (DbType = Double), @p270='?' (DbType = Int64), @p271='?' (DbType = Int64), @p272='?' (Size = 4000), @p273='?' (Size = 450), @p274='?' (DbType = Double), @p275='?' (DbType = Double), @p276='?' (DbType = Int64), @p277='?' (DbType = Int64), @p278='?' (DbType = Int64), @p279='?' (DbType = Int64), @p280='?' (DbType = Int64), @p281='?' (DbType = Int64), @p282='?' (DbType = Int64), @p283='?' (DbType = Double), @p284='?' (DbType = Int64), @p285='?' (DbType = Double), @p286='?' (DbType = Int64), @p287='?' (Size = 4000), @p288='?' (DbType = Double), @p289='?' (DbType = Double), @p290='?' (DbType = Int64), @p291='?' (DbType = Int64), @p292='?' (DbType = Int64), @p293='?' (DbType = Int64), @p294='?' (DbType = Int64), @p295='?' (DbType = Int64), @p296='?' (DbType = Int64), @p297='?' (DbType = Int64), @p298='?' (DbType = Int64), @p299='?' (DbType = Double), @p300='?' (DbType = Int64), @p301='?' (DbType = Int64), @p302='?' (Size = 4000), @p303='?' (Size = 450), @p304='?' (DbType = Double), @p305='?' (DbType = Double), @p306='?' (DbType = Int64), @p307='?' (DbType = Int64), @p308='?' (DbType = Int64), @p309='?' (DbType = Int64), @p310='?' (DbType = Int64), @p311='?' (DbType = Int64), @p312='?' (DbType = Int64), @p313='?' (DbType = Double), @p314='?' (DbType = Int64), @p315='?' (DbType = Double), @p316='?' (DbType = Int64), @p317='?' (Size = 4000), @p318='?' (DbType = Double), @p319='?' (DbType = Double), @p320='?' (DbType = Int64), @p321='?' (DbType = Int64), @p322='?' (DbType = Int64), @p323='?' (DbType = Int64), @p324='?' (DbType = Int64), @p325='?' (DbType = Int64), @p326='?' (DbType = Int64), @p327='?' (DbType = Int64), @p328='?' (DbType = Int64), @p329='?' (DbType = Double), @p330='?' (DbType = Int64), @p331='?' (DbType = Int64), @p332='?' (Size = 4000), @p333='?' (Size = 450), @p334='?' (DbType = Double), @p335='?' (DbType = Double), @p336='?' (DbType = Int64), @p337='?' (DbType = Int64), @p338='?' (DbType = Int64), @p339='?' (DbType = Int64), @p340='?' (DbType = Int64), @p341='?' (DbType = Int64), @p342='?' (DbType = Int64), @p343='?' (DbType = Double), @p344='?' (DbType = Int64), @p345='?' (DbType = Double), @p346='?' (DbType = Int64), @p347='?' (Size = 4000), @p348='?' (DbType = Double), @p349='?' (DbType = Double), @p350='?' (DbType = Int64), @p351='?' (DbType = Int64), @p352='?' (DbType = Int64), @p353='?' (DbType = Int64), @p354='?' (DbType = Int64), @p355='?' (DbType = Int64), @p356='?' (DbType = Int64), @p357='?' (DbType = Int64), @p358='?' (DbType = Int64), @p359='?' (DbType = Double), @p360='?' (DbType = Int64), @p361='?' (DbType = Int64), @p362='?' (Size = 4000), @p363='?' (Size = 450), @p364='?' (DbType = Double), @p365='?' (DbType = Double), @p366='?' (DbType = Int64), @p367='?' (DbType = Int64), @p368='?' (DbType = Int64), @p369='?' (DbType = Int64), @p370='?' (DbType = Int64), @p371='?' (DbType = Int64), @p372='?' (DbType = Int64), @p373='?' (DbType = Double), @p374='?' (DbType = Int64), @p375='?' (DbType = Double), @p376='?' (DbType = Int64), @p377='?' (Size = 4000), @p378='?' (DbType = Double), @p379='?' (DbType = Double), @p380='?' (DbType = Int64), @p381='?' (DbType = Int64), @p382='?' (DbType = Int64), @p383='?' (DbType = Int64), @p384='?' (DbType = Int64), @p385='?' (DbType = Int64), @p386='?' (DbType = Int64), @p387='?' (DbType = Int64), @p388='?' (DbType = Int64), @p389='?' (DbType = Double), @p390='?' (DbType = Int64), @p391='?' (DbType = Int64), @p392='?' (Size = 4000), @p393='?' (Size = 450), @p394='?' (DbType = Double), @p395='?' (DbType = Double), @p396='?' (DbType = Int64), @p397='?' (DbType = Int64), @p398='?' (DbType = Int64), @p399='?' (DbType = Int64), @p400='?' (DbType = Int64), @p401='?' (DbType = Int64), @p402='?' (DbType = Int64), @p403='?' (DbType = Double), @p404='?' (DbType = Int64), @p405='?' (DbType = Double), @p406='?' (DbType = Int64), @p407='?' (Size = 4000), @p408='?' (DbType = Double), @p409='?' (DbType = Double), @p410='?' (DbType = Int64), @p411='?' (DbType = Int64), @p412='?' (DbType = Int64), @p413='?' (DbType = Int64), @p414='?' (DbType = Int64), @p415='?' (DbType = Int64), @p416='?' (DbType = Int64), @p417='?' (DbType = Int64), @p418='?' (DbType = Int64), @p419='?' (DbType = Double), @p420='?' (DbType = Int64), @p421='?' (DbType = Int64), @p422='?' (Size = 4000), @p423='?' (Size = 450), @p424='?' (DbType = Double), @p425='?' (DbType = Double), @p426='?' (DbType = Int64), @p427='?' (DbType = Int64), @p428='?' (DbType = Int64), @p429='?' (DbType = Int64), @p430='?' (DbType = Int64), @p431='?' (DbType = Int64), @p432='?' (DbType = Int64), @p433='?' (DbType = Double), @p434='?' (DbType = Int64), @p435='?' (DbType = Double), @p436='?' (DbType = Int64), @p437='?' (Size = 4000), @p438='?' (DbType = Double), @p439='?' (DbType = Double), @p440='?' (DbType = Int64), @p441='?' (DbType = Int64), @p442='?' (DbType = Int64), @p443='?' (DbType = Int64), @p444='?' (DbType = Int64), @p445='?' (DbType = Int64), @p446='?' (DbType = Int64), @p447='?' (DbType = Int64), @p448='?' (DbType = Int64), @p449='?' (DbType = Double), @p450='?' (DbType = Int64), @p451='?' (DbType = Int64), @p452='?' (Size = 4000), @p453='?' (Size = 450), @p454='?' (DbType = Double), @p455='?' (DbType = Double), @p456='?' (DbType = Int64), @p457='?' (DbType = Int64), @p458='?' (DbType = Int64), @p459='?' (DbType = Int64), @p460='?' (DbType = Int64), @p461='?' (DbType = Int64), @p462='?' (DbType = Int64), @p463='?' (DbType = Double), @p464='?' (DbType = Int64), @p465='?' (DbType = Double), @p466='?' (DbType = Int64), @p467='?' (Size = 4000), @p468='?' (DbType = Double), @p469='?' (DbType = Double), @p470='?' (DbType = Int64), @p471='?' (DbType = Int64), @p472='?' (DbType = Int64), @p473='?' (DbType = Int64), @p474='?' (DbType = Int64), @p475='?' (DbType = Int64), @p476='?' (DbType = Int64), @p477='?' (DbType = Int64), @p478='?' (DbType = Int64), @p479='?' (DbType = Double), @p480='?' (DbType = Int64), @p481='?' (DbType = Int64), @p482='?' (Size = 4000), @p483='?' (Size = 450), @p484='?' (DbType = Double), @p485='?' (DbType = Double), @p486='?' (DbType = Int64), @p487='?' (DbType = Int64), @p488='?' (DbType = Int64), @p489='?' (DbType = Int64), @p490='?' (DbType = Int64), @p491='?' (DbType = Int64), @p492='?' (DbType = Int64), @p493='?' (DbType = Double), @p494='?' (DbType = Int64), @p495='?' (DbType = Double), @p496='?' (DbType = Int64), @p497='?' (Size = 4000), @p498='?' (DbType = Double), @p499='?' (DbType = Double), @p500='?' (DbType = Int64), @p501='?' (DbType = Int64), @p502='?' (DbType = Int64), @p503='?' (DbType = Int64), @p504='?' (DbType = Int64), @p505='?' (DbType = Int64), @p506='?' (DbType = Int64), @p507='?' (DbType = Int64), @p508='?' (DbType = Int64), @p509='?' (DbType = Double), @p510='?' (DbType = Int64), @p511='?' (DbType = Int64), @p512='?' (Size = 4000), @p513='?' (Size = 450), @p514='?' (DbType = Double), @p515='?' (DbType = Double), @p516='?' (DbType = Int64), @p517='?' (DbType = Int64), @p518='?' (DbType = Int64), @p519='?' (DbType = Int64), @p520='?' (DbType = Int64), @p521='?' (DbType = Int64), @p522='?' (DbType = Int64), @p523='?' (DbType = Double), @p524='?' (DbType = Int64), @p525='?' (DbType = Double), @p526='?' (DbType = Int64), @p527='?' (Size = 4000), @p528='?' (DbType = Double), @p529='?' (DbType = Double), @p530='?' (DbType = Int64), @p531='?' (DbType = Int64), @p532='?' (DbType = Int64), @p533='?' (DbType = Int64), @p534='?' (DbType = Int64), @p535='?' (DbType = Int64), @p536='?' (DbType = Int64), @p537='?' (DbType = Int64), @p538='?' (DbType = Int64), @p539='?' (DbType = Double), @p540='?' (DbType = Int64), @p541='?' (DbType = Int64), @p542='?' (Size = 4000), @p543='?' (Size = 450), @p544='?' (DbType = Double), @p545='?' (DbType = Double), @p546='?' (DbType = Int64), @p547='?' (DbType = Int64), @p548='?' (DbType = Int64), @p549='?' (DbType = Int64), @p550='?' (DbType = Int64), @p551='?' (DbType = Int64), @p552='?' (DbType = Int64), @p553='?' (DbType = Double), @p554='?' (DbType = Int64), @p555='?' (DbType = Double), @p556='?' (DbType = Int64), @p557='?' (Size = 4000), @p558='?' (DbType = Double), @p559='?' (DbType = Double), @p560='?' (DbType = Int64), @p561='?' (DbType = Int64), @p562='?' (DbType = Int64), @p563='?' (DbType = Int64), @p564='?' (DbType = Int64), @p565='?' (DbType = Int64), @p566='?' (DbType = Int64), @p567='?' (DbType = Int64), @p568='?' (DbType = Int64), @p569='?' (DbType = Double), @p570='?' (DbType = Int64), @p571='?' (DbType = Int64), @p572='?' (Size = 4000), @p573='?' (Size = 450), @p574='?' (DbType = Double), @p575='?' (DbType = Double), @p576='?' (DbType = Int64), @p577='?' (DbType = Int64), @p578='?' (DbType = Int64), @p579='?' (DbType = Int64), @p580='?' (DbType = Int64), @p581='?' (DbType = Int64), @p582='?' (DbType = Int64), @p583='?' (DbType = Double), @p584='?' (DbType = Int64), @p585='?' (DbType = Double), @p586='?' (DbType = Int64), @p587='?' (Size = 4000), @p588='?' (DbType = Double), @p589='?' (DbType = Double), @p590='?' (DbType = Int64), @p591='?' (DbType = Int64), @p592='?' (DbType = Int64), @p593='?' (DbType = Int64), @p594='?' (DbType = Int64), @p595='?' (DbType = Int64), @p596='?' (DbType = Int64), @p597='?' (DbType = Int64), @p598='?' (DbType = Int64), @p599='?' (DbType = Double), @p600='?' (DbType = Int64), @p601='?' (DbType = Int64), @p602='?' (Size = 4000), @p603='?' (Size = 450), @p604='?' (DbType = Double), @p605='?' (DbType = Double), @p606='?' (DbType = Int64), @p607='?' (DbType = Int64), @p608='?' (DbType = Int64), @p609='?' (DbType = Int64), @p610='?' (DbType = Int64), @p611='?' (DbType = Int64), @p612='?' (DbType = Int64), @p613='?' (DbType = Double), @p614='?' (DbType = Int64), @p615='?' (DbType = Double), @p616='?' (DbType = Int64), @p617='?' (Size = 4000), @p618='?' (DbType = Double), @p619='?' (DbType = Double), @p620='?' (DbType = Int64), @p621='?' (DbType = Int64), @p622='?' (DbType = Int64), @p623='?' (DbType = Int64), @p624='?' (DbType = Int64), @p625='?' (DbType = Int64), @p626='?' (DbType = Int64), @p627='?' (DbType = Int64), @p628='?' (DbType = Int64), @p629='?' (DbType = Double), @p630='?' (DbType = Int64), @p631='?' (DbType = Int64), @p632='?' (Size = 4000), @p633='?' (Size = 450), @p634='?' (DbType = Double), @p635='?' (DbType = Double), @p636='?' (DbType = Int64), @p637='?' (DbType = Int64), @p638='?' (DbType = Int64), @p639='?' (DbType = Int64), @p640='?' (DbType = Int64), @p641='?' (DbType = Int64), @p642='?' (DbType = Int64), @p643='?' (DbType = Double), @p644='?' (DbType = Int64), @p645='?' (DbType = Double), @p646='?' (DbType = Int64), @p647='?' (Size = 4000), @p648='?' (DbType = Double), @p649='?' (DbType = Double), @p650='?' (DbType = Int64), @p651='?' (DbType = Int64), @p652='?' (DbType = Int64), @p653='?' (DbType = Int64), @p654='?' (DbType = Int64), @p655='?' (DbType = Int64), @p656='?' (DbType = Int64), @p657='?' (DbType = Int64), @p658='?' (DbType = Int64), @p659='?' (DbType = Double), @p660='?' (DbType = Int64), @p661='?' (DbType = Int64), @p662='?' (Size = 4000), @p663='?' (Size = 450), @p664='?' (DbType = Double), @p665='?' (DbType = Double), @p666='?' (DbType = Int64), @p667='?' (DbType = Int64), @p668='?' (DbType = Int64), @p669='?' (DbType = Int64), @p670='?' (DbType = Int64), @p671='?' (DbType = Int64), @p672='?' (DbType = Int64), @p673='?' (DbType = Double), @p674='?' (DbType = Int64), @p675='?' (DbType = Double), @p676='?' (DbType = Int64), @p677='?' (Size = 4000), @p678='?' (DbType = Double), @p679='?' (DbType = Double), @p680='?' (DbType = Int64), @p681='?' (DbType = Int64), @p682='?' (DbType = Int64), @p683='?' (DbType = Int64), @p684='?' (DbType = Int64), @p685='?' (DbType = Int64), @p686='?' (DbType = Int64), @p687='?' (DbType = Int64), @p688='?' (DbType = Int64), @p689='?' (DbType = Double), @p690='?' (DbType = Int64), @p691='?' (DbType = Int64), @p692='?' (Size = 4000), @p693='?' (Size = 450), @p694='?' (DbType = Double), @p695='?' (DbType = Double), @p696='?' (DbType = Int64), @p697='?' (DbType = Int64), @p698='?' (DbType = Int64), @p699='?' (DbType = Int64), @p700='?' (DbType = Int64), @p701='?' (DbType = Int64), @p702='?' (DbType = Int64), @p703='?' (DbType = Double), @p704='?' (DbType = Int64), @p705='?' (DbType = Double), @p706='?' (DbType = Int64), @p707='?' (Size = 4000), @p708='?' (DbType = Double), @p709='?' (DbType = Double), @p710='?' (DbType = Int64), @p711='?' (DbType = Int64), @p712='?' (DbType = Int64), @p713='?' (DbType = Int64), @p714='?' (DbType = Int64), @p715='?' (DbType = Int64), @p716='?' (DbType = Int64), @p717='?' (DbType = Int64), @p718='?' (DbType = Int64), @p719='?' (DbType = Double), @p720='?' (DbType = Int64), @p721='?' (DbType = Int64), @p722='?' (Size = 4000), @p723='?' (Size = 450), @p724='?' (DbType = Double), @p725='?' (DbType = Double), @p726='?' (DbType = Int64), @p727='?' (DbType = Int64), @p728='?' (DbType = Int64), @p729='?' (DbType = Int64), @p730='?' (DbType = Int64), @p731='?' (DbType = Int64), @p732='?' (DbType = Int64), @p733='?' (DbType = Double), @p734='?' (DbType = Int64), @p735='?' (DbType = Double), @p736='?' (DbType = Int64), @p737='?' (Size = 4000), @p738='?' (DbType = Double), @p739='?' (DbType = Double), @p740='?' (DbType = Int64), @p741='?' (DbType = Int64), @p742='?' (DbType = Int64), @p743='?' (DbType = Int64), @p744='?' (DbType = Int64), @p745='?' (DbType = Int64), @p746='?' (DbType = Int64), @p747='?' (DbType = Int64), @p748='?' (DbType = Int64), @p749='?' (DbType = Double), @p750='?' (DbType = Int64), @p751='?' (DbType = Int64), @p752='?' (Size = 4000), @p753='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
DECLARE @inserted0 TABLE ([Id] int, [_Position] [int]);
MERGE [CashFlowAnnualReport] USING (
VALUES (@p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21, @p22, @p23, @p24, @p25, @p26, @p27, @p28, @p29, @p30, @p31, @p32, @p33, 0),
(@p34, @p35, @p36, @p37, @p38, @p39, @p40, @p41, @p42, @p43, @p44, @p45, @p46, @p47, @p48, @p49, @p50, @p51, @p52, @p53, @p54, @p55, @p56, @p57, @p58, @p59, @p60, @p61, @p62, @p63, 1),
(@p64, @p65, @p66, @p67, @p68, @p69, @p70, @p71, @p72, @p73, @p74, @p75, @p76, @p77, @p78, @p79, @p80, @p81, @p82, @p83, @p84, @p85, @p86, @p87, @p88, @p89, @p90, @p91, @p92, @p93, 2),
(@p94, @p95, @p96, @p97, @p98, @p99, @p100, @p101, @p102, @p103, @p104, @p105, @p106, @p107, @p108, @p109, @p110, @p111, @p112, @p113, @p114, @p115, @p116, @p117, @p118, @p119, @p120, @p121, @p122, @p123, 3),
(@p124, @p125, @p126, @p127, @p128, @p129, @p130, @p131, @p132, @p133, @p134, @p135, @p136, @p137, @p138, @p139, @p140, @p141, @p142, @p143, @p144, @p145, @p146, @p147, @p148, @p149, @p150, @p151, @p152, @p153, 4)) AS i ([CapitalExpenditures], [CashflowFromFinancing], [CashflowFromInvestment], [ChangeInCashAndCashEquivalents], [ChangeInExchangeRate], [ChangeInInventory], [ChangeInOperatingAssets], [ChangeInOperatingLiabilities], [ChangeInReceivables], [DepreciationDepletionAndAmortization], [DividendPayout], [DividendPayoutCommonStock], [DividendPayoutPreferredStock], [FiscalDateEnding], [NetIncome], [OperatingCashFlow], [PaymentsForOperatingActivities], [PaymentsForRepurchaseOfCommonStock], [PaymentsForRepurchaseOfEquity], [PaymentsForRepurchaseOfPreferredStock], [ProceedsFromIssuanceOfCommonStock], [ProceedsFromIssuanceOfLongTermDebtAndCapitalSecuritiesNet], [ProceedsFromIssuanceOfPreferredStock], [ProceedsFromOperatingActivities], [ProceedsFromRepaymentsOfShortTermDebt], [ProceedsFromRepurchaseOfEquity], [ProceedsFromSaleOfTreasuryStock], [ProfitLoss], [ReportedCurrency], [Symbol], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([CapitalExpenditures], [CashflowFromFinancing], [CashflowFromInvestment], [ChangeInCashAndCashEquivalents], [ChangeInExchangeRate], [ChangeInInventory], [ChangeInOperatingAssets], [ChangeInOperatingLiabilities], [ChangeInReceivables], [DepreciationDepletionAndAmortization], [DividendPayout], [DividendPayoutCommonStock], [DividendPayoutPreferredStock], [FiscalDateEnding], [NetIncome], [OperatingCashFlow], [PaymentsForOperatingActivities], [PaymentsForRepurchaseOfCommonStock], [PaymentsForRepurchaseOfEquity], [PaymentsForRepurchaseOfPreferredStock], [ProceedsFromIssuanceOfCommonStock], [ProceedsFromIssuanceOfLongTermDebtAndCapitalSecuritiesNet], [ProceedsFromIssuanceOfPreferredStock], [ProceedsFromOperatingActivities], [ProceedsFromRepaymentsOfShortTermDebt], [ProceedsFromRepurchaseOfEquity], [ProceedsFromSaleOfTreasuryStock], [ProfitLoss], [ReportedCurrency], [Symbol])
VALUES (i.[CapitalExpenditures], i.[CashflowFromFinancing], i.[CashflowFromInvestment], i.[ChangeInCashAndCashEquivalents], i.[ChangeInExchangeRate], i.[ChangeInInventory], i.[ChangeInOperatingAssets], i.[ChangeInOperatingLiabilities], i.[ChangeInReceivables], i.[DepreciationDepletionAndAmortization], i.[DividendPayout], i.[DividendPayoutCommonStock], i.[DividendPayoutPreferredStock], i.[FiscalDateEnding], i.[NetIncome], i.[OperatingCashFlow], i.[PaymentsForOperatingActivities], i.[PaymentsForRepurchaseOfCommonStock], i.[PaymentsForRepurchaseOfEquity], i.[PaymentsForRepurchaseOfPreferredStock], i.[ProceedsFromIssuanceOfCommonStock], i.[ProceedsFromIssuanceOfLongTermDebtAndCapitalSecuritiesNet], i.[ProceedsFromIssuanceOfPreferredStock], i.[ProceedsFromOperatingActivities], i.[ProceedsFromRepaymentsOfShortTermDebt], i.[ProceedsFromRepurchaseOfEquity], i.[ProceedsFromSaleOfTreasuryStock], i.[ProfitLoss], i.[ReportedCurrency], i.[Symbol])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted0;

SELECT [i].[Id] FROM @inserted0 i
ORDER BY [i].[_Position];

DECLARE @inserted5 TABLE ([Id] int, [_Position] [int]);
MERGE [CashFlowQuarterlyReport] USING (
VALUES (@p154, @p155, @p156, @p157, @p158, @p159, @p160, @p161, @p162, @p163, @p164, @p165, @p166, @p167, @p168, @p169, @p170, @p171, @p172, @p173, @p174, @p175, @p176, @p177, @p178, @p179, @p180, @p181, @p182, @p183, 0),
(@p184, @p185, @p186, @p187, @p188, @p189, @p190, @p191, @p192, @p193, @p194, @p195, @p196, @p197, @p198, @p199, @p200, @p201, @p202, @p203, @p204, @p205, @p206, @p207, @p208, @p209, @p210, @p211, @p212, @p213, 1),
(@p214, @p215, @p216, @p217, @p218, @p219, @p220, @p221, @p222, @p223, @p224, @p225, @p226, @p227, @p228, @p229, @p230, @p231, @p232, @p233, @p234, @p235, @p236, @p237, @p238, @p239, @p240, @p241, @p242, @p243, 2),
(@p244, @p245, @p246, @p247, @p248, @p249, @p250, @p251, @p252, @p253, @p254, @p255, @p256, @p257, @p258, @p259, @p260, @p261, @p262, @p263, @p264, @p265, @p266, @p267, @p268, @p269, @p270, @p271, @p272, @p273, 3),
(@p274, @p275, @p276, @p277, @p278, @p279, @p280, @p281, @p282, @p283, @p284, @p285, @p286, @p287, @p288, @p289, @p290, @p291, @p292, @p293, @p294, @p295, @p296, @p297, @p298, @p299, @p300, @p301, @p302, @p303, 4),
(@p304, @p305, @p306, @p307, @p308, @p309, @p310, @p311, @p312, @p313, @p314, @p315, @p316, @p317, @p318, @p319, @p320, @p321, @p322, @p323, @p324, @p325, @p326, @p327, @p328, @p329, @p330, @p331, @p332, @p333, 5),
(@p334, @p335, @p336, @p337, @p338, @p339, @p340, @p341, @p342, @p343, @p344, @p345, @p346, @p347, @p348, @p349, @p350, @p351, @p352, @p353, @p354, @p355, @p356, @p357, @p358, @p359, @p360, @p361, @p362, @p363, 6),
(@p364, @p365, @p366, @p367, @p368, @p369, @p370, @p371, @p372, @p373, @p374, @p375, @p376, @p377, @p378, @p379, @p380, @p381, @p382, @p383, @p384, @p385, @p386, @p387, @p388, @p389, @p390, @p391, @p392, @p393, 7),
(@p394, @p395, @p396, @p397, @p398, @p399, @p400, @p401, @p402, @p403, @p404, @p405, @p406, @p407, @p408, @p409, @p410, @p411, @p412, @p413, @p414, @p415, @p416, @p417, @p418, @p419, @p420, @p421, @p422, @p423, 8),
(@p424, @p425, @p426, @p427, @p428, @p429, @p430, @p431, @p432, @p433, @p434, @p435, @p436, @p437, @p438, @p439, @p440, @p441, @p442, @p443, @p444, @p445, @p446, @p447, @p448, @p449, @p450, @p451, @p452, @p453, 9),
(@p454, @p455, @p456, @p457, @p458, @p459, @p460, @p461, @p462, @p463, @p464, @p465, @p466, @p467, @p468, @p469, @p470, @p471, @p472, @p473, @p474, @p475, @p476, @p477, @p478, @p479, @p480, @p481, @p482, @p483, 10),
(@p484, @p485, @p486, @p487, @p488, @p489, @p490, @p491, @p492, @p493, @p494, @p495, @p496, @p497, @p498, @p499, @p500, @p501, @p502, @p503, @p504, @p505, @p506, @p507, @p508, @p509, @p510, @p511, @p512, @p513, 11),
(@p514, @p515, @p516, @p517, @p518, @p519, @p520, @p521, @p522, @p523, @p524, @p525, @p526, @p527, @p528, @p529, @p530, @p531, @p532, @p533, @p534, @p535, @p536, @p537, @p538, @p539, @p540, @p541, @p542, @p543, 12),
(@p544, @p545, @p546, @p547, @p548, @p549, @p550, @p551, @p552, @p553, @p554, @p555, @p556, @p557, @p558, @p559, @p560, @p561, @p562, @p563, @p564, @p565, @p566, @p567, @p568, @p569, @p570, @p571, @p572, @p573, 13),
(@p574, @p575, @p576, @p577, @p578, @p579, @p580, @p581, @p582, @p583, @p584, @p585, @p586, @p587, @p588, @p589, @p590, @p591, @p592, @p593, @p594, @p595, @p596, @p597, @p598, @p599, @p600, @p601, @p602, @p603, 14),
(@p604, @p605, @p606, @p607, @p608, @p609, @p610, @p611, @p612, @p613, @p614, @p615, @p616, @p617, @p618, @p619, @p620, @p621, @p622, @p623, @p624, @p625, @p626, @p627, @p628, @p629, @p630, @p631, @p632, @p633, 15),
(@p634, @p635, @p636, @p637, @p638, @p639, @p640, @p641, @p642, @p643, @p644, @p645, @p646, @p647, @p648, @p649, @p650, @p651, @p652, @p653, @p654, @p655, @p656, @p657, @p658, @p659, @p660, @p661, @p662, @p663, 16),
(@p664, @p665, @p666, @p667, @p668, @p669, @p670, @p671, @p672, @p673, @p674, @p675, @p676, @p677, @p678, @p679, @p680, @p681, @p682, @p683, @p684, @p685, @p686, @p687, @p688, @p689, @p690, @p691, @p692, @p693, 17),
(@p694, @p695, @p696, @p697, @p698, @p699, @p700, @p701, @p702, @p703, @p704, @p705, @p706, @p707, @p708, @p709, @p710, @p711, @p712, @p713, @p714, @p715, @p716, @p717, @p718, @p719, @p720, @p721, @p722, @p723, 18),
(@p724, @p725, @p726, @p727, @p728, @p729, @p730, @p731, @p732, @p733, @p734, @p735, @p736, @p737, @p738, @p739, @p740, @p741, @p742, @p743, @p744, @p745, @p746, @p747, @p748, @p749, @p750, @p751, @p752, @p753, 19)) AS i ([CapitalExpenditures], [CashflowFromFinancing], [CashflowFromInvestment], [ChangeInCashAndCashEquivalents], [ChangeInExchangeRate], [ChangeInInventory], [ChangeInOperatingAssets], [ChangeInOperatingLiabilities], [ChangeInReceivables], [DepreciationDepletionAndAmortization], [DividendPayout], [DividendPayoutCommonStock], [DividendPayoutPreferredStock], [FiscalDateEnding], [NetIncome], [OperatingCashFlow], [PaymentsForOperatingActivities], [PaymentsForRepurchaseOfCommonStock], [PaymentsForRepurchaseOfEquity], [PaymentsForRepurchaseOfPreferredStock], [ProceedsFromIssuanceOfCommonStock], [ProceedsFromIssuanceOfLongTermDebtAndCapitalSecuritiesNet], [ProceedsFromIssuanceOfPreferredStock], [ProceedsFromOperatingActivities], [ProceedsFromRepaymentsOfShortTermDebt], [ProceedsFromRepurchaseOfEquity], [ProceedsFromSaleOfTreasuryStock], [ProfitLoss], [ReportedCurrency], [Symbol], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([CapitalExpenditures], [CashflowFromFinancing], [CashflowFromInvestment], [ChangeInCashAndCashEquivalents], [ChangeInExchangeRate], [ChangeInInventory], [ChangeInOperatingAssets], [ChangeInOperatingLiabilities], [ChangeInReceivables], [DepreciationDepletionAndAmortization], [DividendPayout], [DividendPayoutCommonStock], [DividendPayoutPreferredStock], [FiscalDateEnding], [NetIncome], [OperatingCashFlow], [PaymentsForOperatingActivities], [PaymentsForRepurchaseOfCommonStock], [PaymentsForRepurchaseOfEquity], [PaymentsForRepurchaseOfPreferredStock], [ProceedsFromIssuanceOfCommonStock], [ProceedsFromIssuanceOfLongTermDebtAndCapitalSecuritiesNet], [ProceedsFromIssuanceOfPreferredStock], [ProceedsFromOperatingActivities], [ProceedsFromRepaymentsOfShortTermDebt], [ProceedsFromRepurchaseOfEquity], [ProceedsFromSaleOfTreasuryStock], [ProfitLoss], [ReportedCurrency], [Symbol])
VALUES (i.[CapitalExpenditures], i.[CashflowFromFinancing], i.[CashflowFromInvestment], i.[ChangeInCashAndCashEquivalents], i.[ChangeInExchangeRate], i.[ChangeInInventory], i.[ChangeInOperatingAssets], i.[ChangeInOperatingLiabilities], i.[ChangeInReceivables], i.[DepreciationDepletionAndAmortization], i.[DividendPayout], i.[DividendPayoutCommonStock], i.[DividendPayoutPreferredStock], i.[FiscalDateEnding], i.[NetIncome], i.[OperatingCashFlow], i.[PaymentsForOperatingActivities], i.[PaymentsForRepurchaseOfCommonStock], i.[PaymentsForRepurchaseOfEquity], i.[PaymentsForRepurchaseOfPreferredStock], i.[ProceedsFromIssuanceOfCommonStock], i.[ProceedsFromIssuanceOfLongTermDebtAndCapitalSecuritiesNet], i.[ProceedsFromIssuanceOfPreferredStock], i.[ProceedsFromOperatingActivities], i.[ProceedsFromRepaymentsOfShortTermDebt], i.[ProceedsFromRepurchaseOfEquity], i.[ProceedsFromSaleOfTreasuryStock], i.[ProfitLoss], i.[ReportedCurrency], i.[Symbol])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted5;

SELECT [i].[Id] FROM @inserted5 i
ORDER BY [i].[_Position];
2022-05-12 01:01:26.454 +03:00 [INF] AddOrUpdate run successful.
2022-05-12 01:01:36.674 +03:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/screener-model - -
2022-05-12 01:01:36.674 +03:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/distribution/market-cap/30 - -
2022-05-12 01:01:36.675 +03:00 [INF] CORS policy execution successful.
2022-05-12 01:01:36.675 +03:00 [INF] CORS policy execution successful.
2022-05-12 01:01:36.676 +03:00 [INF] Executing endpoint 'SaluteStocksAPI.Controllers.ApiController.GetScreenerModel (SaluteStocksAPI)'
2022-05-12 01:01:36.676 +03:00 [INF] Executing endpoint 'SaluteStocksAPI.Controllers.ApiController.GetMarketCapDistribution (SaluteStocksAPI)'
2022-05-12 01:01:36.677 +03:00 [INF] Route matched with {action = "GetScreenerModel", controller = "Api"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetScreenerModel() on controller SaluteStocksAPI.Controllers.ApiController (SaluteStocksAPI).
2022-05-12 01:01:36.677 +03:00 [INF] Route matched with {action = "GetMarketCapDistribution", controller = "Api"}. Executing controller action with signature System.Threading.Tasks.Task`1[System.String] GetMarketCapDistribution(Int32) on controller SaluteStocksAPI.Controllers.ApiController (SaluteStocksAPI).
2022-05-12 01:01:36.678 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 01:01:36.680 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 01:01:36.692 +03:00 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[MarketCapitalization])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 01:01:36.693 +03:00 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[MarketCapitalization])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 01:01:36.703 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[MarketCapitalization])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 01:01:36.703 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[MarketCapitalization])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 01:01:36.714 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[EBITDA])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 01:01:36.715 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:01:36.723 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[EBITDA])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 01:01:36.725 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:01:36.734 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[PERatio])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 01:01:36.735 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:01:36.745 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[PERatio])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 01:01:36.745 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:01:36.752 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2022-05-12 01:01:36.754 +03:00 [INF] Executed action SaluteStocksAPI.Controllers.ApiController.GetScreenerModel (SaluteStocksAPI) in 75.7377ms
2022-05-12 01:01:36.755 +03:00 [INF] Executed endpoint 'SaluteStocksAPI.Controllers.ApiController.GetScreenerModel (SaluteStocksAPI)'
2022-05-12 01:01:36.755 +03:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/screener-model - - - 200 - text/plain;+charset=utf-8 81.0231ms
2022-05-12 01:01:36.762 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:01:36.773 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:01:36.785 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:01:36.797 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:01:36.810 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:01:36.822 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:01:36.834 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:01:36.844 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:01:36.854 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:01:36.864 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:01:36.874 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:01:36.886 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:01:36.896 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:01:36.906 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:01:36.917 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:01:36.927 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:01:36.939 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:01:36.951 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:01:36.965 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:01:36.975 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:01:36.987 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:01:36.997 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:01:37.009 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:01:37.018 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:01:37.028 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:01:37.029 +03:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2022-05-12 01:01:37.032 +03:00 [INF] Executed action SaluteStocksAPI.Controllers.ApiController.GetMarketCapDistribution (SaluteStocksAPI) in 352.331ms
2022-05-12 01:01:37.033 +03:00 [INF] Executed endpoint 'SaluteStocksAPI.Controllers.ApiController.GetMarketCapDistribution (SaluteStocksAPI)'
2022-05-12 01:01:37.034 +03:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/distribution/market-cap/30 - - - 200 - text/plain;+charset=utf-8 359.7081ms
2022-05-12 01:01:37.057 +03:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/distribution/market-cap/30 - -
2022-05-12 01:01:37.057 +03:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/screener-model - -
2022-05-12 01:01:37.057 +03:00 [INF] CORS policy execution successful.
2022-05-12 01:01:37.058 +03:00 [INF] CORS policy execution successful.
2022-05-12 01:01:37.058 +03:00 [INF] Executing endpoint 'SaluteStocksAPI.Controllers.ApiController.GetMarketCapDistribution (SaluteStocksAPI)'
2022-05-12 01:01:37.059 +03:00 [INF] Executing endpoint 'SaluteStocksAPI.Controllers.ApiController.GetScreenerModel (SaluteStocksAPI)'
2022-05-12 01:01:37.060 +03:00 [INF] Route matched with {action = "GetMarketCapDistribution", controller = "Api"}. Executing controller action with signature System.Threading.Tasks.Task`1[System.String] GetMarketCapDistribution(Int32) on controller SaluteStocksAPI.Controllers.ApiController (SaluteStocksAPI).
2022-05-12 01:01:37.060 +03:00 [INF] Route matched with {action = "GetScreenerModel", controller = "Api"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetScreenerModel() on controller SaluteStocksAPI.Controllers.ApiController (SaluteStocksAPI).
2022-05-12 01:01:37.064 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 01:01:37.066 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 01:01:37.078 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[MarketCapitalization])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 01:01:37.079 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[MarketCapitalization])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 01:01:37.092 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[MarketCapitalization])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 01:01:37.094 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[MarketCapitalization])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 01:01:37.104 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:01:37.105 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[EBITDA])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 01:01:37.113 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:01:37.114 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[EBITDA])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 01:01:37.123 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[PERatio])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 01:01:37.123 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:01:37.133 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[PERatio])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 01:01:37.135 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2022-05-12 01:01:37.135 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:01:37.136 +03:00 [INF] Executed action SaluteStocksAPI.Controllers.ApiController.GetScreenerModel (SaluteStocksAPI) in 70.2518ms
2022-05-12 01:01:37.138 +03:00 [INF] Executed endpoint 'SaluteStocksAPI.Controllers.ApiController.GetScreenerModel (SaluteStocksAPI)'
2022-05-12 01:01:37.138 +03:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/screener-model - - - 200 - text/plain;+charset=utf-8 81.7687ms
2022-05-12 01:01:37.145 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:01:37.155 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:01:37.167 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:01:37.179 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:01:37.189 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:01:37.203 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:01:37.220 +03:00 [INF] Executed DbCommand (12ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:01:37.235 +03:00 [INF] Executed DbCommand (12ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:01:37.250 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:01:37.262 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:01:37.272 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:01:37.284 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:01:37.294 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:01:37.304 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:01:37.315 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:01:37.325 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:01:37.335 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:01:37.344 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:01:37.355 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:01:37.364 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:01:37.375 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:01:37.391 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:01:37.406 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:01:37.418 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:01:37.430 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:01:37.431 +03:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2022-05-12 01:01:37.432 +03:00 [INF] Executed action SaluteStocksAPI.Controllers.ApiController.GetMarketCapDistribution (SaluteStocksAPI) in 368.7003ms
2022-05-12 01:01:37.433 +03:00 [INF] Executed endpoint 'SaluteStocksAPI.Controllers.ApiController.GetMarketCapDistribution (SaluteStocksAPI)'
2022-05-12 01:01:37.433 +03:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/distribution/market-cap/30 - - - 200 - text/plain;+charset=utf-8 376.9191ms
2022-05-12 01:01:51.317 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CompanyOverview with Symbol BJUL
2022-05-12 01:01:51.319 +03:00 [INF] Generating URI for OVERVIEW with params: symbol: BJUL
2022-05-12 01:01:51.319 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=OVERVIEW&symbol=BJUL
2022-05-12 01:01:51.320 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=OVERVIEW&symbol=BJUL".
2022-05-12 01:01:51.533 +03:00 [INF] Response has success status code
2022-05-12 01:01:51.534 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.CompanyOverview for symbol BJUL
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyOverview(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 116
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:01:53.219 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.Earnings with Symbol AVTR
2022-05-12 01:01:53.220 +03:00 [INF] Generating URI for EARNINGS with params: symbol: AVTR
2022-05-12 01:01:53.221 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=EARNINGS&symbol=AVTR
2022-05-12 01:01:53.221 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=EARNINGS&symbol=AVTR".
2022-05-12 01:01:53.439 +03:00 [INF] Response has success status code
2022-05-12 01:01:53.440 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.Earnings for symbol AVTR
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyEarnings(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 142
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:01:53.750 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.BalanceSheet with Symbol BE
2022-05-12 01:01:53.752 +03:00 [INF] Generating URI for BALANCE_SHEET with params: symbol: BE
2022-05-12 01:01:53.753 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BE
2022-05-12 01:01:53.753 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BE".
2022-05-12 01:01:53.976 +03:00 [INF] Response has success status code
2022-05-12 01:01:53.977 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.BalanceSheet for symbol BE
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetBalanceSheet(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 82
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:01:54.255 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.IncomeStatement with Symbol ATY
2022-05-12 01:01:54.257 +03:00 [INF] Generating URI for INCOME_STATEMENT with params: symbol: ATY
2022-05-12 01:01:54.257 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=INCOME_STATEMENT&symbol=ATY
2022-05-12 01:01:54.258 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=INCOME_STATEMENT&symbol=ATY".
2022-05-12 01:01:54.487 +03:00 [INF] Response has success status code
2022-05-12 01:01:54.488 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.IncomeStatement for symbol ATY
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetIncomeStatement(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 69
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:01:56.475 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CashFlow with Symbol ATMH
2022-05-12 01:01:56.477 +03:00 [INF] Generating URI for CASH_FLOW with params: symbol: ATMH
2022-05-12 01:01:56.477 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=CASH_FLOW&symbol=ATMH
2022-05-12 01:01:56.478 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=CASH_FLOW&symbol=ATMH".
2022-05-12 01:01:56.697 +03:00 [INF] Response has success status code
2022-05-12 01:01:56.697 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.CashFlow for symbol ATMH
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCashFlow(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 96
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:02:21.556 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CompanyOverview with Symbol BKAG
2022-05-12 01:02:21.558 +03:00 [INF] Generating URI for OVERVIEW with params: symbol: BKAG
2022-05-12 01:02:21.558 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=OVERVIEW&symbol=BKAG
2022-05-12 01:02:21.559 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=OVERVIEW&symbol=BKAG".
2022-05-12 01:02:21.822 +03:00 [INF] Response has success status code
2022-05-12 01:02:21.822 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.CompanyOverview.
2022-05-12 01:02:21.824 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 01:02:21.835 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__entity_Symbol_0
2022-05-12 01:02:21.836 +03:00 [INF] Entity does not exist. Adding to DB.
2022-05-12 01:02:21.852 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (Size = 4000), @p2='?' (DbType = Double), @p3='?' (Size = 4000), @p4='?' (DbType = Double), @p5='?' (DbType = Double), @p6='?' (DbType = Int64), @p7='?' (Size = 4000), @p8='?' (Size = 4000), @p9='?' (Size = 4000), @p10='?' (DbType = Double), @p11='?' (DbType = DateTime2), @p12='?' (DbType = Double), @p13='?' (DbType = Double), @p14='?' (DbType = Int64), @p15='?' (DbType = Double), @p16='?' (DbType = Double), @p17='?' (DbType = Double), @p18='?' (DbType = DateTime2), @p19='?' (Size = 4000), @p20='?' (DbType = Boolean), @p21='?' (Size = 4000), @p22='?' (DbType = Double), @p23='?' (DbType = Int64), @p24='?' (Size = 4000), @p25='?' (DbType = DateTime2), @p26='?' (DbType = DateTime2), @p27='?' (DbType = DateTime2), @p28='?' (DbType = Int64), @p29='?' (Size = 4000), @p30='?' (DbType = Double), @p31='?' (DbType = Double), @p32='?' (DbType = Double), @p33='?' (DbType = Double), @p34='?' (DbType = Double), @p35='?' (DbType = Double), @p36='?' (DbType = Double), @p37='?' (DbType = Double), @p38='?' (DbType = Double), @p39='?' (DbType = Double), @p40='?' (DbType = Double), @p41='?' (DbType = Int64), @p42='?' (Size = 4000), @p43='?' (DbType = Int64), @p44='?' (DbType = Double), @p45='?' (DbType = Double), @p46='?' (DbType = Double), @p47='?' (DbType = Double), @p48='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [CompanyOverviews] ([Symbol], [Address], [AnalystTargetPrice], [AssetType], [Beta], [BookValue], [CIK], [Country], [Currency], [Description], [DilutedEPSTTM], [DividendDate], [DividendPerShare], [DividendYield], [EBITDA], [EPS], [EVToEBITDA], [EVToRevenue], [ExDividendDate], [Exchange], [ExistInApi], [FiscalYearEnd], [ForwardPE], [GrossProfitTTM], [Industry], [LastApiRefresh], [LastLocalRefresh], [LatestQuarter], [MarketCapitalization], [Name], [OperatingMarginTTM], [PEGRatio], [PERatio], [PriceToBookRatio], [PriceToSalesRatioTTM], [ProfitMargin], [QuarterlyEarningsGrowthYOY], [QuarterlyRevenueGrowthYOY], [ReturnOnAssetsTTM], [ReturnOnEquityTTM], [RevenuePerShareTTM], [RevenueTTM], [Sector], [SharesOutstanding], [TrailingPE], [_200DayMovingAverage], [_50DayMovingAverage], [_52WeekHigh], [_52WeekLow])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21, @p22, @p23, @p24, @p25, @p26, @p27, @p28, @p29, @p30, @p31, @p32, @p33, @p34, @p35, @p36, @p37, @p38, @p39, @p40, @p41, @p42, @p43, @p44, @p45, @p46, @p47, @p48);
2022-05-12 01:02:21.859 +03:00 [INF] AddOrUpdate run successful.
2022-05-12 01:02:21.859 +03:00 [WRN] Alpha Vantage has no SaluteStocksAPI.Models.FundamentalData.CompanyOverview for symbol BKAG
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageEmptyResponse: Response was empty.
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyOverview(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 116
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:02:23.462 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.Earnings with Symbol AVUV
2022-05-12 01:02:23.465 +03:00 [INF] Generating URI for EARNINGS with params: symbol: AVUV
2022-05-12 01:02:23.466 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=EARNINGS&symbol=AVUV
2022-05-12 01:02:23.466 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=EARNINGS&symbol=AVUV".
2022-05-12 01:02:23.714 +03:00 [INF] Response has success status code
2022-05-12 01:02:23.714 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 01:02:23.726 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__symbol_0
2022-05-12 01:02:23.727 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.Earnings.
2022-05-12 01:02:23.736 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [e].[Symbol], [e].[ExistInApi], [e].[LastApiRefresh], [e].[LastLocalRefresh]
FROM [Earnings] AS [e]
WHERE [e].[Symbol] = @__entity_Symbol_0
2022-05-12 01:02:23.737 +03:00 [INF] Entity does not exist. Adding to DB.
2022-05-12 01:02:23.749 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = Boolean), @p2='?' (DbType = DateTime2), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Earnings] ([Symbol], [ExistInApi], [LastApiRefresh], [LastLocalRefresh])
VALUES (@p0, @p1, @p2, @p3);
2022-05-12 01:02:23.756 +03:00 [INF] AddOrUpdate run successful.
2022-05-12 01:02:23.756 +03:00 [WRN] Alpha Vantage has no SaluteStocksAPI.Models.FundamentalData.Earnings for symbol AVUV
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageEmptyResponse: Response was empty.
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyEarnings(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 142
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:02:23.992 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.BalanceSheet with Symbol BEATW
2022-05-12 01:02:23.995 +03:00 [INF] Generating URI for BALANCE_SHEET with params: symbol: BEATW
2022-05-12 01:02:23.996 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BEATW
2022-05-12 01:02:23.996 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BEATW".
2022-05-12 01:02:24.491 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.IncomeStatement with Symbol AU
2022-05-12 01:02:24.495 +03:00 [INF] Generating URI for INCOME_STATEMENT with params: symbol: AU
2022-05-12 01:02:24.495 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=INCOME_STATEMENT&symbol=AU
2022-05-12 01:02:24.496 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=INCOME_STATEMENT&symbol=AU".
2022-05-12 01:02:24.802 +03:00 [INF] Response has success status code
2022-05-12 01:02:24.804 +03:00 [INF] Trying to deserialize response.
2022-05-12 01:02:24.805 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 01:02:24.814 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__symbol_0
2022-05-12 01:02:24.815 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.BalanceSheet.
2022-05-12 01:02:24.823 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [b].[Symbol], [b].[ExistInApi], [b].[LastApiRefresh], [b].[LastLocalRefresh]
FROM [BalanceSheets] AS [b]
WHERE [b].[Symbol] = @__entity_Symbol_0
2022-05-12 01:02:24.824 +03:00 [INF] Entity does not exist. Adding to DB.
2022-05-12 01:02:24.836 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = Boolean), @p2='?' (DbType = DateTime2), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [BalanceSheets] ([Symbol], [ExistInApi], [LastApiRefresh], [LastLocalRefresh])
VALUES (@p0, @p1, @p2, @p3);
2022-05-12 01:02:24.853 +03:00 [INF] Executed DbCommand (15ms) [Parameters=[@p4='?' (DbType = Int64), @p5='?' (DbType = Double), @p6='?' (DbType = Double), @p7='?' (DbType = Double), @p8='?' (DbType = Double), @p9='?' (DbType = Int64), @p10='?' (DbType = Int64), @p11='?' (DbType = Int64), @p12='?' (DbType = Double), @p13='?' (DbType = Int64), @p14='?' (DbType = Int64), @p15='?' (DbType = DateTime2), @p16='?' (DbType = Double), @p17='?' (DbType = Double), @p18='?' (DbType = Double), @p19='?' (DbType = Double), @p20='?' (DbType = Int64), @p21='?' (DbType = Double), @p22='?' (DbType = Int64), @p23='?' (DbType = Double), @p24='?' (DbType = Double), @p25='?' (DbType = Double), @p26='?' (DbType = Double), @p27='?' (DbType = Double), @p28='?' (DbType = Int64), @p29='?' (Size = 4000), @p30='?' (DbType = Double), @p31='?' (DbType = Double), @p32='?' (DbType = Double), @p33='?' (DbType = Double), @p34='?' (Size = 450), @p35='?' (DbType = Double), @p36='?' (DbType = Double), @p37='?' (DbType = Double), @p38='?' (DbType = Double), @p39='?' (DbType = Double), @p40='?' (DbType = Double), @p41='?' (DbType = Double), @p42='?' (DbType = Double), @p43='?' (DbType = Int64), @p44='?' (DbType = Double), @p45='?' (DbType = Double), @p46='?' (DbType = Double), @p47='?' (DbType = Double), @p48='?' (DbType = Int64), @p49='?' (DbType = Int64), @p50='?' (DbType = Int64), @p51='?' (DbType = Double), @p52='?' (DbType = Int64), @p53='?' (DbType = Int64), @p54='?' (DbType = DateTime2), @p55='?' (DbType = Double), @p56='?' (DbType = Double), @p57='?' (DbType = Double), @p58='?' (DbType = Double), @p59='?' (DbType = Int64), @p60='?' (DbType = Double), @p61='?' (DbType = Int64), @p62='?' (DbType = Double), @p63='?' (DbType = Double), @p64='?' (DbType = Double), @p65='?' (DbType = Double), @p66='?' (DbType = Double), @p67='?' (DbType = Int64), @p68='?' (Size = 4000), @p69='?' (DbType = Double), @p70='?' (DbType = Double), @p71='?' (DbType = Double), @p72='?' (DbType = Double), @p73='?' (Size = 450), @p74='?' (DbType = Double), @p75='?' (DbType = Double), @p76='?' (DbType = Double), @p77='?' (DbType = Double), @p78='?' (DbType = Double), @p79='?' (DbType = Double), @p80='?' (DbType = Double), @p81='?' (DbType = Double), @p82='?' (DbType = Int64), @p83='?' (DbType = Double), @p84='?' (DbType = Double), @p85='?' (DbType = Double), @p86='?' (DbType = Double), @p87='?' (DbType = Int64), @p88='?' (DbType = Int64), @p89='?' (DbType = Int64), @p90='?' (DbType = Double), @p91='?' (DbType = Int64), @p92='?' (DbType = Int64), @p93='?' (DbType = DateTime2), @p94='?' (DbType = Double), @p95='?' (DbType = Double), @p96='?' (DbType = Double), @p97='?' (DbType = Double), @p98='?' (DbType = Int64), @p99='?' (DbType = Double), @p100='?' (DbType = Int64), @p101='?' (DbType = Double), @p102='?' (DbType = Double), @p103='?' (DbType = Double), @p104='?' (DbType = Double), @p105='?' (DbType = Double), @p106='?' (DbType = Int64), @p107='?' (Size = 4000), @p108='?' (DbType = Double), @p109='?' (DbType = Double), @p110='?' (DbType = Double), @p111='?' (DbType = Double), @p112='?' (Size = 450), @p113='?' (DbType = Double), @p114='?' (DbType = Double), @p115='?' (DbType = Double), @p116='?' (DbType = Double), @p117='?' (DbType = Double), @p118='?' (DbType = Double), @p119='?' (DbType = Double), @p120='?' (DbType = Double), @p121='?' (DbType = Int64), @p122='?' (DbType = Double), @p123='?' (DbType = Double), @p124='?' (DbType = Double), @p125='?' (DbType = Double), @p126='?' (DbType = Int64), @p127='?' (DbType = Int64), @p128='?' (DbType = Int64), @p129='?' (DbType = Double), @p130='?' (DbType = Int64), @p131='?' (DbType = Int64), @p132='?' (DbType = DateTime2), @p133='?' (DbType = Double), @p134='?' (DbType = Double), @p135='?' (DbType = Double), @p136='?' (DbType = Double), @p137='?' (DbType = Int64), @p138='?' (DbType = Double), @p139='?' (DbType = Int64), @p140='?' (DbType = Double), @p141='?' (DbType = Double), @p142='?' (DbType = Double), @p143='?' (DbType = Double), @p144='?' (DbType = Double), @p145='?' (DbType = Int64), @p146='?' (Size = 4000), @p147='?' (DbType = Double), @p148='?' (DbType = Double), @p149='?' (DbType = Double), @p150='?' (DbType = Double), @p151='?' (Size = 450), @p152='?' (DbType = Double), @p153='?' (DbType = Double), @p154='?' (DbType = Double), @p155='?' (DbType = Double), @p156='?' (DbType = Double), @p157='?' (DbType = Double), @p158='?' (DbType = Double), @p159='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
DECLARE @inserted0 TABLE ([Id] int, [_Position] [int]);
MERGE [BalanceSheetAnnualReport] USING (
VALUES (@p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21, @p22, @p23, @p24, @p25, @p26, @p27, @p28, @p29, @p30, @p31, @p32, @p33, @p34, @p35, @p36, @p37, @p38, @p39, @p40, @p41, @p42, 0),
(@p43, @p44, @p45, @p46, @p47, @p48, @p49, @p50, @p51, @p52, @p53, @p54, @p55, @p56, @p57, @p58, @p59, @p60, @p61, @p62, @p63, @p64, @p65, @p66, @p67, @p68, @p69, @p70, @p71, @p72, @p73, @p74, @p75, @p76, @p77, @p78, @p79, @p80, @p81, 1)) AS i ([AccumulatedDepreciationAmortizationPPE], [CapitalLeaseObligations], [CashAndCashEquivalentsAtCarryingValue], [CashAndShortTermInvestments], [CommonStock], [CommonStockSharesOutstanding], [CurrentAccountsPayable], [CurrentDebt], [CurrentLongTermDebt], [CurrentNetReceivables], [DeferredRevenue], [FiscalDateEnding], [Goodwill], [IntangibleAssets], [IntangibleAssetsExcludingGoodwill], [Inventory], [Investments], [LongTermDebt], [LongTermDebtNoncurrent], [LongTermInvestments], [OtherCurrentAssets], [OtherCurrentLiabilities], [OtherNonCurrentAssets], [OtherNonCurrentLiabilities], [PropertyPlantEquipment], [ReportedCurrency], [RetainedEarnings], [ShortLongTermDebtTotal], [ShortTermDebt], [ShortTermInvestments], [Symbol], [TotalAssets], [TotalCurrentAssets], [TotalCurrentLiabilities], [TotalLiabilities], [TotalNonCurrentAssets], [TotalNonCurrentLiabilities], [TotalShareholderEquity], [TreasuryStock], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([AccumulatedDepreciationAmortizationPPE], [CapitalLeaseObligations], [CashAndCashEquivalentsAtCarryingValue], [CashAndShortTermInvestments], [CommonStock], [CommonStockSharesOutstanding], [CurrentAccountsPayable], [CurrentDebt], [CurrentLongTermDebt], [CurrentNetReceivables], [DeferredRevenue], [FiscalDateEnding], [Goodwill], [IntangibleAssets], [IntangibleAssetsExcludingGoodwill], [Inventory], [Investments], [LongTermDebt], [LongTermDebtNoncurrent], [LongTermInvestments], [OtherCurrentAssets], [OtherCurrentLiabilities], [OtherNonCurrentAssets], [OtherNonCurrentLiabilities], [PropertyPlantEquipment], [ReportedCurrency], [RetainedEarnings], [ShortLongTermDebtTotal], [ShortTermDebt], [ShortTermInvestments], [Symbol], [TotalAssets], [TotalCurrentAssets], [TotalCurrentLiabilities], [TotalLiabilities], [TotalNonCurrentAssets], [TotalNonCurrentLiabilities], [TotalShareholderEquity], [TreasuryStock])
VALUES (i.[AccumulatedDepreciationAmortizationPPE], i.[CapitalLeaseObligations], i.[CashAndCashEquivalentsAtCarryingValue], i.[CashAndShortTermInvestments], i.[CommonStock], i.[CommonStockSharesOutstanding], i.[CurrentAccountsPayable], i.[CurrentDebt], i.[CurrentLongTermDebt], i.[CurrentNetReceivables], i.[DeferredRevenue], i.[FiscalDateEnding], i.[Goodwill], i.[IntangibleAssets], i.[IntangibleAssetsExcludingGoodwill], i.[Inventory], i.[Investments], i.[LongTermDebt], i.[LongTermDebtNoncurrent], i.[LongTermInvestments], i.[OtherCurrentAssets], i.[OtherCurrentLiabilities], i.[OtherNonCurrentAssets], i.[OtherNonCurrentLiabilities], i.[PropertyPlantEquipment], i.[ReportedCurrency], i.[RetainedEarnings], i.[ShortLongTermDebtTotal], i.[ShortTermDebt], i.[ShortTermInvestments], i.[Symbol], i.[TotalAssets], i.[TotalCurrentAssets], i.[TotalCurrentLiabilities], i.[TotalLiabilities], i.[TotalNonCurrentAssets], i.[TotalNonCurrentLiabilities], i.[TotalShareholderEquity], i.[TreasuryStock])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted0;

SELECT [i].[Id] FROM @inserted0 i
ORDER BY [i].[_Position];

DECLARE @inserted2 TABLE ([Id] int, [_Position] [int]);
MERGE [BalanceSheetQuarterlyReports] USING (
VALUES (@p82, @p83, @p84, @p85, @p86, @p87, @p88, @p89, @p90, @p91, @p92, @p93, @p94, @p95, @p96, @p97, @p98, @p99, @p100, @p101, @p102, @p103, @p104, @p105, @p106, @p107, @p108, @p109, @p110, @p111, @p112, @p113, @p114, @p115, @p116, @p117, @p118, @p119, @p120, 0),
(@p121, @p122, @p123, @p124, @p125, @p126, @p127, @p128, @p129, @p130, @p131, @p132, @p133, @p134, @p135, @p136, @p137, @p138, @p139, @p140, @p141, @p142, @p143, @p144, @p145, @p146, @p147, @p148, @p149, @p150, @p151, @p152, @p153, @p154, @p155, @p156, @p157, @p158, @p159, 1)) AS i ([AccumulatedDepreciationAmortizationPPE], [CapitalLeaseObligations], [CashAndCashEquivalentsAtCarryingValue], [CashAndShortTermInvestments], [CommonStock], [CommonStockSharesOutstanding], [CurrentAccountsPayable], [CurrentDebt], [CurrentLongTermDebt], [CurrentNetReceivables], [DeferredRevenue], [FiscalDateEnding], [Goodwill], [IntangibleAssets], [IntangibleAssetsExcludingGoodwill], [Inventory], [Investments], [LongTermDebt], [LongTermDebtNoncurrent], [LongTermInvestments], [OtherCurrentAssets], [OtherCurrentLiabilities], [OtherNonCurrentAssets], [OtherNonCurrentLiabilities], [PropertyPlantEquipment], [ReportedCurrency], [RetainedEarnings], [ShortLongTermDebtTotal], [ShortTermDebt], [ShortTermInvestments], [Symbol], [TotalAssets], [TotalCurrentAssets], [TotalCurrentLiabilities], [TotalLiabilities], [TotalNonCurrentAssets], [TotalNonCurrentLiabilities], [TotalShareholderEquity], [TreasuryStock], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([AccumulatedDepreciationAmortizationPPE], [CapitalLeaseObligations], [CashAndCashEquivalentsAtCarryingValue], [CashAndShortTermInvestments], [CommonStock], [CommonStockSharesOutstanding], [CurrentAccountsPayable], [CurrentDebt], [CurrentLongTermDebt], [CurrentNetReceivables], [DeferredRevenue], [FiscalDateEnding], [Goodwill], [IntangibleAssets], [IntangibleAssetsExcludingGoodwill], [Inventory], [Investments], [LongTermDebt], [LongTermDebtNoncurrent], [LongTermInvestments], [OtherCurrentAssets], [OtherCurrentLiabilities], [OtherNonCurrentAssets], [OtherNonCurrentLiabilities], [PropertyPlantEquipment], [ReportedCurrency], [RetainedEarnings], [ShortLongTermDebtTotal], [ShortTermDebt], [ShortTermInvestments], [Symbol], [TotalAssets], [TotalCurrentAssets], [TotalCurrentLiabilities], [TotalLiabilities], [TotalNonCurrentAssets], [TotalNonCurrentLiabilities], [TotalShareholderEquity], [TreasuryStock])
VALUES (i.[AccumulatedDepreciationAmortizationPPE], i.[CapitalLeaseObligations], i.[CashAndCashEquivalentsAtCarryingValue], i.[CashAndShortTermInvestments], i.[CommonStock], i.[CommonStockSharesOutstanding], i.[CurrentAccountsPayable], i.[CurrentDebt], i.[CurrentLongTermDebt], i.[CurrentNetReceivables], i.[DeferredRevenue], i.[FiscalDateEnding], i.[Goodwill], i.[IntangibleAssets], i.[IntangibleAssetsExcludingGoodwill], i.[Inventory], i.[Investments], i.[LongTermDebt], i.[LongTermDebtNoncurrent], i.[LongTermInvestments], i.[OtherCurrentAssets], i.[OtherCurrentLiabilities], i.[OtherNonCurrentAssets], i.[OtherNonCurrentLiabilities], i.[PropertyPlantEquipment], i.[ReportedCurrency], i.[RetainedEarnings], i.[ShortLongTermDebtTotal], i.[ShortTermDebt], i.[ShortTermInvestments], i.[Symbol], i.[TotalAssets], i.[TotalCurrentAssets], i.[TotalCurrentLiabilities], i.[TotalLiabilities], i.[TotalNonCurrentAssets], i.[TotalNonCurrentLiabilities], i.[TotalShareholderEquity], i.[TreasuryStock])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted2;

SELECT [i].[Id] FROM @inserted2 i
ORDER BY [i].[_Position];
2022-05-12 01:02:24.855 +03:00 [INF] Response has success status code
2022-05-12 01:02:24.856 +03:00 [INF] Trying to deserialize response.
2022-05-12 01:02:24.857 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 01:02:24.862 +03:00 [INF] AddOrUpdate run successful.
2022-05-12 01:02:24.917 +03:00 [INF] Executed DbCommand (58ms) [Parameters=[@__symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__symbol_0
2022-05-12 01:02:24.918 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.IncomeStatement.
2022-05-12 01:02:24.925 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [i].[Symbol], [i].[ExistInApi], [i].[LastApiRefresh], [i].[LastLocalRefresh]
FROM [IncomeStatements] AS [i]
WHERE [i].[Symbol] = @__entity_Symbol_0
2022-05-12 01:02:24.926 +03:00 [INF] Entity does not exist. Adding to DB.
2022-05-12 01:02:24.939 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = Boolean), @p2='?' (DbType = DateTime2), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [IncomeStatements] ([Symbol], [ExistInApi], [LastApiRefresh], [LastLocalRefresh])
VALUES (@p0, @p1, @p2, @p3);
2022-05-12 01:02:24.978 +03:00 [INF] Executed DbCommand (37ms) [Parameters=[@p4='?' (DbType = Int64), @p5='?' (DbType = Double), @p6='?' (DbType = Double), @p7='?' (DbType = Int64), @p8='?' (DbType = Int64), @p9='?' (DbType = Int64), @p10='?' (DbType = Double), @p11='?' (DbType = DateTime2), @p12='?' (DbType = Double), @p13='?' (DbType = Double), @p14='?' (DbType = Int64), @p15='?' (DbType = Int64), @p16='?' (DbType = Double), @p17='?' (DbType = Int64), @p18='?' (DbType = Int64), @p19='?' (DbType = Double), @p20='?' (DbType = Double), @p21='?' (DbType = Double), @p22='?' (DbType = Int64), @p23='?' (DbType = Double), @p24='?' (DbType = Double), @p25='?' (DbType = Int64), @p26='?' (Size = 4000), @p27='?' (DbType = Int64), @p28='?' (DbType = Double), @p29='?' (Size = 450), @p30='?' (DbType = Int64), @p31='?' (DbType = Int64), @p32='?' (DbType = Double), @p33='?' (DbType = Double), @p34='?' (DbType = Int64), @p35='?' (DbType = Int64), @p36='?' (DbType = Int64), @p37='?' (DbType = Double), @p38='?' (DbType = DateTime2), @p39='?' (DbType = Double), @p40='?' (DbType = Double), @p41='?' (DbType = Int64), @p42='?' (DbType = Int64), @p43='?' (DbType = Double), @p44='?' (DbType = Int64), @p45='?' (DbType = Int64), @p46='?' (DbType = Double), @p47='?' (DbType = Double), @p48='?' (DbType = Double), @p49='?' (DbType = Int64), @p50='?' (DbType = Double), @p51='?' (DbType = Double), @p52='?' (DbType = Int64), @p53='?' (Size = 4000), @p54='?' (DbType = Int64), @p55='?' (DbType = Double), @p56='?' (Size = 450), @p57='?' (DbType = Int64), @p58='?' (DbType = Int64), @p59='?' (DbType = Double), @p60='?' (DbType = Double), @p61='?' (DbType = Int64), @p62='?' (DbType = Int64), @p63='?' (DbType = Int64), @p64='?' (DbType = Double), @p65='?' (DbType = DateTime2), @p66='?' (DbType = Double), @p67='?' (DbType = Double), @p68='?' (DbType = Int64), @p69='?' (DbType = Int64), @p70='?' (DbType = Double), @p71='?' (DbType = Int64), @p72='?' (DbType = Int64), @p73='?' (DbType = Double), @p74='?' (DbType = Double), @p75='?' (DbType = Double), @p76='?' (DbType = Int64), @p77='?' (DbType = Double), @p78='?' (DbType = Double), @p79='?' (DbType = Int64), @p80='?' (Size = 4000), @p81='?' (DbType = Int64), @p82='?' (DbType = Double), @p83='?' (Size = 450), @p84='?' (DbType = Int64), @p85='?' (DbType = Int64), @p86='?' (DbType = Double), @p87='?' (DbType = Double), @p88='?' (DbType = Int64), @p89='?' (DbType = Int64), @p90='?' (DbType = Int64), @p91='?' (DbType = Double), @p92='?' (DbType = DateTime2), @p93='?' (DbType = Double), @p94='?' (DbType = Double), @p95='?' (DbType = Int64), @p96='?' (DbType = Int64), @p97='?' (DbType = Double), @p98='?' (DbType = Int64), @p99='?' (DbType = Int64), @p100='?' (DbType = Double), @p101='?' (DbType = Double), @p102='?' (DbType = Double), @p103='?' (DbType = Int64), @p104='?' (DbType = Double), @p105='?' (DbType = Double), @p106='?' (DbType = Int64), @p107='?' (Size = 4000), @p108='?' (DbType = Int64), @p109='?' (DbType = Double), @p110='?' (Size = 450), @p111='?' (DbType = Int64), @p112='?' (DbType = Int64), @p113='?' (DbType = Double), @p114='?' (DbType = Double), @p115='?' (DbType = Int64), @p116='?' (DbType = Int64), @p117='?' (DbType = Int64), @p118='?' (DbType = Double), @p119='?' (DbType = DateTime2), @p120='?' (DbType = Double), @p121='?' (DbType = Double), @p122='?' (DbType = Int64), @p123='?' (DbType = Int64), @p124='?' (DbType = Double), @p125='?' (DbType = Int64), @p126='?' (DbType = Int64), @p127='?' (DbType = Double), @p128='?' (DbType = Double), @p129='?' (DbType = Double), @p130='?' (DbType = Int64), @p131='?' (DbType = Double), @p132='?' (DbType = Double), @p133='?' (DbType = Int64), @p134='?' (Size = 4000), @p135='?' (DbType = Int64), @p136='?' (DbType = Double), @p137='?' (Size = 450), @p138='?' (DbType = Int64), @p139='?' (DbType = Int64), @p140='?' (DbType = Double), @p141='?' (DbType = Double), @p142='?' (DbType = Int64), @p143='?' (DbType = Int64), @p144='?' (DbType = Int64), @p145='?' (DbType = Double), @p146='?' (DbType = DateTime2), @p147='?' (DbType = Double), @p148='?' (DbType = Double), @p149='?' (DbType = Int64), @p150='?' (DbType = Int64), @p151='?' (DbType = Double), @p152='?' (DbType = Int64), @p153='?' (DbType = Int64), @p154='?' (DbType = Double), @p155='?' (DbType = Double), @p156='?' (DbType = Double), @p157='?' (DbType = Int64), @p158='?' (DbType = Double), @p159='?' (DbType = Double), @p160='?' (DbType = Int64), @p161='?' (Size = 4000), @p162='?' (DbType = Int64), @p163='?' (DbType = Double), @p164='?' (Size = 450), @p165='?' (DbType = Int64), @p166='?' (DbType = Int64), @p167='?' (DbType = Double), @p168='?' (DbType = Double), @p169='?' (DbType = Int64), @p170='?' (DbType = Int64), @p171='?' (DbType = Int64), @p172='?' (DbType = Double), @p173='?' (DbType = DateTime2), @p174='?' (DbType = Double), @p175='?' (DbType = Double), @p176='?' (DbType = Int64), @p177='?' (DbType = Int64), @p178='?' (DbType = Double), @p179='?' (DbType = Int64), @p180='?' (DbType = Int64), @p181='?' (DbType = Double), @p182='?' (DbType = Double), @p183='?' (DbType = Double), @p184='?' (DbType = Int64), @p185='?' (DbType = Double), @p186='?' (DbType = Double), @p187='?' (DbType = Int64), @p188='?' (Size = 4000), @p189='?' (DbType = Int64), @p190='?' (DbType = Double), @p191='?' (Size = 450), @p192='?' (DbType = Int64), @p193='?' (DbType = Int64), @p194='?' (DbType = Double), @p195='?' (DbType = Double), @p196='?' (DbType = Int64), @p197='?' (DbType = Int64), @p198='?' (DbType = Int64), @p199='?' (DbType = Double), @p200='?' (DbType = DateTime2), @p201='?' (DbType = Double), @p202='?' (DbType = Double), @p203='?' (DbType = Int64), @p204='?' (DbType = Int64), @p205='?' (DbType = Double), @p206='?' (DbType = Int64), @p207='?' (DbType = Int64), @p208='?' (DbType = Double), @p209='?' (DbType = Double), @p210='?' (DbType = Double), @p211='?' (DbType = Int64), @p212='?' (DbType = Double), @p213='?' (DbType = Double), @p214='?' (DbType = Int64), @p215='?' (Size = 4000), @p216='?' (DbType = Int64), @p217='?' (DbType = Double), @p218='?' (Size = 450), @p219='?' (DbType = Int64), @p220='?' (DbType = Int64), @p221='?' (DbType = Double), @p222='?' (DbType = Double), @p223='?' (DbType = Int64), @p224='?' (DbType = Int64), @p225='?' (DbType = Int64), @p226='?' (DbType = Double), @p227='?' (DbType = DateTime2), @p228='?' (DbType = Double), @p229='?' (DbType = Double), @p230='?' (DbType = Int64), @p231='?' (DbType = Int64), @p232='?' (DbType = Double), @p233='?' (DbType = Int64), @p234='?' (DbType = Int64), @p235='?' (DbType = Double), @p236='?' (DbType = Double), @p237='?' (DbType = Double), @p238='?' (DbType = Int64), @p239='?' (DbType = Double), @p240='?' (DbType = Double), @p241='?' (DbType = Int64), @p242='?' (Size = 4000), @p243='?' (DbType = Int64), @p244='?' (DbType = Double), @p245='?' (Size = 450), @p246='?' (DbType = Int64), @p247='?' (DbType = Int64), @p248='?' (DbType = Double), @p249='?' (DbType = Double), @p250='?' (DbType = Int64), @p251='?' (DbType = Int64), @p252='?' (DbType = Int64), @p253='?' (DbType = Double), @p254='?' (DbType = DateTime2), @p255='?' (DbType = Double), @p256='?' (DbType = Double), @p257='?' (DbType = Int64), @p258='?' (DbType = Int64), @p259='?' (DbType = Double), @p260='?' (DbType = Int64), @p261='?' (DbType = Int64), @p262='?' (DbType = Double), @p263='?' (DbType = Double), @p264='?' (DbType = Double), @p265='?' (DbType = Int64), @p266='?' (DbType = Double), @p267='?' (DbType = Double), @p268='?' (DbType = Int64), @p269='?' (Size = 4000), @p270='?' (DbType = Int64), @p271='?' (DbType = Double), @p272='?' (Size = 450), @p273='?' (DbType = Int64), @p274='?' (DbType = Int64), @p275='?' (DbType = Double), @p276='?' (DbType = Double), @p277='?' (DbType = Int64), @p278='?' (DbType = Int64), @p279='?' (DbType = Int64), @p280='?' (DbType = Double), @p281='?' (DbType = DateTime2), @p282='?' (DbType = Double), @p283='?' (DbType = Double), @p284='?' (DbType = Int64), @p285='?' (DbType = Int64), @p286='?' (DbType = Double), @p287='?' (DbType = Int64), @p288='?' (DbType = Int64), @p289='?' (DbType = Double), @p290='?' (DbType = Double), @p291='?' (DbType = Double), @p292='?' (DbType = Int64), @p293='?' (DbType = Double), @p294='?' (DbType = Double), @p295='?' (DbType = Int64), @p296='?' (Size = 4000), @p297='?' (DbType = Int64), @p298='?' (DbType = Double), @p299='?' (Size = 450), @p300='?' (DbType = Int64), @p301='?' (DbType = Int64), @p302='?' (DbType = Double), @p303='?' (DbType = Double), @p304='?' (DbType = Int64), @p305='?' (DbType = Int64), @p306='?' (DbType = Int64), @p307='?' (DbType = Double), @p308='?' (DbType = DateTime2), @p309='?' (DbType = Double), @p310='?' (DbType = Double), @p311='?' (DbType = Int64), @p312='?' (DbType = Int64), @p313='?' (DbType = Double), @p314='?' (DbType = Int64), @p315='?' (DbType = Int64), @p316='?' (DbType = Double), @p317='?' (DbType = Double), @p318='?' (DbType = Double), @p319='?' (DbType = Int64), @p320='?' (DbType = Double), @p321='?' (DbType = Double), @p322='?' (DbType = Int64), @p323='?' (Size = 4000), @p324='?' (DbType = Int64), @p325='?' (DbType = Double), @p326='?' (Size = 450), @p327='?' (DbType = Int64), @p328='?' (DbType = Int64), @p329='?' (DbType = Double), @p330='?' (DbType = Double), @p331='?' (DbType = Int64), @p332='?' (DbType = Int64), @p333='?' (DbType = Int64), @p334='?' (DbType = Double), @p335='?' (DbType = DateTime2), @p336='?' (DbType = Double), @p337='?' (DbType = Double), @p338='?' (DbType = Int64), @p339='?' (DbType = Int64), @p340='?' (DbType = Double), @p341='?' (DbType = Int64), @p342='?' (DbType = Int64), @p343='?' (DbType = Double), @p344='?' (DbType = Double), @p345='?' (DbType = Double), @p346='?' (DbType = Int64), @p347='?' (DbType = Double), @p348='?' (DbType = Double), @p349='?' (DbType = Int64), @p350='?' (Size = 4000), @p351='?' (DbType = Int64), @p352='?' (DbType = Double), @p353='?' (Size = 450), @p354='?' (DbType = Int64), @p355='?' (DbType = Int64), @p356='?' (DbType = Double), @p357='?' (DbType = Double), @p358='?' (DbType = Int64), @p359='?' (DbType = Int64), @p360='?' (DbType = Int64), @p361='?' (DbType = Double), @p362='?' (DbType = DateTime2), @p363='?' (DbType = Double), @p364='?' (DbType = Double), @p365='?' (DbType = Int64), @p366='?' (DbType = Int64), @p367='?' (DbType = Double), @p368='?' (DbType = Int64), @p369='?' (DbType = Int64), @p370='?' (DbType = Double), @p371='?' (DbType = Double), @p372='?' (DbType = Double), @p373='?' (DbType = Int64), @p374='?' (DbType = Double), @p375='?' (DbType = Double), @p376='?' (DbType = Int64), @p377='?' (Size = 4000), @p378='?' (DbType = Int64), @p379='?' (DbType = Double), @p380='?' (Size = 450), @p381='?' (DbType = Int64), @p382='?' (DbType = Int64), @p383='?' (DbType = Double), @p384='?' (DbType = Double), @p385='?' (DbType = Int64), @p386='?' (DbType = Int64), @p387='?' (DbType = Int64), @p388='?' (DbType = Double), @p389='?' (DbType = DateTime2), @p390='?' (DbType = Double), @p391='?' (DbType = Double), @p392='?' (DbType = Int64), @p393='?' (DbType = Int64), @p394='?' (DbType = Double), @p395='?' (DbType = Int64), @p396='?' (DbType = Int64), @p397='?' (DbType = Double), @p398='?' (DbType = Double), @p399='?' (DbType = Double), @p400='?' (DbType = Int64), @p401='?' (DbType = Double), @p402='?' (DbType = Double), @p403='?' (DbType = Int64), @p404='?' (Size = 4000), @p405='?' (DbType = Int64), @p406='?' (DbType = Double), @p407='?' (Size = 450), @p408='?' (DbType = Int64), @p409='?' (DbType = Int64), @p410='?' (DbType = Double), @p411='?' (DbType = Double), @p412='?' (DbType = Int64), @p413='?' (DbType = Int64), @p414='?' (DbType = Int64), @p415='?' (DbType = Double), @p416='?' (DbType = DateTime2), @p417='?' (DbType = Double), @p418='?' (DbType = Double), @p419='?' (DbType = Int64), @p420='?' (DbType = Int64), @p421='?' (DbType = Double), @p422='?' (DbType = Int64), @p423='?' (DbType = Int64), @p424='?' (DbType = Double), @p425='?' (DbType = Double), @p426='?' (DbType = Double), @p427='?' (DbType = Int64), @p428='?' (DbType = Double), @p429='?' (DbType = Double), @p430='?' (DbType = Int64), @p431='?' (Size = 4000), @p432='?' (DbType = Int64), @p433='?' (DbType = Double), @p434='?' (Size = 450), @p435='?' (DbType = Int64), @p436='?' (DbType = Int64), @p437='?' (DbType = Double), @p438='?' (DbType = Double), @p439='?' (DbType = Int64), @p440='?' (DbType = Int64), @p441='?' (DbType = Int64), @p442='?' (DbType = Double), @p443='?' (DbType = DateTime2), @p444='?' (DbType = Double), @p445='?' (DbType = Double), @p446='?' (DbType = Int64), @p447='?' (DbType = Int64), @p448='?' (DbType = Double), @p449='?' (DbType = Int64), @p450='?' (DbType = Int64), @p451='?' (DbType = Double), @p452='?' (DbType = Double), @p453='?' (DbType = Double), @p454='?' (DbType = Int64), @p455='?' (DbType = Double), @p456='?' (DbType = Double), @p457='?' (DbType = Int64), @p458='?' (Size = 4000), @p459='?' (DbType = Int64), @p460='?' (DbType = Double), @p461='?' (Size = 450), @p462='?' (DbType = Int64), @p463='?' (DbType = Int64), @p464='?' (DbType = Double), @p465='?' (DbType = Double), @p466='?' (DbType = Int64), @p467='?' (DbType = Int64), @p468='?' (DbType = Int64), @p469='?' (DbType = Double), @p470='?' (DbType = DateTime2), @p471='?' (DbType = Double), @p472='?' (DbType = Double), @p473='?' (DbType = Int64), @p474='?' (DbType = Int64), @p475='?' (DbType = Double), @p476='?' (DbType = Int64), @p477='?' (DbType = Int64), @p478='?' (DbType = Double), @p479='?' (DbType = Double), @p480='?' (DbType = Double), @p481='?' (DbType = Int64), @p482='?' (DbType = Double), @p483='?' (DbType = Double), @p484='?' (DbType = Int64), @p485='?' (Size = 4000), @p486='?' (DbType = Int64), @p487='?' (DbType = Double), @p488='?' (Size = 450), @p489='?' (DbType = Int64), @p490='?' (DbType = Int64), @p491='?' (DbType = Double), @p492='?' (DbType = Double), @p493='?' (DbType = Int64), @p494='?' (DbType = Int64), @p495='?' (DbType = Int64), @p496='?' (DbType = Double), @p497='?' (DbType = DateTime2), @p498='?' (DbType = Double), @p499='?' (DbType = Double), @p500='?' (DbType = Int64), @p501='?' (DbType = Int64), @p502='?' (DbType = Double), @p503='?' (DbType = Int64), @p504='?' (DbType = Int64), @p505='?' (DbType = Double), @p506='?' (DbType = Double), @p507='?' (DbType = Double), @p508='?' (DbType = Int64), @p509='?' (DbType = Double), @p510='?' (DbType = Double), @p511='?' (DbType = Int64), @p512='?' (Size = 4000), @p513='?' (DbType = Int64), @p514='?' (DbType = Double), @p515='?' (Size = 450), @p516='?' (DbType = Int64), @p517='?' (DbType = Int64), @p518='?' (DbType = Double), @p519='?' (DbType = Double), @p520='?' (DbType = Int64), @p521='?' (DbType = Int64), @p522='?' (DbType = Int64), @p523='?' (DbType = Double), @p524='?' (DbType = DateTime2), @p525='?' (DbType = Double), @p526='?' (DbType = Double), @p527='?' (DbType = Int64), @p528='?' (DbType = Int64), @p529='?' (DbType = Double), @p530='?' (DbType = Int64), @p531='?' (DbType = Int64), @p532='?' (DbType = Double), @p533='?' (DbType = Double), @p534='?' (DbType = Double), @p535='?' (DbType = Int64), @p536='?' (DbType = Double), @p537='?' (DbType = Double), @p538='?' (DbType = Int64), @p539='?' (Size = 4000), @p540='?' (DbType = Int64), @p541='?' (DbType = Double), @p542='?' (Size = 450), @p543='?' (DbType = Int64), @p544='?' (DbType = Int64), @p545='?' (DbType = Double), @p546='?' (DbType = Double), @p547='?' (DbType = Int64), @p548='?' (DbType = Int64), @p549='?' (DbType = Int64), @p550='?' (DbType = Double), @p551='?' (DbType = DateTime2), @p552='?' (DbType = Double), @p553='?' (DbType = Double), @p554='?' (DbType = Int64), @p555='?' (DbType = Int64), @p556='?' (DbType = Double), @p557='?' (DbType = Int64), @p558='?' (DbType = Int64), @p559='?' (DbType = Double), @p560='?' (DbType = Double), @p561='?' (DbType = Double), @p562='?' (DbType = Int64), @p563='?' (DbType = Double), @p564='?' (DbType = Double), @p565='?' (DbType = Int64), @p566='?' (Size = 4000), @p567='?' (DbType = Int64), @p568='?' (DbType = Double), @p569='?' (Size = 450), @p570='?' (DbType = Int64), @p571='?' (DbType = Int64), @p572='?' (DbType = Double), @p573='?' (DbType = Double), @p574='?' (DbType = Int64), @p575='?' (DbType = Int64), @p576='?' (DbType = Int64), @p577='?' (DbType = Double), @p578='?' (DbType = DateTime2), @p579='?' (DbType = Double), @p580='?' (DbType = Double), @p581='?' (DbType = Int64), @p582='?' (DbType = Int64), @p583='?' (DbType = Double), @p584='?' (DbType = Int64), @p585='?' (DbType = Int64), @p586='?' (DbType = Double), @p587='?' (DbType = Double), @p588='?' (DbType = Double), @p589='?' (DbType = Int64), @p590='?' (DbType = Double), @p591='?' (DbType = Double), @p592='?' (DbType = Int64), @p593='?' (Size = 4000), @p594='?' (DbType = Int64), @p595='?' (DbType = Double), @p596='?' (Size = 450), @p597='?' (DbType = Int64), @p598='?' (DbType = Int64), @p599='?' (DbType = Double), @p600='?' (DbType = Double), @p601='?' (DbType = Int64), @p602='?' (DbType = Int64), @p603='?' (DbType = Int64), @p604='?' (DbType = Double), @p605='?' (DbType = DateTime2), @p606='?' (DbType = Double), @p607='?' (DbType = Double), @p608='?' (DbType = Int64), @p609='?' (DbType = Int64), @p610='?' (DbType = Double), @p611='?' (DbType = Int64), @p612='?' (DbType = Int64), @p613='?' (DbType = Double), @p614='?' (DbType = Double), @p615='?' (DbType = Double), @p616='?' (DbType = Int64), @p617='?' (DbType = Double), @p618='?' (DbType = Double), @p619='?' (DbType = Int64), @p620='?' (Size = 4000), @p621='?' (DbType = Int64), @p622='?' (DbType = Double), @p623='?' (Size = 450), @p624='?' (DbType = Int64), @p625='?' (DbType = Int64), @p626='?' (DbType = Double), @p627='?' (DbType = Double), @p628='?' (DbType = Int64), @p629='?' (DbType = Int64), @p630='?' (DbType = Int64), @p631='?' (DbType = Double), @p632='?' (DbType = DateTime2), @p633='?' (DbType = Double), @p634='?' (DbType = Double), @p635='?' (DbType = Int64), @p636='?' (DbType = Int64), @p637='?' (DbType = Double), @p638='?' (DbType = Int64), @p639='?' (DbType = Int64), @p640='?' (DbType = Double), @p641='?' (DbType = Double), @p642='?' (DbType = Double), @p643='?' (DbType = Int64), @p644='?' (DbType = Double), @p645='?' (DbType = Double), @p646='?' (DbType = Int64), @p647='?' (Size = 4000), @p648='?' (DbType = Int64), @p649='?' (DbType = Double), @p650='?' (Size = 450), @p651='?' (DbType = Int64), @p652='?' (DbType = Int64), @p653='?' (DbType = Double), @p654='?' (DbType = Double), @p655='?' (DbType = Int64), @p656='?' (DbType = Int64), @p657='?' (DbType = Int64), @p658='?' (DbType = Double), @p659='?' (DbType = DateTime2), @p660='?' (DbType = Double), @p661='?' (DbType = Double), @p662='?' (DbType = Int64), @p663='?' (DbType = Int64), @p664='?' (DbType = Double), @p665='?' (DbType = Int64), @p666='?' (DbType = Int64), @p667='?' (DbType = Double), @p668='?' (DbType = Double), @p669='?' (DbType = Double), @p670='?' (DbType = Int64), @p671='?' (DbType = Double), @p672='?' (DbType = Double), @p673='?' (DbType = Int64), @p674='?' (Size = 4000), @p675='?' (DbType = Int64), @p676='?' (DbType = Double), @p677='?' (Size = 450), @p678='?' (DbType = Int64), @p679='?' (DbType = Int64), @p680='?' (DbType = Double), @p681='?' (DbType = Double), @p682='?' (DbType = Int64), @p683='?' (DbType = Int64), @p684='?' (DbType = Int64), @p685='?' (DbType = Double), @p686='?' (DbType = DateTime2), @p687='?' (DbType = Double), @p688='?' (DbType = Double), @p689='?' (DbType = Int64), @p690='?' (DbType = Int64), @p691='?' (DbType = Double), @p692='?' (DbType = Int64), @p693='?' (DbType = Int64), @p694='?' (DbType = Double), @p695='?' (DbType = Double), @p696='?' (DbType = Double), @p697='?' (DbType = Int64), @p698='?' (DbType = Double), @p699='?' (DbType = Double), @p700='?' (DbType = Int64), @p701='?' (Size = 4000), @p702='?' (DbType = Int64), @p703='?' (DbType = Double), @p704='?' (Size = 450), @p705='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
DECLARE @inserted0 TABLE ([Id] int, [_Position] [int]);
MERGE [IncomeStatementAnnualReport] USING (
VALUES (@p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21, @p22, @p23, @p24, @p25, @p26, @p27, @p28, @p29, @p30, 0),
(@p31, @p32, @p33, @p34, @p35, @p36, @p37, @p38, @p39, @p40, @p41, @p42, @p43, @p44, @p45, @p46, @p47, @p48, @p49, @p50, @p51, @p52, @p53, @p54, @p55, @p56, @p57, 1),
(@p58, @p59, @p60, @p61, @p62, @p63, @p64, @p65, @p66, @p67, @p68, @p69, @p70, @p71, @p72, @p73, @p74, @p75, @p76, @p77, @p78, @p79, @p80, @p81, @p82, @p83, @p84, 2),
(@p85, @p86, @p87, @p88, @p89, @p90, @p91, @p92, @p93, @p94, @p95, @p96, @p97, @p98, @p99, @p100, @p101, @p102, @p103, @p104, @p105, @p106, @p107, @p108, @p109, @p110, @p111, 3),
(@p112, @p113, @p114, @p115, @p116, @p117, @p118, @p119, @p120, @p121, @p122, @p123, @p124, @p125, @p126, @p127, @p128, @p129, @p130, @p131, @p132, @p133, @p134, @p135, @p136, @p137, @p138, 4)) AS i ([ComprehensiveIncomeNetOfTax], [CostOfRevenue], [CostofGoodsAndServicesSold], [Depreciation], [DepreciationAndAmortization], [Ebit], [Ebitda], [FiscalDateEnding], [GrossProfit], [IncomeBeforeTax], [IncomeTaxExpense], [InterestAndDebtExpense], [InterestExpense], [InterestIncome], [InvestmentIncomeNet], [NetIncome], [NetIncomeFromContinuingOperations], [NetInterestIncome], [NonInterestIncome], [OperatingExpenses], [OperatingIncome], [OtherNonOperatingIncome], [ReportedCurrency], [ResearchAndDevelopment], [SellingGeneralAndAdministrative], [Symbol], [TotalRevenue], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([ComprehensiveIncomeNetOfTax], [CostOfRevenue], [CostofGoodsAndServicesSold], [Depreciation], [DepreciationAndAmortization], [Ebit], [Ebitda], [FiscalDateEnding], [GrossProfit], [IncomeBeforeTax], [IncomeTaxExpense], [InterestAndDebtExpense], [InterestExpense], [InterestIncome], [InvestmentIncomeNet], [NetIncome], [NetIncomeFromContinuingOperations], [NetInterestIncome], [NonInterestIncome], [OperatingExpenses], [OperatingIncome], [OtherNonOperatingIncome], [ReportedCurrency], [ResearchAndDevelopment], [SellingGeneralAndAdministrative], [Symbol], [TotalRevenue])
VALUES (i.[ComprehensiveIncomeNetOfTax], i.[CostOfRevenue], i.[CostofGoodsAndServicesSold], i.[Depreciation], i.[DepreciationAndAmortization], i.[Ebit], i.[Ebitda], i.[FiscalDateEnding], i.[GrossProfit], i.[IncomeBeforeTax], i.[IncomeTaxExpense], i.[InterestAndDebtExpense], i.[InterestExpense], i.[InterestIncome], i.[InvestmentIncomeNet], i.[NetIncome], i.[NetIncomeFromContinuingOperations], i.[NetInterestIncome], i.[NonInterestIncome], i.[OperatingExpenses], i.[OperatingIncome], i.[OtherNonOperatingIncome], i.[ReportedCurrency], i.[ResearchAndDevelopment], i.[SellingGeneralAndAdministrative], i.[Symbol], i.[TotalRevenue])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted0;

SELECT [i].[Id] FROM @inserted0 i
ORDER BY [i].[_Position];

DECLARE @inserted5 TABLE ([Id] int, [_Position] [int]);
MERGE [IncomeStatementQuarterlyReport] USING (
VALUES (@p139, @p140, @p141, @p142, @p143, @p144, @p145, @p146, @p147, @p148, @p149, @p150, @p151, @p152, @p153, @p154, @p155, @p156, @p157, @p158, @p159, @p160, @p161, @p162, @p163, @p164, @p165, 0),
(@p166, @p167, @p168, @p169, @p170, @p171, @p172, @p173, @p174, @p175, @p176, @p177, @p178, @p179, @p180, @p181, @p182, @p183, @p184, @p185, @p186, @p187, @p188, @p189, @p190, @p191, @p192, 1),
(@p193, @p194, @p195, @p196, @p197, @p198, @p199, @p200, @p201, @p202, @p203, @p204, @p205, @p206, @p207, @p208, @p209, @p210, @p211, @p212, @p213, @p214, @p215, @p216, @p217, @p218, @p219, 2),
(@p220, @p221, @p222, @p223, @p224, @p225, @p226, @p227, @p228, @p229, @p230, @p231, @p232, @p233, @p234, @p235, @p236, @p237, @p238, @p239, @p240, @p241, @p242, @p243, @p244, @p245, @p246, 3),
(@p247, @p248, @p249, @p250, @p251, @p252, @p253, @p254, @p255, @p256, @p257, @p258, @p259, @p260, @p261, @p262, @p263, @p264, @p265, @p266, @p267, @p268, @p269, @p270, @p271, @p272, @p273, 4),
(@p274, @p275, @p276, @p277, @p278, @p279, @p280, @p281, @p282, @p283, @p284, @p285, @p286, @p287, @p288, @p289, @p290, @p291, @p292, @p293, @p294, @p295, @p296, @p297, @p298, @p299, @p300, 5),
(@p301, @p302, @p303, @p304, @p305, @p306, @p307, @p308, @p309, @p310, @p311, @p312, @p313, @p314, @p315, @p316, @p317, @p318, @p319, @p320, @p321, @p322, @p323, @p324, @p325, @p326, @p327, 6),
(@p328, @p329, @p330, @p331, @p332, @p333, @p334, @p335, @p336, @p337, @p338, @p339, @p340, @p341, @p342, @p343, @p344, @p345, @p346, @p347, @p348, @p349, @p350, @p351, @p352, @p353, @p354, 7),
(@p355, @p356, @p357, @p358, @p359, @p360, @p361, @p362, @p363, @p364, @p365, @p366, @p367, @p368, @p369, @p370, @p371, @p372, @p373, @p374, @p375, @p376, @p377, @p378, @p379, @p380, @p381, 8),
(@p382, @p383, @p384, @p385, @p386, @p387, @p388, @p389, @p390, @p391, @p392, @p393, @p394, @p395, @p396, @p397, @p398, @p399, @p400, @p401, @p402, @p403, @p404, @p405, @p406, @p407, @p408, 9),
(@p409, @p410, @p411, @p412, @p413, @p414, @p415, @p416, @p417, @p418, @p419, @p420, @p421, @p422, @p423, @p424, @p425, @p426, @p427, @p428, @p429, @p430, @p431, @p432, @p433, @p434, @p435, 10),
(@p436, @p437, @p438, @p439, @p440, @p441, @p442, @p443, @p444, @p445, @p446, @p447, @p448, @p449, @p450, @p451, @p452, @p453, @p454, @p455, @p456, @p457, @p458, @p459, @p460, @p461, @p462, 11),
(@p463, @p464, @p465, @p466, @p467, @p468, @p469, @p470, @p471, @p472, @p473, @p474, @p475, @p476, @p477, @p478, @p479, @p480, @p481, @p482, @p483, @p484, @p485, @p486, @p487, @p488, @p489, 12),
(@p490, @p491, @p492, @p493, @p494, @p495, @p496, @p497, @p498, @p499, @p500, @p501, @p502, @p503, @p504, @p505, @p506, @p507, @p508, @p509, @p510, @p511, @p512, @p513, @p514, @p515, @p516, 13),
(@p517, @p518, @p519, @p520, @p521, @p522, @p523, @p524, @p525, @p526, @p527, @p528, @p529, @p530, @p531, @p532, @p533, @p534, @p535, @p536, @p537, @p538, @p539, @p540, @p541, @p542, @p543, 14),
(@p544, @p545, @p546, @p547, @p548, @p549, @p550, @p551, @p552, @p553, @p554, @p555, @p556, @p557, @p558, @p559, @p560, @p561, @p562, @p563, @p564, @p565, @p566, @p567, @p568, @p569, @p570, 15),
(@p571, @p572, @p573, @p574, @p575, @p576, @p577, @p578, @p579, @p580, @p581, @p582, @p583, @p584, @p585, @p586, @p587, @p588, @p589, @p590, @p591, @p592, @p593, @p594, @p595, @p596, @p597, 16),
(@p598, @p599, @p600, @p601, @p602, @p603, @p604, @p605, @p606, @p607, @p608, @p609, @p610, @p611, @p612, @p613, @p614, @p615, @p616, @p617, @p618, @p619, @p620, @p621, @p622, @p623, @p624, 17),
(@p625, @p626, @p627, @p628, @p629, @p630, @p631, @p632, @p633, @p634, @p635, @p636, @p637, @p638, @p639, @p640, @p641, @p642, @p643, @p644, @p645, @p646, @p647, @p648, @p649, @p650, @p651, 18),
(@p652, @p653, @p654, @p655, @p656, @p657, @p658, @p659, @p660, @p661, @p662, @p663, @p664, @p665, @p666, @p667, @p668, @p669, @p670, @p671, @p672, @p673, @p674, @p675, @p676, @p677, @p678, 19),
(@p679, @p680, @p681, @p682, @p683, @p684, @p685, @p686, @p687, @p688, @p689, @p690, @p691, @p692, @p693, @p694, @p695, @p696, @p697, @p698, @p699, @p700, @p701, @p702, @p703, @p704, @p705, 20)) AS i ([ComprehensiveIncomeNetOfTax], [CostOfRevenue], [CostofGoodsAndServicesSold], [Depreciation], [DepreciationAndAmortization], [Ebit], [Ebitda], [FiscalDateEnding], [GrossProfit], [IncomeBeforeTax], [IncomeTaxExpense], [InterestAndDebtExpense], [InterestExpense], [InterestIncome], [InvestmentIncomeNet], [NetIncome], [NetIncomeFromContinuingOperations], [NetInterestIncome], [NonInterestIncome], [OperatingExpenses], [OperatingIncome], [OtherNonOperatingIncome], [ReportedCurrency], [ResearchAndDevelopment], [SellingGeneralAndAdministrative], [Symbol], [TotalRevenue], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([ComprehensiveIncomeNetOfTax], [CostOfRevenue], [CostofGoodsAndServicesSold], [Depreciation], [DepreciationAndAmortization], [Ebit], [Ebitda], [FiscalDateEnding], [GrossProfit], [IncomeBeforeTax], [IncomeTaxExpense], [InterestAndDebtExpense], [InterestExpense], [InterestIncome], [InvestmentIncomeNet], [NetIncome], [NetIncomeFromContinuingOperations], [NetInterestIncome], [NonInterestIncome], [OperatingExpenses], [OperatingIncome], [OtherNonOperatingIncome], [ReportedCurrency], [ResearchAndDevelopment], [SellingGeneralAndAdministrative], [Symbol], [TotalRevenue])
VALUES (i.[ComprehensiveIncomeNetOfTax], i.[CostOfRevenue], i.[CostofGoodsAndServicesSold], i.[Depreciation], i.[DepreciationAndAmortization], i.[Ebit], i.[Ebitda], i.[FiscalDateEnding], i.[GrossProfit], i.[IncomeBeforeTax], i.[IncomeTaxExpense], i.[InterestAndDebtExpense], i.[InterestExpense], i.[InterestIncome], i.[InvestmentIncomeNet], i.[NetIncome], i.[NetIncomeFromContinuingOperations], i.[NetInterestIncome], i.[NonInterestIncome], i.[OperatingExpenses], i.[OperatingIncome], i.[OtherNonOperatingIncome], i.[ReportedCurrency], i.[ResearchAndDevelopment], i.[SellingGeneralAndAdministrative], i.[Symbol], i.[TotalRevenue])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted5;

SELECT [i].[Id] FROM @inserted5 i
ORDER BY [i].[_Position];
2022-05-12 01:02:24.990 +03:00 [INF] AddOrUpdate run successful.
2022-05-12 01:02:26.712 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CashFlow with Symbol ATNF
2022-05-12 01:02:26.714 +03:00 [INF] Generating URI for CASH_FLOW with params: symbol: ATNF
2022-05-12 01:02:26.714 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=CASH_FLOW&symbol=ATNF
2022-05-12 01:02:26.715 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=CASH_FLOW&symbol=ATNF".
2022-05-12 01:02:27.060 +03:00 [INF] Response has success status code
2022-05-12 01:02:27.060 +03:00 [INF] Trying to deserialize response.
2022-05-12 01:02:27.061 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 01:02:27.119 +03:00 [INF] Executed DbCommand (56ms) [Parameters=[@__symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__symbol_0
2022-05-12 01:02:27.121 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.CashFlow.
2022-05-12 01:02:27.130 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[ExistInApi], [c].[LastApiRefresh], [c].[LastLocalRefresh]
FROM [CashFlows] AS [c]
WHERE [c].[Symbol] = @__entity_Symbol_0
2022-05-12 01:02:27.131 +03:00 [INF] Entity does not exist. Adding to DB.
2022-05-12 01:02:27.145 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = Boolean), @p2='?' (DbType = DateTime2), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [CashFlows] ([Symbol], [ExistInApi], [LastApiRefresh], [LastLocalRefresh])
VALUES (@p0, @p1, @p2, @p3);
2022-05-12 01:02:27.186 +03:00 [INF] Executed DbCommand (38ms) [Parameters=[@p4='?' (DbType = Double), @p5='?' (DbType = Double), @p6='?' (DbType = Int64), @p7='?' (DbType = Int64), @p8='?' (DbType = Int64), @p9='?' (DbType = Int64), @p10='?' (DbType = Int64), @p11='?' (DbType = Int64), @p12='?' (DbType = Int64), @p13='?' (DbType = Double), @p14='?' (DbType = Int64), @p15='?' (DbType = Double), @p16='?' (DbType = Int64), @p17='?' (Size = 4000), @p18='?' (DbType = Double), @p19='?' (DbType = Double), @p20='?' (DbType = Int64), @p21='?' (DbType = Int64), @p22='?' (DbType = Int64), @p23='?' (DbType = Int64), @p24='?' (DbType = Int64), @p25='?' (DbType = Int64), @p26='?' (DbType = Int64), @p27='?' (DbType = Int64), @p28='?' (DbType = Int64), @p29='?' (DbType = Double), @p30='?' (DbType = Int64), @p31='?' (DbType = Int64), @p32='?' (Size = 4000), @p33='?' (Size = 450), @p34='?' (DbType = Double), @p35='?' (DbType = Double), @p36='?' (DbType = Int64), @p37='?' (DbType = Int64), @p38='?' (DbType = Int64), @p39='?' (DbType = Int64), @p40='?' (DbType = Int64), @p41='?' (DbType = Int64), @p42='?' (DbType = Int64), @p43='?' (DbType = Double), @p44='?' (DbType = Int64), @p45='?' (DbType = Double), @p46='?' (DbType = Int64), @p47='?' (Size = 4000), @p48='?' (DbType = Double), @p49='?' (DbType = Double), @p50='?' (DbType = Int64), @p51='?' (DbType = Int64), @p52='?' (DbType = Int64), @p53='?' (DbType = Int64), @p54='?' (DbType = Int64), @p55='?' (DbType = Int64), @p56='?' (DbType = Int64), @p57='?' (DbType = Int64), @p58='?' (DbType = Int64), @p59='?' (DbType = Double), @p60='?' (DbType = Int64), @p61='?' (DbType = Int64), @p62='?' (Size = 4000), @p63='?' (Size = 450), @p64='?' (DbType = Double), @p65='?' (DbType = Double), @p66='?' (DbType = Int64), @p67='?' (DbType = Int64), @p68='?' (DbType = Int64), @p69='?' (DbType = Int64), @p70='?' (DbType = Int64), @p71='?' (DbType = Int64), @p72='?' (DbType = Int64), @p73='?' (DbType = Double), @p74='?' (DbType = Int64), @p75='?' (DbType = Double), @p76='?' (DbType = Int64), @p77='?' (Size = 4000), @p78='?' (DbType = Double), @p79='?' (DbType = Double), @p80='?' (DbType = Int64), @p81='?' (DbType = Int64), @p82='?' (DbType = Int64), @p83='?' (DbType = Int64), @p84='?' (DbType = Int64), @p85='?' (DbType = Int64), @p86='?' (DbType = Int64), @p87='?' (DbType = Int64), @p88='?' (DbType = Int64), @p89='?' (DbType = Double), @p90='?' (DbType = Int64), @p91='?' (DbType = Int64), @p92='?' (Size = 4000), @p93='?' (Size = 450), @p94='?' (DbType = Double), @p95='?' (DbType = Double), @p96='?' (DbType = Int64), @p97='?' (DbType = Int64), @p98='?' (DbType = Int64), @p99='?' (DbType = Int64), @p100='?' (DbType = Int64), @p101='?' (DbType = Int64), @p102='?' (DbType = Int64), @p103='?' (DbType = Double), @p104='?' (DbType = Int64), @p105='?' (DbType = Double), @p106='?' (DbType = Int64), @p107='?' (Size = 4000), @p108='?' (DbType = Double), @p109='?' (DbType = Double), @p110='?' (DbType = Int64), @p111='?' (DbType = Int64), @p112='?' (DbType = Int64), @p113='?' (DbType = Int64), @p114='?' (DbType = Int64), @p115='?' (DbType = Int64), @p116='?' (DbType = Int64), @p117='?' (DbType = Int64), @p118='?' (DbType = Int64), @p119='?' (DbType = Double), @p120='?' (DbType = Int64), @p121='?' (DbType = Int64), @p122='?' (Size = 4000), @p123='?' (Size = 450), @p124='?' (DbType = Double), @p125='?' (DbType = Double), @p126='?' (DbType = Int64), @p127='?' (DbType = Int64), @p128='?' (DbType = Int64), @p129='?' (DbType = Int64), @p130='?' (DbType = Int64), @p131='?' (DbType = Int64), @p132='?' (DbType = Int64), @p133='?' (DbType = Double), @p134='?' (DbType = Int64), @p135='?' (DbType = Double), @p136='?' (DbType = Int64), @p137='?' (Size = 4000), @p138='?' (DbType = Double), @p139='?' (DbType = Double), @p140='?' (DbType = Int64), @p141='?' (DbType = Int64), @p142='?' (DbType = Int64), @p143='?' (DbType = Int64), @p144='?' (DbType = Int64), @p145='?' (DbType = Int64), @p146='?' (DbType = Int64), @p147='?' (DbType = Int64), @p148='?' (DbType = Int64), @p149='?' (DbType = Double), @p150='?' (DbType = Int64), @p151='?' (DbType = Int64), @p152='?' (Size = 4000), @p153='?' (Size = 450), @p154='?' (DbType = Double), @p155='?' (DbType = Double), @p156='?' (DbType = Int64), @p157='?' (DbType = Int64), @p158='?' (DbType = Int64), @p159='?' (DbType = Int64), @p160='?' (DbType = Int64), @p161='?' (DbType = Int64), @p162='?' (DbType = Int64), @p163='?' (DbType = Double), @p164='?' (DbType = Int64), @p165='?' (DbType = Double), @p166='?' (DbType = Int64), @p167='?' (Size = 4000), @p168='?' (DbType = Double), @p169='?' (DbType = Double), @p170='?' (DbType = Int64), @p171='?' (DbType = Int64), @p172='?' (DbType = Int64), @p173='?' (DbType = Int64), @p174='?' (DbType = Int64), @p175='?' (DbType = Int64), @p176='?' (DbType = Int64), @p177='?' (DbType = Int64), @p178='?' (DbType = Int64), @p179='?' (DbType = Double), @p180='?' (DbType = Int64), @p181='?' (DbType = Int64), @p182='?' (Size = 4000), @p183='?' (Size = 450), @p184='?' (DbType = Double), @p185='?' (DbType = Double), @p186='?' (DbType = Int64), @p187='?' (DbType = Int64), @p188='?' (DbType = Int64), @p189='?' (DbType = Int64), @p190='?' (DbType = Int64), @p191='?' (DbType = Int64), @p192='?' (DbType = Int64), @p193='?' (DbType = Double), @p194='?' (DbType = Int64), @p195='?' (DbType = Double), @p196='?' (DbType = Int64), @p197='?' (Size = 4000), @p198='?' (DbType = Double), @p199='?' (DbType = Double), @p200='?' (DbType = Int64), @p201='?' (DbType = Int64), @p202='?' (DbType = Int64), @p203='?' (DbType = Int64), @p204='?' (DbType = Int64), @p205='?' (DbType = Int64), @p206='?' (DbType = Int64), @p207='?' (DbType = Int64), @p208='?' (DbType = Int64), @p209='?' (DbType = Double), @p210='?' (DbType = Int64), @p211='?' (DbType = Int64), @p212='?' (Size = 4000), @p213='?' (Size = 450), @p214='?' (DbType = Double), @p215='?' (DbType = Double), @p216='?' (DbType = Int64), @p217='?' (DbType = Int64), @p218='?' (DbType = Int64), @p219='?' (DbType = Int64), @p220='?' (DbType = Int64), @p221='?' (DbType = Int64), @p222='?' (DbType = Int64), @p223='?' (DbType = Double), @p224='?' (DbType = Int64), @p225='?' (DbType = Double), @p226='?' (DbType = Int64), @p227='?' (Size = 4000), @p228='?' (DbType = Double), @p229='?' (DbType = Double), @p230='?' (DbType = Int64), @p231='?' (DbType = Int64), @p232='?' (DbType = Int64), @p233='?' (DbType = Int64), @p234='?' (DbType = Int64), @p235='?' (DbType = Int64), @p236='?' (DbType = Int64), @p237='?' (DbType = Int64), @p238='?' (DbType = Int64), @p239='?' (DbType = Double), @p240='?' (DbType = Int64), @p241='?' (DbType = Int64), @p242='?' (Size = 4000), @p243='?' (Size = 450), @p244='?' (DbType = Double), @p245='?' (DbType = Double), @p246='?' (DbType = Int64), @p247='?' (DbType = Int64), @p248='?' (DbType = Int64), @p249='?' (DbType = Int64), @p250='?' (DbType = Int64), @p251='?' (DbType = Int64), @p252='?' (DbType = Int64), @p253='?' (DbType = Double), @p254='?' (DbType = Int64), @p255='?' (DbType = Double), @p256='?' (DbType = Int64), @p257='?' (Size = 4000), @p258='?' (DbType = Double), @p259='?' (DbType = Double), @p260='?' (DbType = Int64), @p261='?' (DbType = Int64), @p262='?' (DbType = Int64), @p263='?' (DbType = Int64), @p264='?' (DbType = Int64), @p265='?' (DbType = Int64), @p266='?' (DbType = Int64), @p267='?' (DbType = Int64), @p268='?' (DbType = Int64), @p269='?' (DbType = Double), @p270='?' (DbType = Int64), @p271='?' (DbType = Int64), @p272='?' (Size = 4000), @p273='?' (Size = 450), @p274='?' (DbType = Double), @p275='?' (DbType = Double), @p276='?' (DbType = Int64), @p277='?' (DbType = Int64), @p278='?' (DbType = Int64), @p279='?' (DbType = Int64), @p280='?' (DbType = Int64), @p281='?' (DbType = Int64), @p282='?' (DbType = Int64), @p283='?' (DbType = Double), @p284='?' (DbType = Int64), @p285='?' (DbType = Double), @p286='?' (DbType = Int64), @p287='?' (Size = 4000), @p288='?' (DbType = Double), @p289='?' (DbType = Double), @p290='?' (DbType = Int64), @p291='?' (DbType = Int64), @p292='?' (DbType = Int64), @p293='?' (DbType = Int64), @p294='?' (DbType = Int64), @p295='?' (DbType = Int64), @p296='?' (DbType = Int64), @p297='?' (DbType = Int64), @p298='?' (DbType = Int64), @p299='?' (DbType = Double), @p300='?' (DbType = Int64), @p301='?' (DbType = Int64), @p302='?' (Size = 4000), @p303='?' (Size = 450), @p304='?' (DbType = Double), @p305='?' (DbType = Double), @p306='?' (DbType = Int64), @p307='?' (DbType = Int64), @p308='?' (DbType = Int64), @p309='?' (DbType = Int64), @p310='?' (DbType = Int64), @p311='?' (DbType = Int64), @p312='?' (DbType = Int64), @p313='?' (DbType = Double), @p314='?' (DbType = Int64), @p315='?' (DbType = Double), @p316='?' (DbType = Int64), @p317='?' (Size = 4000), @p318='?' (DbType = Double), @p319='?' (DbType = Double), @p320='?' (DbType = Int64), @p321='?' (DbType = Int64), @p322='?' (DbType = Int64), @p323='?' (DbType = Int64), @p324='?' (DbType = Int64), @p325='?' (DbType = Int64), @p326='?' (DbType = Int64), @p327='?' (DbType = Int64), @p328='?' (DbType = Int64), @p329='?' (DbType = Double), @p330='?' (DbType = Int64), @p331='?' (DbType = Int64), @p332='?' (Size = 4000), @p333='?' (Size = 450), @p334='?' (DbType = Double), @p335='?' (DbType = Double), @p336='?' (DbType = Int64), @p337='?' (DbType = Int64), @p338='?' (DbType = Int64), @p339='?' (DbType = Int64), @p340='?' (DbType = Int64), @p341='?' (DbType = Int64), @p342='?' (DbType = Int64), @p343='?' (DbType = Double), @p344='?' (DbType = Int64), @p345='?' (DbType = Double), @p346='?' (DbType = Int64), @p347='?' (Size = 4000), @p348='?' (DbType = Double), @p349='?' (DbType = Double), @p350='?' (DbType = Int64), @p351='?' (DbType = Int64), @p352='?' (DbType = Int64), @p353='?' (DbType = Int64), @p354='?' (DbType = Int64), @p355='?' (DbType = Int64), @p356='?' (DbType = Int64), @p357='?' (DbType = Int64), @p358='?' (DbType = Int64), @p359='?' (DbType = Double), @p360='?' (DbType = Int64), @p361='?' (DbType = Int64), @p362='?' (Size = 4000), @p363='?' (Size = 450), @p364='?' (DbType = Double), @p365='?' (DbType = Double), @p366='?' (DbType = Int64), @p367='?' (DbType = Int64), @p368='?' (DbType = Int64), @p369='?' (DbType = Int64), @p370='?' (DbType = Int64), @p371='?' (DbType = Int64), @p372='?' (DbType = Int64), @p373='?' (DbType = Double), @p374='?' (DbType = Int64), @p375='?' (DbType = Double), @p376='?' (DbType = Int64), @p377='?' (Size = 4000), @p378='?' (DbType = Double), @p379='?' (DbType = Double), @p380='?' (DbType = Int64), @p381='?' (DbType = Int64), @p382='?' (DbType = Int64), @p383='?' (DbType = Int64), @p384='?' (DbType = Int64), @p385='?' (DbType = Int64), @p386='?' (DbType = Int64), @p387='?' (DbType = Int64), @p388='?' (DbType = Int64), @p389='?' (DbType = Double), @p390='?' (DbType = Int64), @p391='?' (DbType = Int64), @p392='?' (Size = 4000), @p393='?' (Size = 450), @p394='?' (DbType = Double), @p395='?' (DbType = Double), @p396='?' (DbType = Int64), @p397='?' (DbType = Int64), @p398='?' (DbType = Int64), @p399='?' (DbType = Int64), @p400='?' (DbType = Int64), @p401='?' (DbType = Int64), @p402='?' (DbType = Int64), @p403='?' (DbType = Double), @p404='?' (DbType = Int64), @p405='?' (DbType = Double), @p406='?' (DbType = Int64), @p407='?' (Size = 4000), @p408='?' (DbType = Double), @p409='?' (DbType = Double), @p410='?' (DbType = Int64), @p411='?' (DbType = Int64), @p412='?' (DbType = Int64), @p413='?' (DbType = Int64), @p414='?' (DbType = Int64), @p415='?' (DbType = Int64), @p416='?' (DbType = Int64), @p417='?' (DbType = Int64), @p418='?' (DbType = Int64), @p419='?' (DbType = Double), @p420='?' (DbType = Int64), @p421='?' (DbType = Int64), @p422='?' (Size = 4000), @p423='?' (Size = 450), @p424='?' (DbType = Double), @p425='?' (DbType = Double), @p426='?' (DbType = Int64), @p427='?' (DbType = Int64), @p428='?' (DbType = Int64), @p429='?' (DbType = Int64), @p430='?' (DbType = Int64), @p431='?' (DbType = Int64), @p432='?' (DbType = Int64), @p433='?' (DbType = Double), @p434='?' (DbType = Int64), @p435='?' (DbType = Double), @p436='?' (DbType = Int64), @p437='?' (Size = 4000), @p438='?' (DbType = Double), @p439='?' (DbType = Double), @p440='?' (DbType = Int64), @p441='?' (DbType = Int64), @p442='?' (DbType = Int64), @p443='?' (DbType = Int64), @p444='?' (DbType = Int64), @p445='?' (DbType = Int64), @p446='?' (DbType = Int64), @p447='?' (DbType = Int64), @p448='?' (DbType = Int64), @p449='?' (DbType = Double), @p450='?' (DbType = Int64), @p451='?' (DbType = Int64), @p452='?' (Size = 4000), @p453='?' (Size = 450), @p454='?' (DbType = Double), @p455='?' (DbType = Double), @p456='?' (DbType = Int64), @p457='?' (DbType = Int64), @p458='?' (DbType = Int64), @p459='?' (DbType = Int64), @p460='?' (DbType = Int64), @p461='?' (DbType = Int64), @p462='?' (DbType = Int64), @p463='?' (DbType = Double), @p464='?' (DbType = Int64), @p465='?' (DbType = Double), @p466='?' (DbType = Int64), @p467='?' (Size = 4000), @p468='?' (DbType = Double), @p469='?' (DbType = Double), @p470='?' (DbType = Int64), @p471='?' (DbType = Int64), @p472='?' (DbType = Int64), @p473='?' (DbType = Int64), @p474='?' (DbType = Int64), @p475='?' (DbType = Int64), @p476='?' (DbType = Int64), @p477='?' (DbType = Int64), @p478='?' (DbType = Int64), @p479='?' (DbType = Double), @p480='?' (DbType = Int64), @p481='?' (DbType = Int64), @p482='?' (Size = 4000), @p483='?' (Size = 450), @p484='?' (DbType = Double), @p485='?' (DbType = Double), @p486='?' (DbType = Int64), @p487='?' (DbType = Int64), @p488='?' (DbType = Int64), @p489='?' (DbType = Int64), @p490='?' (DbType = Int64), @p491='?' (DbType = Int64), @p492='?' (DbType = Int64), @p493='?' (DbType = Double), @p494='?' (DbType = Int64), @p495='?' (DbType = Double), @p496='?' (DbType = Int64), @p497='?' (Size = 4000), @p498='?' (DbType = Double), @p499='?' (DbType = Double), @p500='?' (DbType = Int64), @p501='?' (DbType = Int64), @p502='?' (DbType = Int64), @p503='?' (DbType = Int64), @p504='?' (DbType = Int64), @p505='?' (DbType = Int64), @p506='?' (DbType = Int64), @p507='?' (DbType = Int64), @p508='?' (DbType = Int64), @p509='?' (DbType = Double), @p510='?' (DbType = Int64), @p511='?' (DbType = Int64), @p512='?' (Size = 4000), @p513='?' (Size = 450), @p514='?' (DbType = Double), @p515='?' (DbType = Double), @p516='?' (DbType = Int64), @p517='?' (DbType = Int64), @p518='?' (DbType = Int64), @p519='?' (DbType = Int64), @p520='?' (DbType = Int64), @p521='?' (DbType = Int64), @p522='?' (DbType = Int64), @p523='?' (DbType = Double), @p524='?' (DbType = Int64), @p525='?' (DbType = Double), @p526='?' (DbType = Int64), @p527='?' (Size = 4000), @p528='?' (DbType = Double), @p529='?' (DbType = Double), @p530='?' (DbType = Int64), @p531='?' (DbType = Int64), @p532='?' (DbType = Int64), @p533='?' (DbType = Int64), @p534='?' (DbType = Int64), @p535='?' (DbType = Int64), @p536='?' (DbType = Int64), @p537='?' (DbType = Int64), @p538='?' (DbType = Int64), @p539='?' (DbType = Double), @p540='?' (DbType = Int64), @p541='?' (DbType = Int64), @p542='?' (Size = 4000), @p543='?' (Size = 450), @p544='?' (DbType = Double), @p545='?' (DbType = Double), @p546='?' (DbType = Int64), @p547='?' (DbType = Int64), @p548='?' (DbType = Int64), @p549='?' (DbType = Int64), @p550='?' (DbType = Int64), @p551='?' (DbType = Int64), @p552='?' (DbType = Int64), @p553='?' (DbType = Double), @p554='?' (DbType = Int64), @p555='?' (DbType = Double), @p556='?' (DbType = Int64), @p557='?' (Size = 4000), @p558='?' (DbType = Double), @p559='?' (DbType = Double), @p560='?' (DbType = Int64), @p561='?' (DbType = Int64), @p562='?' (DbType = Int64), @p563='?' (DbType = Int64), @p564='?' (DbType = Int64), @p565='?' (DbType = Int64), @p566='?' (DbType = Int64), @p567='?' (DbType = Int64), @p568='?' (DbType = Int64), @p569='?' (DbType = Double), @p570='?' (DbType = Int64), @p571='?' (DbType = Int64), @p572='?' (Size = 4000), @p573='?' (Size = 450), @p574='?' (DbType = Double), @p575='?' (DbType = Double), @p576='?' (DbType = Int64), @p577='?' (DbType = Int64), @p578='?' (DbType = Int64), @p579='?' (DbType = Int64), @p580='?' (DbType = Int64), @p581='?' (DbType = Int64), @p582='?' (DbType = Int64), @p583='?' (DbType = Double), @p584='?' (DbType = Int64), @p585='?' (DbType = Double), @p586='?' (DbType = Int64), @p587='?' (Size = 4000), @p588='?' (DbType = Double), @p589='?' (DbType = Double), @p590='?' (DbType = Int64), @p591='?' (DbType = Int64), @p592='?' (DbType = Int64), @p593='?' (DbType = Int64), @p594='?' (DbType = Int64), @p595='?' (DbType = Int64), @p596='?' (DbType = Int64), @p597='?' (DbType = Int64), @p598='?' (DbType = Int64), @p599='?' (DbType = Double), @p600='?' (DbType = Int64), @p601='?' (DbType = Int64), @p602='?' (Size = 4000), @p603='?' (Size = 450), @p604='?' (DbType = Double), @p605='?' (DbType = Double), @p606='?' (DbType = Int64), @p607='?' (DbType = Int64), @p608='?' (DbType = Int64), @p609='?' (DbType = Int64), @p610='?' (DbType = Int64), @p611='?' (DbType = Int64), @p612='?' (DbType = Int64), @p613='?' (DbType = Double), @p614='?' (DbType = Int64), @p615='?' (DbType = Double), @p616='?' (DbType = Int64), @p617='?' (Size = 4000), @p618='?' (DbType = Double), @p619='?' (DbType = Double), @p620='?' (DbType = Int64), @p621='?' (DbType = Int64), @p622='?' (DbType = Int64), @p623='?' (DbType = Int64), @p624='?' (DbType = Int64), @p625='?' (DbType = Int64), @p626='?' (DbType = Int64), @p627='?' (DbType = Int64), @p628='?' (DbType = Int64), @p629='?' (DbType = Double), @p630='?' (DbType = Int64), @p631='?' (DbType = Int64), @p632='?' (Size = 4000), @p633='?' (Size = 450), @p634='?' (DbType = Double), @p635='?' (DbType = Double), @p636='?' (DbType = Int64), @p637='?' (DbType = Int64), @p638='?' (DbType = Int64), @p639='?' (DbType = Int64), @p640='?' (DbType = Int64), @p641='?' (DbType = Int64), @p642='?' (DbType = Int64), @p643='?' (DbType = Double), @p644='?' (DbType = Int64), @p645='?' (DbType = Double), @p646='?' (DbType = Int64), @p647='?' (Size = 4000), @p648='?' (DbType = Double), @p649='?' (DbType = Double), @p650='?' (DbType = Int64), @p651='?' (DbType = Int64), @p652='?' (DbType = Int64), @p653='?' (DbType = Int64), @p654='?' (DbType = Int64), @p655='?' (DbType = Int64), @p656='?' (DbType = Int64), @p657='?' (DbType = Int64), @p658='?' (DbType = Int64), @p659='?' (DbType = Double), @p660='?' (DbType = Int64), @p661='?' (DbType = Int64), @p662='?' (Size = 4000), @p663='?' (Size = 450), @p664='?' (DbType = Double), @p665='?' (DbType = Double), @p666='?' (DbType = Int64), @p667='?' (DbType = Int64), @p668='?' (DbType = Int64), @p669='?' (DbType = Int64), @p670='?' (DbType = Int64), @p671='?' (DbType = Int64), @p672='?' (DbType = Int64), @p673='?' (DbType = Double), @p674='?' (DbType = Int64), @p675='?' (DbType = Double), @p676='?' (DbType = Int64), @p677='?' (Size = 4000), @p678='?' (DbType = Double), @p679='?' (DbType = Double), @p680='?' (DbType = Int64), @p681='?' (DbType = Int64), @p682='?' (DbType = Int64), @p683='?' (DbType = Int64), @p684='?' (DbType = Int64), @p685='?' (DbType = Int64), @p686='?' (DbType = Int64), @p687='?' (DbType = Int64), @p688='?' (DbType = Int64), @p689='?' (DbType = Double), @p690='?' (DbType = Int64), @p691='?' (DbType = Int64), @p692='?' (Size = 4000), @p693='?' (Size = 450), @p694='?' (DbType = Double), @p695='?' (DbType = Double), @p696='?' (DbType = Int64), @p697='?' (DbType = Int64), @p698='?' (DbType = Int64), @p699='?' (DbType = Int64), @p700='?' (DbType = Int64), @p701='?' (DbType = Int64), @p702='?' (DbType = Int64), @p703='?' (DbType = Double), @p704='?' (DbType = Int64), @p705='?' (DbType = Double), @p706='?' (DbType = Int64), @p707='?' (Size = 4000), @p708='?' (DbType = Double), @p709='?' (DbType = Double), @p710='?' (DbType = Int64), @p711='?' (DbType = Int64), @p712='?' (DbType = Int64), @p713='?' (DbType = Int64), @p714='?' (DbType = Int64), @p715='?' (DbType = Int64), @p716='?' (DbType = Int64), @p717='?' (DbType = Int64), @p718='?' (DbType = Int64), @p719='?' (DbType = Double), @p720='?' (DbType = Int64), @p721='?' (DbType = Int64), @p722='?' (Size = 4000), @p723='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
DECLARE @inserted0 TABLE ([Id] int, [_Position] [int]);
MERGE [CashFlowAnnualReport] USING (
VALUES (@p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21, @p22, @p23, @p24, @p25, @p26, @p27, @p28, @p29, @p30, @p31, @p32, @p33, 0),
(@p34, @p35, @p36, @p37, @p38, @p39, @p40, @p41, @p42, @p43, @p44, @p45, @p46, @p47, @p48, @p49, @p50, @p51, @p52, @p53, @p54, @p55, @p56, @p57, @p58, @p59, @p60, @p61, @p62, @p63, 1),
(@p64, @p65, @p66, @p67, @p68, @p69, @p70, @p71, @p72, @p73, @p74, @p75, @p76, @p77, @p78, @p79, @p80, @p81, @p82, @p83, @p84, @p85, @p86, @p87, @p88, @p89, @p90, @p91, @p92, @p93, 2),
(@p94, @p95, @p96, @p97, @p98, @p99, @p100, @p101, @p102, @p103, @p104, @p105, @p106, @p107, @p108, @p109, @p110, @p111, @p112, @p113, @p114, @p115, @p116, @p117, @p118, @p119, @p120, @p121, @p122, @p123, 3),
(@p124, @p125, @p126, @p127, @p128, @p129, @p130, @p131, @p132, @p133, @p134, @p135, @p136, @p137, @p138, @p139, @p140, @p141, @p142, @p143, @p144, @p145, @p146, @p147, @p148, @p149, @p150, @p151, @p152, @p153, 4)) AS i ([CapitalExpenditures], [CashflowFromFinancing], [CashflowFromInvestment], [ChangeInCashAndCashEquivalents], [ChangeInExchangeRate], [ChangeInInventory], [ChangeInOperatingAssets], [ChangeInOperatingLiabilities], [ChangeInReceivables], [DepreciationDepletionAndAmortization], [DividendPayout], [DividendPayoutCommonStock], [DividendPayoutPreferredStock], [FiscalDateEnding], [NetIncome], [OperatingCashFlow], [PaymentsForOperatingActivities], [PaymentsForRepurchaseOfCommonStock], [PaymentsForRepurchaseOfEquity], [PaymentsForRepurchaseOfPreferredStock], [ProceedsFromIssuanceOfCommonStock], [ProceedsFromIssuanceOfLongTermDebtAndCapitalSecuritiesNet], [ProceedsFromIssuanceOfPreferredStock], [ProceedsFromOperatingActivities], [ProceedsFromRepaymentsOfShortTermDebt], [ProceedsFromRepurchaseOfEquity], [ProceedsFromSaleOfTreasuryStock], [ProfitLoss], [ReportedCurrency], [Symbol], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([CapitalExpenditures], [CashflowFromFinancing], [CashflowFromInvestment], [ChangeInCashAndCashEquivalents], [ChangeInExchangeRate], [ChangeInInventory], [ChangeInOperatingAssets], [ChangeInOperatingLiabilities], [ChangeInReceivables], [DepreciationDepletionAndAmortization], [DividendPayout], [DividendPayoutCommonStock], [DividendPayoutPreferredStock], [FiscalDateEnding], [NetIncome], [OperatingCashFlow], [PaymentsForOperatingActivities], [PaymentsForRepurchaseOfCommonStock], [PaymentsForRepurchaseOfEquity], [PaymentsForRepurchaseOfPreferredStock], [ProceedsFromIssuanceOfCommonStock], [ProceedsFromIssuanceOfLongTermDebtAndCapitalSecuritiesNet], [ProceedsFromIssuanceOfPreferredStock], [ProceedsFromOperatingActivities], [ProceedsFromRepaymentsOfShortTermDebt], [ProceedsFromRepurchaseOfEquity], [ProceedsFromSaleOfTreasuryStock], [ProfitLoss], [ReportedCurrency], [Symbol])
VALUES (i.[CapitalExpenditures], i.[CashflowFromFinancing], i.[CashflowFromInvestment], i.[ChangeInCashAndCashEquivalents], i.[ChangeInExchangeRate], i.[ChangeInInventory], i.[ChangeInOperatingAssets], i.[ChangeInOperatingLiabilities], i.[ChangeInReceivables], i.[DepreciationDepletionAndAmortization], i.[DividendPayout], i.[DividendPayoutCommonStock], i.[DividendPayoutPreferredStock], i.[FiscalDateEnding], i.[NetIncome], i.[OperatingCashFlow], i.[PaymentsForOperatingActivities], i.[PaymentsForRepurchaseOfCommonStock], i.[PaymentsForRepurchaseOfEquity], i.[PaymentsForRepurchaseOfPreferredStock], i.[ProceedsFromIssuanceOfCommonStock], i.[ProceedsFromIssuanceOfLongTermDebtAndCapitalSecuritiesNet], i.[ProceedsFromIssuanceOfPreferredStock], i.[ProceedsFromOperatingActivities], i.[ProceedsFromRepaymentsOfShortTermDebt], i.[ProceedsFromRepurchaseOfEquity], i.[ProceedsFromSaleOfTreasuryStock], i.[ProfitLoss], i.[ReportedCurrency], i.[Symbol])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted0;

SELECT [i].[Id] FROM @inserted0 i
ORDER BY [i].[_Position];

DECLARE @inserted5 TABLE ([Id] int, [_Position] [int]);
MERGE [CashFlowQuarterlyReport] USING (
VALUES (@p154, @p155, @p156, @p157, @p158, @p159, @p160, @p161, @p162, @p163, @p164, @p165, @p166, @p167, @p168, @p169, @p170, @p171, @p172, @p173, @p174, @p175, @p176, @p177, @p178, @p179, @p180, @p181, @p182, @p183, 0),
(@p184, @p185, @p186, @p187, @p188, @p189, @p190, @p191, @p192, @p193, @p194, @p195, @p196, @p197, @p198, @p199, @p200, @p201, @p202, @p203, @p204, @p205, @p206, @p207, @p208, @p209, @p210, @p211, @p212, @p213, 1),
(@p214, @p215, @p216, @p217, @p218, @p219, @p220, @p221, @p222, @p223, @p224, @p225, @p226, @p227, @p228, @p229, @p230, @p231, @p232, @p233, @p234, @p235, @p236, @p237, @p238, @p239, @p240, @p241, @p242, @p243, 2),
(@p244, @p245, @p246, @p247, @p248, @p249, @p250, @p251, @p252, @p253, @p254, @p255, @p256, @p257, @p258, @p259, @p260, @p261, @p262, @p263, @p264, @p265, @p266, @p267, @p268, @p269, @p270, @p271, @p272, @p273, 3),
(@p274, @p275, @p276, @p277, @p278, @p279, @p280, @p281, @p282, @p283, @p284, @p285, @p286, @p287, @p288, @p289, @p290, @p291, @p292, @p293, @p294, @p295, @p296, @p297, @p298, @p299, @p300, @p301, @p302, @p303, 4),
(@p304, @p305, @p306, @p307, @p308, @p309, @p310, @p311, @p312, @p313, @p314, @p315, @p316, @p317, @p318, @p319, @p320, @p321, @p322, @p323, @p324, @p325, @p326, @p327, @p328, @p329, @p330, @p331, @p332, @p333, 5),
(@p334, @p335, @p336, @p337, @p338, @p339, @p340, @p341, @p342, @p343, @p344, @p345, @p346, @p347, @p348, @p349, @p350, @p351, @p352, @p353, @p354, @p355, @p356, @p357, @p358, @p359, @p360, @p361, @p362, @p363, 6),
(@p364, @p365, @p366, @p367, @p368, @p369, @p370, @p371, @p372, @p373, @p374, @p375, @p376, @p377, @p378, @p379, @p380, @p381, @p382, @p383, @p384, @p385, @p386, @p387, @p388, @p389, @p390, @p391, @p392, @p393, 7),
(@p394, @p395, @p396, @p397, @p398, @p399, @p400, @p401, @p402, @p403, @p404, @p405, @p406, @p407, @p408, @p409, @p410, @p411, @p412, @p413, @p414, @p415, @p416, @p417, @p418, @p419, @p420, @p421, @p422, @p423, 8),
(@p424, @p425, @p426, @p427, @p428, @p429, @p430, @p431, @p432, @p433, @p434, @p435, @p436, @p437, @p438, @p439, @p440, @p441, @p442, @p443, @p444, @p445, @p446, @p447, @p448, @p449, @p450, @p451, @p452, @p453, 9),
(@p454, @p455, @p456, @p457, @p458, @p459, @p460, @p461, @p462, @p463, @p464, @p465, @p466, @p467, @p468, @p469, @p470, @p471, @p472, @p473, @p474, @p475, @p476, @p477, @p478, @p479, @p480, @p481, @p482, @p483, 10),
(@p484, @p485, @p486, @p487, @p488, @p489, @p490, @p491, @p492, @p493, @p494, @p495, @p496, @p497, @p498, @p499, @p500, @p501, @p502, @p503, @p504, @p505, @p506, @p507, @p508, @p509, @p510, @p511, @p512, @p513, 11),
(@p514, @p515, @p516, @p517, @p518, @p519, @p520, @p521, @p522, @p523, @p524, @p525, @p526, @p527, @p528, @p529, @p530, @p531, @p532, @p533, @p534, @p535, @p536, @p537, @p538, @p539, @p540, @p541, @p542, @p543, 12),
(@p544, @p545, @p546, @p547, @p548, @p549, @p550, @p551, @p552, @p553, @p554, @p555, @p556, @p557, @p558, @p559, @p560, @p561, @p562, @p563, @p564, @p565, @p566, @p567, @p568, @p569, @p570, @p571, @p572, @p573, 13),
(@p574, @p575, @p576, @p577, @p578, @p579, @p580, @p581, @p582, @p583, @p584, @p585, @p586, @p587, @p588, @p589, @p590, @p591, @p592, @p593, @p594, @p595, @p596, @p597, @p598, @p599, @p600, @p601, @p602, @p603, 14),
(@p604, @p605, @p606, @p607, @p608, @p609, @p610, @p611, @p612, @p613, @p614, @p615, @p616, @p617, @p618, @p619, @p620, @p621, @p622, @p623, @p624, @p625, @p626, @p627, @p628, @p629, @p630, @p631, @p632, @p633, 15),
(@p634, @p635, @p636, @p637, @p638, @p639, @p640, @p641, @p642, @p643, @p644, @p645, @p646, @p647, @p648, @p649, @p650, @p651, @p652, @p653, @p654, @p655, @p656, @p657, @p658, @p659, @p660, @p661, @p662, @p663, 16),
(@p664, @p665, @p666, @p667, @p668, @p669, @p670, @p671, @p672, @p673, @p674, @p675, @p676, @p677, @p678, @p679, @p680, @p681, @p682, @p683, @p684, @p685, @p686, @p687, @p688, @p689, @p690, @p691, @p692, @p693, 17),
(@p694, @p695, @p696, @p697, @p698, @p699, @p700, @p701, @p702, @p703, @p704, @p705, @p706, @p707, @p708, @p709, @p710, @p711, @p712, @p713, @p714, @p715, @p716, @p717, @p718, @p719, @p720, @p721, @p722, @p723, 18)) AS i ([CapitalExpenditures], [CashflowFromFinancing], [CashflowFromInvestment], [ChangeInCashAndCashEquivalents], [ChangeInExchangeRate], [ChangeInInventory], [ChangeInOperatingAssets], [ChangeInOperatingLiabilities], [ChangeInReceivables], [DepreciationDepletionAndAmortization], [DividendPayout], [DividendPayoutCommonStock], [DividendPayoutPreferredStock], [FiscalDateEnding], [NetIncome], [OperatingCashFlow], [PaymentsForOperatingActivities], [PaymentsForRepurchaseOfCommonStock], [PaymentsForRepurchaseOfEquity], [PaymentsForRepurchaseOfPreferredStock], [ProceedsFromIssuanceOfCommonStock], [ProceedsFromIssuanceOfLongTermDebtAndCapitalSecuritiesNet], [ProceedsFromIssuanceOfPreferredStock], [ProceedsFromOperatingActivities], [ProceedsFromRepaymentsOfShortTermDebt], [ProceedsFromRepurchaseOfEquity], [ProceedsFromSaleOfTreasuryStock], [ProfitLoss], [ReportedCurrency], [Symbol], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([CapitalExpenditures], [CashflowFromFinancing], [CashflowFromInvestment], [ChangeInCashAndCashEquivalents], [ChangeInExchangeRate], [ChangeInInventory], [ChangeInOperatingAssets], [ChangeInOperatingLiabilities], [ChangeInReceivables], [DepreciationDepletionAndAmortization], [DividendPayout], [DividendPayoutCommonStock], [DividendPayoutPreferredStock], [FiscalDateEnding], [NetIncome], [OperatingCashFlow], [PaymentsForOperatingActivities], [PaymentsForRepurchaseOfCommonStock], [PaymentsForRepurchaseOfEquity], [PaymentsForRepurchaseOfPreferredStock], [ProceedsFromIssuanceOfCommonStock], [ProceedsFromIssuanceOfLongTermDebtAndCapitalSecuritiesNet], [ProceedsFromIssuanceOfPreferredStock], [ProceedsFromOperatingActivities], [ProceedsFromRepaymentsOfShortTermDebt], [ProceedsFromRepurchaseOfEquity], [ProceedsFromSaleOfTreasuryStock], [ProfitLoss], [ReportedCurrency], [Symbol])
VALUES (i.[CapitalExpenditures], i.[CashflowFromFinancing], i.[CashflowFromInvestment], i.[ChangeInCashAndCashEquivalents], i.[ChangeInExchangeRate], i.[ChangeInInventory], i.[ChangeInOperatingAssets], i.[ChangeInOperatingLiabilities], i.[ChangeInReceivables], i.[DepreciationDepletionAndAmortization], i.[DividendPayout], i.[DividendPayoutCommonStock], i.[DividendPayoutPreferredStock], i.[FiscalDateEnding], i.[NetIncome], i.[OperatingCashFlow], i.[PaymentsForOperatingActivities], i.[PaymentsForRepurchaseOfCommonStock], i.[PaymentsForRepurchaseOfEquity], i.[PaymentsForRepurchaseOfPreferredStock], i.[ProceedsFromIssuanceOfCommonStock], i.[ProceedsFromIssuanceOfLongTermDebtAndCapitalSecuritiesNet], i.[ProceedsFromIssuanceOfPreferredStock], i.[ProceedsFromOperatingActivities], i.[ProceedsFromRepaymentsOfShortTermDebt], i.[ProceedsFromRepurchaseOfEquity], i.[ProceedsFromSaleOfTreasuryStock], i.[ProfitLoss], i.[ReportedCurrency], i.[Symbol])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted5;

SELECT [i].[Id] FROM @inserted5 i
ORDER BY [i].[_Position];
2022-05-12 01:02:27.203 +03:00 [INF] AddOrUpdate run successful.
2022-05-12 01:02:51.872 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CompanyOverview with Symbol BKCH
2022-05-12 01:02:51.876 +03:00 [INF] Generating URI for OVERVIEW with params: symbol: BKCH
2022-05-12 01:02:51.876 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=OVERVIEW&symbol=BKCH
2022-05-12 01:02:51.877 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=OVERVIEW&symbol=BKCH".
2022-05-12 01:02:52.112 +03:00 [INF] Response has success status code
2022-05-12 01:02:52.112 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.CompanyOverview for symbol BKCH
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyOverview(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 116
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:02:53.763 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.Earnings with Symbol AVY
2022-05-12 01:02:53.767 +03:00 [INF] Generating URI for EARNINGS with params: symbol: AVY
2022-05-12 01:02:53.768 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=EARNINGS&symbol=AVY
2022-05-12 01:02:53.768 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=EARNINGS&symbol=AVY".
2022-05-12 01:02:53.997 +03:00 [INF] Response has success status code
2022-05-12 01:02:53.998 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.Earnings for symbol AVY
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyEarnings(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 142
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:02:54.863 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.BalanceSheet with Symbol BECO
2022-05-12 01:02:54.865 +03:00 [INF] Generating URI for BALANCE_SHEET with params: symbol: BECO
2022-05-12 01:02:54.866 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BECO
2022-05-12 01:02:54.866 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BECO".
2022-05-12 01:02:54.991 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.IncomeStatement with Symbol AUBAP
2022-05-12 01:02:54.993 +03:00 [INF] Generating URI for INCOME_STATEMENT with params: symbol: AUBAP
2022-05-12 01:02:54.993 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=INCOME_STATEMENT&symbol=AUBAP
2022-05-12 01:02:54.994 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=INCOME_STATEMENT&symbol=AUBAP".
2022-05-12 01:02:55.083 +03:00 [INF] Response has success status code
2022-05-12 01:02:55.083 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.BalanceSheet for symbol BECO
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetBalanceSheet(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 82
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:02:55.207 +03:00 [INF] Response has success status code
2022-05-12 01:02:55.208 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.IncomeStatement for symbol AUBAP
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetIncomeStatement(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 69
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:02:57.215 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CashFlow with Symbol ATNI
2022-05-12 01:02:57.218 +03:00 [INF] Generating URI for CASH_FLOW with params: symbol: ATNI
2022-05-12 01:02:57.219 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=CASH_FLOW&symbol=ATNI
2022-05-12 01:02:57.219 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=CASH_FLOW&symbol=ATNI".
2022-05-12 01:02:57.440 +03:00 [INF] Response has success status code
2022-05-12 01:02:57.441 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.CashFlow for symbol ATNI
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCashFlow(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 96
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:03:22.115 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CompanyOverview with Symbol BKD
2022-05-12 01:03:22.118 +03:00 [INF] Generating URI for OVERVIEW with params: symbol: BKD
2022-05-12 01:03:22.119 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=OVERVIEW&symbol=BKD
2022-05-12 01:03:22.119 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=OVERVIEW&symbol=BKD".
2022-05-12 01:03:22.376 +03:00 [INF] Response has success status code
2022-05-12 01:03:22.377 +03:00 [INF] Trying to deserialize response.
2022-05-12 01:03:22.377 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.CompanyOverview.
2022-05-12 01:03:22.378 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 01:03:22.442 +03:00 [INF] Executed DbCommand (63ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__entity_Symbol_0
2022-05-12 01:03:22.444 +03:00 [INF] Entity does not exist. Adding to DB.
2022-05-12 01:03:22.461 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (Size = 4000), @p2='?' (DbType = Double), @p3='?' (Size = 4000), @p4='?' (DbType = Double), @p5='?' (DbType = Double), @p6='?' (DbType = Int64), @p7='?' (Size = 4000), @p8='?' (Size = 4000), @p9='?' (Size = 4000), @p10='?' (DbType = Double), @p11='?' (DbType = DateTime2), @p12='?' (DbType = Double), @p13='?' (DbType = Double), @p14='?' (DbType = Int64), @p15='?' (DbType = Double), @p16='?' (DbType = Double), @p17='?' (DbType = Double), @p18='?' (DbType = DateTime2), @p19='?' (Size = 4000), @p20='?' (DbType = Boolean), @p21='?' (Size = 4000), @p22='?' (DbType = Double), @p23='?' (DbType = Int64), @p24='?' (Size = 4000), @p25='?' (DbType = DateTime2), @p26='?' (DbType = DateTime2), @p27='?' (DbType = DateTime2), @p28='?' (DbType = Int64), @p29='?' (Size = 4000), @p30='?' (DbType = Double), @p31='?' (DbType = Double), @p32='?' (DbType = Double), @p33='?' (DbType = Double), @p34='?' (DbType = Double), @p35='?' (DbType = Double), @p36='?' (DbType = Double), @p37='?' (DbType = Double), @p38='?' (DbType = Double), @p39='?' (DbType = Double), @p40='?' (DbType = Double), @p41='?' (DbType = Int64), @p42='?' (Size = 4000), @p43='?' (DbType = Int64), @p44='?' (DbType = Double), @p45='?' (DbType = Double), @p46='?' (DbType = Double), @p47='?' (DbType = Double), @p48='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [CompanyOverviews] ([Symbol], [Address], [AnalystTargetPrice], [AssetType], [Beta], [BookValue], [CIK], [Country], [Currency], [Description], [DilutedEPSTTM], [DividendDate], [DividendPerShare], [DividendYield], [EBITDA], [EPS], [EVToEBITDA], [EVToRevenue], [ExDividendDate], [Exchange], [ExistInApi], [FiscalYearEnd], [ForwardPE], [GrossProfitTTM], [Industry], [LastApiRefresh], [LastLocalRefresh], [LatestQuarter], [MarketCapitalization], [Name], [OperatingMarginTTM], [PEGRatio], [PERatio], [PriceToBookRatio], [PriceToSalesRatioTTM], [ProfitMargin], [QuarterlyEarningsGrowthYOY], [QuarterlyRevenueGrowthYOY], [ReturnOnAssetsTTM], [ReturnOnEquityTTM], [RevenuePerShareTTM], [RevenueTTM], [Sector], [SharesOutstanding], [TrailingPE], [_200DayMovingAverage], [_50DayMovingAverage], [_52WeekHigh], [_52WeekLow])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21, @p22, @p23, @p24, @p25, @p26, @p27, @p28, @p29, @p30, @p31, @p32, @p33, @p34, @p35, @p36, @p37, @p38, @p39, @p40, @p41, @p42, @p43, @p44, @p45, @p46, @p47, @p48);
2022-05-12 01:03:22.468 +03:00 [INF] AddOrUpdate run successful.
2022-05-12 01:03:24.000 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.Earnings with Symbol AWAY
2022-05-12 01:03:24.004 +03:00 [INF] Generating URI for EARNINGS with params: symbol: AWAY
2022-05-12 01:03:24.004 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=EARNINGS&symbol=AWAY
2022-05-12 01:03:24.005 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=EARNINGS&symbol=AWAY".
2022-05-12 01:03:24.832 +03:00 [INF] Response has success status code
2022-05-12 01:03:24.833 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 01:03:24.895 +03:00 [INF] Executed DbCommand (61ms) [Parameters=[@__symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__symbol_0
2022-05-12 01:03:24.896 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.Earnings.
2022-05-12 01:03:24.905 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [e].[Symbol], [e].[ExistInApi], [e].[LastApiRefresh], [e].[LastLocalRefresh]
FROM [Earnings] AS [e]
WHERE [e].[Symbol] = @__entity_Symbol_0
2022-05-12 01:03:24.906 +03:00 [INF] Entity does not exist. Adding to DB.
2022-05-12 01:03:24.919 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = Boolean), @p2='?' (DbType = DateTime2), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Earnings] ([Symbol], [ExistInApi], [LastApiRefresh], [LastLocalRefresh])
VALUES (@p0, @p1, @p2, @p3);
2022-05-12 01:03:24.925 +03:00 [INF] AddOrUpdate run successful.
2022-05-12 01:03:24.925 +03:00 [WRN] Alpha Vantage has no SaluteStocksAPI.Models.FundamentalData.Earnings for symbol AWAY
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageEmptyResponse: Response was empty.
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyEarnings(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 142
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:03:25.104 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.BalanceSheet with Symbol BEDU
2022-05-12 01:03:25.108 +03:00 [INF] Generating URI for BALANCE_SHEET with params: symbol: BEDU
2022-05-12 01:03:25.109 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BEDU
2022-05-12 01:03:25.110 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BEDU".
2022-05-12 01:03:25.214 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.IncomeStatement with Symbol AUD
2022-05-12 01:03:25.215 +03:00 [INF] Generating URI for INCOME_STATEMENT with params: symbol: AUD
2022-05-12 01:03:25.216 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=INCOME_STATEMENT&symbol=AUD
2022-05-12 01:03:25.217 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=INCOME_STATEMENT&symbol=AUD".
2022-05-12 01:03:25.570 +03:00 [INF] Response has success status code
2022-05-12 01:03:25.573 +03:00 [INF] Trying to deserialize response.
2022-05-12 01:03:25.574 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 01:03:25.621 +03:00 [INF] Response has success status code
2022-05-12 01:03:25.622 +03:00 [INF] Trying to deserialize response.
2022-05-12 01:03:25.623 +03:00 [ERR] Failed to refresh  entity SaluteStocksAPI.Models.FundamentalData.BalanceSheet with Symbol BEDU
Newtonsoft.Json.JsonSerializationException: Error converting value "87469003.02" to type 'System.Nullable`1[System.Int64]'. Path 'quarterlyReports[10].propertyPlantEquipment', line 616, position 51.
 ---> System.FormatException: Input string was not in a correct format.
   at System.Number.ThrowOverflowOrFormatException(ParsingStatus status, TypeCode type)
   at System.String.System.IConvertible.ToInt64(IFormatProvider provider)
   at System.Convert.ChangeType(Object value, Type conversionType, IFormatProvider provider)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)
   --- End of inner exception stack trace ---
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(IList list, JsonReader reader, JsonArrayContract contract, JsonProperty containerProperty, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, Object existingValue, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)
   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)
   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)
   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value, JsonSerializerSettings settings)
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetBalanceSheet(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 82
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:03:25.629 +03:00 [INF] Executed DbCommand (54ms) [Parameters=[@__symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__symbol_0
2022-05-12 01:03:25.631 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.IncomeStatement.
2022-05-12 01:03:25.643 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [i].[Symbol], [i].[ExistInApi], [i].[LastApiRefresh], [i].[LastLocalRefresh]
FROM [IncomeStatements] AS [i]
WHERE [i].[Symbol] = @__entity_Symbol_0
2022-05-12 01:03:25.644 +03:00 [INF] Entity does not exist. Adding to DB.
2022-05-12 01:03:25.659 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = Boolean), @p2='?' (DbType = DateTime2), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [IncomeStatements] ([Symbol], [ExistInApi], [LastApiRefresh], [LastLocalRefresh])
VALUES (@p0, @p1, @p2, @p3);
2022-05-12 01:03:25.698 +03:00 [INF] Executed DbCommand (37ms) [Parameters=[@p4='?' (DbType = Int64), @p5='?' (DbType = Double), @p6='?' (DbType = Double), @p7='?' (DbType = Int64), @p8='?' (DbType = Int64), @p9='?' (DbType = Int64), @p10='?' (DbType = Double), @p11='?' (DbType = DateTime2), @p12='?' (DbType = Double), @p13='?' (DbType = Double), @p14='?' (DbType = Int64), @p15='?' (DbType = Int64), @p16='?' (DbType = Double), @p17='?' (DbType = Int64), @p18='?' (DbType = Int64), @p19='?' (DbType = Double), @p20='?' (DbType = Double), @p21='?' (DbType = Double), @p22='?' (DbType = Int64), @p23='?' (DbType = Double), @p24='?' (DbType = Double), @p25='?' (DbType = Int64), @p26='?' (Size = 4000), @p27='?' (DbType = Int64), @p28='?' (DbType = Double), @p29='?' (Size = 450), @p30='?' (DbType = Int64), @p31='?' (DbType = Int64), @p32='?' (DbType = Double), @p33='?' (DbType = Double), @p34='?' (DbType = Int64), @p35='?' (DbType = Int64), @p36='?' (DbType = Int64), @p37='?' (DbType = Double), @p38='?' (DbType = DateTime2), @p39='?' (DbType = Double), @p40='?' (DbType = Double), @p41='?' (DbType = Int64), @p42='?' (DbType = Int64), @p43='?' (DbType = Double), @p44='?' (DbType = Int64), @p45='?' (DbType = Int64), @p46='?' (DbType = Double), @p47='?' (DbType = Double), @p48='?' (DbType = Double), @p49='?' (DbType = Int64), @p50='?' (DbType = Double), @p51='?' (DbType = Double), @p52='?' (DbType = Int64), @p53='?' (Size = 4000), @p54='?' (DbType = Int64), @p55='?' (DbType = Double), @p56='?' (Size = 450), @p57='?' (DbType = Int64), @p58='?' (DbType = Int64), @p59='?' (DbType = Double), @p60='?' (DbType = Double), @p61='?' (DbType = Int64), @p62='?' (DbType = Int64), @p63='?' (DbType = Int64), @p64='?' (DbType = Double), @p65='?' (DbType = DateTime2), @p66='?' (DbType = Double), @p67='?' (DbType = Double), @p68='?' (DbType = Int64), @p69='?' (DbType = Int64), @p70='?' (DbType = Double), @p71='?' (DbType = Int64), @p72='?' (DbType = Int64), @p73='?' (DbType = Double), @p74='?' (DbType = Double), @p75='?' (DbType = Double), @p76='?' (DbType = Int64), @p77='?' (DbType = Double), @p78='?' (DbType = Double), @p79='?' (DbType = Int64), @p80='?' (Size = 4000), @p81='?' (DbType = Int64), @p82='?' (DbType = Double), @p83='?' (Size = 450), @p84='?' (DbType = Int64), @p85='?' (DbType = Int64), @p86='?' (DbType = Double), @p87='?' (DbType = Double), @p88='?' (DbType = Int64), @p89='?' (DbType = Int64), @p90='?' (DbType = Int64), @p91='?' (DbType = Double), @p92='?' (DbType = DateTime2), @p93='?' (DbType = Double), @p94='?' (DbType = Double), @p95='?' (DbType = Int64), @p96='?' (DbType = Int64), @p97='?' (DbType = Double), @p98='?' (DbType = Int64), @p99='?' (DbType = Int64), @p100='?' (DbType = Double), @p101='?' (DbType = Double), @p102='?' (DbType = Double), @p103='?' (DbType = Int64), @p104='?' (DbType = Double), @p105='?' (DbType = Double), @p106='?' (DbType = Int64), @p107='?' (Size = 4000), @p108='?' (DbType = Int64), @p109='?' (DbType = Double), @p110='?' (Size = 450), @p111='?' (DbType = Int64), @p112='?' (DbType = Int64), @p113='?' (DbType = Double), @p114='?' (DbType = Double), @p115='?' (DbType = Int64), @p116='?' (DbType = Int64), @p117='?' (DbType = Int64), @p118='?' (DbType = Double), @p119='?' (DbType = DateTime2), @p120='?' (DbType = Double), @p121='?' (DbType = Double), @p122='?' (DbType = Int64), @p123='?' (DbType = Int64), @p124='?' (DbType = Double), @p125='?' (DbType = Int64), @p126='?' (DbType = Int64), @p127='?' (DbType = Double), @p128='?' (DbType = Double), @p129='?' (DbType = Double), @p130='?' (DbType = Int64), @p131='?' (DbType = Double), @p132='?' (DbType = Double), @p133='?' (DbType = Int64), @p134='?' (Size = 4000), @p135='?' (DbType = Int64), @p136='?' (DbType = Double), @p137='?' (Size = 450), @p138='?' (DbType = Int64), @p139='?' (DbType = Int64), @p140='?' (DbType = Double), @p141='?' (DbType = Double), @p142='?' (DbType = Int64), @p143='?' (DbType = Int64), @p144='?' (DbType = Int64), @p145='?' (DbType = Double), @p146='?' (DbType = DateTime2), @p147='?' (DbType = Double), @p148='?' (DbType = Double), @p149='?' (DbType = Int64), @p150='?' (DbType = Int64), @p151='?' (DbType = Double), @p152='?' (DbType = Int64), @p153='?' (DbType = Int64), @p154='?' (DbType = Double), @p155='?' (DbType = Double), @p156='?' (DbType = Double), @p157='?' (DbType = Int64), @p158='?' (DbType = Double), @p159='?' (DbType = Double), @p160='?' (DbType = Int64), @p161='?' (Size = 4000), @p162='?' (DbType = Int64), @p163='?' (DbType = Double), @p164='?' (Size = 450), @p165='?' (DbType = Int64), @p166='?' (DbType = Int64), @p167='?' (DbType = Double), @p168='?' (DbType = Double), @p169='?' (DbType = Int64), @p170='?' (DbType = Int64), @p171='?' (DbType = Int64), @p172='?' (DbType = Double), @p173='?' (DbType = DateTime2), @p174='?' (DbType = Double), @p175='?' (DbType = Double), @p176='?' (DbType = Int64), @p177='?' (DbType = Int64), @p178='?' (DbType = Double), @p179='?' (DbType = Int64), @p180='?' (DbType = Int64), @p181='?' (DbType = Double), @p182='?' (DbType = Double), @p183='?' (DbType = Double), @p184='?' (DbType = Int64), @p185='?' (DbType = Double), @p186='?' (DbType = Double), @p187='?' (DbType = Int64), @p188='?' (Size = 4000), @p189='?' (DbType = Int64), @p190='?' (DbType = Double), @p191='?' (Size = 450), @p192='?' (DbType = Int64), @p193='?' (DbType = Int64), @p194='?' (DbType = Double), @p195='?' (DbType = Double), @p196='?' (DbType = Int64), @p197='?' (DbType = Int64), @p198='?' (DbType = Int64), @p199='?' (DbType = Double), @p200='?' (DbType = DateTime2), @p201='?' (DbType = Double), @p202='?' (DbType = Double), @p203='?' (DbType = Int64), @p204='?' (DbType = Int64), @p205='?' (DbType = Double), @p206='?' (DbType = Int64), @p207='?' (DbType = Int64), @p208='?' (DbType = Double), @p209='?' (DbType = Double), @p210='?' (DbType = Double), @p211='?' (DbType = Int64), @p212='?' (DbType = Double), @p213='?' (DbType = Double), @p214='?' (DbType = Int64), @p215='?' (Size = 4000), @p216='?' (DbType = Int64), @p217='?' (DbType = Double), @p218='?' (Size = 450), @p219='?' (DbType = Int64), @p220='?' (DbType = Int64), @p221='?' (DbType = Double), @p222='?' (DbType = Double), @p223='?' (DbType = Int64), @p224='?' (DbType = Int64), @p225='?' (DbType = Int64), @p226='?' (DbType = Double), @p227='?' (DbType = DateTime2), @p228='?' (DbType = Double), @p229='?' (DbType = Double), @p230='?' (DbType = Int64), @p231='?' (DbType = Int64), @p232='?' (DbType = Double), @p233='?' (DbType = Int64), @p234='?' (DbType = Int64), @p235='?' (DbType = Double), @p236='?' (DbType = Double), @p237='?' (DbType = Double), @p238='?' (DbType = Int64), @p239='?' (DbType = Double), @p240='?' (DbType = Double), @p241='?' (DbType = Int64), @p242='?' (Size = 4000), @p243='?' (DbType = Int64), @p244='?' (DbType = Double), @p245='?' (Size = 450), @p246='?' (DbType = Int64), @p247='?' (DbType = Int64), @p248='?' (DbType = Double), @p249='?' (DbType = Double), @p250='?' (DbType = Int64), @p251='?' (DbType = Int64), @p252='?' (DbType = Int64), @p253='?' (DbType = Double), @p254='?' (DbType = DateTime2), @p255='?' (DbType = Double), @p256='?' (DbType = Double), @p257='?' (DbType = Int64), @p258='?' (DbType = Int64), @p259='?' (DbType = Double), @p260='?' (DbType = Int64), @p261='?' (DbType = Int64), @p262='?' (DbType = Double), @p263='?' (DbType = Double), @p264='?' (DbType = Double), @p265='?' (DbType = Int64), @p266='?' (DbType = Double), @p267='?' (DbType = Double), @p268='?' (DbType = Int64), @p269='?' (Size = 4000), @p270='?' (DbType = Int64), @p271='?' (DbType = Double), @p272='?' (Size = 450), @p273='?' (DbType = Int64), @p274='?' (DbType = Int64), @p275='?' (DbType = Double), @p276='?' (DbType = Double), @p277='?' (DbType = Int64), @p278='?' (DbType = Int64), @p279='?' (DbType = Int64), @p280='?' (DbType = Double), @p281='?' (DbType = DateTime2), @p282='?' (DbType = Double), @p283='?' (DbType = Double), @p284='?' (DbType = Int64), @p285='?' (DbType = Int64), @p286='?' (DbType = Double), @p287='?' (DbType = Int64), @p288='?' (DbType = Int64), @p289='?' (DbType = Double), @p290='?' (DbType = Double), @p291='?' (DbType = Double), @p292='?' (DbType = Int64), @p293='?' (DbType = Double), @p294='?' (DbType = Double), @p295='?' (DbType = Int64), @p296='?' (Size = 4000), @p297='?' (DbType = Int64), @p298='?' (DbType = Double), @p299='?' (Size = 450), @p300='?' (DbType = Int64), @p301='?' (DbType = Int64), @p302='?' (DbType = Double), @p303='?' (DbType = Double), @p304='?' (DbType = Int64), @p305='?' (DbType = Int64), @p306='?' (DbType = Int64), @p307='?' (DbType = Double), @p308='?' (DbType = DateTime2), @p309='?' (DbType = Double), @p310='?' (DbType = Double), @p311='?' (DbType = Int64), @p312='?' (DbType = Int64), @p313='?' (DbType = Double), @p314='?' (DbType = Int64), @p315='?' (DbType = Int64), @p316='?' (DbType = Double), @p317='?' (DbType = Double), @p318='?' (DbType = Double), @p319='?' (DbType = Int64), @p320='?' (DbType = Double), @p321='?' (DbType = Double), @p322='?' (DbType = Int64), @p323='?' (Size = 4000), @p324='?' (DbType = Int64), @p325='?' (DbType = Double), @p326='?' (Size = 450), @p327='?' (DbType = Int64), @p328='?' (DbType = Int64), @p329='?' (DbType = Double), @p330='?' (DbType = Double), @p331='?' (DbType = Int64), @p332='?' (DbType = Int64), @p333='?' (DbType = Int64), @p334='?' (DbType = Double), @p335='?' (DbType = DateTime2), @p336='?' (DbType = Double), @p337='?' (DbType = Double), @p338='?' (DbType = Int64), @p339='?' (DbType = Int64), @p340='?' (DbType = Double), @p341='?' (DbType = Int64), @p342='?' (DbType = Int64), @p343='?' (DbType = Double), @p344='?' (DbType = Double), @p345='?' (DbType = Double), @p346='?' (DbType = Int64), @p347='?' (DbType = Double), @p348='?' (DbType = Double), @p349='?' (DbType = Int64), @p350='?' (Size = 4000), @p351='?' (DbType = Int64), @p352='?' (DbType = Double), @p353='?' (Size = 450), @p354='?' (DbType = Int64), @p355='?' (DbType = Int64), @p356='?' (DbType = Double), @p357='?' (DbType = Double), @p358='?' (DbType = Int64), @p359='?' (DbType = Int64), @p360='?' (DbType = Int64), @p361='?' (DbType = Double), @p362='?' (DbType = DateTime2), @p363='?' (DbType = Double), @p364='?' (DbType = Double), @p365='?' (DbType = Int64), @p366='?' (DbType = Int64), @p367='?' (DbType = Double), @p368='?' (DbType = Int64), @p369='?' (DbType = Int64), @p370='?' (DbType = Double), @p371='?' (DbType = Double), @p372='?' (DbType = Double), @p373='?' (DbType = Int64), @p374='?' (DbType = Double), @p375='?' (DbType = Double), @p376='?' (DbType = Int64), @p377='?' (Size = 4000), @p378='?' (DbType = Int64), @p379='?' (DbType = Double), @p380='?' (Size = 450), @p381='?' (DbType = Int64), @p382='?' (DbType = Int64), @p383='?' (DbType = Double), @p384='?' (DbType = Double), @p385='?' (DbType = Int64), @p386='?' (DbType = Int64), @p387='?' (DbType = Int64), @p388='?' (DbType = Double), @p389='?' (DbType = DateTime2), @p390='?' (DbType = Double), @p391='?' (DbType = Double), @p392='?' (DbType = Int64), @p393='?' (DbType = Int64), @p394='?' (DbType = Double), @p395='?' (DbType = Int64), @p396='?' (DbType = Int64), @p397='?' (DbType = Double), @p398='?' (DbType = Double), @p399='?' (DbType = Double), @p400='?' (DbType = Int64), @p401='?' (DbType = Double), @p402='?' (DbType = Double), @p403='?' (DbType = Int64), @p404='?' (Size = 4000), @p405='?' (DbType = Int64), @p406='?' (DbType = Double), @p407='?' (Size = 450), @p408='?' (DbType = Int64), @p409='?' (DbType = Int64), @p410='?' (DbType = Double), @p411='?' (DbType = Double), @p412='?' (DbType = Int64), @p413='?' (DbType = Int64), @p414='?' (DbType = Int64), @p415='?' (DbType = Double), @p416='?' (DbType = DateTime2), @p417='?' (DbType = Double), @p418='?' (DbType = Double), @p419='?' (DbType = Int64), @p420='?' (DbType = Int64), @p421='?' (DbType = Double), @p422='?' (DbType = Int64), @p423='?' (DbType = Int64), @p424='?' (DbType = Double), @p425='?' (DbType = Double), @p426='?' (DbType = Double), @p427='?' (DbType = Int64), @p428='?' (DbType = Double), @p429='?' (DbType = Double), @p430='?' (DbType = Int64), @p431='?' (Size = 4000), @p432='?' (DbType = Int64), @p433='?' (DbType = Double), @p434='?' (Size = 450), @p435='?' (DbType = Int64), @p436='?' (DbType = Int64), @p437='?' (DbType = Double), @p438='?' (DbType = Double), @p439='?' (DbType = Int64), @p440='?' (DbType = Int64), @p441='?' (DbType = Int64), @p442='?' (DbType = Double), @p443='?' (DbType = DateTime2), @p444='?' (DbType = Double), @p445='?' (DbType = Double), @p446='?' (DbType = Int64), @p447='?' (DbType = Int64), @p448='?' (DbType = Double), @p449='?' (DbType = Int64), @p450='?' (DbType = Int64), @p451='?' (DbType = Double), @p452='?' (DbType = Double), @p453='?' (DbType = Double), @p454='?' (DbType = Int64), @p455='?' (DbType = Double), @p456='?' (DbType = Double), @p457='?' (DbType = Int64), @p458='?' (Size = 4000), @p459='?' (DbType = Int64), @p460='?' (DbType = Double), @p461='?' (Size = 450), @p462='?' (DbType = Int64), @p463='?' (DbType = Int64), @p464='?' (DbType = Double), @p465='?' (DbType = Double), @p466='?' (DbType = Int64), @p467='?' (DbType = Int64), @p468='?' (DbType = Int64), @p469='?' (DbType = Double), @p470='?' (DbType = DateTime2), @p471='?' (DbType = Double), @p472='?' (DbType = Double), @p473='?' (DbType = Int64), @p474='?' (DbType = Int64), @p475='?' (DbType = Double), @p476='?' (DbType = Int64), @p477='?' (DbType = Int64), @p478='?' (DbType = Double), @p479='?' (DbType = Double), @p480='?' (DbType = Double), @p481='?' (DbType = Int64), @p482='?' (DbType = Double), @p483='?' (DbType = Double), @p484='?' (DbType = Int64), @p485='?' (Size = 4000), @p486='?' (DbType = Int64), @p487='?' (DbType = Double), @p488='?' (Size = 450), @p489='?' (DbType = Int64), @p490='?' (DbType = Int64), @p491='?' (DbType = Double), @p492='?' (DbType = Double), @p493='?' (DbType = Int64), @p494='?' (DbType = Int64), @p495='?' (DbType = Int64), @p496='?' (DbType = Double), @p497='?' (DbType = DateTime2), @p498='?' (DbType = Double), @p499='?' (DbType = Double), @p500='?' (DbType = Int64), @p501='?' (DbType = Int64), @p502='?' (DbType = Double), @p503='?' (DbType = Int64), @p504='?' (DbType = Int64), @p505='?' (DbType = Double), @p506='?' (DbType = Double), @p507='?' (DbType = Double), @p508='?' (DbType = Int64), @p509='?' (DbType = Double), @p510='?' (DbType = Double), @p511='?' (DbType = Int64), @p512='?' (Size = 4000), @p513='?' (DbType = Int64), @p514='?' (DbType = Double), @p515='?' (Size = 450), @p516='?' (DbType = Int64), @p517='?' (DbType = Int64), @p518='?' (DbType = Double), @p519='?' (DbType = Double), @p520='?' (DbType = Int64), @p521='?' (DbType = Int64), @p522='?' (DbType = Int64), @p523='?' (DbType = Double), @p524='?' (DbType = DateTime2), @p525='?' (DbType = Double), @p526='?' (DbType = Double), @p527='?' (DbType = Int64), @p528='?' (DbType = Int64), @p529='?' (DbType = Double), @p530='?' (DbType = Int64), @p531='?' (DbType = Int64), @p532='?' (DbType = Double), @p533='?' (DbType = Double), @p534='?' (DbType = Double), @p535='?' (DbType = Int64), @p536='?' (DbType = Double), @p537='?' (DbType = Double), @p538='?' (DbType = Int64), @p539='?' (Size = 4000), @p540='?' (DbType = Int64), @p541='?' (DbType = Double), @p542='?' (Size = 450), @p543='?' (DbType = Int64), @p544='?' (DbType = Int64), @p545='?' (DbType = Double), @p546='?' (DbType = Double), @p547='?' (DbType = Int64), @p548='?' (DbType = Int64), @p549='?' (DbType = Int64), @p550='?' (DbType = Double), @p551='?' (DbType = DateTime2), @p552='?' (DbType = Double), @p553='?' (DbType = Double), @p554='?' (DbType = Int64), @p555='?' (DbType = Int64), @p556='?' (DbType = Double), @p557='?' (DbType = Int64), @p558='?' (DbType = Int64), @p559='?' (DbType = Double), @p560='?' (DbType = Double), @p561='?' (DbType = Double), @p562='?' (DbType = Int64), @p563='?' (DbType = Double), @p564='?' (DbType = Double), @p565='?' (DbType = Int64), @p566='?' (Size = 4000), @p567='?' (DbType = Int64), @p568='?' (DbType = Double), @p569='?' (Size = 450), @p570='?' (DbType = Int64), @p571='?' (DbType = Int64), @p572='?' (DbType = Double), @p573='?' (DbType = Double), @p574='?' (DbType = Int64), @p575='?' (DbType = Int64), @p576='?' (DbType = Int64), @p577='?' (DbType = Double), @p578='?' (DbType = DateTime2), @p579='?' (DbType = Double), @p580='?' (DbType = Double), @p581='?' (DbType = Int64), @p582='?' (DbType = Int64), @p583='?' (DbType = Double), @p584='?' (DbType = Int64), @p585='?' (DbType = Int64), @p586='?' (DbType = Double), @p587='?' (DbType = Double), @p588='?' (DbType = Double), @p589='?' (DbType = Int64), @p590='?' (DbType = Double), @p591='?' (DbType = Double), @p592='?' (DbType = Int64), @p593='?' (Size = 4000), @p594='?' (DbType = Int64), @p595='?' (DbType = Double), @p596='?' (Size = 450), @p597='?' (DbType = Int64), @p598='?' (DbType = Int64), @p599='?' (DbType = Double), @p600='?' (DbType = Double), @p601='?' (DbType = Int64), @p602='?' (DbType = Int64), @p603='?' (DbType = Int64), @p604='?' (DbType = Double), @p605='?' (DbType = DateTime2), @p606='?' (DbType = Double), @p607='?' (DbType = Double), @p608='?' (DbType = Int64), @p609='?' (DbType = Int64), @p610='?' (DbType = Double), @p611='?' (DbType = Int64), @p612='?' (DbType = Int64), @p613='?' (DbType = Double), @p614='?' (DbType = Double), @p615='?' (DbType = Double), @p616='?' (DbType = Int64), @p617='?' (DbType = Double), @p618='?' (DbType = Double), @p619='?' (DbType = Int64), @p620='?' (Size = 4000), @p621='?' (DbType = Int64), @p622='?' (DbType = Double), @p623='?' (Size = 450), @p624='?' (DbType = Int64), @p625='?' (DbType = Int64), @p626='?' (DbType = Double), @p627='?' (DbType = Double), @p628='?' (DbType = Int64), @p629='?' (DbType = Int64), @p630='?' (DbType = Int64), @p631='?' (DbType = Double), @p632='?' (DbType = DateTime2), @p633='?' (DbType = Double), @p634='?' (DbType = Double), @p635='?' (DbType = Int64), @p636='?' (DbType = Int64), @p637='?' (DbType = Double), @p638='?' (DbType = Int64), @p639='?' (DbType = Int64), @p640='?' (DbType = Double), @p641='?' (DbType = Double), @p642='?' (DbType = Double), @p643='?' (DbType = Int64), @p644='?' (DbType = Double), @p645='?' (DbType = Double), @p646='?' (DbType = Int64), @p647='?' (Size = 4000), @p648='?' (DbType = Int64), @p649='?' (DbType = Double), @p650='?' (Size = 450), @p651='?' (DbType = Int64), @p652='?' (DbType = Int64), @p653='?' (DbType = Double), @p654='?' (DbType = Double), @p655='?' (DbType = Int64), @p656='?' (DbType = Int64), @p657='?' (DbType = Int64), @p658='?' (DbType = Double), @p659='?' (DbType = DateTime2), @p660='?' (DbType = Double), @p661='?' (DbType = Double), @p662='?' (DbType = Int64), @p663='?' (DbType = Int64), @p664='?' (DbType = Double), @p665='?' (DbType = Int64), @p666='?' (DbType = Int64), @p667='?' (DbType = Double), @p668='?' (DbType = Double), @p669='?' (DbType = Double), @p670='?' (DbType = Int64), @p671='?' (DbType = Double), @p672='?' (DbType = Double), @p673='?' (DbType = Int64), @p674='?' (Size = 4000), @p675='?' (DbType = Int64), @p676='?' (DbType = Double), @p677='?' (Size = 450), @p678='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
DECLARE @inserted0 TABLE ([Id] int, [_Position] [int]);
MERGE [IncomeStatementAnnualReport] USING (
VALUES (@p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21, @p22, @p23, @p24, @p25, @p26, @p27, @p28, @p29, @p30, 0),
(@p31, @p32, @p33, @p34, @p35, @p36, @p37, @p38, @p39, @p40, @p41, @p42, @p43, @p44, @p45, @p46, @p47, @p48, @p49, @p50, @p51, @p52, @p53, @p54, @p55, @p56, @p57, 1),
(@p58, @p59, @p60, @p61, @p62, @p63, @p64, @p65, @p66, @p67, @p68, @p69, @p70, @p71, @p72, @p73, @p74, @p75, @p76, @p77, @p78, @p79, @p80, @p81, @p82, @p83, @p84, 2),
(@p85, @p86, @p87, @p88, @p89, @p90, @p91, @p92, @p93, @p94, @p95, @p96, @p97, @p98, @p99, @p100, @p101, @p102, @p103, @p104, @p105, @p106, @p107, @p108, @p109, @p110, @p111, 3),
(@p112, @p113, @p114, @p115, @p116, @p117, @p118, @p119, @p120, @p121, @p122, @p123, @p124, @p125, @p126, @p127, @p128, @p129, @p130, @p131, @p132, @p133, @p134, @p135, @p136, @p137, @p138, 4)) AS i ([ComprehensiveIncomeNetOfTax], [CostOfRevenue], [CostofGoodsAndServicesSold], [Depreciation], [DepreciationAndAmortization], [Ebit], [Ebitda], [FiscalDateEnding], [GrossProfit], [IncomeBeforeTax], [IncomeTaxExpense], [InterestAndDebtExpense], [InterestExpense], [InterestIncome], [InvestmentIncomeNet], [NetIncome], [NetIncomeFromContinuingOperations], [NetInterestIncome], [NonInterestIncome], [OperatingExpenses], [OperatingIncome], [OtherNonOperatingIncome], [ReportedCurrency], [ResearchAndDevelopment], [SellingGeneralAndAdministrative], [Symbol], [TotalRevenue], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([ComprehensiveIncomeNetOfTax], [CostOfRevenue], [CostofGoodsAndServicesSold], [Depreciation], [DepreciationAndAmortization], [Ebit], [Ebitda], [FiscalDateEnding], [GrossProfit], [IncomeBeforeTax], [IncomeTaxExpense], [InterestAndDebtExpense], [InterestExpense], [InterestIncome], [InvestmentIncomeNet], [NetIncome], [NetIncomeFromContinuingOperations], [NetInterestIncome], [NonInterestIncome], [OperatingExpenses], [OperatingIncome], [OtherNonOperatingIncome], [ReportedCurrency], [ResearchAndDevelopment], [SellingGeneralAndAdministrative], [Symbol], [TotalRevenue])
VALUES (i.[ComprehensiveIncomeNetOfTax], i.[CostOfRevenue], i.[CostofGoodsAndServicesSold], i.[Depreciation], i.[DepreciationAndAmortization], i.[Ebit], i.[Ebitda], i.[FiscalDateEnding], i.[GrossProfit], i.[IncomeBeforeTax], i.[IncomeTaxExpense], i.[InterestAndDebtExpense], i.[InterestExpense], i.[InterestIncome], i.[InvestmentIncomeNet], i.[NetIncome], i.[NetIncomeFromContinuingOperations], i.[NetInterestIncome], i.[NonInterestIncome], i.[OperatingExpenses], i.[OperatingIncome], i.[OtherNonOperatingIncome], i.[ReportedCurrency], i.[ResearchAndDevelopment], i.[SellingGeneralAndAdministrative], i.[Symbol], i.[TotalRevenue])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted0;

SELECT [i].[Id] FROM @inserted0 i
ORDER BY [i].[_Position];

DECLARE @inserted5 TABLE ([Id] int, [_Position] [int]);
MERGE [IncomeStatementQuarterlyReport] USING (
VALUES (@p139, @p140, @p141, @p142, @p143, @p144, @p145, @p146, @p147, @p148, @p149, @p150, @p151, @p152, @p153, @p154, @p155, @p156, @p157, @p158, @p159, @p160, @p161, @p162, @p163, @p164, @p165, 0),
(@p166, @p167, @p168, @p169, @p170, @p171, @p172, @p173, @p174, @p175, @p176, @p177, @p178, @p179, @p180, @p181, @p182, @p183, @p184, @p185, @p186, @p187, @p188, @p189, @p190, @p191, @p192, 1),
(@p193, @p194, @p195, @p196, @p197, @p198, @p199, @p200, @p201, @p202, @p203, @p204, @p205, @p206, @p207, @p208, @p209, @p210, @p211, @p212, @p213, @p214, @p215, @p216, @p217, @p218, @p219, 2),
(@p220, @p221, @p222, @p223, @p224, @p225, @p226, @p227, @p228, @p229, @p230, @p231, @p232, @p233, @p234, @p235, @p236, @p237, @p238, @p239, @p240, @p241, @p242, @p243, @p244, @p245, @p246, 3),
(@p247, @p248, @p249, @p250, @p251, @p252, @p253, @p254, @p255, @p256, @p257, @p258, @p259, @p260, @p261, @p262, @p263, @p264, @p265, @p266, @p267, @p268, @p269, @p270, @p271, @p272, @p273, 4),
(@p274, @p275, @p276, @p277, @p278, @p279, @p280, @p281, @p282, @p283, @p284, @p285, @p286, @p287, @p288, @p289, @p290, @p291, @p292, @p293, @p294, @p295, @p296, @p297, @p298, @p299, @p300, 5),
(@p301, @p302, @p303, @p304, @p305, @p306, @p307, @p308, @p309, @p310, @p311, @p312, @p313, @p314, @p315, @p316, @p317, @p318, @p319, @p320, @p321, @p322, @p323, @p324, @p325, @p326, @p327, 6),
(@p328, @p329, @p330, @p331, @p332, @p333, @p334, @p335, @p336, @p337, @p338, @p339, @p340, @p341, @p342, @p343, @p344, @p345, @p346, @p347, @p348, @p349, @p350, @p351, @p352, @p353, @p354, 7),
(@p355, @p356, @p357, @p358, @p359, @p360, @p361, @p362, @p363, @p364, @p365, @p366, @p367, @p368, @p369, @p370, @p371, @p372, @p373, @p374, @p375, @p376, @p377, @p378, @p379, @p380, @p381, 8),
(@p382, @p383, @p384, @p385, @p386, @p387, @p388, @p389, @p390, @p391, @p392, @p393, @p394, @p395, @p396, @p397, @p398, @p399, @p400, @p401, @p402, @p403, @p404, @p405, @p406, @p407, @p408, 9),
(@p409, @p410, @p411, @p412, @p413, @p414, @p415, @p416, @p417, @p418, @p419, @p420, @p421, @p422, @p423, @p424, @p425, @p426, @p427, @p428, @p429, @p430, @p431, @p432, @p433, @p434, @p435, 10),
(@p436, @p437, @p438, @p439, @p440, @p441, @p442, @p443, @p444, @p445, @p446, @p447, @p448, @p449, @p450, @p451, @p452, @p453, @p454, @p455, @p456, @p457, @p458, @p459, @p460, @p461, @p462, 11),
(@p463, @p464, @p465, @p466, @p467, @p468, @p469, @p470, @p471, @p472, @p473, @p474, @p475, @p476, @p477, @p478, @p479, @p480, @p481, @p482, @p483, @p484, @p485, @p486, @p487, @p488, @p489, 12),
(@p490, @p491, @p492, @p493, @p494, @p495, @p496, @p497, @p498, @p499, @p500, @p501, @p502, @p503, @p504, @p505, @p506, @p507, @p508, @p509, @p510, @p511, @p512, @p513, @p514, @p515, @p516, 13),
(@p517, @p518, @p519, @p520, @p521, @p522, @p523, @p524, @p525, @p526, @p527, @p528, @p529, @p530, @p531, @p532, @p533, @p534, @p535, @p536, @p537, @p538, @p539, @p540, @p541, @p542, @p543, 14),
(@p544, @p545, @p546, @p547, @p548, @p549, @p550, @p551, @p552, @p553, @p554, @p555, @p556, @p557, @p558, @p559, @p560, @p561, @p562, @p563, @p564, @p565, @p566, @p567, @p568, @p569, @p570, 15),
(@p571, @p572, @p573, @p574, @p575, @p576, @p577, @p578, @p579, @p580, @p581, @p582, @p583, @p584, @p585, @p586, @p587, @p588, @p589, @p590, @p591, @p592, @p593, @p594, @p595, @p596, @p597, 16),
(@p598, @p599, @p600, @p601, @p602, @p603, @p604, @p605, @p606, @p607, @p608, @p609, @p610, @p611, @p612, @p613, @p614, @p615, @p616, @p617, @p618, @p619, @p620, @p621, @p622, @p623, @p624, 17),
(@p625, @p626, @p627, @p628, @p629, @p630, @p631, @p632, @p633, @p634, @p635, @p636, @p637, @p638, @p639, @p640, @p641, @p642, @p643, @p644, @p645, @p646, @p647, @p648, @p649, @p650, @p651, 18),
(@p652, @p653, @p654, @p655, @p656, @p657, @p658, @p659, @p660, @p661, @p662, @p663, @p664, @p665, @p666, @p667, @p668, @p669, @p670, @p671, @p672, @p673, @p674, @p675, @p676, @p677, @p678, 19)) AS i ([ComprehensiveIncomeNetOfTax], [CostOfRevenue], [CostofGoodsAndServicesSold], [Depreciation], [DepreciationAndAmortization], [Ebit], [Ebitda], [FiscalDateEnding], [GrossProfit], [IncomeBeforeTax], [IncomeTaxExpense], [InterestAndDebtExpense], [InterestExpense], [InterestIncome], [InvestmentIncomeNet], [NetIncome], [NetIncomeFromContinuingOperations], [NetInterestIncome], [NonInterestIncome], [OperatingExpenses], [OperatingIncome], [OtherNonOperatingIncome], [ReportedCurrency], [ResearchAndDevelopment], [SellingGeneralAndAdministrative], [Symbol], [TotalRevenue], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([ComprehensiveIncomeNetOfTax], [CostOfRevenue], [CostofGoodsAndServicesSold], [Depreciation], [DepreciationAndAmortization], [Ebit], [Ebitda], [FiscalDateEnding], [GrossProfit], [IncomeBeforeTax], [IncomeTaxExpense], [InterestAndDebtExpense], [InterestExpense], [InterestIncome], [InvestmentIncomeNet], [NetIncome], [NetIncomeFromContinuingOperations], [NetInterestIncome], [NonInterestIncome], [OperatingExpenses], [OperatingIncome], [OtherNonOperatingIncome], [ReportedCurrency], [ResearchAndDevelopment], [SellingGeneralAndAdministrative], [Symbol], [TotalRevenue])
VALUES (i.[ComprehensiveIncomeNetOfTax], i.[CostOfRevenue], i.[CostofGoodsAndServicesSold], i.[Depreciation], i.[DepreciationAndAmortization], i.[Ebit], i.[Ebitda], i.[FiscalDateEnding], i.[GrossProfit], i.[IncomeBeforeTax], i.[IncomeTaxExpense], i.[InterestAndDebtExpense], i.[InterestExpense], i.[InterestIncome], i.[InvestmentIncomeNet], i.[NetIncome], i.[NetIncomeFromContinuingOperations], i.[NetInterestIncome], i.[NonInterestIncome], i.[OperatingExpenses], i.[OperatingIncome], i.[OtherNonOperatingIncome], i.[ReportedCurrency], i.[ResearchAndDevelopment], i.[SellingGeneralAndAdministrative], i.[Symbol], i.[TotalRevenue])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted5;

SELECT [i].[Id] FROM @inserted5 i
ORDER BY [i].[_Position];
2022-05-12 01:03:25.712 +03:00 [INF] AddOrUpdate run successful.
2022-05-12 01:03:27.450 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CashFlow with Symbol ATNX
2022-05-12 01:03:27.452 +03:00 [INF] Generating URI for CASH_FLOW with params: symbol: ATNX
2022-05-12 01:03:27.452 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=CASH_FLOW&symbol=ATNX
2022-05-12 01:03:27.453 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=CASH_FLOW&symbol=ATNX".
2022-05-12 01:03:27.809 +03:00 [INF] Response has success status code
2022-05-12 01:03:27.810 +03:00 [INF] Trying to deserialize response.
2022-05-12 01:03:27.811 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 01:03:27.863 +03:00 [INF] Executed DbCommand (50ms) [Parameters=[@__symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__symbol_0
2022-05-12 01:03:27.864 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.CashFlow.
2022-05-12 01:03:27.872 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[ExistInApi], [c].[LastApiRefresh], [c].[LastLocalRefresh]
FROM [CashFlows] AS [c]
WHERE [c].[Symbol] = @__entity_Symbol_0
2022-05-12 01:03:27.874 +03:00 [INF] Entity does not exist. Adding to DB.
2022-05-12 01:03:27.888 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = Boolean), @p2='?' (DbType = DateTime2), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [CashFlows] ([Symbol], [ExistInApi], [LastApiRefresh], [LastLocalRefresh])
VALUES (@p0, @p1, @p2, @p3);
2022-05-12 01:03:27.953 +03:00 [INF] Executed DbCommand (62ms) [Parameters=[@p4='?' (DbType = Double), @p5='?' (DbType = Double), @p6='?' (DbType = Int64), @p7='?' (DbType = Int64), @p8='?' (DbType = Int64), @p9='?' (DbType = Int64), @p10='?' (DbType = Int64), @p11='?' (DbType = Int64), @p12='?' (DbType = Int64), @p13='?' (DbType = Double), @p14='?' (DbType = Int64), @p15='?' (DbType = Double), @p16='?' (DbType = Int64), @p17='?' (Size = 4000), @p18='?' (DbType = Double), @p19='?' (DbType = Double), @p20='?' (DbType = Int64), @p21='?' (DbType = Int64), @p22='?' (DbType = Int64), @p23='?' (DbType = Int64), @p24='?' (DbType = Int64), @p25='?' (DbType = Int64), @p26='?' (DbType = Int64), @p27='?' (DbType = Int64), @p28='?' (DbType = Int64), @p29='?' (DbType = Double), @p30='?' (DbType = Int64), @p31='?' (DbType = Int64), @p32='?' (Size = 4000), @p33='?' (Size = 450), @p34='?' (DbType = Double), @p35='?' (DbType = Double), @p36='?' (DbType = Int64), @p37='?' (DbType = Int64), @p38='?' (DbType = Int64), @p39='?' (DbType = Int64), @p40='?' (DbType = Int64), @p41='?' (DbType = Int64), @p42='?' (DbType = Int64), @p43='?' (DbType = Double), @p44='?' (DbType = Int64), @p45='?' (DbType = Double), @p46='?' (DbType = Int64), @p47='?' (Size = 4000), @p48='?' (DbType = Double), @p49='?' (DbType = Double), @p50='?' (DbType = Int64), @p51='?' (DbType = Int64), @p52='?' (DbType = Int64), @p53='?' (DbType = Int64), @p54='?' (DbType = Int64), @p55='?' (DbType = Int64), @p56='?' (DbType = Int64), @p57='?' (DbType = Int64), @p58='?' (DbType = Int64), @p59='?' (DbType = Double), @p60='?' (DbType = Int64), @p61='?' (DbType = Int64), @p62='?' (Size = 4000), @p63='?' (Size = 450), @p64='?' (DbType = Double), @p65='?' (DbType = Double), @p66='?' (DbType = Int64), @p67='?' (DbType = Int64), @p68='?' (DbType = Int64), @p69='?' (DbType = Int64), @p70='?' (DbType = Int64), @p71='?' (DbType = Int64), @p72='?' (DbType = Int64), @p73='?' (DbType = Double), @p74='?' (DbType = Int64), @p75='?' (DbType = Double), @p76='?' (DbType = Int64), @p77='?' (Size = 4000), @p78='?' (DbType = Double), @p79='?' (DbType = Double), @p80='?' (DbType = Int64), @p81='?' (DbType = Int64), @p82='?' (DbType = Int64), @p83='?' (DbType = Int64), @p84='?' (DbType = Int64), @p85='?' (DbType = Int64), @p86='?' (DbType = Int64), @p87='?' (DbType = Int64), @p88='?' (DbType = Int64), @p89='?' (DbType = Double), @p90='?' (DbType = Int64), @p91='?' (DbType = Int64), @p92='?' (Size = 4000), @p93='?' (Size = 450), @p94='?' (DbType = Double), @p95='?' (DbType = Double), @p96='?' (DbType = Int64), @p97='?' (DbType = Int64), @p98='?' (DbType = Int64), @p99='?' (DbType = Int64), @p100='?' (DbType = Int64), @p101='?' (DbType = Int64), @p102='?' (DbType = Int64), @p103='?' (DbType = Double), @p104='?' (DbType = Int64), @p105='?' (DbType = Double), @p106='?' (DbType = Int64), @p107='?' (Size = 4000), @p108='?' (DbType = Double), @p109='?' (DbType = Double), @p110='?' (DbType = Int64), @p111='?' (DbType = Int64), @p112='?' (DbType = Int64), @p113='?' (DbType = Int64), @p114='?' (DbType = Int64), @p115='?' (DbType = Int64), @p116='?' (DbType = Int64), @p117='?' (DbType = Int64), @p118='?' (DbType = Int64), @p119='?' (DbType = Double), @p120='?' (DbType = Int64), @p121='?' (DbType = Int64), @p122='?' (Size = 4000), @p123='?' (Size = 450), @p124='?' (DbType = Double), @p125='?' (DbType = Double), @p126='?' (DbType = Int64), @p127='?' (DbType = Int64), @p128='?' (DbType = Int64), @p129='?' (DbType = Int64), @p130='?' (DbType = Int64), @p131='?' (DbType = Int64), @p132='?' (DbType = Int64), @p133='?' (DbType = Double), @p134='?' (DbType = Int64), @p135='?' (DbType = Double), @p136='?' (DbType = Int64), @p137='?' (Size = 4000), @p138='?' (DbType = Double), @p139='?' (DbType = Double), @p140='?' (DbType = Int64), @p141='?' (DbType = Int64), @p142='?' (DbType = Int64), @p143='?' (DbType = Int64), @p144='?' (DbType = Int64), @p145='?' (DbType = Int64), @p146='?' (DbType = Int64), @p147='?' (DbType = Int64), @p148='?' (DbType = Int64), @p149='?' (DbType = Double), @p150='?' (DbType = Int64), @p151='?' (DbType = Int64), @p152='?' (Size = 4000), @p153='?' (Size = 450), @p154='?' (DbType = Double), @p155='?' (DbType = Double), @p156='?' (DbType = Int64), @p157='?' (DbType = Int64), @p158='?' (DbType = Int64), @p159='?' (DbType = Int64), @p160='?' (DbType = Int64), @p161='?' (DbType = Int64), @p162='?' (DbType = Int64), @p163='?' (DbType = Double), @p164='?' (DbType = Int64), @p165='?' (DbType = Double), @p166='?' (DbType = Int64), @p167='?' (Size = 4000), @p168='?' (DbType = Double), @p169='?' (DbType = Double), @p170='?' (DbType = Int64), @p171='?' (DbType = Int64), @p172='?' (DbType = Int64), @p173='?' (DbType = Int64), @p174='?' (DbType = Int64), @p175='?' (DbType = Int64), @p176='?' (DbType = Int64), @p177='?' (DbType = Int64), @p178='?' (DbType = Int64), @p179='?' (DbType = Double), @p180='?' (DbType = Int64), @p181='?' (DbType = Int64), @p182='?' (Size = 4000), @p183='?' (Size = 450), @p184='?' (DbType = Double), @p185='?' (DbType = Double), @p186='?' (DbType = Int64), @p187='?' (DbType = Int64), @p188='?' (DbType = Int64), @p189='?' (DbType = Int64), @p190='?' (DbType = Int64), @p191='?' (DbType = Int64), @p192='?' (DbType = Int64), @p193='?' (DbType = Double), @p194='?' (DbType = Int64), @p195='?' (DbType = Double), @p196='?' (DbType = Int64), @p197='?' (Size = 4000), @p198='?' (DbType = Double), @p199='?' (DbType = Double), @p200='?' (DbType = Int64), @p201='?' (DbType = Int64), @p202='?' (DbType = Int64), @p203='?' (DbType = Int64), @p204='?' (DbType = Int64), @p205='?' (DbType = Int64), @p206='?' (DbType = Int64), @p207='?' (DbType = Int64), @p208='?' (DbType = Int64), @p209='?' (DbType = Double), @p210='?' (DbType = Int64), @p211='?' (DbType = Int64), @p212='?' (Size = 4000), @p213='?' (Size = 450), @p214='?' (DbType = Double), @p215='?' (DbType = Double), @p216='?' (DbType = Int64), @p217='?' (DbType = Int64), @p218='?' (DbType = Int64), @p219='?' (DbType = Int64), @p220='?' (DbType = Int64), @p221='?' (DbType = Int64), @p222='?' (DbType = Int64), @p223='?' (DbType = Double), @p224='?' (DbType = Int64), @p225='?' (DbType = Double), @p226='?' (DbType = Int64), @p227='?' (Size = 4000), @p228='?' (DbType = Double), @p229='?' (DbType = Double), @p230='?' (DbType = Int64), @p231='?' (DbType = Int64), @p232='?' (DbType = Int64), @p233='?' (DbType = Int64), @p234='?' (DbType = Int64), @p235='?' (DbType = Int64), @p236='?' (DbType = Int64), @p237='?' (DbType = Int64), @p238='?' (DbType = Int64), @p239='?' (DbType = Double), @p240='?' (DbType = Int64), @p241='?' (DbType = Int64), @p242='?' (Size = 4000), @p243='?' (Size = 450), @p244='?' (DbType = Double), @p245='?' (DbType = Double), @p246='?' (DbType = Int64), @p247='?' (DbType = Int64), @p248='?' (DbType = Int64), @p249='?' (DbType = Int64), @p250='?' (DbType = Int64), @p251='?' (DbType = Int64), @p252='?' (DbType = Int64), @p253='?' (DbType = Double), @p254='?' (DbType = Int64), @p255='?' (DbType = Double), @p256='?' (DbType = Int64), @p257='?' (Size = 4000), @p258='?' (DbType = Double), @p259='?' (DbType = Double), @p260='?' (DbType = Int64), @p261='?' (DbType = Int64), @p262='?' (DbType = Int64), @p263='?' (DbType = Int64), @p264='?' (DbType = Int64), @p265='?' (DbType = Int64), @p266='?' (DbType = Int64), @p267='?' (DbType = Int64), @p268='?' (DbType = Int64), @p269='?' (DbType = Double), @p270='?' (DbType = Int64), @p271='?' (DbType = Int64), @p272='?' (Size = 4000), @p273='?' (Size = 450), @p274='?' (DbType = Double), @p275='?' (DbType = Double), @p276='?' (DbType = Int64), @p277='?' (DbType = Int64), @p278='?' (DbType = Int64), @p279='?' (DbType = Int64), @p280='?' (DbType = Int64), @p281='?' (DbType = Int64), @p282='?' (DbType = Int64), @p283='?' (DbType = Double), @p284='?' (DbType = Int64), @p285='?' (DbType = Double), @p286='?' (DbType = Int64), @p287='?' (Size = 4000), @p288='?' (DbType = Double), @p289='?' (DbType = Double), @p290='?' (DbType = Int64), @p291='?' (DbType = Int64), @p292='?' (DbType = Int64), @p293='?' (DbType = Int64), @p294='?' (DbType = Int64), @p295='?' (DbType = Int64), @p296='?' (DbType = Int64), @p297='?' (DbType = Int64), @p298='?' (DbType = Int64), @p299='?' (DbType = Double), @p300='?' (DbType = Int64), @p301='?' (DbType = Int64), @p302='?' (Size = 4000), @p303='?' (Size = 450), @p304='?' (DbType = Double), @p305='?' (DbType = Double), @p306='?' (DbType = Int64), @p307='?' (DbType = Int64), @p308='?' (DbType = Int64), @p309='?' (DbType = Int64), @p310='?' (DbType = Int64), @p311='?' (DbType = Int64), @p312='?' (DbType = Int64), @p313='?' (DbType = Double), @p314='?' (DbType = Int64), @p315='?' (DbType = Double), @p316='?' (DbType = Int64), @p317='?' (Size = 4000), @p318='?' (DbType = Double), @p319='?' (DbType = Double), @p320='?' (DbType = Int64), @p321='?' (DbType = Int64), @p322='?' (DbType = Int64), @p323='?' (DbType = Int64), @p324='?' (DbType = Int64), @p325='?' (DbType = Int64), @p326='?' (DbType = Int64), @p327='?' (DbType = Int64), @p328='?' (DbType = Int64), @p329='?' (DbType = Double), @p330='?' (DbType = Int64), @p331='?' (DbType = Int64), @p332='?' (Size = 4000), @p333='?' (Size = 450), @p334='?' (DbType = Double), @p335='?' (DbType = Double), @p336='?' (DbType = Int64), @p337='?' (DbType = Int64), @p338='?' (DbType = Int64), @p339='?' (DbType = Int64), @p340='?' (DbType = Int64), @p341='?' (DbType = Int64), @p342='?' (DbType = Int64), @p343='?' (DbType = Double), @p344='?' (DbType = Int64), @p345='?' (DbType = Double), @p346='?' (DbType = Int64), @p347='?' (Size = 4000), @p348='?' (DbType = Double), @p349='?' (DbType = Double), @p350='?' (DbType = Int64), @p351='?' (DbType = Int64), @p352='?' (DbType = Int64), @p353='?' (DbType = Int64), @p354='?' (DbType = Int64), @p355='?' (DbType = Int64), @p356='?' (DbType = Int64), @p357='?' (DbType = Int64), @p358='?' (DbType = Int64), @p359='?' (DbType = Double), @p360='?' (DbType = Int64), @p361='?' (DbType = Int64), @p362='?' (Size = 4000), @p363='?' (Size = 450), @p364='?' (DbType = Double), @p365='?' (DbType = Double), @p366='?' (DbType = Int64), @p367='?' (DbType = Int64), @p368='?' (DbType = Int64), @p369='?' (DbType = Int64), @p370='?' (DbType = Int64), @p371='?' (DbType = Int64), @p372='?' (DbType = Int64), @p373='?' (DbType = Double), @p374='?' (DbType = Int64), @p375='?' (DbType = Double), @p376='?' (DbType = Int64), @p377='?' (Size = 4000), @p378='?' (DbType = Double), @p379='?' (DbType = Double), @p380='?' (DbType = Int64), @p381='?' (DbType = Int64), @p382='?' (DbType = Int64), @p383='?' (DbType = Int64), @p384='?' (DbType = Int64), @p385='?' (DbType = Int64), @p386='?' (DbType = Int64), @p387='?' (DbType = Int64), @p388='?' (DbType = Int64), @p389='?' (DbType = Double), @p390='?' (DbType = Int64), @p391='?' (DbType = Int64), @p392='?' (Size = 4000), @p393='?' (Size = 450), @p394='?' (DbType = Double), @p395='?' (DbType = Double), @p396='?' (DbType = Int64), @p397='?' (DbType = Int64), @p398='?' (DbType = Int64), @p399='?' (DbType = Int64), @p400='?' (DbType = Int64), @p401='?' (DbType = Int64), @p402='?' (DbType = Int64), @p403='?' (DbType = Double), @p404='?' (DbType = Int64), @p405='?' (DbType = Double), @p406='?' (DbType = Int64), @p407='?' (Size = 4000), @p408='?' (DbType = Double), @p409='?' (DbType = Double), @p410='?' (DbType = Int64), @p411='?' (DbType = Int64), @p412='?' (DbType = Int64), @p413='?' (DbType = Int64), @p414='?' (DbType = Int64), @p415='?' (DbType = Int64), @p416='?' (DbType = Int64), @p417='?' (DbType = Int64), @p418='?' (DbType = Int64), @p419='?' (DbType = Double), @p420='?' (DbType = Int64), @p421='?' (DbType = Int64), @p422='?' (Size = 4000), @p423='?' (Size = 450), @p424='?' (DbType = Double), @p425='?' (DbType = Double), @p426='?' (DbType = Int64), @p427='?' (DbType = Int64), @p428='?' (DbType = Int64), @p429='?' (DbType = Int64), @p430='?' (DbType = Int64), @p431='?' (DbType = Int64), @p432='?' (DbType = Int64), @p433='?' (DbType = Double), @p434='?' (DbType = Int64), @p435='?' (DbType = Double), @p436='?' (DbType = Int64), @p437='?' (Size = 4000), @p438='?' (DbType = Double), @p439='?' (DbType = Double), @p440='?' (DbType = Int64), @p441='?' (DbType = Int64), @p442='?' (DbType = Int64), @p443='?' (DbType = Int64), @p444='?' (DbType = Int64), @p445='?' (DbType = Int64), @p446='?' (DbType = Int64), @p447='?' (DbType = Int64), @p448='?' (DbType = Int64), @p449='?' (DbType = Double), @p450='?' (DbType = Int64), @p451='?' (DbType = Int64), @p452='?' (Size = 4000), @p453='?' (Size = 450), @p454='?' (DbType = Double), @p455='?' (DbType = Double), @p456='?' (DbType = Int64), @p457='?' (DbType = Int64), @p458='?' (DbType = Int64), @p459='?' (DbType = Int64), @p460='?' (DbType = Int64), @p461='?' (DbType = Int64), @p462='?' (DbType = Int64), @p463='?' (DbType = Double), @p464='?' (DbType = Int64), @p465='?' (DbType = Double), @p466='?' (DbType = Int64), @p467='?' (Size = 4000), @p468='?' (DbType = Double), @p469='?' (DbType = Double), @p470='?' (DbType = Int64), @p471='?' (DbType = Int64), @p472='?' (DbType = Int64), @p473='?' (DbType = Int64), @p474='?' (DbType = Int64), @p475='?' (DbType = Int64), @p476='?' (DbType = Int64), @p477='?' (DbType = Int64), @p478='?' (DbType = Int64), @p479='?' (DbType = Double), @p480='?' (DbType = Int64), @p481='?' (DbType = Int64), @p482='?' (Size = 4000), @p483='?' (Size = 450), @p484='?' (DbType = Double), @p485='?' (DbType = Double), @p486='?' (DbType = Int64), @p487='?' (DbType = Int64), @p488='?' (DbType = Int64), @p489='?' (DbType = Int64), @p490='?' (DbType = Int64), @p491='?' (DbType = Int64), @p492='?' (DbType = Int64), @p493='?' (DbType = Double), @p494='?' (DbType = Int64), @p495='?' (DbType = Double), @p496='?' (DbType = Int64), @p497='?' (Size = 4000), @p498='?' (DbType = Double), @p499='?' (DbType = Double), @p500='?' (DbType = Int64), @p501='?' (DbType = Int64), @p502='?' (DbType = Int64), @p503='?' (DbType = Int64), @p504='?' (DbType = Int64), @p505='?' (DbType = Int64), @p506='?' (DbType = Int64), @p507='?' (DbType = Int64), @p508='?' (DbType = Int64), @p509='?' (DbType = Double), @p510='?' (DbType = Int64), @p511='?' (DbType = Int64), @p512='?' (Size = 4000), @p513='?' (Size = 450), @p514='?' (DbType = Double), @p515='?' (DbType = Double), @p516='?' (DbType = Int64), @p517='?' (DbType = Int64), @p518='?' (DbType = Int64), @p519='?' (DbType = Int64), @p520='?' (DbType = Int64), @p521='?' (DbType = Int64), @p522='?' (DbType = Int64), @p523='?' (DbType = Double), @p524='?' (DbType = Int64), @p525='?' (DbType = Double), @p526='?' (DbType = Int64), @p527='?' (Size = 4000), @p528='?' (DbType = Double), @p529='?' (DbType = Double), @p530='?' (DbType = Int64), @p531='?' (DbType = Int64), @p532='?' (DbType = Int64), @p533='?' (DbType = Int64), @p534='?' (DbType = Int64), @p535='?' (DbType = Int64), @p536='?' (DbType = Int64), @p537='?' (DbType = Int64), @p538='?' (DbType = Int64), @p539='?' (DbType = Double), @p540='?' (DbType = Int64), @p541='?' (DbType = Int64), @p542='?' (Size = 4000), @p543='?' (Size = 450), @p544='?' (DbType = Double), @p545='?' (DbType = Double), @p546='?' (DbType = Int64), @p547='?' (DbType = Int64), @p548='?' (DbType = Int64), @p549='?' (DbType = Int64), @p550='?' (DbType = Int64), @p551='?' (DbType = Int64), @p552='?' (DbType = Int64), @p553='?' (DbType = Double), @p554='?' (DbType = Int64), @p555='?' (DbType = Double), @p556='?' (DbType = Int64), @p557='?' (Size = 4000), @p558='?' (DbType = Double), @p559='?' (DbType = Double), @p560='?' (DbType = Int64), @p561='?' (DbType = Int64), @p562='?' (DbType = Int64), @p563='?' (DbType = Int64), @p564='?' (DbType = Int64), @p565='?' (DbType = Int64), @p566='?' (DbType = Int64), @p567='?' (DbType = Int64), @p568='?' (DbType = Int64), @p569='?' (DbType = Double), @p570='?' (DbType = Int64), @p571='?' (DbType = Int64), @p572='?' (Size = 4000), @p573='?' (Size = 450), @p574='?' (DbType = Double), @p575='?' (DbType = Double), @p576='?' (DbType = Int64), @p577='?' (DbType = Int64), @p578='?' (DbType = Int64), @p579='?' (DbType = Int64), @p580='?' (DbType = Int64), @p581='?' (DbType = Int64), @p582='?' (DbType = Int64), @p583='?' (DbType = Double), @p584='?' (DbType = Int64), @p585='?' (DbType = Double), @p586='?' (DbType = Int64), @p587='?' (Size = 4000), @p588='?' (DbType = Double), @p589='?' (DbType = Double), @p590='?' (DbType = Int64), @p591='?' (DbType = Int64), @p592='?' (DbType = Int64), @p593='?' (DbType = Int64), @p594='?' (DbType = Int64), @p595='?' (DbType = Int64), @p596='?' (DbType = Int64), @p597='?' (DbType = Int64), @p598='?' (DbType = Int64), @p599='?' (DbType = Double), @p600='?' (DbType = Int64), @p601='?' (DbType = Int64), @p602='?' (Size = 4000), @p603='?' (Size = 450), @p604='?' (DbType = Double), @p605='?' (DbType = Double), @p606='?' (DbType = Int64), @p607='?' (DbType = Int64), @p608='?' (DbType = Int64), @p609='?' (DbType = Int64), @p610='?' (DbType = Int64), @p611='?' (DbType = Int64), @p612='?' (DbType = Int64), @p613='?' (DbType = Double), @p614='?' (DbType = Int64), @p615='?' (DbType = Double), @p616='?' (DbType = Int64), @p617='?' (Size = 4000), @p618='?' (DbType = Double), @p619='?' (DbType = Double), @p620='?' (DbType = Int64), @p621='?' (DbType = Int64), @p622='?' (DbType = Int64), @p623='?' (DbType = Int64), @p624='?' (DbType = Int64), @p625='?' (DbType = Int64), @p626='?' (DbType = Int64), @p627='?' (DbType = Int64), @p628='?' (DbType = Int64), @p629='?' (DbType = Double), @p630='?' (DbType = Int64), @p631='?' (DbType = Int64), @p632='?' (Size = 4000), @p633='?' (Size = 450), @p634='?' (DbType = Double), @p635='?' (DbType = Double), @p636='?' (DbType = Int64), @p637='?' (DbType = Int64), @p638='?' (DbType = Int64), @p639='?' (DbType = Int64), @p640='?' (DbType = Int64), @p641='?' (DbType = Int64), @p642='?' (DbType = Int64), @p643='?' (DbType = Double), @p644='?' (DbType = Int64), @p645='?' (DbType = Double), @p646='?' (DbType = Int64), @p647='?' (Size = 4000), @p648='?' (DbType = Double), @p649='?' (DbType = Double), @p650='?' (DbType = Int64), @p651='?' (DbType = Int64), @p652='?' (DbType = Int64), @p653='?' (DbType = Int64), @p654='?' (DbType = Int64), @p655='?' (DbType = Int64), @p656='?' (DbType = Int64), @p657='?' (DbType = Int64), @p658='?' (DbType = Int64), @p659='?' (DbType = Double), @p660='?' (DbType = Int64), @p661='?' (DbType = Int64), @p662='?' (Size = 4000), @p663='?' (Size = 450), @p664='?' (DbType = Double), @p665='?' (DbType = Double), @p666='?' (DbType = Int64), @p667='?' (DbType = Int64), @p668='?' (DbType = Int64), @p669='?' (DbType = Int64), @p670='?' (DbType = Int64), @p671='?' (DbType = Int64), @p672='?' (DbType = Int64), @p673='?' (DbType = Double), @p674='?' (DbType = Int64), @p675='?' (DbType = Double), @p676='?' (DbType = Int64), @p677='?' (Size = 4000), @p678='?' (DbType = Double), @p679='?' (DbType = Double), @p680='?' (DbType = Int64), @p681='?' (DbType = Int64), @p682='?' (DbType = Int64), @p683='?' (DbType = Int64), @p684='?' (DbType = Int64), @p685='?' (DbType = Int64), @p686='?' (DbType = Int64), @p687='?' (DbType = Int64), @p688='?' (DbType = Int64), @p689='?' (DbType = Double), @p690='?' (DbType = Int64), @p691='?' (DbType = Int64), @p692='?' (Size = 4000), @p693='?' (Size = 450), @p694='?' (DbType = Double), @p695='?' (DbType = Double), @p696='?' (DbType = Int64), @p697='?' (DbType = Int64), @p698='?' (DbType = Int64), @p699='?' (DbType = Int64), @p700='?' (DbType = Int64), @p701='?' (DbType = Int64), @p702='?' (DbType = Int64), @p703='?' (DbType = Double), @p704='?' (DbType = Int64), @p705='?' (DbType = Double), @p706='?' (DbType = Int64), @p707='?' (Size = 4000), @p708='?' (DbType = Double), @p709='?' (DbType = Double), @p710='?' (DbType = Int64), @p711='?' (DbType = Int64), @p712='?' (DbType = Int64), @p713='?' (DbType = Int64), @p714='?' (DbType = Int64), @p715='?' (DbType = Int64), @p716='?' (DbType = Int64), @p717='?' (DbType = Int64), @p718='?' (DbType = Int64), @p719='?' (DbType = Double), @p720='?' (DbType = Int64), @p721='?' (DbType = Int64), @p722='?' (Size = 4000), @p723='?' (Size = 450), @p724='?' (DbType = Double), @p725='?' (DbType = Double), @p726='?' (DbType = Int64), @p727='?' (DbType = Int64), @p728='?' (DbType = Int64), @p729='?' (DbType = Int64), @p730='?' (DbType = Int64), @p731='?' (DbType = Int64), @p732='?' (DbType = Int64), @p733='?' (DbType = Double), @p734='?' (DbType = Int64), @p735='?' (DbType = Double), @p736='?' (DbType = Int64), @p737='?' (Size = 4000), @p738='?' (DbType = Double), @p739='?' (DbType = Double), @p740='?' (DbType = Int64), @p741='?' (DbType = Int64), @p742='?' (DbType = Int64), @p743='?' (DbType = Int64), @p744='?' (DbType = Int64), @p745='?' (DbType = Int64), @p746='?' (DbType = Int64), @p747='?' (DbType = Int64), @p748='?' (DbType = Int64), @p749='?' (DbType = Double), @p750='?' (DbType = Int64), @p751='?' (DbType = Int64), @p752='?' (Size = 4000), @p753='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
DECLARE @inserted0 TABLE ([Id] int, [_Position] [int]);
MERGE [CashFlowAnnualReport] USING (
VALUES (@p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21, @p22, @p23, @p24, @p25, @p26, @p27, @p28, @p29, @p30, @p31, @p32, @p33, 0),
(@p34, @p35, @p36, @p37, @p38, @p39, @p40, @p41, @p42, @p43, @p44, @p45, @p46, @p47, @p48, @p49, @p50, @p51, @p52, @p53, @p54, @p55, @p56, @p57, @p58, @p59, @p60, @p61, @p62, @p63, 1),
(@p64, @p65, @p66, @p67, @p68, @p69, @p70, @p71, @p72, @p73, @p74, @p75, @p76, @p77, @p78, @p79, @p80, @p81, @p82, @p83, @p84, @p85, @p86, @p87, @p88, @p89, @p90, @p91, @p92, @p93, 2),
(@p94, @p95, @p96, @p97, @p98, @p99, @p100, @p101, @p102, @p103, @p104, @p105, @p106, @p107, @p108, @p109, @p110, @p111, @p112, @p113, @p114, @p115, @p116, @p117, @p118, @p119, @p120, @p121, @p122, @p123, 3),
(@p124, @p125, @p126, @p127, @p128, @p129, @p130, @p131, @p132, @p133, @p134, @p135, @p136, @p137, @p138, @p139, @p140, @p141, @p142, @p143, @p144, @p145, @p146, @p147, @p148, @p149, @p150, @p151, @p152, @p153, 4)) AS i ([CapitalExpenditures], [CashflowFromFinancing], [CashflowFromInvestment], [ChangeInCashAndCashEquivalents], [ChangeInExchangeRate], [ChangeInInventory], [ChangeInOperatingAssets], [ChangeInOperatingLiabilities], [ChangeInReceivables], [DepreciationDepletionAndAmortization], [DividendPayout], [DividendPayoutCommonStock], [DividendPayoutPreferredStock], [FiscalDateEnding], [NetIncome], [OperatingCashFlow], [PaymentsForOperatingActivities], [PaymentsForRepurchaseOfCommonStock], [PaymentsForRepurchaseOfEquity], [PaymentsForRepurchaseOfPreferredStock], [ProceedsFromIssuanceOfCommonStock], [ProceedsFromIssuanceOfLongTermDebtAndCapitalSecuritiesNet], [ProceedsFromIssuanceOfPreferredStock], [ProceedsFromOperatingActivities], [ProceedsFromRepaymentsOfShortTermDebt], [ProceedsFromRepurchaseOfEquity], [ProceedsFromSaleOfTreasuryStock], [ProfitLoss], [ReportedCurrency], [Symbol], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([CapitalExpenditures], [CashflowFromFinancing], [CashflowFromInvestment], [ChangeInCashAndCashEquivalents], [ChangeInExchangeRate], [ChangeInInventory], [ChangeInOperatingAssets], [ChangeInOperatingLiabilities], [ChangeInReceivables], [DepreciationDepletionAndAmortization], [DividendPayout], [DividendPayoutCommonStock], [DividendPayoutPreferredStock], [FiscalDateEnding], [NetIncome], [OperatingCashFlow], [PaymentsForOperatingActivities], [PaymentsForRepurchaseOfCommonStock], [PaymentsForRepurchaseOfEquity], [PaymentsForRepurchaseOfPreferredStock], [ProceedsFromIssuanceOfCommonStock], [ProceedsFromIssuanceOfLongTermDebtAndCapitalSecuritiesNet], [ProceedsFromIssuanceOfPreferredStock], [ProceedsFromOperatingActivities], [ProceedsFromRepaymentsOfShortTermDebt], [ProceedsFromRepurchaseOfEquity], [ProceedsFromSaleOfTreasuryStock], [ProfitLoss], [ReportedCurrency], [Symbol])
VALUES (i.[CapitalExpenditures], i.[CashflowFromFinancing], i.[CashflowFromInvestment], i.[ChangeInCashAndCashEquivalents], i.[ChangeInExchangeRate], i.[ChangeInInventory], i.[ChangeInOperatingAssets], i.[ChangeInOperatingLiabilities], i.[ChangeInReceivables], i.[DepreciationDepletionAndAmortization], i.[DividendPayout], i.[DividendPayoutCommonStock], i.[DividendPayoutPreferredStock], i.[FiscalDateEnding], i.[NetIncome], i.[OperatingCashFlow], i.[PaymentsForOperatingActivities], i.[PaymentsForRepurchaseOfCommonStock], i.[PaymentsForRepurchaseOfEquity], i.[PaymentsForRepurchaseOfPreferredStock], i.[ProceedsFromIssuanceOfCommonStock], i.[ProceedsFromIssuanceOfLongTermDebtAndCapitalSecuritiesNet], i.[ProceedsFromIssuanceOfPreferredStock], i.[ProceedsFromOperatingActivities], i.[ProceedsFromRepaymentsOfShortTermDebt], i.[ProceedsFromRepurchaseOfEquity], i.[ProceedsFromSaleOfTreasuryStock], i.[ProfitLoss], i.[ReportedCurrency], i.[Symbol])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted0;

SELECT [i].[Id] FROM @inserted0 i
ORDER BY [i].[_Position];

DECLARE @inserted5 TABLE ([Id] int, [_Position] [int]);
MERGE [CashFlowQuarterlyReport] USING (
VALUES (@p154, @p155, @p156, @p157, @p158, @p159, @p160, @p161, @p162, @p163, @p164, @p165, @p166, @p167, @p168, @p169, @p170, @p171, @p172, @p173, @p174, @p175, @p176, @p177, @p178, @p179, @p180, @p181, @p182, @p183, 0),
(@p184, @p185, @p186, @p187, @p188, @p189, @p190, @p191, @p192, @p193, @p194, @p195, @p196, @p197, @p198, @p199, @p200, @p201, @p202, @p203, @p204, @p205, @p206, @p207, @p208, @p209, @p210, @p211, @p212, @p213, 1),
(@p214, @p215, @p216, @p217, @p218, @p219, @p220, @p221, @p222, @p223, @p224, @p225, @p226, @p227, @p228, @p229, @p230, @p231, @p232, @p233, @p234, @p235, @p236, @p237, @p238, @p239, @p240, @p241, @p242, @p243, 2),
(@p244, @p245, @p246, @p247, @p248, @p249, @p250, @p251, @p252, @p253, @p254, @p255, @p256, @p257, @p258, @p259, @p260, @p261, @p262, @p263, @p264, @p265, @p266, @p267, @p268, @p269, @p270, @p271, @p272, @p273, 3),
(@p274, @p275, @p276, @p277, @p278, @p279, @p280, @p281, @p282, @p283, @p284, @p285, @p286, @p287, @p288, @p289, @p290, @p291, @p292, @p293, @p294, @p295, @p296, @p297, @p298, @p299, @p300, @p301, @p302, @p303, 4),
(@p304, @p305, @p306, @p307, @p308, @p309, @p310, @p311, @p312, @p313, @p314, @p315, @p316, @p317, @p318, @p319, @p320, @p321, @p322, @p323, @p324, @p325, @p326, @p327, @p328, @p329, @p330, @p331, @p332, @p333, 5),
(@p334, @p335, @p336, @p337, @p338, @p339, @p340, @p341, @p342, @p343, @p344, @p345, @p346, @p347, @p348, @p349, @p350, @p351, @p352, @p353, @p354, @p355, @p356, @p357, @p358, @p359, @p360, @p361, @p362, @p363, 6),
(@p364, @p365, @p366, @p367, @p368, @p369, @p370, @p371, @p372, @p373, @p374, @p375, @p376, @p377, @p378, @p379, @p380, @p381, @p382, @p383, @p384, @p385, @p386, @p387, @p388, @p389, @p390, @p391, @p392, @p393, 7),
(@p394, @p395, @p396, @p397, @p398, @p399, @p400, @p401, @p402, @p403, @p404, @p405, @p406, @p407, @p408, @p409, @p410, @p411, @p412, @p413, @p414, @p415, @p416, @p417, @p418, @p419, @p420, @p421, @p422, @p423, 8),
(@p424, @p425, @p426, @p427, @p428, @p429, @p430, @p431, @p432, @p433, @p434, @p435, @p436, @p437, @p438, @p439, @p440, @p441, @p442, @p443, @p444, @p445, @p446, @p447, @p448, @p449, @p450, @p451, @p452, @p453, 9),
(@p454, @p455, @p456, @p457, @p458, @p459, @p460, @p461, @p462, @p463, @p464, @p465, @p466, @p467, @p468, @p469, @p470, @p471, @p472, @p473, @p474, @p475, @p476, @p477, @p478, @p479, @p480, @p481, @p482, @p483, 10),
(@p484, @p485, @p486, @p487, @p488, @p489, @p490, @p491, @p492, @p493, @p494, @p495, @p496, @p497, @p498, @p499, @p500, @p501, @p502, @p503, @p504, @p505, @p506, @p507, @p508, @p509, @p510, @p511, @p512, @p513, 11),
(@p514, @p515, @p516, @p517, @p518, @p519, @p520, @p521, @p522, @p523, @p524, @p525, @p526, @p527, @p528, @p529, @p530, @p531, @p532, @p533, @p534, @p535, @p536, @p537, @p538, @p539, @p540, @p541, @p542, @p543, 12),
(@p544, @p545, @p546, @p547, @p548, @p549, @p550, @p551, @p552, @p553, @p554, @p555, @p556, @p557, @p558, @p559, @p560, @p561, @p562, @p563, @p564, @p565, @p566, @p567, @p568, @p569, @p570, @p571, @p572, @p573, 13),
(@p574, @p575, @p576, @p577, @p578, @p579, @p580, @p581, @p582, @p583, @p584, @p585, @p586, @p587, @p588, @p589, @p590, @p591, @p592, @p593, @p594, @p595, @p596, @p597, @p598, @p599, @p600, @p601, @p602, @p603, 14),
(@p604, @p605, @p606, @p607, @p608, @p609, @p610, @p611, @p612, @p613, @p614, @p615, @p616, @p617, @p618, @p619, @p620, @p621, @p622, @p623, @p624, @p625, @p626, @p627, @p628, @p629, @p630, @p631, @p632, @p633, 15),
(@p634, @p635, @p636, @p637, @p638, @p639, @p640, @p641, @p642, @p643, @p644, @p645, @p646, @p647, @p648, @p649, @p650, @p651, @p652, @p653, @p654, @p655, @p656, @p657, @p658, @p659, @p660, @p661, @p662, @p663, 16),
(@p664, @p665, @p666, @p667, @p668, @p669, @p670, @p671, @p672, @p673, @p674, @p675, @p676, @p677, @p678, @p679, @p680, @p681, @p682, @p683, @p684, @p685, @p686, @p687, @p688, @p689, @p690, @p691, @p692, @p693, 17),
(@p694, @p695, @p696, @p697, @p698, @p699, @p700, @p701, @p702, @p703, @p704, @p705, @p706, @p707, @p708, @p709, @p710, @p711, @p712, @p713, @p714, @p715, @p716, @p717, @p718, @p719, @p720, @p721, @p722, @p723, 18),
(@p724, @p725, @p726, @p727, @p728, @p729, @p730, @p731, @p732, @p733, @p734, @p735, @p736, @p737, @p738, @p739, @p740, @p741, @p742, @p743, @p744, @p745, @p746, @p747, @p748, @p749, @p750, @p751, @p752, @p753, 19)) AS i ([CapitalExpenditures], [CashflowFromFinancing], [CashflowFromInvestment], [ChangeInCashAndCashEquivalents], [ChangeInExchangeRate], [ChangeInInventory], [ChangeInOperatingAssets], [ChangeInOperatingLiabilities], [ChangeInReceivables], [DepreciationDepletionAndAmortization], [DividendPayout], [DividendPayoutCommonStock], [DividendPayoutPreferredStock], [FiscalDateEnding], [NetIncome], [OperatingCashFlow], [PaymentsForOperatingActivities], [PaymentsForRepurchaseOfCommonStock], [PaymentsForRepurchaseOfEquity], [PaymentsForRepurchaseOfPreferredStock], [ProceedsFromIssuanceOfCommonStock], [ProceedsFromIssuanceOfLongTermDebtAndCapitalSecuritiesNet], [ProceedsFromIssuanceOfPreferredStock], [ProceedsFromOperatingActivities], [ProceedsFromRepaymentsOfShortTermDebt], [ProceedsFromRepurchaseOfEquity], [ProceedsFromSaleOfTreasuryStock], [ProfitLoss], [ReportedCurrency], [Symbol], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([CapitalExpenditures], [CashflowFromFinancing], [CashflowFromInvestment], [ChangeInCashAndCashEquivalents], [ChangeInExchangeRate], [ChangeInInventory], [ChangeInOperatingAssets], [ChangeInOperatingLiabilities], [ChangeInReceivables], [DepreciationDepletionAndAmortization], [DividendPayout], [DividendPayoutCommonStock], [DividendPayoutPreferredStock], [FiscalDateEnding], [NetIncome], [OperatingCashFlow], [PaymentsForOperatingActivities], [PaymentsForRepurchaseOfCommonStock], [PaymentsForRepurchaseOfEquity], [PaymentsForRepurchaseOfPreferredStock], [ProceedsFromIssuanceOfCommonStock], [ProceedsFromIssuanceOfLongTermDebtAndCapitalSecuritiesNet], [ProceedsFromIssuanceOfPreferredStock], [ProceedsFromOperatingActivities], [ProceedsFromRepaymentsOfShortTermDebt], [ProceedsFromRepurchaseOfEquity], [ProceedsFromSaleOfTreasuryStock], [ProfitLoss], [ReportedCurrency], [Symbol])
VALUES (i.[CapitalExpenditures], i.[CashflowFromFinancing], i.[CashflowFromInvestment], i.[ChangeInCashAndCashEquivalents], i.[ChangeInExchangeRate], i.[ChangeInInventory], i.[ChangeInOperatingAssets], i.[ChangeInOperatingLiabilities], i.[ChangeInReceivables], i.[DepreciationDepletionAndAmortization], i.[DividendPayout], i.[DividendPayoutCommonStock], i.[DividendPayoutPreferredStock], i.[FiscalDateEnding], i.[NetIncome], i.[OperatingCashFlow], i.[PaymentsForOperatingActivities], i.[PaymentsForRepurchaseOfCommonStock], i.[PaymentsForRepurchaseOfEquity], i.[PaymentsForRepurchaseOfPreferredStock], i.[ProceedsFromIssuanceOfCommonStock], i.[ProceedsFromIssuanceOfLongTermDebtAndCapitalSecuritiesNet], i.[ProceedsFromIssuanceOfPreferredStock], i.[ProceedsFromOperatingActivities], i.[ProceedsFromRepaymentsOfShortTermDebt], i.[ProceedsFromRepurchaseOfEquity], i.[ProceedsFromSaleOfTreasuryStock], i.[ProfitLoss], i.[ReportedCurrency], i.[Symbol])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted5;

SELECT [i].[Id] FROM @inserted5 i
ORDER BY [i].[_Position];
2022-05-12 01:03:27.964 +03:00 [INF] AddOrUpdate run successful.
2022-05-12 01:03:52.472 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CompanyOverview with Symbol BKEP
2022-05-12 01:03:52.473 +03:00 [INF] Generating URI for OVERVIEW with params: symbol: BKEP
2022-05-12 01:03:52.474 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=OVERVIEW&symbol=BKEP
2022-05-12 01:03:52.474 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=OVERVIEW&symbol=BKEP".
2022-05-12 01:03:52.703 +03:00 [INF] Response has success status code
2022-05-12 01:03:52.704 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.CompanyOverview for symbol BKEP
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyOverview(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 116
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:03:54.931 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.Earnings with Symbol AWH
2022-05-12 01:03:54.934 +03:00 [INF] Generating URI for EARNINGS with params: symbol: AWH
2022-05-12 01:03:54.935 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=EARNINGS&symbol=AWH
2022-05-12 01:03:54.935 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=EARNINGS&symbol=AWH".
2022-05-12 01:03:55.158 +03:00 [INF] Response has success status code
2022-05-12 01:03:55.158 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.Earnings for symbol AWH
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyEarnings(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 142
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:03:55.652 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.BalanceSheet with Symbol BEDZ
2022-05-12 01:03:55.655 +03:00 [INF] Generating URI for BALANCE_SHEET with params: symbol: BEDZ
2022-05-12 01:03:55.656 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BEDZ
2022-05-12 01:03:55.657 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BEDZ".
2022-05-12 01:03:55.730 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.IncomeStatement with Symbol AUGX
2022-05-12 01:03:55.732 +03:00 [INF] Generating URI for INCOME_STATEMENT with params: symbol: AUGX
2022-05-12 01:03:55.732 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=INCOME_STATEMENT&symbol=AUGX
2022-05-12 01:03:55.733 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=INCOME_STATEMENT&symbol=AUGX".
2022-05-12 01:03:55.875 +03:00 [INF] Response has success status code
2022-05-12 01:03:55.876 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.BalanceSheet for symbol BEDZ
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetBalanceSheet(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 82
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:03:55.967 +03:00 [INF] Response has success status code
2022-05-12 01:03:55.968 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.IncomeStatement for symbol AUGX
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetIncomeStatement(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 69
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:03:57.963 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CashFlow with Symbol ATRC
2022-05-12 01:03:57.967 +03:00 [INF] Generating URI for CASH_FLOW with params: symbol: ATRC
2022-05-12 01:03:57.968 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=CASH_FLOW&symbol=ATRC
2022-05-12 01:03:57.968 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=CASH_FLOW&symbol=ATRC".
2022-05-12 01:03:58.200 +03:00 [INF] Response has success status code
2022-05-12 01:03:58.201 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.CashFlow for symbol ATRC
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCashFlow(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 96
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:04:22.717 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CompanyOverview with Symbol BKES
2022-05-12 01:04:22.721 +03:00 [INF] Generating URI for OVERVIEW with params: symbol: BKES
2022-05-12 01:04:22.721 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=OVERVIEW&symbol=BKES
2022-05-12 01:04:22.722 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=OVERVIEW&symbol=BKES".
2022-05-12 01:04:22.941 +03:00 [INF] Response has success status code
2022-05-12 01:04:22.941 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.CompanyOverview.
2022-05-12 01:04:22.942 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 01:04:22.998 +03:00 [INF] Executed DbCommand (54ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__entity_Symbol_0
2022-05-12 01:04:22.999 +03:00 [INF] Entity does not exist. Adding to DB.
2022-05-12 01:04:23.017 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (Size = 4000), @p2='?' (DbType = Double), @p3='?' (Size = 4000), @p4='?' (DbType = Double), @p5='?' (DbType = Double), @p6='?' (DbType = Int64), @p7='?' (Size = 4000), @p8='?' (Size = 4000), @p9='?' (Size = 4000), @p10='?' (DbType = Double), @p11='?' (DbType = DateTime2), @p12='?' (DbType = Double), @p13='?' (DbType = Double), @p14='?' (DbType = Int64), @p15='?' (DbType = Double), @p16='?' (DbType = Double), @p17='?' (DbType = Double), @p18='?' (DbType = DateTime2), @p19='?' (Size = 4000), @p20='?' (DbType = Boolean), @p21='?' (Size = 4000), @p22='?' (DbType = Double), @p23='?' (DbType = Int64), @p24='?' (Size = 4000), @p25='?' (DbType = DateTime2), @p26='?' (DbType = DateTime2), @p27='?' (DbType = DateTime2), @p28='?' (DbType = Int64), @p29='?' (Size = 4000), @p30='?' (DbType = Double), @p31='?' (DbType = Double), @p32='?' (DbType = Double), @p33='?' (DbType = Double), @p34='?' (DbType = Double), @p35='?' (DbType = Double), @p36='?' (DbType = Double), @p37='?' (DbType = Double), @p38='?' (DbType = Double), @p39='?' (DbType = Double), @p40='?' (DbType = Double), @p41='?' (DbType = Int64), @p42='?' (Size = 4000), @p43='?' (DbType = Int64), @p44='?' (DbType = Double), @p45='?' (DbType = Double), @p46='?' (DbType = Double), @p47='?' (DbType = Double), @p48='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [CompanyOverviews] ([Symbol], [Address], [AnalystTargetPrice], [AssetType], [Beta], [BookValue], [CIK], [Country], [Currency], [Description], [DilutedEPSTTM], [DividendDate], [DividendPerShare], [DividendYield], [EBITDA], [EPS], [EVToEBITDA], [EVToRevenue], [ExDividendDate], [Exchange], [ExistInApi], [FiscalYearEnd], [ForwardPE], [GrossProfitTTM], [Industry], [LastApiRefresh], [LastLocalRefresh], [LatestQuarter], [MarketCapitalization], [Name], [OperatingMarginTTM], [PEGRatio], [PERatio], [PriceToBookRatio], [PriceToSalesRatioTTM], [ProfitMargin], [QuarterlyEarningsGrowthYOY], [QuarterlyRevenueGrowthYOY], [ReturnOnAssetsTTM], [ReturnOnEquityTTM], [RevenuePerShareTTM], [RevenueTTM], [Sector], [SharesOutstanding], [TrailingPE], [_200DayMovingAverage], [_50DayMovingAverage], [_52WeekHigh], [_52WeekLow])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21, @p22, @p23, @p24, @p25, @p26, @p27, @p28, @p29, @p30, @p31, @p32, @p33, @p34, @p35, @p36, @p37, @p38, @p39, @p40, @p41, @p42, @p43, @p44, @p45, @p46, @p47, @p48);
2022-05-12 01:04:23.025 +03:00 [INF] AddOrUpdate run successful.
2022-05-12 01:04:23.025 +03:00 [WRN] Alpha Vantage has no SaluteStocksAPI.Models.FundamentalData.CompanyOverview for symbol BKES
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageEmptyResponse: Response was empty.
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyOverview(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 116
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:04:25.166 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.Earnings with Symbol AWK
2022-05-12 01:04:25.170 +03:00 [INF] Generating URI for EARNINGS with params: symbol: AWK
2022-05-12 01:04:25.170 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=EARNINGS&symbol=AWK
2022-05-12 01:04:25.171 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=EARNINGS&symbol=AWK".
2022-05-12 01:04:25.512 +03:00 [INF] Response has success status code
2022-05-12 01:04:25.513 +03:00 [INF] Trying to deserialize response.
2022-05-12 01:04:25.514 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 01:04:25.524 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__symbol_0
2022-05-12 01:04:25.526 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.Earnings.
2022-05-12 01:04:25.534 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [e].[Symbol], [e].[ExistInApi], [e].[LastApiRefresh], [e].[LastLocalRefresh]
FROM [Earnings] AS [e]
WHERE [e].[Symbol] = @__entity_Symbol_0
2022-05-12 01:04:25.535 +03:00 [INF] Entity does not exist. Adding to DB.
2022-05-12 01:04:25.550 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = Boolean), @p2='?' (DbType = DateTime2), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Earnings] ([Symbol], [ExistInApi], [LastApiRefresh], [LastLocalRefresh])
VALUES (@p0, @p1, @p2, @p3);
2022-05-12 01:04:25.595 +03:00 [INF] Executed DbCommand (43ms) [Parameters=[@p4='?' (DbType = DateTime2), @p5='?' (DbType = Double), @p6='?' (Size = 450), @p7='?' (DbType = DateTime2), @p8='?' (DbType = Double), @p9='?' (Size = 450), @p10='?' (DbType = DateTime2), @p11='?' (DbType = Double), @p12='?' (Size = 450), @p13='?' (DbType = DateTime2), @p14='?' (DbType = Double), @p15='?' (Size = 450), @p16='?' (DbType = DateTime2), @p17='?' (DbType = Double), @p18='?' (Size = 450), @p19='?' (DbType = DateTime2), @p20='?' (DbType = Double), @p21='?' (Size = 450), @p22='?' (DbType = DateTime2), @p23='?' (DbType = Double), @p24='?' (Size = 450), @p25='?' (DbType = DateTime2), @p26='?' (DbType = Double), @p27='?' (Size = 450), @p28='?' (DbType = DateTime2), @p29='?' (DbType = Double), @p30='?' (Size = 450), @p31='?' (DbType = DateTime2), @p32='?' (DbType = Double), @p33='?' (Size = 450), @p34='?' (DbType = DateTime2), @p35='?' (DbType = Double), @p36='?' (Size = 450), @p37='?' (DbType = DateTime2), @p38='?' (DbType = Double), @p39='?' (Size = 450), @p40='?' (DbType = DateTime2), @p41='?' (DbType = Double), @p42='?' (Size = 450), @p43='?' (DbType = DateTime2), @p44='?' (DbType = Double), @p45='?' (Size = 450), @p46='?' (DbType = DateTime2), @p47='?' (DbType = Double), @p48='?' (Size = 450), @p49='?' (DbType = Double), @p50='?' (DbType = DateTime2), @p51='?' (DbType = DateTime2), @p52='?' (DbType = Double), @p53='?' (DbType = Double), @p54='?' (DbType = Double), @p55='?' (Size = 450), @p56='?' (DbType = Double), @p57='?' (DbType = DateTime2), @p58='?' (DbType = DateTime2), @p59='?' (DbType = Double), @p60='?' (DbType = Double), @p61='?' (DbType = Double), @p62='?' (Size = 450), @p63='?' (DbType = Double), @p64='?' (DbType = DateTime2), @p65='?' (DbType = DateTime2), @p66='?' (DbType = Double), @p67='?' (DbType = Double), @p68='?' (DbType = Double), @p69='?' (Size = 450), @p70='?' (DbType = Double), @p71='?' (DbType = DateTime2), @p72='?' (DbType = DateTime2), @p73='?' (DbType = Double), @p74='?' (DbType = Double), @p75='?' (DbType = Double), @p76='?' (Size = 450), @p77='?' (DbType = Double), @p78='?' (DbType = DateTime2), @p79='?' (DbType = DateTime2), @p80='?' (DbType = Double), @p81='?' (DbType = Double), @p82='?' (DbType = Double), @p83='?' (Size = 450), @p84='?' (DbType = Double), @p85='?' (DbType = DateTime2), @p86='?' (DbType = DateTime2), @p87='?' (DbType = Double), @p88='?' (DbType = Double), @p89='?' (DbType = Double), @p90='?' (Size = 450), @p91='?' (DbType = Double), @p92='?' (DbType = DateTime2), @p93='?' (DbType = DateTime2), @p94='?' (DbType = Double), @p95='?' (DbType = Double), @p96='?' (DbType = Double), @p97='?' (Size = 450), @p98='?' (DbType = Double), @p99='?' (DbType = DateTime2), @p100='?' (DbType = DateTime2), @p101='?' (DbType = Double), @p102='?' (DbType = Double), @p103='?' (DbType = Double), @p104='?' (Size = 450), @p105='?' (DbType = Double), @p106='?' (DbType = DateTime2), @p107='?' (DbType = DateTime2), @p108='?' (DbType = Double), @p109='?' (DbType = Double), @p110='?' (DbType = Double), @p111='?' (Size = 450), @p112='?' (DbType = Double), @p113='?' (DbType = DateTime2), @p114='?' (DbType = DateTime2), @p115='?' (DbType = Double), @p116='?' (DbType = Double), @p117='?' (DbType = Double), @p118='?' (Size = 450), @p119='?' (DbType = Double), @p120='?' (DbType = DateTime2), @p121='?' (DbType = DateTime2), @p122='?' (DbType = Double), @p123='?' (DbType = Double), @p124='?' (DbType = Double), @p125='?' (Size = 450), @p126='?' (DbType = Double), @p127='?' (DbType = DateTime2), @p128='?' (DbType = DateTime2), @p129='?' (DbType = Double), @p130='?' (DbType = Double), @p131='?' (DbType = Double), @p132='?' (Size = 450), @p133='?' (DbType = Double), @p134='?' (DbType = DateTime2), @p135='?' (DbType = DateTime2), @p136='?' (DbType = Double), @p137='?' (DbType = Double), @p138='?' (DbType = Double), @p139='?' (Size = 450), @p140='?' (DbType = Double), @p141='?' (DbType = DateTime2), @p142='?' (DbType = DateTime2), @p143='?' (DbType = Double), @p144='?' (DbType = Double), @p145='?' (DbType = Double), @p146='?' (Size = 450), @p147='?' (DbType = Double), @p148='?' (DbType = DateTime2), @p149='?' (DbType = DateTime2), @p150='?' (DbType = Double), @p151='?' (DbType = Double), @p152='?' (DbType = Double), @p153='?' (Size = 450), @p154='?' (DbType = Double), @p155='?' (DbType = DateTime2), @p156='?' (DbType = DateTime2), @p157='?' (DbType = Double), @p158='?' (DbType = Double), @p159='?' (DbType = Double), @p160='?' (Size = 450), @p161='?' (DbType = Double), @p162='?' (DbType = DateTime2), @p163='?' (DbType = DateTime2), @p164='?' (DbType = Double), @p165='?' (DbType = Double), @p166='?' (DbType = Double), @p167='?' (Size = 450), @p168='?' (DbType = Double), @p169='?' (DbType = DateTime2), @p170='?' (DbType = DateTime2), @p171='?' (DbType = Double), @p172='?' (DbType = Double), @p173='?' (DbType = Double), @p174='?' (Size = 450), @p175='?' (DbType = Double), @p176='?' (DbType = DateTime2), @p177='?' (DbType = DateTime2), @p178='?' (DbType = Double), @p179='?' (DbType = Double), @p180='?' (DbType = Double), @p181='?' (Size = 450), @p182='?' (DbType = Double), @p183='?' (DbType = DateTime2), @p184='?' (DbType = DateTime2), @p185='?' (DbType = Double), @p186='?' (DbType = Double), @p187='?' (DbType = Double), @p188='?' (Size = 450), @p189='?' (DbType = Double), @p190='?' (DbType = DateTime2), @p191='?' (DbType = DateTime2), @p192='?' (DbType = Double), @p193='?' (DbType = Double), @p194='?' (DbType = Double), @p195='?' (Size = 450), @p196='?' (DbType = Double), @p197='?' (DbType = DateTime2), @p198='?' (DbType = DateTime2), @p199='?' (DbType = Double), @p200='?' (DbType = Double), @p201='?' (DbType = Double), @p202='?' (Size = 450), @p203='?' (DbType = Double), @p204='?' (DbType = DateTime2), @p205='?' (DbType = DateTime2), @p206='?' (DbType = Double), @p207='?' (DbType = Double), @p208='?' (DbType = Double), @p209='?' (Size = 450), @p210='?' (DbType = Double), @p211='?' (DbType = DateTime2), @p212='?' (DbType = DateTime2), @p213='?' (DbType = Double), @p214='?' (DbType = Double), @p215='?' (DbType = Double), @p216='?' (Size = 450), @p217='?' (DbType = Double), @p218='?' (DbType = DateTime2), @p219='?' (DbType = DateTime2), @p220='?' (DbType = Double), @p221='?' (DbType = Double), @p222='?' (DbType = Double), @p223='?' (Size = 450), @p224='?' (DbType = Double), @p225='?' (DbType = DateTime2), @p226='?' (DbType = DateTime2), @p227='?' (DbType = Double), @p228='?' (DbType = Double), @p229='?' (DbType = Double), @p230='?' (Size = 450), @p231='?' (DbType = Double), @p232='?' (DbType = DateTime2), @p233='?' (DbType = DateTime2), @p234='?' (DbType = Double), @p235='?' (DbType = Double), @p236='?' (DbType = Double), @p237='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
DECLARE @inserted0 TABLE ([Id] int, [_Position] [int]);
MERGE [AnnualEarning] USING (
VALUES (@p4, @p5, @p6, 0),
(@p7, @p8, @p9, 1),
(@p10, @p11, @p12, 2),
(@p13, @p14, @p15, 3),
(@p16, @p17, @p18, 4),
(@p19, @p20, @p21, 5),
(@p22, @p23, @p24, 6),
(@p25, @p26, @p27, 7),
(@p28, @p29, @p30, 8),
(@p31, @p32, @p33, 9),
(@p34, @p35, @p36, 10),
(@p37, @p38, @p39, 11),
(@p40, @p41, @p42, 12),
(@p43, @p44, @p45, 13),
(@p46, @p47, @p48, 14)) AS i ([FiscalDateEnding], [ReportedEPS], [Symbol], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([FiscalDateEnding], [ReportedEPS], [Symbol])
VALUES (i.[FiscalDateEnding], i.[ReportedEPS], i.[Symbol])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted0;

SELECT [i].[Id] FROM @inserted0 i
ORDER BY [i].[_Position];

DECLARE @inserted15 TABLE ([Id] int, [_Position] [int]);
MERGE [QuarterlyEarning] USING (
VALUES (@p49, @p50, @p51, @p52, @p53, @p54, @p55, 0),
(@p56, @p57, @p58, @p59, @p60, @p61, @p62, 1),
(@p63, @p64, @p65, @p66, @p67, @p68, @p69, 2),
(@p70, @p71, @p72, @p73, @p74, @p75, @p76, 3),
(@p77, @p78, @p79, @p80, @p81, @p82, @p83, 4),
(@p84, @p85, @p86, @p87, @p88, @p89, @p90, 5),
(@p91, @p92, @p93, @p94, @p95, @p96, @p97, 6),
(@p98, @p99, @p100, @p101, @p102, @p103, @p104, 7),
(@p105, @p106, @p107, @p108, @p109, @p110, @p111, 8),
(@p112, @p113, @p114, @p115, @p116, @p117, @p118, 9),
(@p119, @p120, @p121, @p122, @p123, @p124, @p125, 10),
(@p126, @p127, @p128, @p129, @p130, @p131, @p132, 11),
(@p133, @p134, @p135, @p136, @p137, @p138, @p139, 12),
(@p140, @p141, @p142, @p143, @p144, @p145, @p146, 13),
(@p147, @p148, @p149, @p150, @p151, @p152, @p153, 14),
(@p154, @p155, @p156, @p157, @p158, @p159, @p160, 15),
(@p161, @p162, @p163, @p164, @p165, @p166, @p167, 16),
(@p168, @p169, @p170, @p171, @p172, @p173, @p174, 17),
(@p175, @p176, @p177, @p178, @p179, @p180, @p181, 18),
(@p182, @p183, @p184, @p185, @p186, @p187, @p188, 19),
(@p189, @p190, @p191, @p192, @p193, @p194, @p195, 20),
(@p196, @p197, @p198, @p199, @p200, @p201, @p202, 21),
(@p203, @p204, @p205, @p206, @p207, @p208, @p209, 22),
(@p210, @p211, @p212, @p213, @p214, @p215, @p216, 23),
(@p217, @p218, @p219, @p220, @p221, @p222, @p223, 24),
(@p224, @p225, @p226, @p227, @p228, @p229, @p230, 25),
(@p231, @p232, @p233, @p234, @p235, @p236, @p237, 26)) AS i ([EstimatedEPS], [FiscalDateEnding], [ReportedDate], [ReportedEPS], [Surprise], [SurprisePercentage], [Symbol], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([EstimatedEPS], [FiscalDateEnding], [ReportedDate], [ReportedEPS], [Surprise], [SurprisePercentage], [Symbol])
VALUES (i.[EstimatedEPS], i.[FiscalDateEnding], i.[ReportedDate], i.[ReportedEPS], i.[Surprise], i.[SurprisePercentage], i.[Symbol])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted15;

SELECT [i].[Id] FROM @inserted15 i
ORDER BY [i].[_Position];
2022-05-12 01:04:25.632 +03:00 [INF] Executed DbCommand (33ms) [Parameters=[@p0='?' (DbType = Double), @p1='?' (DbType = DateTime2), @p2='?' (DbType = DateTime2), @p3='?' (DbType = Double), @p4='?' (DbType = Double), @p5='?' (DbType = Double), @p6='?' (Size = 450), @p7='?' (DbType = Double), @p8='?' (DbType = DateTime2), @p9='?' (DbType = DateTime2), @p10='?' (DbType = Double), @p11='?' (DbType = Double), @p12='?' (DbType = Double), @p13='?' (Size = 450), @p14='?' (DbType = Double), @p15='?' (DbType = DateTime2), @p16='?' (DbType = DateTime2), @p17='?' (DbType = Double), @p18='?' (DbType = Double), @p19='?' (DbType = Double), @p20='?' (Size = 450), @p21='?' (DbType = Double), @p22='?' (DbType = DateTime2), @p23='?' (DbType = DateTime2), @p24='?' (DbType = Double), @p25='?' (DbType = Double), @p26='?' (DbType = Double), @p27='?' (Size = 450), @p28='?' (DbType = Double), @p29='?' (DbType = DateTime2), @p30='?' (DbType = DateTime2), @p31='?' (DbType = Double), @p32='?' (DbType = Double), @p33='?' (DbType = Double), @p34='?' (Size = 450), @p35='?' (DbType = Double), @p36='?' (DbType = DateTime2), @p37='?' (DbType = DateTime2), @p38='?' (DbType = Double), @p39='?' (DbType = Double), @p40='?' (DbType = Double), @p41='?' (Size = 450), @p42='?' (DbType = Double), @p43='?' (DbType = DateTime2), @p44='?' (DbType = DateTime2), @p45='?' (DbType = Double), @p46='?' (DbType = Double), @p47='?' (DbType = Double), @p48='?' (Size = 450), @p49='?' (DbType = Double), @p50='?' (DbType = DateTime2), @p51='?' (DbType = DateTime2), @p52='?' (DbType = Double), @p53='?' (DbType = Double), @p54='?' (DbType = Double), @p55='?' (Size = 450), @p56='?' (DbType = Double), @p57='?' (DbType = DateTime2), @p58='?' (DbType = DateTime2), @p59='?' (DbType = Double), @p60='?' (DbType = Double), @p61='?' (DbType = Double), @p62='?' (Size = 450), @p63='?' (DbType = Double), @p64='?' (DbType = DateTime2), @p65='?' (DbType = DateTime2), @p66='?' (DbType = Double), @p67='?' (DbType = Double), @p68='?' (DbType = Double), @p69='?' (Size = 450), @p70='?' (DbType = Double), @p71='?' (DbType = DateTime2), @p72='?' (DbType = DateTime2), @p73='?' (DbType = Double), @p74='?' (DbType = Double), @p75='?' (DbType = Double), @p76='?' (Size = 450), @p77='?' (DbType = Double), @p78='?' (DbType = DateTime2), @p79='?' (DbType = DateTime2), @p80='?' (DbType = Double), @p81='?' (DbType = Double), @p82='?' (DbType = Double), @p83='?' (Size = 450), @p84='?' (DbType = Double), @p85='?' (DbType = DateTime2), @p86='?' (DbType = DateTime2), @p87='?' (DbType = Double), @p88='?' (DbType = Double), @p89='?' (DbType = Double), @p90='?' (Size = 450), @p91='?' (DbType = Double), @p92='?' (DbType = DateTime2), @p93='?' (DbType = DateTime2), @p94='?' (DbType = Double), @p95='?' (DbType = Double), @p96='?' (DbType = Double), @p97='?' (Size = 450), @p98='?' (DbType = Double), @p99='?' (DbType = DateTime2), @p100='?' (DbType = DateTime2), @p101='?' (DbType = Double), @p102='?' (DbType = Double), @p103='?' (DbType = Double), @p104='?' (Size = 450), @p105='?' (DbType = Double), @p106='?' (DbType = DateTime2), @p107='?' (DbType = DateTime2), @p108='?' (DbType = Double), @p109='?' (DbType = Double), @p110='?' (DbType = Double), @p111='?' (Size = 450), @p112='?' (DbType = Double), @p113='?' (DbType = DateTime2), @p114='?' (DbType = DateTime2), @p115='?' (DbType = Double), @p116='?' (DbType = Double), @p117='?' (DbType = Double), @p118='?' (Size = 450), @p119='?' (DbType = Double), @p120='?' (DbType = DateTime2), @p121='?' (DbType = DateTime2), @p122='?' (DbType = Double), @p123='?' (DbType = Double), @p124='?' (DbType = Double), @p125='?' (Size = 450), @p126='?' (DbType = Double), @p127='?' (DbType = DateTime2), @p128='?' (DbType = DateTime2), @p129='?' (DbType = Double), @p130='?' (DbType = Double), @p131='?' (DbType = Double), @p132='?' (Size = 450), @p133='?' (DbType = Double), @p134='?' (DbType = DateTime2), @p135='?' (DbType = DateTime2), @p136='?' (DbType = Double), @p137='?' (DbType = Double), @p138='?' (DbType = Double), @p139='?' (Size = 450), @p140='?' (DbType = Double), @p141='?' (DbType = DateTime2), @p142='?' (DbType = DateTime2), @p143='?' (DbType = Double), @p144='?' (DbType = Double), @p145='?' (DbType = Double), @p146='?' (Size = 450), @p147='?' (DbType = Double), @p148='?' (DbType = DateTime2), @p149='?' (DbType = DateTime2), @p150='?' (DbType = Double), @p151='?' (DbType = Double), @p152='?' (DbType = Double), @p153='?' (Size = 450), @p154='?' (DbType = Double), @p155='?' (DbType = DateTime2), @p156='?' (DbType = DateTime2), @p157='?' (DbType = Double), @p158='?' (DbType = Double), @p159='?' (DbType = Double), @p160='?' (Size = 450), @p161='?' (DbType = Double), @p162='?' (DbType = DateTime2), @p163='?' (DbType = DateTime2), @p164='?' (DbType = Double), @p165='?' (DbType = Double), @p166='?' (DbType = Double), @p167='?' (Size = 450), @p168='?' (DbType = Double), @p169='?' (DbType = DateTime2), @p170='?' (DbType = DateTime2), @p171='?' (DbType = Double), @p172='?' (DbType = Double), @p173='?' (DbType = Double), @p174='?' (Size = 450), @p175='?' (DbType = Double), @p176='?' (DbType = DateTime2), @p177='?' (DbType = DateTime2), @p178='?' (DbType = Double), @p179='?' (DbType = Double), @p180='?' (DbType = Double), @p181='?' (Size = 450), @p182='?' (DbType = Double), @p183='?' (DbType = DateTime2), @p184='?' (DbType = DateTime2), @p185='?' (DbType = Double), @p186='?' (DbType = Double), @p187='?' (DbType = Double), @p188='?' (Size = 450), @p189='?' (DbType = Double), @p190='?' (DbType = DateTime2), @p191='?' (DbType = DateTime2), @p192='?' (DbType = Double), @p193='?' (DbType = Double), @p194='?' (DbType = Double), @p195='?' (Size = 450), @p196='?' (DbType = Double), @p197='?' (DbType = DateTime2), @p198='?' (DbType = DateTime2), @p199='?' (DbType = Double), @p200='?' (DbType = Double), @p201='?' (DbType = Double), @p202='?' (Size = 450), @p203='?' (DbType = Double), @p204='?' (DbType = DateTime2), @p205='?' (DbType = DateTime2), @p206='?' (DbType = Double), @p207='?' (DbType = Double), @p208='?' (DbType = Double), @p209='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
DECLARE @inserted0 TABLE ([Id] int, [_Position] [int]);
MERGE [QuarterlyEarning] USING (
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, 0),
(@p7, @p8, @p9, @p10, @p11, @p12, @p13, 1),
(@p14, @p15, @p16, @p17, @p18, @p19, @p20, 2),
(@p21, @p22, @p23, @p24, @p25, @p26, @p27, 3),
(@p28, @p29, @p30, @p31, @p32, @p33, @p34, 4),
(@p35, @p36, @p37, @p38, @p39, @p40, @p41, 5),
(@p42, @p43, @p44, @p45, @p46, @p47, @p48, 6),
(@p49, @p50, @p51, @p52, @p53, @p54, @p55, 7),
(@p56, @p57, @p58, @p59, @p60, @p61, @p62, 8),
(@p63, @p64, @p65, @p66, @p67, @p68, @p69, 9),
(@p70, @p71, @p72, @p73, @p74, @p75, @p76, 10),
(@p77, @p78, @p79, @p80, @p81, @p82, @p83, 11),
(@p84, @p85, @p86, @p87, @p88, @p89, @p90, 12),
(@p91, @p92, @p93, @p94, @p95, @p96, @p97, 13),
(@p98, @p99, @p100, @p101, @p102, @p103, @p104, 14),
(@p105, @p106, @p107, @p108, @p109, @p110, @p111, 15),
(@p112, @p113, @p114, @p115, @p116, @p117, @p118, 16),
(@p119, @p120, @p121, @p122, @p123, @p124, @p125, 17),
(@p126, @p127, @p128, @p129, @p130, @p131, @p132, 18),
(@p133, @p134, @p135, @p136, @p137, @p138, @p139, 19),
(@p140, @p141, @p142, @p143, @p144, @p145, @p146, 20),
(@p147, @p148, @p149, @p150, @p151, @p152, @p153, 21),
(@p154, @p155, @p156, @p157, @p158, @p159, @p160, 22),
(@p161, @p162, @p163, @p164, @p165, @p166, @p167, 23),
(@p168, @p169, @p170, @p171, @p172, @p173, @p174, 24),
(@p175, @p176, @p177, @p178, @p179, @p180, @p181, 25),
(@p182, @p183, @p184, @p185, @p186, @p187, @p188, 26),
(@p189, @p190, @p191, @p192, @p193, @p194, @p195, 27),
(@p196, @p197, @p198, @p199, @p200, @p201, @p202, 28),
(@p203, @p204, @p205, @p206, @p207, @p208, @p209, 29)) AS i ([EstimatedEPS], [FiscalDateEnding], [ReportedDate], [ReportedEPS], [Surprise], [SurprisePercentage], [Symbol], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([EstimatedEPS], [FiscalDateEnding], [ReportedDate], [ReportedEPS], [Surprise], [SurprisePercentage], [Symbol])
VALUES (i.[EstimatedEPS], i.[FiscalDateEnding], i.[ReportedDate], i.[ReportedEPS], i.[Surprise], i.[SurprisePercentage], i.[Symbol])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted0;

SELECT [i].[Id] FROM @inserted0 i
ORDER BY [i].[_Position];
2022-05-12 01:04:25.641 +03:00 [INF] AddOrUpdate run successful.
2022-05-12 01:04:25.888 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.BalanceSheet with Symbol BEEMW
2022-05-12 01:04:25.892 +03:00 [INF] Generating URI for BALANCE_SHEET with params: symbol: BEEMW
2022-05-12 01:04:25.892 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BEEMW
2022-05-12 01:04:25.892 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BEEMW".
2022-05-12 01:04:25.982 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.IncomeStatement with Symbol AUPH
2022-05-12 01:04:25.986 +03:00 [INF] Generating URI for INCOME_STATEMENT with params: symbol: AUPH
2022-05-12 01:04:25.986 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=INCOME_STATEMENT&symbol=AUPH
2022-05-12 01:04:25.987 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=INCOME_STATEMENT&symbol=AUPH".
2022-05-12 01:04:26.432 +03:00 [INF] Response has success status code
2022-05-12 01:04:26.433 +03:00 [INF] Trying to deserialize response.
2022-05-12 01:04:26.433 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 01:04:26.442 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__symbol_0
2022-05-12 01:04:26.444 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.IncomeStatement.
2022-05-12 01:04:26.451 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [i].[Symbol], [i].[ExistInApi], [i].[LastApiRefresh], [i].[LastLocalRefresh]
FROM [IncomeStatements] AS [i]
WHERE [i].[Symbol] = @__entity_Symbol_0
2022-05-12 01:04:26.453 +03:00 [INF] Entity does not exist. Adding to DB.
2022-05-12 01:04:26.467 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = Boolean), @p2='?' (DbType = DateTime2), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [IncomeStatements] ([Symbol], [ExistInApi], [LastApiRefresh], [LastLocalRefresh])
VALUES (@p0, @p1, @p2, @p3);
2022-05-12 01:04:26.518 +03:00 [INF] Response has success status code
2022-05-12 01:04:26.519 +03:00 [INF] Trying to deserialize response.
2022-05-12 01:04:26.520 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 01:04:26.533 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__symbol_0
2022-05-12 01:04:26.534 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.BalanceSheet.
2022-05-12 01:04:26.541 +03:00 [INF] Executed DbCommand (72ms) [Parameters=[@p4='?' (DbType = Int64), @p5='?' (DbType = Double), @p6='?' (DbType = Double), @p7='?' (DbType = Int64), @p8='?' (DbType = Int64), @p9='?' (DbType = Int64), @p10='?' (DbType = Double), @p11='?' (DbType = DateTime2), @p12='?' (DbType = Double), @p13='?' (DbType = Double), @p14='?' (DbType = Int64), @p15='?' (DbType = Int64), @p16='?' (DbType = Double), @p17='?' (DbType = Int64), @p18='?' (DbType = Int64), @p19='?' (DbType = Double), @p20='?' (DbType = Double), @p21='?' (DbType = Double), @p22='?' (DbType = Int64), @p23='?' (DbType = Double), @p24='?' (DbType = Double), @p25='?' (DbType = Int64), @p26='?' (Size = 4000), @p27='?' (DbType = Int64), @p28='?' (DbType = Double), @p29='?' (Size = 450), @p30='?' (DbType = Int64), @p31='?' (DbType = Int64), @p32='?' (DbType = Double), @p33='?' (DbType = Double), @p34='?' (DbType = Int64), @p35='?' (DbType = Int64), @p36='?' (DbType = Int64), @p37='?' (DbType = Double), @p38='?' (DbType = DateTime2), @p39='?' (DbType = Double), @p40='?' (DbType = Double), @p41='?' (DbType = Int64), @p42='?' (DbType = Int64), @p43='?' (DbType = Double), @p44='?' (DbType = Int64), @p45='?' (DbType = Int64), @p46='?' (DbType = Double), @p47='?' (DbType = Double), @p48='?' (DbType = Double), @p49='?' (DbType = Int64), @p50='?' (DbType = Double), @p51='?' (DbType = Double), @p52='?' (DbType = Int64), @p53='?' (Size = 4000), @p54='?' (DbType = Int64), @p55='?' (DbType = Double), @p56='?' (Size = 450), @p57='?' (DbType = Int64), @p58='?' (DbType = Int64), @p59='?' (DbType = Double), @p60='?' (DbType = Double), @p61='?' (DbType = Int64), @p62='?' (DbType = Int64), @p63='?' (DbType = Int64), @p64='?' (DbType = Double), @p65='?' (DbType = DateTime2), @p66='?' (DbType = Double), @p67='?' (DbType = Double), @p68='?' (DbType = Int64), @p69='?' (DbType = Int64), @p70='?' (DbType = Double), @p71='?' (DbType = Int64), @p72='?' (DbType = Int64), @p73='?' (DbType = Double), @p74='?' (DbType = Double), @p75='?' (DbType = Double), @p76='?' (DbType = Int64), @p77='?' (DbType = Double), @p78='?' (DbType = Double), @p79='?' (DbType = Int64), @p80='?' (Size = 4000), @p81='?' (DbType = Int64), @p82='?' (DbType = Double), @p83='?' (Size = 450), @p84='?' (DbType = Int64), @p85='?' (DbType = Int64), @p86='?' (DbType = Double), @p87='?' (DbType = Double), @p88='?' (DbType = Int64), @p89='?' (DbType = Int64), @p90='?' (DbType = Int64), @p91='?' (DbType = Double), @p92='?' (DbType = DateTime2), @p93='?' (DbType = Double), @p94='?' (DbType = Double), @p95='?' (DbType = Int64), @p96='?' (DbType = Int64), @p97='?' (DbType = Double), @p98='?' (DbType = Int64), @p99='?' (DbType = Int64), @p100='?' (DbType = Double), @p101='?' (DbType = Double), @p102='?' (DbType = Double), @p103='?' (DbType = Int64), @p104='?' (DbType = Double), @p105='?' (DbType = Double), @p106='?' (DbType = Int64), @p107='?' (Size = 4000), @p108='?' (DbType = Int64), @p109='?' (DbType = Double), @p110='?' (Size = 450), @p111='?' (DbType = Int64), @p112='?' (DbType = Int64), @p113='?' (DbType = Double), @p114='?' (DbType = Double), @p115='?' (DbType = Int64), @p116='?' (DbType = Int64), @p117='?' (DbType = Int64), @p118='?' (DbType = Double), @p119='?' (DbType = DateTime2), @p120='?' (DbType = Double), @p121='?' (DbType = Double), @p122='?' (DbType = Int64), @p123='?' (DbType = Int64), @p124='?' (DbType = Double), @p125='?' (DbType = Int64), @p126='?' (DbType = Int64), @p127='?' (DbType = Double), @p128='?' (DbType = Double), @p129='?' (DbType = Double), @p130='?' (DbType = Int64), @p131='?' (DbType = Double), @p132='?' (DbType = Double), @p133='?' (DbType = Int64), @p134='?' (Size = 4000), @p135='?' (DbType = Int64), @p136='?' (DbType = Double), @p137='?' (Size = 450), @p138='?' (DbType = Int64), @p139='?' (DbType = Int64), @p140='?' (DbType = Double), @p141='?' (DbType = Double), @p142='?' (DbType = Int64), @p143='?' (DbType = Int64), @p144='?' (DbType = Int64), @p145='?' (DbType = Double), @p146='?' (DbType = DateTime2), @p147='?' (DbType = Double), @p148='?' (DbType = Double), @p149='?' (DbType = Int64), @p150='?' (DbType = Int64), @p151='?' (DbType = Double), @p152='?' (DbType = Int64), @p153='?' (DbType = Int64), @p154='?' (DbType = Double), @p155='?' (DbType = Double), @p156='?' (DbType = Double), @p157='?' (DbType = Int64), @p158='?' (DbType = Double), @p159='?' (DbType = Double), @p160='?' (DbType = Int64), @p161='?' (Size = 4000), @p162='?' (DbType = Int64), @p163='?' (DbType = Double), @p164='?' (Size = 450), @p165='?' (DbType = Int64), @p166='?' (DbType = Int64), @p167='?' (DbType = Double), @p168='?' (DbType = Double), @p169='?' (DbType = Int64), @p170='?' (DbType = Int64), @p171='?' (DbType = Int64), @p172='?' (DbType = Double), @p173='?' (DbType = DateTime2), @p174='?' (DbType = Double), @p175='?' (DbType = Double), @p176='?' (DbType = Int64), @p177='?' (DbType = Int64), @p178='?' (DbType = Double), @p179='?' (DbType = Int64), @p180='?' (DbType = Int64), @p181='?' (DbType = Double), @p182='?' (DbType = Double), @p183='?' (DbType = Double), @p184='?' (DbType = Int64), @p185='?' (DbType = Double), @p186='?' (DbType = Double), @p187='?' (DbType = Int64), @p188='?' (Size = 4000), @p189='?' (DbType = Int64), @p190='?' (DbType = Double), @p191='?' (Size = 450), @p192='?' (DbType = Int64), @p193='?' (DbType = Int64), @p194='?' (DbType = Double), @p195='?' (DbType = Double), @p196='?' (DbType = Int64), @p197='?' (DbType = Int64), @p198='?' (DbType = Int64), @p199='?' (DbType = Double), @p200='?' (DbType = DateTime2), @p201='?' (DbType = Double), @p202='?' (DbType = Double), @p203='?' (DbType = Int64), @p204='?' (DbType = Int64), @p205='?' (DbType = Double), @p206='?' (DbType = Int64), @p207='?' (DbType = Int64), @p208='?' (DbType = Double), @p209='?' (DbType = Double), @p210='?' (DbType = Double), @p211='?' (DbType = Int64), @p212='?' (DbType = Double), @p213='?' (DbType = Double), @p214='?' (DbType = Int64), @p215='?' (Size = 4000), @p216='?' (DbType = Int64), @p217='?' (DbType = Double), @p218='?' (Size = 450), @p219='?' (DbType = Int64), @p220='?' (DbType = Int64), @p221='?' (DbType = Double), @p222='?' (DbType = Double), @p223='?' (DbType = Int64), @p224='?' (DbType = Int64), @p225='?' (DbType = Int64), @p226='?' (DbType = Double), @p227='?' (DbType = DateTime2), @p228='?' (DbType = Double), @p229='?' (DbType = Double), @p230='?' (DbType = Int64), @p231='?' (DbType = Int64), @p232='?' (DbType = Double), @p233='?' (DbType = Int64), @p234='?' (DbType = Int64), @p235='?' (DbType = Double), @p236='?' (DbType = Double), @p237='?' (DbType = Double), @p238='?' (DbType = Int64), @p239='?' (DbType = Double), @p240='?' (DbType = Double), @p241='?' (DbType = Int64), @p242='?' (Size = 4000), @p243='?' (DbType = Int64), @p244='?' (DbType = Double), @p245='?' (Size = 450), @p246='?' (DbType = Int64), @p247='?' (DbType = Int64), @p248='?' (DbType = Double), @p249='?' (DbType = Double), @p250='?' (DbType = Int64), @p251='?' (DbType = Int64), @p252='?' (DbType = Int64), @p253='?' (DbType = Double), @p254='?' (DbType = DateTime2), @p255='?' (DbType = Double), @p256='?' (DbType = Double), @p257='?' (DbType = Int64), @p258='?' (DbType = Int64), @p259='?' (DbType = Double), @p260='?' (DbType = Int64), @p261='?' (DbType = Int64), @p262='?' (DbType = Double), @p263='?' (DbType = Double), @p264='?' (DbType = Double), @p265='?' (DbType = Int64), @p266='?' (DbType = Double), @p267='?' (DbType = Double), @p268='?' (DbType = Int64), @p269='?' (Size = 4000), @p270='?' (DbType = Int64), @p271='?' (DbType = Double), @p272='?' (Size = 450), @p273='?' (DbType = Int64), @p274='?' (DbType = Int64), @p275='?' (DbType = Double), @p276='?' (DbType = Double), @p277='?' (DbType = Int64), @p278='?' (DbType = Int64), @p279='?' (DbType = Int64), @p280='?' (DbType = Double), @p281='?' (DbType = DateTime2), @p282='?' (DbType = Double), @p283='?' (DbType = Double), @p284='?' (DbType = Int64), @p285='?' (DbType = Int64), @p286='?' (DbType = Double), @p287='?' (DbType = Int64), @p288='?' (DbType = Int64), @p289='?' (DbType = Double), @p290='?' (DbType = Double), @p291='?' (DbType = Double), @p292='?' (DbType = Int64), @p293='?' (DbType = Double), @p294='?' (DbType = Double), @p295='?' (DbType = Int64), @p296='?' (Size = 4000), @p297='?' (DbType = Int64), @p298='?' (DbType = Double), @p299='?' (Size = 450), @p300='?' (DbType = Int64), @p301='?' (DbType = Int64), @p302='?' (DbType = Double), @p303='?' (DbType = Double), @p304='?' (DbType = Int64), @p305='?' (DbType = Int64), @p306='?' (DbType = Int64), @p307='?' (DbType = Double), @p308='?' (DbType = DateTime2), @p309='?' (DbType = Double), @p310='?' (DbType = Double), @p311='?' (DbType = Int64), @p312='?' (DbType = Int64), @p313='?' (DbType = Double), @p314='?' (DbType = Int64), @p315='?' (DbType = Int64), @p316='?' (DbType = Double), @p317='?' (DbType = Double), @p318='?' (DbType = Double), @p319='?' (DbType = Int64), @p320='?' (DbType = Double), @p321='?' (DbType = Double), @p322='?' (DbType = Int64), @p323='?' (Size = 4000), @p324='?' (DbType = Int64), @p325='?' (DbType = Double), @p326='?' (Size = 450), @p327='?' (DbType = Int64), @p328='?' (DbType = Int64), @p329='?' (DbType = Double), @p330='?' (DbType = Double), @p331='?' (DbType = Int64), @p332='?' (DbType = Int64), @p333='?' (DbType = Int64), @p334='?' (DbType = Double), @p335='?' (DbType = DateTime2), @p336='?' (DbType = Double), @p337='?' (DbType = Double), @p338='?' (DbType = Int64), @p339='?' (DbType = Int64), @p340='?' (DbType = Double), @p341='?' (DbType = Int64), @p342='?' (DbType = Int64), @p343='?' (DbType = Double), @p344='?' (DbType = Double), @p345='?' (DbType = Double), @p346='?' (DbType = Int64), @p347='?' (DbType = Double), @p348='?' (DbType = Double), @p349='?' (DbType = Int64), @p350='?' (Size = 4000), @p351='?' (DbType = Int64), @p352='?' (DbType = Double), @p353='?' (Size = 450), @p354='?' (DbType = Int64), @p355='?' (DbType = Int64), @p356='?' (DbType = Double), @p357='?' (DbType = Double), @p358='?' (DbType = Int64), @p359='?' (DbType = Int64), @p360='?' (DbType = Int64), @p361='?' (DbType = Double), @p362='?' (DbType = DateTime2), @p363='?' (DbType = Double), @p364='?' (DbType = Double), @p365='?' (DbType = Int64), @p366='?' (DbType = Int64), @p367='?' (DbType = Double), @p368='?' (DbType = Int64), @p369='?' (DbType = Int64), @p370='?' (DbType = Double), @p371='?' (DbType = Double), @p372='?' (DbType = Double), @p373='?' (DbType = Int64), @p374='?' (DbType = Double), @p375='?' (DbType = Double), @p376='?' (DbType = Int64), @p377='?' (Size = 4000), @p378='?' (DbType = Int64), @p379='?' (DbType = Double), @p380='?' (Size = 450), @p381='?' (DbType = Int64), @p382='?' (DbType = Int64), @p383='?' (DbType = Double), @p384='?' (DbType = Double), @p385='?' (DbType = Int64), @p386='?' (DbType = Int64), @p387='?' (DbType = Int64), @p388='?' (DbType = Double), @p389='?' (DbType = DateTime2), @p390='?' (DbType = Double), @p391='?' (DbType = Double), @p392='?' (DbType = Int64), @p393='?' (DbType = Int64), @p394='?' (DbType = Double), @p395='?' (DbType = Int64), @p396='?' (DbType = Int64), @p397='?' (DbType = Double), @p398='?' (DbType = Double), @p399='?' (DbType = Double), @p400='?' (DbType = Int64), @p401='?' (DbType = Double), @p402='?' (DbType = Double), @p403='?' (DbType = Int64), @p404='?' (Size = 4000), @p405='?' (DbType = Int64), @p406='?' (DbType = Double), @p407='?' (Size = 450), @p408='?' (DbType = Int64), @p409='?' (DbType = Int64), @p410='?' (DbType = Double), @p411='?' (DbType = Double), @p412='?' (DbType = Int64), @p413='?' (DbType = Int64), @p414='?' (DbType = Int64), @p415='?' (DbType = Double), @p416='?' (DbType = DateTime2), @p417='?' (DbType = Double), @p418='?' (DbType = Double), @p419='?' (DbType = Int64), @p420='?' (DbType = Int64), @p421='?' (DbType = Double), @p422='?' (DbType = Int64), @p423='?' (DbType = Int64), @p424='?' (DbType = Double), @p425='?' (DbType = Double), @p426='?' (DbType = Double), @p427='?' (DbType = Int64), @p428='?' (DbType = Double), @p429='?' (DbType = Double), @p430='?' (DbType = Int64), @p431='?' (Size = 4000), @p432='?' (DbType = Int64), @p433='?' (DbType = Double), @p434='?' (Size = 450), @p435='?' (DbType = Int64), @p436='?' (DbType = Int64), @p437='?' (DbType = Double), @p438='?' (DbType = Double), @p439='?' (DbType = Int64), @p440='?' (DbType = Int64), @p441='?' (DbType = Int64), @p442='?' (DbType = Double), @p443='?' (DbType = DateTime2), @p444='?' (DbType = Double), @p445='?' (DbType = Double), @p446='?' (DbType = Int64), @p447='?' (DbType = Int64), @p448='?' (DbType = Double), @p449='?' (DbType = Int64), @p450='?' (DbType = Int64), @p451='?' (DbType = Double), @p452='?' (DbType = Double), @p453='?' (DbType = Double), @p454='?' (DbType = Int64), @p455='?' (DbType = Double), @p456='?' (DbType = Double), @p457='?' (DbType = Int64), @p458='?' (Size = 4000), @p459='?' (DbType = Int64), @p460='?' (DbType = Double), @p461='?' (Size = 450), @p462='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
DECLARE @inserted0 TABLE ([Id] int, [_Position] [int]);
MERGE [IncomeStatementAnnualReport] USING (
VALUES (@p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21, @p22, @p23, @p24, @p25, @p26, @p27, @p28, @p29, @p30, 0),
(@p31, @p32, @p33, @p34, @p35, @p36, @p37, @p38, @p39, @p40, @p41, @p42, @p43, @p44, @p45, @p46, @p47, @p48, @p49, @p50, @p51, @p52, @p53, @p54, @p55, @p56, @p57, 1),
(@p58, @p59, @p60, @p61, @p62, @p63, @p64, @p65, @p66, @p67, @p68, @p69, @p70, @p71, @p72, @p73, @p74, @p75, @p76, @p77, @p78, @p79, @p80, @p81, @p82, @p83, @p84, 2),
(@p85, @p86, @p87, @p88, @p89, @p90, @p91, @p92, @p93, @p94, @p95, @p96, @p97, @p98, @p99, @p100, @p101, @p102, @p103, @p104, @p105, @p106, @p107, @p108, @p109, @p110, @p111, 3)) AS i ([ComprehensiveIncomeNetOfTax], [CostOfRevenue], [CostofGoodsAndServicesSold], [Depreciation], [DepreciationAndAmortization], [Ebit], [Ebitda], [FiscalDateEnding], [GrossProfit], [IncomeBeforeTax], [IncomeTaxExpense], [InterestAndDebtExpense], [InterestExpense], [InterestIncome], [InvestmentIncomeNet], [NetIncome], [NetIncomeFromContinuingOperations], [NetInterestIncome], [NonInterestIncome], [OperatingExpenses], [OperatingIncome], [OtherNonOperatingIncome], [ReportedCurrency], [ResearchAndDevelopment], [SellingGeneralAndAdministrative], [Symbol], [TotalRevenue], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([ComprehensiveIncomeNetOfTax], [CostOfRevenue], [CostofGoodsAndServicesSold], [Depreciation], [DepreciationAndAmortization], [Ebit], [Ebitda], [FiscalDateEnding], [GrossProfit], [IncomeBeforeTax], [IncomeTaxExpense], [InterestAndDebtExpense], [InterestExpense], [InterestIncome], [InvestmentIncomeNet], [NetIncome], [NetIncomeFromContinuingOperations], [NetInterestIncome], [NonInterestIncome], [OperatingExpenses], [OperatingIncome], [OtherNonOperatingIncome], [ReportedCurrency], [ResearchAndDevelopment], [SellingGeneralAndAdministrative], [Symbol], [TotalRevenue])
VALUES (i.[ComprehensiveIncomeNetOfTax], i.[CostOfRevenue], i.[CostofGoodsAndServicesSold], i.[Depreciation], i.[DepreciationAndAmortization], i.[Ebit], i.[Ebitda], i.[FiscalDateEnding], i.[GrossProfit], i.[IncomeBeforeTax], i.[IncomeTaxExpense], i.[InterestAndDebtExpense], i.[InterestExpense], i.[InterestIncome], i.[InvestmentIncomeNet], i.[NetIncome], i.[NetIncomeFromContinuingOperations], i.[NetInterestIncome], i.[NonInterestIncome], i.[OperatingExpenses], i.[OperatingIncome], i.[OtherNonOperatingIncome], i.[ReportedCurrency], i.[ResearchAndDevelopment], i.[SellingGeneralAndAdministrative], i.[Symbol], i.[TotalRevenue])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted0;

SELECT [i].[Id] FROM @inserted0 i
ORDER BY [i].[_Position];

DECLARE @inserted4 TABLE ([Id] int, [_Position] [int]);
MERGE [IncomeStatementQuarterlyReport] USING (
VALUES (@p112, @p113, @p114, @p115, @p116, @p117, @p118, @p119, @p120, @p121, @p122, @p123, @p124, @p125, @p126, @p127, @p128, @p129, @p130, @p131, @p132, @p133, @p134, @p135, @p136, @p137, @p138, 0),
(@p139, @p140, @p141, @p142, @p143, @p144, @p145, @p146, @p147, @p148, @p149, @p150, @p151, @p152, @p153, @p154, @p155, @p156, @p157, @p158, @p159, @p160, @p161, @p162, @p163, @p164, @p165, 1),
(@p166, @p167, @p168, @p169, @p170, @p171, @p172, @p173, @p174, @p175, @p176, @p177, @p178, @p179, @p180, @p181, @p182, @p183, @p184, @p185, @p186, @p187, @p188, @p189, @p190, @p191, @p192, 2),
(@p193, @p194, @p195, @p196, @p197, @p198, @p199, @p200, @p201, @p202, @p203, @p204, @p205, @p206, @p207, @p208, @p209, @p210, @p211, @p212, @p213, @p214, @p215, @p216, @p217, @p218, @p219, 3),
(@p220, @p221, @p222, @p223, @p224, @p225, @p226, @p227, @p228, @p229, @p230, @p231, @p232, @p233, @p234, @p235, @p236, @p237, @p238, @p239, @p240, @p241, @p242, @p243, @p244, @p245, @p246, 4),
(@p247, @p248, @p249, @p250, @p251, @p252, @p253, @p254, @p255, @p256, @p257, @p258, @p259, @p260, @p261, @p262, @p263, @p264, @p265, @p266, @p267, @p268, @p269, @p270, @p271, @p272, @p273, 5),
(@p274, @p275, @p276, @p277, @p278, @p279, @p280, @p281, @p282, @p283, @p284, @p285, @p286, @p287, @p288, @p289, @p290, @p291, @p292, @p293, @p294, @p295, @p296, @p297, @p298, @p299, @p300, 6),
(@p301, @p302, @p303, @p304, @p305, @p306, @p307, @p308, @p309, @p310, @p311, @p312, @p313, @p314, @p315, @p316, @p317, @p318, @p319, @p320, @p321, @p322, @p323, @p324, @p325, @p326, @p327, 7),
(@p328, @p329, @p330, @p331, @p332, @p333, @p334, @p335, @p336, @p337, @p338, @p339, @p340, @p341, @p342, @p343, @p344, @p345, @p346, @p347, @p348, @p349, @p350, @p351, @p352, @p353, @p354, 8),
(@p355, @p356, @p357, @p358, @p359, @p360, @p361, @p362, @p363, @p364, @p365, @p366, @p367, @p368, @p369, @p370, @p371, @p372, @p373, @p374, @p375, @p376, @p377, @p378, @p379, @p380, @p381, 9),
(@p382, @p383, @p384, @p385, @p386, @p387, @p388, @p389, @p390, @p391, @p392, @p393, @p394, @p395, @p396, @p397, @p398, @p399, @p400, @p401, @p402, @p403, @p404, @p405, @p406, @p407, @p408, 10),
(@p409, @p410, @p411, @p412, @p413, @p414, @p415, @p416, @p417, @p418, @p419, @p420, @p421, @p422, @p423, @p424, @p425, @p426, @p427, @p428, @p429, @p430, @p431, @p432, @p433, @p434, @p435, 11),
(@p436, @p437, @p438, @p439, @p440, @p441, @p442, @p443, @p444, @p445, @p446, @p447, @p448, @p449, @p450, @p451, @p452, @p453, @p454, @p455, @p456, @p457, @p458, @p459, @p460, @p461, @p462, 12)) AS i ([ComprehensiveIncomeNetOfTax], [CostOfRevenue], [CostofGoodsAndServicesSold], [Depreciation], [DepreciationAndAmortization], [Ebit], [Ebitda], [FiscalDateEnding], [GrossProfit], [IncomeBeforeTax], [IncomeTaxExpense], [InterestAndDebtExpense], [InterestExpense], [InterestIncome], [InvestmentIncomeNet], [NetIncome], [NetIncomeFromContinuingOperations], [NetInterestIncome], [NonInterestIncome], [OperatingExpenses], [OperatingIncome], [OtherNonOperatingIncome], [ReportedCurrency], [ResearchAndDevelopment], [SellingGeneralAndAdministrative], [Symbol], [TotalRevenue], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([ComprehensiveIncomeNetOfTax], [CostOfRevenue], [CostofGoodsAndServicesSold], [Depreciation], [DepreciationAndAmortization], [Ebit], [Ebitda], [FiscalDateEnding], [GrossProfit], [IncomeBeforeTax], [IncomeTaxExpense], [InterestAndDebtExpense], [InterestExpense], [InterestIncome], [InvestmentIncomeNet], [NetIncome], [NetIncomeFromContinuingOperations], [NetInterestIncome], [NonInterestIncome], [OperatingExpenses], [OperatingIncome], [OtherNonOperatingIncome], [ReportedCurrency], [ResearchAndDevelopment], [SellingGeneralAndAdministrative], [Symbol], [TotalRevenue])
VALUES (i.[ComprehensiveIncomeNetOfTax], i.[CostOfRevenue], i.[CostofGoodsAndServicesSold], i.[Depreciation], i.[DepreciationAndAmortization], i.[Ebit], i.[Ebitda], i.[FiscalDateEnding], i.[GrossProfit], i.[IncomeBeforeTax], i.[IncomeTaxExpense], i.[InterestAndDebtExpense], i.[InterestExpense], i.[InterestIncome], i.[InvestmentIncomeNet], i.[NetIncome], i.[NetIncomeFromContinuingOperations], i.[NetInterestIncome], i.[NonInterestIncome], i.[OperatingExpenses], i.[OperatingIncome], i.[OtherNonOperatingIncome], i.[ReportedCurrency], i.[ResearchAndDevelopment], i.[SellingGeneralAndAdministrative], i.[Symbol], i.[TotalRevenue])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted4;

SELECT [i].[Id] FROM @inserted4 i
ORDER BY [i].[_Position];
2022-05-12 01:04:26.542 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [b].[Symbol], [b].[ExistInApi], [b].[LastApiRefresh], [b].[LastLocalRefresh]
FROM [BalanceSheets] AS [b]
WHERE [b].[Symbol] = @__entity_Symbol_0
2022-05-12 01:04:26.547 +03:00 [INF] Entity does not exist. Adding to DB.
2022-05-12 01:04:26.552 +03:00 [INF] AddOrUpdate run successful.
2022-05-12 01:04:26.563 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = Boolean), @p2='?' (DbType = DateTime2), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [BalanceSheets] ([Symbol], [ExistInApi], [LastApiRefresh], [LastLocalRefresh])
VALUES (@p0, @p1, @p2, @p3);
2022-05-12 01:04:26.625 +03:00 [INF] Executed DbCommand (60ms) [Parameters=[@p4='?' (DbType = Int64), @p5='?' (DbType = Double), @p6='?' (DbType = Double), @p7='?' (DbType = Double), @p8='?' (DbType = Double), @p9='?' (DbType = Int64), @p10='?' (DbType = Int64), @p11='?' (DbType = Int64), @p12='?' (DbType = Double), @p13='?' (DbType = Int64), @p14='?' (DbType = Int64), @p15='?' (DbType = DateTime2), @p16='?' (DbType = Double), @p17='?' (DbType = Double), @p18='?' (DbType = Double), @p19='?' (DbType = Double), @p20='?' (DbType = Int64), @p21='?' (DbType = Double), @p22='?' (DbType = Int64), @p23='?' (DbType = Double), @p24='?' (DbType = Double), @p25='?' (DbType = Double), @p26='?' (DbType = Double), @p27='?' (DbType = Double), @p28='?' (DbType = Int64), @p29='?' (Size = 4000), @p30='?' (DbType = Double), @p31='?' (DbType = Double), @p32='?' (DbType = Double), @p33='?' (DbType = Double), @p34='?' (Size = 450), @p35='?' (DbType = Double), @p36='?' (DbType = Double), @p37='?' (DbType = Double), @p38='?' (DbType = Double), @p39='?' (DbType = Double), @p40='?' (DbType = Double), @p41='?' (DbType = Double), @p42='?' (DbType = Double), @p43='?' (DbType = Int64), @p44='?' (DbType = Double), @p45='?' (DbType = Double), @p46='?' (DbType = Double), @p47='?' (DbType = Double), @p48='?' (DbType = Int64), @p49='?' (DbType = Int64), @p50='?' (DbType = Int64), @p51='?' (DbType = Double), @p52='?' (DbType = Int64), @p53='?' (DbType = Int64), @p54='?' (DbType = DateTime2), @p55='?' (DbType = Double), @p56='?' (DbType = Double), @p57='?' (DbType = Double), @p58='?' (DbType = Double), @p59='?' (DbType = Int64), @p60='?' (DbType = Double), @p61='?' (DbType = Int64), @p62='?' (DbType = Double), @p63='?' (DbType = Double), @p64='?' (DbType = Double), @p65='?' (DbType = Double), @p66='?' (DbType = Double), @p67='?' (DbType = Int64), @p68='?' (Size = 4000), @p69='?' (DbType = Double), @p70='?' (DbType = Double), @p71='?' (DbType = Double), @p72='?' (DbType = Double), @p73='?' (Size = 450), @p74='?' (DbType = Double), @p75='?' (DbType = Double), @p76='?' (DbType = Double), @p77='?' (DbType = Double), @p78='?' (DbType = Double), @p79='?' (DbType = Double), @p80='?' (DbType = Double), @p81='?' (DbType = Double), @p82='?' (DbType = Int64), @p83='?' (DbType = Double), @p84='?' (DbType = Double), @p85='?' (DbType = Double), @p86='?' (DbType = Double), @p87='?' (DbType = Int64), @p88='?' (DbType = Int64), @p89='?' (DbType = Int64), @p90='?' (DbType = Double), @p91='?' (DbType = Int64), @p92='?' (DbType = Int64), @p93='?' (DbType = DateTime2), @p94='?' (DbType = Double), @p95='?' (DbType = Double), @p96='?' (DbType = Double), @p97='?' (DbType = Double), @p98='?' (DbType = Int64), @p99='?' (DbType = Double), @p100='?' (DbType = Int64), @p101='?' (DbType = Double), @p102='?' (DbType = Double), @p103='?' (DbType = Double), @p104='?' (DbType = Double), @p105='?' (DbType = Double), @p106='?' (DbType = Int64), @p107='?' (Size = 4000), @p108='?' (DbType = Double), @p109='?' (DbType = Double), @p110='?' (DbType = Double), @p111='?' (DbType = Double), @p112='?' (Size = 450), @p113='?' (DbType = Double), @p114='?' (DbType = Double), @p115='?' (DbType = Double), @p116='?' (DbType = Double), @p117='?' (DbType = Double), @p118='?' (DbType = Double), @p119='?' (DbType = Double), @p120='?' (DbType = Double), @p121='?' (DbType = Int64), @p122='?' (DbType = Double), @p123='?' (DbType = Double), @p124='?' (DbType = Double), @p125='?' (DbType = Double), @p126='?' (DbType = Int64), @p127='?' (DbType = Int64), @p128='?' (DbType = Int64), @p129='?' (DbType = Double), @p130='?' (DbType = Int64), @p131='?' (DbType = Int64), @p132='?' (DbType = DateTime2), @p133='?' (DbType = Double), @p134='?' (DbType = Double), @p135='?' (DbType = Double), @p136='?' (DbType = Double), @p137='?' (DbType = Int64), @p138='?' (DbType = Double), @p139='?' (DbType = Int64), @p140='?' (DbType = Double), @p141='?' (DbType = Double), @p142='?' (DbType = Double), @p143='?' (DbType = Double), @p144='?' (DbType = Double), @p145='?' (DbType = Int64), @p146='?' (Size = 4000), @p147='?' (DbType = Double), @p148='?' (DbType = Double), @p149='?' (DbType = Double), @p150='?' (DbType = Double), @p151='?' (Size = 450), @p152='?' (DbType = Double), @p153='?' (DbType = Double), @p154='?' (DbType = Double), @p155='?' (DbType = Double), @p156='?' (DbType = Double), @p157='?' (DbType = Double), @p158='?' (DbType = Double), @p159='?' (DbType = Double), @p160='?' (DbType = Int64), @p161='?' (DbType = Double), @p162='?' (DbType = Double), @p163='?' (DbType = Double), @p164='?' (DbType = Double), @p165='?' (DbType = Int64), @p166='?' (DbType = Int64), @p167='?' (DbType = Int64), @p168='?' (DbType = Double), @p169='?' (DbType = Int64), @p170='?' (DbType = Int64), @p171='?' (DbType = DateTime2), @p172='?' (DbType = Double), @p173='?' (DbType = Double), @p174='?' (DbType = Double), @p175='?' (DbType = Double), @p176='?' (DbType = Int64), @p177='?' (DbType = Double), @p178='?' (DbType = Int64), @p179='?' (DbType = Double), @p180='?' (DbType = Double), @p181='?' (DbType = Double), @p182='?' (DbType = Double), @p183='?' (DbType = Double), @p184='?' (DbType = Int64), @p185='?' (Size = 4000), @p186='?' (DbType = Double), @p187='?' (DbType = Double), @p188='?' (DbType = Double), @p189='?' (DbType = Double), @p190='?' (Size = 450), @p191='?' (DbType = Double), @p192='?' (DbType = Double), @p193='?' (DbType = Double), @p194='?' (DbType = Double), @p195='?' (DbType = Double), @p196='?' (DbType = Double), @p197='?' (DbType = Double), @p198='?' (DbType = Double), @p199='?' (DbType = Int64), @p200='?' (DbType = Double), @p201='?' (DbType = Double), @p202='?' (DbType = Double), @p203='?' (DbType = Double), @p204='?' (DbType = Int64), @p205='?' (DbType = Int64), @p206='?' (DbType = Int64), @p207='?' (DbType = Double), @p208='?' (DbType = Int64), @p209='?' (DbType = Int64), @p210='?' (DbType = DateTime2), @p211='?' (DbType = Double), @p212='?' (DbType = Double), @p213='?' (DbType = Double), @p214='?' (DbType = Double), @p215='?' (DbType = Int64), @p216='?' (DbType = Double), @p217='?' (DbType = Int64), @p218='?' (DbType = Double), @p219='?' (DbType = Double), @p220='?' (DbType = Double), @p221='?' (DbType = Double), @p222='?' (DbType = Double), @p223='?' (DbType = Int64), @p224='?' (Size = 4000), @p225='?' (DbType = Double), @p226='?' (DbType = Double), @p227='?' (DbType = Double), @p228='?' (DbType = Double), @p229='?' (Size = 450), @p230='?' (DbType = Double), @p231='?' (DbType = Double), @p232='?' (DbType = Double), @p233='?' (DbType = Double), @p234='?' (DbType = Double), @p235='?' (DbType = Double), @p236='?' (DbType = Double), @p237='?' (DbType = Double), @p238='?' (DbType = Int64), @p239='?' (DbType = Double), @p240='?' (DbType = Double), @p241='?' (DbType = Double), @p242='?' (DbType = Double), @p243='?' (DbType = Int64), @p244='?' (DbType = Int64), @p245='?' (DbType = Int64), @p246='?' (DbType = Double), @p247='?' (DbType = Int64), @p248='?' (DbType = Int64), @p249='?' (DbType = DateTime2), @p250='?' (DbType = Double), @p251='?' (DbType = Double), @p252='?' (DbType = Double), @p253='?' (DbType = Double), @p254='?' (DbType = Int64), @p255='?' (DbType = Double), @p256='?' (DbType = Int64), @p257='?' (DbType = Double), @p258='?' (DbType = Double), @p259='?' (DbType = Double), @p260='?' (DbType = Double), @p261='?' (DbType = Double), @p262='?' (DbType = Int64), @p263='?' (Size = 4000), @p264='?' (DbType = Double), @p265='?' (DbType = Double), @p266='?' (DbType = Double), @p267='?' (DbType = Double), @p268='?' (Size = 450), @p269='?' (DbType = Double), @p270='?' (DbType = Double), @p271='?' (DbType = Double), @p272='?' (DbType = Double), @p273='?' (DbType = Double), @p274='?' (DbType = Double), @p275='?' (DbType = Double), @p276='?' (DbType = Double), @p277='?' (DbType = Int64), @p278='?' (DbType = Double), @p279='?' (DbType = Double), @p280='?' (DbType = Double), @p281='?' (DbType = Double), @p282='?' (DbType = Int64), @p283='?' (DbType = Int64), @p284='?' (DbType = Int64), @p285='?' (DbType = Double), @p286='?' (DbType = Int64), @p287='?' (DbType = Int64), @p288='?' (DbType = DateTime2), @p289='?' (DbType = Double), @p290='?' (DbType = Double), @p291='?' (DbType = Double), @p292='?' (DbType = Double), @p293='?' (DbType = Int64), @p294='?' (DbType = Double), @p295='?' (DbType = Int64), @p296='?' (DbType = Double), @p297='?' (DbType = Double), @p298='?' (DbType = Double), @p299='?' (DbType = Double), @p300='?' (DbType = Double), @p301='?' (DbType = Int64), @p302='?' (Size = 4000), @p303='?' (DbType = Double), @p304='?' (DbType = Double), @p305='?' (DbType = Double), @p306='?' (DbType = Double), @p307='?' (Size = 450), @p308='?' (DbType = Double), @p309='?' (DbType = Double), @p310='?' (DbType = Double), @p311='?' (DbType = Double), @p312='?' (DbType = Double), @p313='?' (DbType = Double), @p314='?' (DbType = Double), @p315='?' (DbType = Double), @p316='?' (DbType = Int64), @p317='?' (DbType = Double), @p318='?' (DbType = Double), @p319='?' (DbType = Double), @p320='?' (DbType = Double), @p321='?' (DbType = Int64), @p322='?' (DbType = Int64), @p323='?' (DbType = Int64), @p324='?' (DbType = Double), @p325='?' (DbType = Int64), @p326='?' (DbType = Int64), @p327='?' (DbType = DateTime2), @p328='?' (DbType = Double), @p329='?' (DbType = Double), @p330='?' (DbType = Double), @p331='?' (DbType = Double), @p332='?' (DbType = Int64), @p333='?' (DbType = Double), @p334='?' (DbType = Int64), @p335='?' (DbType = Double), @p336='?' (DbType = Double), @p337='?' (DbType = Double), @p338='?' (DbType = Double), @p339='?' (DbType = Double), @p340='?' (DbType = Int64), @p341='?' (Size = 4000), @p342='?' (DbType = Double), @p343='?' (DbType = Double), @p344='?' (DbType = Double), @p345='?' (DbType = Double), @p346='?' (Size = 450), @p347='?' (DbType = Double), @p348='?' (DbType = Double), @p349='?' (DbType = Double), @p350='?' (DbType = Double), @p351='?' (DbType = Double), @p352='?' (DbType = Double), @p353='?' (DbType = Double), @p354='?' (DbType = Double), @p355='?' (DbType = Int64), @p356='?' (DbType = Double), @p357='?' (DbType = Double), @p358='?' (DbType = Double), @p359='?' (DbType = Double), @p360='?' (DbType = Int64), @p361='?' (DbType = Int64), @p362='?' (DbType = Int64), @p363='?' (DbType = Double), @p364='?' (DbType = Int64), @p365='?' (DbType = Int64), @p366='?' (DbType = DateTime2), @p367='?' (DbType = Double), @p368='?' (DbType = Double), @p369='?' (DbType = Double), @p370='?' (DbType = Double), @p371='?' (DbType = Int64), @p372='?' (DbType = Double), @p373='?' (DbType = Int64), @p374='?' (DbType = Double), @p375='?' (DbType = Double), @p376='?' (DbType = Double), @p377='?' (DbType = Double), @p378='?' (DbType = Double), @p379='?' (DbType = Int64), @p380='?' (Size = 4000), @p381='?' (DbType = Double), @p382='?' (DbType = Double), @p383='?' (DbType = Double), @p384='?' (DbType = Double), @p385='?' (Size = 450), @p386='?' (DbType = Double), @p387='?' (DbType = Double), @p388='?' (DbType = Double), @p389='?' (DbType = Double), @p390='?' (DbType = Double), @p391='?' (DbType = Double), @p392='?' (DbType = Double), @p393='?' (DbType = Double), @p394='?' (DbType = Int64), @p395='?' (DbType = Double), @p396='?' (DbType = Double), @p397='?' (DbType = Double), @p398='?' (DbType = Double), @p399='?' (DbType = Int64), @p400='?' (DbType = Int64), @p401='?' (DbType = Int64), @p402='?' (DbType = Double), @p403='?' (DbType = Int64), @p404='?' (DbType = Int64), @p405='?' (DbType = DateTime2), @p406='?' (DbType = Double), @p407='?' (DbType = Double), @p408='?' (DbType = Double), @p409='?' (DbType = Double), @p410='?' (DbType = Int64), @p411='?' (DbType = Double), @p412='?' (DbType = Int64), @p413='?' (DbType = Double), @p414='?' (DbType = Double), @p415='?' (DbType = Double), @p416='?' (DbType = Double), @p417='?' (DbType = Double), @p418='?' (DbType = Int64), @p419='?' (Size = 4000), @p420='?' (DbType = Double), @p421='?' (DbType = Double), @p422='?' (DbType = Double), @p423='?' (DbType = Double), @p424='?' (Size = 450), @p425='?' (DbType = Double), @p426='?' (DbType = Double), @p427='?' (DbType = Double), @p428='?' (DbType = Double), @p429='?' (DbType = Double), @p430='?' (DbType = Double), @p431='?' (DbType = Double), @p432='?' (DbType = Double), @p433='?' (DbType = Int64), @p434='?' (DbType = Double), @p435='?' (DbType = Double), @p436='?' (DbType = Double), @p437='?' (DbType = Double), @p438='?' (DbType = Int64), @p439='?' (DbType = Int64), @p440='?' (DbType = Int64), @p441='?' (DbType = Double), @p442='?' (DbType = Int64), @p443='?' (DbType = Int64), @p444='?' (DbType = DateTime2), @p445='?' (DbType = Double), @p446='?' (DbType = Double), @p447='?' (DbType = Double), @p448='?' (DbType = Double), @p449='?' (DbType = Int64), @p450='?' (DbType = Double), @p451='?' (DbType = Int64), @p452='?' (DbType = Double), @p453='?' (DbType = Double), @p454='?' (DbType = Double), @p455='?' (DbType = Double), @p456='?' (DbType = Double), @p457='?' (DbType = Int64), @p458='?' (Size = 4000), @p459='?' (DbType = Double), @p460='?' (DbType = Double), @p461='?' (DbType = Double), @p462='?' (DbType = Double), @p463='?' (Size = 450), @p464='?' (DbType = Double), @p465='?' (DbType = Double), @p466='?' (DbType = Double), @p467='?' (DbType = Double), @p468='?' (DbType = Double), @p469='?' (DbType = Double), @p470='?' (DbType = Double), @p471='?' (DbType = Double), @p472='?' (DbType = Int64), @p473='?' (DbType = Double), @p474='?' (DbType = Double), @p475='?' (DbType = Double), @p476='?' (DbType = Double), @p477='?' (DbType = Int64), @p478='?' (DbType = Int64), @p479='?' (DbType = Int64), @p480='?' (DbType = Double), @p481='?' (DbType = Int64), @p482='?' (DbType = Int64), @p483='?' (DbType = DateTime2), @p484='?' (DbType = Double), @p485='?' (DbType = Double), @p486='?' (DbType = Double), @p487='?' (DbType = Double), @p488='?' (DbType = Int64), @p489='?' (DbType = Double), @p490='?' (DbType = Int64), @p491='?' (DbType = Double), @p492='?' (DbType = Double), @p493='?' (DbType = Double), @p494='?' (DbType = Double), @p495='?' (DbType = Double), @p496='?' (DbType = Int64), @p497='?' (Size = 4000), @p498='?' (DbType = Double), @p499='?' (DbType = Double), @p500='?' (DbType = Double), @p501='?' (DbType = Double), @p502='?' (Size = 450), @p503='?' (DbType = Double), @p504='?' (DbType = Double), @p505='?' (DbType = Double), @p506='?' (DbType = Double), @p507='?' (DbType = Double), @p508='?' (DbType = Double), @p509='?' (DbType = Double), @p510='?' (DbType = Double), @p511='?' (DbType = Int64), @p512='?' (DbType = Double), @p513='?' (DbType = Double), @p514='?' (DbType = Double), @p515='?' (DbType = Double), @p516='?' (DbType = Int64), @p517='?' (DbType = Int64), @p518='?' (DbType = Int64), @p519='?' (DbType = Double), @p520='?' (DbType = Int64), @p521='?' (DbType = Int64), @p522='?' (DbType = DateTime2), @p523='?' (DbType = Double), @p524='?' (DbType = Double), @p525='?' (DbType = Double), @p526='?' (DbType = Double), @p527='?' (DbType = Int64), @p528='?' (DbType = Double), @p529='?' (DbType = Int64), @p530='?' (DbType = Double), @p531='?' (DbType = Double), @p532='?' (DbType = Double), @p533='?' (DbType = Double), @p534='?' (DbType = Double), @p535='?' (DbType = Int64), @p536='?' (Size = 4000), @p537='?' (DbType = Double), @p538='?' (DbType = Double), @p539='?' (DbType = Double), @p540='?' (DbType = Double), @p541='?' (Size = 450), @p542='?' (DbType = Double), @p543='?' (DbType = Double), @p544='?' (DbType = Double), @p545='?' (DbType = Double), @p546='?' (DbType = Double), @p547='?' (DbType = Double), @p548='?' (DbType = Double), @p549='?' (DbType = Double), @p550='?' (DbType = Int64), @p551='?' (DbType = Double), @p552='?' (DbType = Double), @p553='?' (DbType = Double), @p554='?' (DbType = Double), @p555='?' (DbType = Int64), @p556='?' (DbType = Int64), @p557='?' (DbType = Int64), @p558='?' (DbType = Double), @p559='?' (DbType = Int64), @p560='?' (DbType = Int64), @p561='?' (DbType = DateTime2), @p562='?' (DbType = Double), @p563='?' (DbType = Double), @p564='?' (DbType = Double), @p565='?' (DbType = Double), @p566='?' (DbType = Int64), @p567='?' (DbType = Double), @p568='?' (DbType = Int64), @p569='?' (DbType = Double), @p570='?' (DbType = Double), @p571='?' (DbType = Double), @p572='?' (DbType = Double), @p573='?' (DbType = Double), @p574='?' (DbType = Int64), @p575='?' (Size = 4000), @p576='?' (DbType = Double), @p577='?' (DbType = Double), @p578='?' (DbType = Double), @p579='?' (DbType = Double), @p580='?' (Size = 450), @p581='?' (DbType = Double), @p582='?' (DbType = Double), @p583='?' (DbType = Double), @p584='?' (DbType = Double), @p585='?' (DbType = Double), @p586='?' (DbType = Double), @p587='?' (DbType = Double), @p588='?' (DbType = Double), @p589='?' (DbType = Int64), @p590='?' (DbType = Double), @p591='?' (DbType = Double), @p592='?' (DbType = Double), @p593='?' (DbType = Double), @p594='?' (DbType = Int64), @p595='?' (DbType = Int64), @p596='?' (DbType = Int64), @p597='?' (DbType = Double), @p598='?' (DbType = Int64), @p599='?' (DbType = Int64), @p600='?' (DbType = DateTime2), @p601='?' (DbType = Double), @p602='?' (DbType = Double), @p603='?' (DbType = Double), @p604='?' (DbType = Double), @p605='?' (DbType = Int64), @p606='?' (DbType = Double), @p607='?' (DbType = Int64), @p608='?' (DbType = Double), @p609='?' (DbType = Double), @p610='?' (DbType = Double), @p611='?' (DbType = Double), @p612='?' (DbType = Double), @p613='?' (DbType = Int64), @p614='?' (Size = 4000), @p615='?' (DbType = Double), @p616='?' (DbType = Double), @p617='?' (DbType = Double), @p618='?' (DbType = Double), @p619='?' (Size = 450), @p620='?' (DbType = Double), @p621='?' (DbType = Double), @p622='?' (DbType = Double), @p623='?' (DbType = Double), @p624='?' (DbType = Double), @p625='?' (DbType = Double), @p626='?' (DbType = Double), @p627='?' (DbType = Double), @p628='?' (DbType = Int64), @p629='?' (DbType = Double), @p630='?' (DbType = Double), @p631='?' (DbType = Double), @p632='?' (DbType = Double), @p633='?' (DbType = Int64), @p634='?' (DbType = Int64), @p635='?' (DbType = Int64), @p636='?' (DbType = Double), @p637='?' (DbType = Int64), @p638='?' (DbType = Int64), @p639='?' (DbType = DateTime2), @p640='?' (DbType = Double), @p641='?' (DbType = Double), @p642='?' (DbType = Double), @p643='?' (DbType = Double), @p644='?' (DbType = Int64), @p645='?' (DbType = Double), @p646='?' (DbType = Int64), @p647='?' (DbType = Double), @p648='?' (DbType = Double), @p649='?' (DbType = Double), @p650='?' (DbType = Double), @p651='?' (DbType = Double), @p652='?' (DbType = Int64), @p653='?' (Size = 4000), @p654='?' (DbType = Double), @p655='?' (DbType = Double), @p656='?' (DbType = Double), @p657='?' (DbType = Double), @p658='?' (Size = 450), @p659='?' (DbType = Double), @p660='?' (DbType = Double), @p661='?' (DbType = Double), @p662='?' (DbType = Double), @p663='?' (DbType = Double), @p664='?' (DbType = Double), @p665='?' (DbType = Double), @p666='?' (DbType = Double), @p667='?' (DbType = Int64), @p668='?' (DbType = Double), @p669='?' (DbType = Double), @p670='?' (DbType = Double), @p671='?' (DbType = Double), @p672='?' (DbType = Int64), @p673='?' (DbType = Int64), @p674='?' (DbType = Int64), @p675='?' (DbType = Double), @p676='?' (DbType = Int64), @p677='?' (DbType = Int64), @p678='?' (DbType = DateTime2), @p679='?' (DbType = Double), @p680='?' (DbType = Double), @p681='?' (DbType = Double), @p682='?' (DbType = Double), @p683='?' (DbType = Int64), @p684='?' (DbType = Double), @p685='?' (DbType = Int64), @p686='?' (DbType = Double), @p687='?' (DbType = Double), @p688='?' (DbType = Double), @p689='?' (DbType = Double), @p690='?' (DbType = Double), @p691='?' (DbType = Int64), @p692='?' (Size = 4000), @p693='?' (DbType = Double), @p694='?' (DbType = Double), @p695='?' (DbType = Double), @p696='?' (DbType = Double), @p697='?' (Size = 450), @p698='?' (DbType = Double), @p699='?' (DbType = Double), @p700='?' (DbType = Double), @p701='?' (DbType = Double), @p702='?' (DbType = Double), @p703='?' (DbType = Double), @p704='?' (DbType = Double), @p705='?' (DbType = Double), @p706='?' (DbType = Int64), @p707='?' (DbType = Double), @p708='?' (DbType = Double), @p709='?' (DbType = Double), @p710='?' (DbType = Double), @p711='?' (DbType = Int64), @p712='?' (DbType = Int64), @p713='?' (DbType = Int64), @p714='?' (DbType = Double), @p715='?' (DbType = Int64), @p716='?' (DbType = Int64), @p717='?' (DbType = DateTime2), @p718='?' (DbType = Double), @p719='?' (DbType = Double), @p720='?' (DbType = Double), @p721='?' (DbType = Double), @p722='?' (DbType = Int64), @p723='?' (DbType = Double), @p724='?' (DbType = Int64), @p725='?' (DbType = Double), @p726='?' (DbType = Double), @p727='?' (DbType = Double), @p728='?' (DbType = Double), @p729='?' (DbType = Double), @p730='?' (DbType = Int64), @p731='?' (Size = 4000), @p732='?' (DbType = Double), @p733='?' (DbType = Double), @p734='?' (DbType = Double), @p735='?' (DbType = Double), @p736='?' (Size = 450), @p737='?' (DbType = Double), @p738='?' (DbType = Double), @p739='?' (DbType = Double), @p740='?' (DbType = Double), @p741='?' (DbType = Double), @p742='?' (DbType = Double), @p743='?' (DbType = Double), @p744='?' (DbType = Double), @p745='?' (DbType = Int64), @p746='?' (DbType = Double), @p747='?' (DbType = Double), @p748='?' (DbType = Double), @p749='?' (DbType = Double), @p750='?' (DbType = Int64), @p751='?' (DbType = Int64), @p752='?' (DbType = Int64), @p753='?' (DbType = Double), @p754='?' (DbType = Int64), @p755='?' (DbType = Int64), @p756='?' (DbType = DateTime2), @p757='?' (DbType = Double), @p758='?' (DbType = Double), @p759='?' (DbType = Double), @p760='?' (DbType = Double), @p761='?' (DbType = Int64), @p762='?' (DbType = Double), @p763='?' (DbType = Int64), @p764='?' (DbType = Double), @p765='?' (DbType = Double), @p766='?' (DbType = Double), @p767='?' (DbType = Double), @p768='?' (DbType = Double), @p769='?' (DbType = Int64), @p770='?' (Size = 4000), @p771='?' (DbType = Double), @p772='?' (DbType = Double), @p773='?' (DbType = Double), @p774='?' (DbType = Double), @p775='?' (Size = 450), @p776='?' (DbType = Double), @p777='?' (DbType = Double), @p778='?' (DbType = Double), @p779='?' (DbType = Double), @p780='?' (DbType = Double), @p781='?' (DbType = Double), @p782='?' (DbType = Double), @p783='?' (DbType = Double), @p784='?' (DbType = Int64), @p785='?' (DbType = Double), @p786='?' (DbType = Double), @p787='?' (DbType = Double), @p788='?' (DbType = Double), @p789='?' (DbType = Int64), @p790='?' (DbType = Int64), @p791='?' (DbType = Int64), @p792='?' (DbType = Double), @p793='?' (DbType = Int64), @p794='?' (DbType = Int64), @p795='?' (DbType = DateTime2), @p796='?' (DbType = Double), @p797='?' (DbType = Double), @p798='?' (DbType = Double), @p799='?' (DbType = Double), @p800='?' (DbType = Int64), @p801='?' (DbType = Double), @p802='?' (DbType = Int64), @p803='?' (DbType = Double), @p804='?' (DbType = Double), @p805='?' (DbType = Double), @p806='?' (DbType = Double), @p807='?' (DbType = Double), @p808='?' (DbType = Int64), @p809='?' (Size = 4000), @p810='?' (DbType = Double), @p811='?' (DbType = Double), @p812='?' (DbType = Double), @p813='?' (DbType = Double), @p814='?' (Size = 450), @p815='?' (DbType = Double), @p816='?' (DbType = Double), @p817='?' (DbType = Double), @p818='?' (DbType = Double), @p819='?' (DbType = Double), @p820='?' (DbType = Double), @p821='?' (DbType = Double), @p822='?' (DbType = Double), @p823='?' (DbType = Int64), @p824='?' (DbType = Double), @p825='?' (DbType = Double), @p826='?' (DbType = Double), @p827='?' (DbType = Double), @p828='?' (DbType = Int64), @p829='?' (DbType = Int64), @p830='?' (DbType = Int64), @p831='?' (DbType = Double), @p832='?' (DbType = Int64), @p833='?' (DbType = Int64), @p834='?' (DbType = DateTime2), @p835='?' (DbType = Double), @p836='?' (DbType = Double), @p837='?' (DbType = Double), @p838='?' (DbType = Double), @p839='?' (DbType = Int64), @p840='?' (DbType = Double), @p841='?' (DbType = Int64), @p842='?' (DbType = Double), @p843='?' (DbType = Double), @p844='?' (DbType = Double), @p845='?' (DbType = Double), @p846='?' (DbType = Double), @p847='?' (DbType = Int64), @p848='?' (Size = 4000), @p849='?' (DbType = Double), @p850='?' (DbType = Double), @p851='?' (DbType = Double), @p852='?' (DbType = Double), @p853='?' (Size = 450), @p854='?' (DbType = Double), @p855='?' (DbType = Double), @p856='?' (DbType = Double), @p857='?' (DbType = Double), @p858='?' (DbType = Double), @p859='?' (DbType = Double), @p860='?' (DbType = Double), @p861='?' (DbType = Double), @p862='?' (DbType = Int64), @p863='?' (DbType = Double), @p864='?' (DbType = Double), @p865='?' (DbType = Double), @p866='?' (DbType = Double), @p867='?' (DbType = Int64), @p868='?' (DbType = Int64), @p869='?' (DbType = Int64), @p870='?' (DbType = Double), @p871='?' (DbType = Int64), @p872='?' (DbType = Int64), @p873='?' (DbType = DateTime2), @p874='?' (DbType = Double), @p875='?' (DbType = Double), @p876='?' (DbType = Double), @p877='?' (DbType = Double), @p878='?' (DbType = Int64), @p879='?' (DbType = Double), @p880='?' (DbType = Int64), @p881='?' (DbType = Double), @p882='?' (DbType = Double), @p883='?' (DbType = Double), @p884='?' (DbType = Double), @p885='?' (DbType = Double), @p886='?' (DbType = Int64), @p887='?' (Size = 4000), @p888='?' (DbType = Double), @p889='?' (DbType = Double), @p890='?' (DbType = Double), @p891='?' (DbType = Double), @p892='?' (Size = 450), @p893='?' (DbType = Double), @p894='?' (DbType = Double), @p895='?' (DbType = Double), @p896='?' (DbType = Double), @p897='?' (DbType = Double), @p898='?' (DbType = Double), @p899='?' (DbType = Double), @p900='?' (DbType = Double), @p901='?' (DbType = Int64), @p902='?' (DbType = Double), @p903='?' (DbType = Double), @p904='?' (DbType = Double), @p905='?' (DbType = Double), @p906='?' (DbType = Int64), @p907='?' (DbType = Int64), @p908='?' (DbType = Int64), @p909='?' (DbType = Double), @p910='?' (DbType = Int64), @p911='?' (DbType = Int64), @p912='?' (DbType = DateTime2), @p913='?' (DbType = Double), @p914='?' (DbType = Double), @p915='?' (DbType = Double), @p916='?' (DbType = Double), @p917='?' (DbType = Int64), @p918='?' (DbType = Double), @p919='?' (DbType = Int64), @p920='?' (DbType = Double), @p921='?' (DbType = Double), @p922='?' (DbType = Double), @p923='?' (DbType = Double), @p924='?' (DbType = Double), @p925='?' (DbType = Int64), @p926='?' (Size = 4000), @p927='?' (DbType = Double), @p928='?' (DbType = Double), @p929='?' (DbType = Double), @p930='?' (DbType = Double), @p931='?' (Size = 450), @p932='?' (DbType = Double), @p933='?' (DbType = Double), @p934='?' (DbType = Double), @p935='?' (DbType = Double), @p936='?' (DbType = Double), @p937='?' (DbType = Double), @p938='?' (DbType = Double), @p939='?' (DbType = Double), @p940='?' (DbType = Int64), @p941='?' (DbType = Double), @p942='?' (DbType = Double), @p943='?' (DbType = Double), @p944='?' (DbType = Double), @p945='?' (DbType = Int64), @p946='?' (DbType = Int64), @p947='?' (DbType = Int64), @p948='?' (DbType = Double), @p949='?' (DbType = Int64), @p950='?' (DbType = Int64), @p951='?' (DbType = DateTime2), @p952='?' (DbType = Double), @p953='?' (DbType = Double), @p954='?' (DbType = Double), @p955='?' (DbType = Double), @p956='?' (DbType = Int64), @p957='?' (DbType = Double), @p958='?' (DbType = Int64), @p959='?' (DbType = Double), @p960='?' (DbType = Double), @p961='?' (DbType = Double), @p962='?' (DbType = Double), @p963='?' (DbType = Double), @p964='?' (DbType = Int64), @p965='?' (Size = 4000), @p966='?' (DbType = Double), @p967='?' (DbType = Double), @p968='?' (DbType = Double), @p969='?' (DbType = Double), @p970='?' (Size = 450), @p971='?' (DbType = Double), @p972='?' (DbType = Double), @p973='?' (DbType = Double), @p974='?' (DbType = Double), @p975='?' (DbType = Double), @p976='?' (DbType = Double), @p977='?' (DbType = Double), @p978='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
DECLARE @inserted0 TABLE ([Id] int, [_Position] [int]);
MERGE [BalanceSheetAnnualReport] USING (
VALUES (@p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21, @p22, @p23, @p24, @p25, @p26, @p27, @p28, @p29, @p30, @p31, @p32, @p33, @p34, @p35, @p36, @p37, @p38, @p39, @p40, @p41, @p42, 0),
(@p43, @p44, @p45, @p46, @p47, @p48, @p49, @p50, @p51, @p52, @p53, @p54, @p55, @p56, @p57, @p58, @p59, @p60, @p61, @p62, @p63, @p64, @p65, @p66, @p67, @p68, @p69, @p70, @p71, @p72, @p73, @p74, @p75, @p76, @p77, @p78, @p79, @p80, @p81, 1),
(@p82, @p83, @p84, @p85, @p86, @p87, @p88, @p89, @p90, @p91, @p92, @p93, @p94, @p95, @p96, @p97, @p98, @p99, @p100, @p101, @p102, @p103, @p104, @p105, @p106, @p107, @p108, @p109, @p110, @p111, @p112, @p113, @p114, @p115, @p116, @p117, @p118, @p119, @p120, 2),
(@p121, @p122, @p123, @p124, @p125, @p126, @p127, @p128, @p129, @p130, @p131, @p132, @p133, @p134, @p135, @p136, @p137, @p138, @p139, @p140, @p141, @p142, @p143, @p144, @p145, @p146, @p147, @p148, @p149, @p150, @p151, @p152, @p153, @p154, @p155, @p156, @p157, @p158, @p159, 3),
(@p160, @p161, @p162, @p163, @p164, @p165, @p166, @p167, @p168, @p169, @p170, @p171, @p172, @p173, @p174, @p175, @p176, @p177, @p178, @p179, @p180, @p181, @p182, @p183, @p184, @p185, @p186, @p187, @p188, @p189, @p190, @p191, @p192, @p193, @p194, @p195, @p196, @p197, @p198, 4)) AS i ([AccumulatedDepreciationAmortizationPPE], [CapitalLeaseObligations], [CashAndCashEquivalentsAtCarryingValue], [CashAndShortTermInvestments], [CommonStock], [CommonStockSharesOutstanding], [CurrentAccountsPayable], [CurrentDebt], [CurrentLongTermDebt], [CurrentNetReceivables], [DeferredRevenue], [FiscalDateEnding], [Goodwill], [IntangibleAssets], [IntangibleAssetsExcludingGoodwill], [Inventory], [Investments], [LongTermDebt], [LongTermDebtNoncurrent], [LongTermInvestments], [OtherCurrentAssets], [OtherCurrentLiabilities], [OtherNonCurrentAssets], [OtherNonCurrentLiabilities], [PropertyPlantEquipment], [ReportedCurrency], [RetainedEarnings], [ShortLongTermDebtTotal], [ShortTermDebt], [ShortTermInvestments], [Symbol], [TotalAssets], [TotalCurrentAssets], [TotalCurrentLiabilities], [TotalLiabilities], [TotalNonCurrentAssets], [TotalNonCurrentLiabilities], [TotalShareholderEquity], [TreasuryStock], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([AccumulatedDepreciationAmortizationPPE], [CapitalLeaseObligations], [CashAndCashEquivalentsAtCarryingValue], [CashAndShortTermInvestments], [CommonStock], [CommonStockSharesOutstanding], [CurrentAccountsPayable], [CurrentDebt], [CurrentLongTermDebt], [CurrentNetReceivables], [DeferredRevenue], [FiscalDateEnding], [Goodwill], [IntangibleAssets], [IntangibleAssetsExcludingGoodwill], [Inventory], [Investments], [LongTermDebt], [LongTermDebtNoncurrent], [LongTermInvestments], [OtherCurrentAssets], [OtherCurrentLiabilities], [OtherNonCurrentAssets], [OtherNonCurrentLiabilities], [PropertyPlantEquipment], [ReportedCurrency], [RetainedEarnings], [ShortLongTermDebtTotal], [ShortTermDebt], [ShortTermInvestments], [Symbol], [TotalAssets], [TotalCurrentAssets], [TotalCurrentLiabilities], [TotalLiabilities], [TotalNonCurrentAssets], [TotalNonCurrentLiabilities], [TotalShareholderEquity], [TreasuryStock])
VALUES (i.[AccumulatedDepreciationAmortizationPPE], i.[CapitalLeaseObligations], i.[CashAndCashEquivalentsAtCarryingValue], i.[CashAndShortTermInvestments], i.[CommonStock], i.[CommonStockSharesOutstanding], i.[CurrentAccountsPayable], i.[CurrentDebt], i.[CurrentLongTermDebt], i.[CurrentNetReceivables], i.[DeferredRevenue], i.[FiscalDateEnding], i.[Goodwill], i.[IntangibleAssets], i.[IntangibleAssetsExcludingGoodwill], i.[Inventory], i.[Investments], i.[LongTermDebt], i.[LongTermDebtNoncurrent], i.[LongTermInvestments], i.[OtherCurrentAssets], i.[OtherCurrentLiabilities], i.[OtherNonCurrentAssets], i.[OtherNonCurrentLiabilities], i.[PropertyPlantEquipment], i.[ReportedCurrency], i.[RetainedEarnings], i.[ShortLongTermDebtTotal], i.[ShortTermDebt], i.[ShortTermInvestments], i.[Symbol], i.[TotalAssets], i.[TotalCurrentAssets], i.[TotalCurrentLiabilities], i.[TotalLiabilities], i.[TotalNonCurrentAssets], i.[TotalNonCurrentLiabilities], i.[TotalShareholderEquity], i.[TreasuryStock])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted0;

SELECT [i].[Id] FROM @inserted0 i
ORDER BY [i].[_Position];

DECLARE @inserted5 TABLE ([Id] int, [_Position] [int]);
MERGE [BalanceSheetQuarterlyReports] USING (
VALUES (@p199, @p200, @p201, @p202, @p203, @p204, @p205, @p206, @p207, @p208, @p209, @p210, @p211, @p212, @p213, @p214, @p215, @p216, @p217, @p218, @p219, @p220, @p221, @p222, @p223, @p224, @p225, @p226, @p227, @p228, @p229, @p230, @p231, @p232, @p233, @p234, @p235, @p236, @p237, 0),
(@p238, @p239, @p240, @p241, @p242, @p243, @p244, @p245, @p246, @p247, @p248, @p249, @p250, @p251, @p252, @p253, @p254, @p255, @p256, @p257, @p258, @p259, @p260, @p261, @p262, @p263, @p264, @p265, @p266, @p267, @p268, @p269, @p270, @p271, @p272, @p273, @p274, @p275, @p276, 1),
(@p277, @p278, @p279, @p280, @p281, @p282, @p283, @p284, @p285, @p286, @p287, @p288, @p289, @p290, @p291, @p292, @p293, @p294, @p295, @p296, @p297, @p298, @p299, @p300, @p301, @p302, @p303, @p304, @p305, @p306, @p307, @p308, @p309, @p310, @p311, @p312, @p313, @p314, @p315, 2),
(@p316, @p317, @p318, @p319, @p320, @p321, @p322, @p323, @p324, @p325, @p326, @p327, @p328, @p329, @p330, @p331, @p332, @p333, @p334, @p335, @p336, @p337, @p338, @p339, @p340, @p341, @p342, @p343, @p344, @p345, @p346, @p347, @p348, @p349, @p350, @p351, @p352, @p353, @p354, 3),
(@p355, @p356, @p357, @p358, @p359, @p360, @p361, @p362, @p363, @p364, @p365, @p366, @p367, @p368, @p369, @p370, @p371, @p372, @p373, @p374, @p375, @p376, @p377, @p378, @p379, @p380, @p381, @p382, @p383, @p384, @p385, @p386, @p387, @p388, @p389, @p390, @p391, @p392, @p393, 4),
(@p394, @p395, @p396, @p397, @p398, @p399, @p400, @p401, @p402, @p403, @p404, @p405, @p406, @p407, @p408, @p409, @p410, @p411, @p412, @p413, @p414, @p415, @p416, @p417, @p418, @p419, @p420, @p421, @p422, @p423, @p424, @p425, @p426, @p427, @p428, @p429, @p430, @p431, @p432, 5),
(@p433, @p434, @p435, @p436, @p437, @p438, @p439, @p440, @p441, @p442, @p443, @p444, @p445, @p446, @p447, @p448, @p449, @p450, @p451, @p452, @p453, @p454, @p455, @p456, @p457, @p458, @p459, @p460, @p461, @p462, @p463, @p464, @p465, @p466, @p467, @p468, @p469, @p470, @p471, 6),
(@p472, @p473, @p474, @p475, @p476, @p477, @p478, @p479, @p480, @p481, @p482, @p483, @p484, @p485, @p486, @p487, @p488, @p489, @p490, @p491, @p492, @p493, @p494, @p495, @p496, @p497, @p498, @p499, @p500, @p501, @p502, @p503, @p504, @p505, @p506, @p507, @p508, @p509, @p510, 7),
(@p511, @p512, @p513, @p514, @p515, @p516, @p517, @p518, @p519, @p520, @p521, @p522, @p523, @p524, @p525, @p526, @p527, @p528, @p529, @p530, @p531, @p532, @p533, @p534, @p535, @p536, @p537, @p538, @p539, @p540, @p541, @p542, @p543, @p544, @p545, @p546, @p547, @p548, @p549, 8),
(@p550, @p551, @p552, @p553, @p554, @p555, @p556, @p557, @p558, @p559, @p560, @p561, @p562, @p563, @p564, @p565, @p566, @p567, @p568, @p569, @p570, @p571, @p572, @p573, @p574, @p575, @p576, @p577, @p578, @p579, @p580, @p581, @p582, @p583, @p584, @p585, @p586, @p587, @p588, 9),
(@p589, @p590, @p591, @p592, @p593, @p594, @p595, @p596, @p597, @p598, @p599, @p600, @p601, @p602, @p603, @p604, @p605, @p606, @p607, @p608, @p609, @p610, @p611, @p612, @p613, @p614, @p615, @p616, @p617, @p618, @p619, @p620, @p621, @p622, @p623, @p624, @p625, @p626, @p627, 10),
(@p628, @p629, @p630, @p631, @p632, @p633, @p634, @p635, @p636, @p637, @p638, @p639, @p640, @p641, @p642, @p643, @p644, @p645, @p646, @p647, @p648, @p649, @p650, @p651, @p652, @p653, @p654, @p655, @p656, @p657, @p658, @p659, @p660, @p661, @p662, @p663, @p664, @p665, @p666, 11),
(@p667, @p668, @p669, @p670, @p671, @p672, @p673, @p674, @p675, @p676, @p677, @p678, @p679, @p680, @p681, @p682, @p683, @p684, @p685, @p686, @p687, @p688, @p689, @p690, @p691, @p692, @p693, @p694, @p695, @p696, @p697, @p698, @p699, @p700, @p701, @p702, @p703, @p704, @p705, 12),
(@p706, @p707, @p708, @p709, @p710, @p711, @p712, @p713, @p714, @p715, @p716, @p717, @p718, @p719, @p720, @p721, @p722, @p723, @p724, @p725, @p726, @p727, @p728, @p729, @p730, @p731, @p732, @p733, @p734, @p735, @p736, @p737, @p738, @p739, @p740, @p741, @p742, @p743, @p744, 13),
(@p745, @p746, @p747, @p748, @p749, @p750, @p751, @p752, @p753, @p754, @p755, @p756, @p757, @p758, @p759, @p760, @p761, @p762, @p763, @p764, @p765, @p766, @p767, @p768, @p769, @p770, @p771, @p772, @p773, @p774, @p775, @p776, @p777, @p778, @p779, @p780, @p781, @p782, @p783, 14),
(@p784, @p785, @p786, @p787, @p788, @p789, @p790, @p791, @p792, @p793, @p794, @p795, @p796, @p797, @p798, @p799, @p800, @p801, @p802, @p803, @p804, @p805, @p806, @p807, @p808, @p809, @p810, @p811, @p812, @p813, @p814, @p815, @p816, @p817, @p818, @p819, @p820, @p821, @p822, 15),
(@p823, @p824, @p825, @p826, @p827, @p828, @p829, @p830, @p831, @p832, @p833, @p834, @p835, @p836, @p837, @p838, @p839, @p840, @p841, @p842, @p843, @p844, @p845, @p846, @p847, @p848, @p849, @p850, @p851, @p852, @p853, @p854, @p855, @p856, @p857, @p858, @p859, @p860, @p861, 16),
(@p862, @p863, @p864, @p865, @p866, @p867, @p868, @p869, @p870, @p871, @p872, @p873, @p874, @p875, @p876, @p877, @p878, @p879, @p880, @p881, @p882, @p883, @p884, @p885, @p886, @p887, @p888, @p889, @p890, @p891, @p892, @p893, @p894, @p895, @p896, @p897, @p898, @p899, @p900, 17),
(@p901, @p902, @p903, @p904, @p905, @p906, @p907, @p908, @p909, @p910, @p911, @p912, @p913, @p914, @p915, @p916, @p917, @p918, @p919, @p920, @p921, @p922, @p923, @p924, @p925, @p926, @p927, @p928, @p929, @p930, @p931, @p932, @p933, @p934, @p935, @p936, @p937, @p938, @p939, 18),
(@p940, @p941, @p942, @p943, @p944, @p945, @p946, @p947, @p948, @p949, @p950, @p951, @p952, @p953, @p954, @p955, @p956, @p957, @p958, @p959, @p960, @p961, @p962, @p963, @p964, @p965, @p966, @p967, @p968, @p969, @p970, @p971, @p972, @p973, @p974, @p975, @p976, @p977, @p978, 19)) AS i ([AccumulatedDepreciationAmortizationPPE], [CapitalLeaseObligations], [CashAndCashEquivalentsAtCarryingValue], [CashAndShortTermInvestments], [CommonStock], [CommonStockSharesOutstanding], [CurrentAccountsPayable], [CurrentDebt], [CurrentLongTermDebt], [CurrentNetReceivables], [DeferredRevenue], [FiscalDateEnding], [Goodwill], [IntangibleAssets], [IntangibleAssetsExcludingGoodwill], [Inventory], [Investments], [LongTermDebt], [LongTermDebtNoncurrent], [LongTermInvestments], [OtherCurrentAssets], [OtherCurrentLiabilities], [OtherNonCurrentAssets], [OtherNonCurrentLiabilities], [PropertyPlantEquipment], [ReportedCurrency], [RetainedEarnings], [ShortLongTermDebtTotal], [ShortTermDebt], [ShortTermInvestments], [Symbol], [TotalAssets], [TotalCurrentAssets], [TotalCurrentLiabilities], [TotalLiabilities], [TotalNonCurrentAssets], [TotalNonCurrentLiabilities], [TotalShareholderEquity], [TreasuryStock], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([AccumulatedDepreciationAmortizationPPE], [CapitalLeaseObligations], [CashAndCashEquivalentsAtCarryingValue], [CashAndShortTermInvestments], [CommonStock], [CommonStockSharesOutstanding], [CurrentAccountsPayable], [CurrentDebt], [CurrentLongTermDebt], [CurrentNetReceivables], [DeferredRevenue], [FiscalDateEnding], [Goodwill], [IntangibleAssets], [IntangibleAssetsExcludingGoodwill], [Inventory], [Investments], [LongTermDebt], [LongTermDebtNoncurrent], [LongTermInvestments], [OtherCurrentAssets], [OtherCurrentLiabilities], [OtherNonCurrentAssets], [OtherNonCurrentLiabilities], [PropertyPlantEquipment], [ReportedCurrency], [RetainedEarnings], [ShortLongTermDebtTotal], [ShortTermDebt], [ShortTermInvestments], [Symbol], [TotalAssets], [TotalCurrentAssets], [TotalCurrentLiabilities], [TotalLiabilities], [TotalNonCurrentAssets], [TotalNonCurrentLiabilities], [TotalShareholderEquity], [TreasuryStock])
VALUES (i.[AccumulatedDepreciationAmortizationPPE], i.[CapitalLeaseObligations], i.[CashAndCashEquivalentsAtCarryingValue], i.[CashAndShortTermInvestments], i.[CommonStock], i.[CommonStockSharesOutstanding], i.[CurrentAccountsPayable], i.[CurrentDebt], i.[CurrentLongTermDebt], i.[CurrentNetReceivables], i.[DeferredRevenue], i.[FiscalDateEnding], i.[Goodwill], i.[IntangibleAssets], i.[IntangibleAssetsExcludingGoodwill], i.[Inventory], i.[Investments], i.[LongTermDebt], i.[LongTermDebtNoncurrent], i.[LongTermInvestments], i.[OtherCurrentAssets], i.[OtherCurrentLiabilities], i.[OtherNonCurrentAssets], i.[OtherNonCurrentLiabilities], i.[PropertyPlantEquipment], i.[ReportedCurrency], i.[RetainedEarnings], i.[ShortLongTermDebtTotal], i.[ShortTermDebt], i.[ShortTermInvestments], i.[Symbol], i.[TotalAssets], i.[TotalCurrentAssets], i.[TotalCurrentLiabilities], i.[TotalLiabilities], i.[TotalNonCurrentAssets], i.[TotalNonCurrentLiabilities], i.[TotalShareholderEquity], i.[TreasuryStock])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted5;

SELECT [i].[Id] FROM @inserted5 i
ORDER BY [i].[_Position];
2022-05-12 01:04:26.642 +03:00 [INF] AddOrUpdate run successful.
2022-05-12 01:04:28.212 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CashFlow with Symbol ATSG
2022-05-12 01:04:28.214 +03:00 [INF] Generating URI for CASH_FLOW with params: symbol: ATSG
2022-05-12 01:04:28.214 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=CASH_FLOW&symbol=ATSG
2022-05-12 01:04:28.215 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=CASH_FLOW&symbol=ATSG".
2022-05-12 01:04:28.574 +03:00 [INF] Response has success status code
2022-05-12 01:04:28.575 +03:00 [INF] Trying to deserialize response.
2022-05-12 01:04:28.576 +03:00 [ERR] Failed to refresh  entity SaluteStocksAPI.Models.FundamentalData.CashFlow with Symbol ATSG
Newtonsoft.Json.JsonSerializationException: Error converting value "-3.12" to type 'System.Nullable`1[System.Int64]'. Path 'annualReports[0].changeInInventory', line 15, position 40.
 ---> System.FormatException: Input string was not in a correct format.
   at System.Number.ThrowOverflowOrFormatException(ParsingStatus status, TypeCode type)
   at System.String.System.IConvertible.ToInt64(IFormatProvider provider)
   at System.Convert.ChangeType(Object value, Type conversionType, IFormatProvider provider)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)
   --- End of inner exception stack trace ---
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(IList list, JsonReader reader, JsonArrayContract contract, JsonProperty containerProperty, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, Object existingValue, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)
   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)
   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)
   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value, JsonSerializerSettings settings)
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCashFlow(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 96
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:04:53.058 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CompanyOverview with Symbol BKH
2022-05-12 01:04:53.062 +03:00 [INF] Generating URI for OVERVIEW with params: symbol: BKH
2022-05-12 01:04:53.063 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=OVERVIEW&symbol=BKH
2022-05-12 01:04:53.063 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=OVERVIEW&symbol=BKH".
2022-05-12 01:04:53.297 +03:00 [INF] Response has success status code
2022-05-12 01:04:53.298 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.CompanyOverview for symbol BKH
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyOverview(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 116
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:04:55.650 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.Earnings with Symbol AWR
2022-05-12 01:04:55.652 +03:00 [INF] Generating URI for EARNINGS with params: symbol: AWR
2022-05-12 01:04:55.652 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=EARNINGS&symbol=AWR
2022-05-12 01:04:55.653 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=EARNINGS&symbol=AWR".
2022-05-12 01:04:55.889 +03:00 [INF] Response has success status code
2022-05-12 01:04:55.890 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.Earnings for symbol AWR
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyEarnings(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 142
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:04:56.562 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.IncomeStatement with Symbol AURCU
2022-05-12 01:04:56.564 +03:00 [INF] Generating URI for INCOME_STATEMENT with params: symbol: AURCU
2022-05-12 01:04:56.564 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=INCOME_STATEMENT&symbol=AURCU
2022-05-12 01:04:56.565 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=INCOME_STATEMENT&symbol=AURCU".
2022-05-12 01:04:56.657 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.BalanceSheet with Symbol BELFA
2022-05-12 01:04:56.659 +03:00 [INF] Generating URI for BALANCE_SHEET with params: symbol: BELFA
2022-05-12 01:04:56.659 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BELFA
2022-05-12 01:04:56.660 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BELFA".
2022-05-12 01:04:56.896 +03:00 [INF] Response has success status code
2022-05-12 01:04:56.896 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.BalanceSheet for symbol BELFA
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetBalanceSheet(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 82
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:04:56.898 +03:00 [INF] Response has success status code
2022-05-12 01:04:56.898 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.IncomeStatement for symbol AURCU
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetIncomeStatement(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 69
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:04:58.591 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CashFlow with Symbol ATVC
2022-05-12 01:04:58.593 +03:00 [INF] Generating URI for CASH_FLOW with params: symbol: ATVC
2022-05-12 01:04:58.594 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=CASH_FLOW&symbol=ATVC
2022-05-12 01:04:58.594 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=CASH_FLOW&symbol=ATVC".
2022-05-12 01:05:01.422 +03:00 [INF] Response has success status code
2022-05-12 01:05:01.422 +03:00 [INF] Trying to deserialize response.
2022-05-12 01:05:01.423 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 01:05:01.487 +03:00 [INF] Executed DbCommand (63ms) [Parameters=[@__symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__symbol_0
2022-05-12 01:05:01.489 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.CashFlow.
2022-05-12 01:05:01.496 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[ExistInApi], [c].[LastApiRefresh], [c].[LastLocalRefresh]
FROM [CashFlows] AS [c]
WHERE [c].[Symbol] = @__entity_Symbol_0
2022-05-12 01:05:01.497 +03:00 [INF] Entity does not exist. Adding to DB.
2022-05-12 01:05:01.511 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = Boolean), @p2='?' (DbType = DateTime2), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [CashFlows] ([Symbol], [ExistInApi], [LastApiRefresh], [LastLocalRefresh])
VALUES (@p0, @p1, @p2, @p3);
2022-05-12 01:05:01.526 +03:00 [INF] Executed DbCommand (13ms) [Parameters=[@p4='?' (DbType = Double), @p5='?' (DbType = Double), @p6='?' (DbType = Int64), @p7='?' (DbType = Int64), @p8='?' (DbType = Int64), @p9='?' (DbType = Int64), @p10='?' (DbType = Int64), @p11='?' (DbType = Int64), @p12='?' (DbType = Int64), @p13='?' (DbType = Double), @p14='?' (DbType = Int64), @p15='?' (DbType = Double), @p16='?' (DbType = Int64), @p17='?' (Size = 4000), @p18='?' (DbType = Double), @p19='?' (DbType = Double), @p20='?' (DbType = Int64), @p21='?' (DbType = Int64), @p22='?' (DbType = Int64), @p23='?' (DbType = Int64), @p24='?' (DbType = Int64), @p25='?' (DbType = Int64), @p26='?' (DbType = Int64), @p27='?' (DbType = Int64), @p28='?' (DbType = Int64), @p29='?' (DbType = Double), @p30='?' (DbType = Int64), @p31='?' (DbType = Int64), @p32='?' (Size = 4000), @p33='?' (Size = 450), @p34='?' (DbType = Double), @p35='?' (DbType = Double), @p36='?' (DbType = Int64), @p37='?' (DbType = Int64), @p38='?' (DbType = Int64), @p39='?' (DbType = Int64), @p40='?' (DbType = Int64), @p41='?' (DbType = Int64), @p42='?' (DbType = Int64), @p43='?' (DbType = Double), @p44='?' (DbType = Int64), @p45='?' (DbType = Double), @p46='?' (DbType = Int64), @p47='?' (Size = 4000), @p48='?' (DbType = Double), @p49='?' (DbType = Double), @p50='?' (DbType = Int64), @p51='?' (DbType = Int64), @p52='?' (DbType = Int64), @p53='?' (DbType = Int64), @p54='?' (DbType = Int64), @p55='?' (DbType = Int64), @p56='?' (DbType = Int64), @p57='?' (DbType = Int64), @p58='?' (DbType = Int64), @p59='?' (DbType = Double), @p60='?' (DbType = Int64), @p61='?' (DbType = Int64), @p62='?' (Size = 4000), @p63='?' (Size = 450), @p64='?' (DbType = Double), @p65='?' (DbType = Double), @p66='?' (DbType = Int64), @p67='?' (DbType = Int64), @p68='?' (DbType = Int64), @p69='?' (DbType = Int64), @p70='?' (DbType = Int64), @p71='?' (DbType = Int64), @p72='?' (DbType = Int64), @p73='?' (DbType = Double), @p74='?' (DbType = Int64), @p75='?' (DbType = Double), @p76='?' (DbType = Int64), @p77='?' (Size = 4000), @p78='?' (DbType = Double), @p79='?' (DbType = Double), @p80='?' (DbType = Int64), @p81='?' (DbType = Int64), @p82='?' (DbType = Int64), @p83='?' (DbType = Int64), @p84='?' (DbType = Int64), @p85='?' (DbType = Int64), @p86='?' (DbType = Int64), @p87='?' (DbType = Int64), @p88='?' (DbType = Int64), @p89='?' (DbType = Double), @p90='?' (DbType = Int64), @p91='?' (DbType = Int64), @p92='?' (Size = 4000), @p93='?' (Size = 450), @p94='?' (DbType = Double), @p95='?' (DbType = Double), @p96='?' (DbType = Int64), @p97='?' (DbType = Int64), @p98='?' (DbType = Int64), @p99='?' (DbType = Int64), @p100='?' (DbType = Int64), @p101='?' (DbType = Int64), @p102='?' (DbType = Int64), @p103='?' (DbType = Double), @p104='?' (DbType = Int64), @p105='?' (DbType = Double), @p106='?' (DbType = Int64), @p107='?' (Size = 4000), @p108='?' (DbType = Double), @p109='?' (DbType = Double), @p110='?' (DbType = Int64), @p111='?' (DbType = Int64), @p112='?' (DbType = Int64), @p113='?' (DbType = Int64), @p114='?' (DbType = Int64), @p115='?' (DbType = Int64), @p116='?' (DbType = Int64), @p117='?' (DbType = Int64), @p118='?' (DbType = Int64), @p119='?' (DbType = Double), @p120='?' (DbType = Int64), @p121='?' (DbType = Int64), @p122='?' (Size = 4000), @p123='?' (Size = 450), @p124='?' (DbType = Double), @p125='?' (DbType = Double), @p126='?' (DbType = Int64), @p127='?' (DbType = Int64), @p128='?' (DbType = Int64), @p129='?' (DbType = Int64), @p130='?' (DbType = Int64), @p131='?' (DbType = Int64), @p132='?' (DbType = Int64), @p133='?' (DbType = Double), @p134='?' (DbType = Int64), @p135='?' (DbType = Double), @p136='?' (DbType = Int64), @p137='?' (Size = 4000), @p138='?' (DbType = Double), @p139='?' (DbType = Double), @p140='?' (DbType = Int64), @p141='?' (DbType = Int64), @p142='?' (DbType = Int64), @p143='?' (DbType = Int64), @p144='?' (DbType = Int64), @p145='?' (DbType = Int64), @p146='?' (DbType = Int64), @p147='?' (DbType = Int64), @p148='?' (DbType = Int64), @p149='?' (DbType = Double), @p150='?' (DbType = Int64), @p151='?' (DbType = Int64), @p152='?' (Size = 4000), @p153='?' (Size = 450), @p154='?' (DbType = Double), @p155='?' (DbType = Double), @p156='?' (DbType = Int64), @p157='?' (DbType = Int64), @p158='?' (DbType = Int64), @p159='?' (DbType = Int64), @p160='?' (DbType = Int64), @p161='?' (DbType = Int64), @p162='?' (DbType = Int64), @p163='?' (DbType = Double), @p164='?' (DbType = Int64), @p165='?' (DbType = Double), @p166='?' (DbType = Int64), @p167='?' (Size = 4000), @p168='?' (DbType = Double), @p169='?' (DbType = Double), @p170='?' (DbType = Int64), @p171='?' (DbType = Int64), @p172='?' (DbType = Int64), @p173='?' (DbType = Int64), @p174='?' (DbType = Int64), @p175='?' (DbType = Int64), @p176='?' (DbType = Int64), @p177='?' (DbType = Int64), @p178='?' (DbType = Int64), @p179='?' (DbType = Double), @p180='?' (DbType = Int64), @p181='?' (DbType = Int64), @p182='?' (Size = 4000), @p183='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [CashFlowAnnualReport] ([CapitalExpenditures], [CashflowFromFinancing], [CashflowFromInvestment], [ChangeInCashAndCashEquivalents], [ChangeInExchangeRate], [ChangeInInventory], [ChangeInOperatingAssets], [ChangeInOperatingLiabilities], [ChangeInReceivables], [DepreciationDepletionAndAmortization], [DividendPayout], [DividendPayoutCommonStock], [DividendPayoutPreferredStock], [FiscalDateEnding], [NetIncome], [OperatingCashFlow], [PaymentsForOperatingActivities], [PaymentsForRepurchaseOfCommonStock], [PaymentsForRepurchaseOfEquity], [PaymentsForRepurchaseOfPreferredStock], [ProceedsFromIssuanceOfCommonStock], [ProceedsFromIssuanceOfLongTermDebtAndCapitalSecuritiesNet], [ProceedsFromIssuanceOfPreferredStock], [ProceedsFromOperatingActivities], [ProceedsFromRepaymentsOfShortTermDebt], [ProceedsFromRepurchaseOfEquity], [ProceedsFromSaleOfTreasuryStock], [ProfitLoss], [ReportedCurrency], [Symbol])
VALUES (@p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21, @p22, @p23, @p24, @p25, @p26, @p27, @p28, @p29, @p30, @p31, @p32, @p33);
SELECT [Id]
FROM [CashFlowAnnualReport]
WHERE @@ROWCOUNT = 1 AND [Id] = scope_identity();

DECLARE @inserted1 TABLE ([Id] int, [_Position] [int]);
MERGE [CashFlowQuarterlyReport] USING (
VALUES (@p34, @p35, @p36, @p37, @p38, @p39, @p40, @p41, @p42, @p43, @p44, @p45, @p46, @p47, @p48, @p49, @p50, @p51, @p52, @p53, @p54, @p55, @p56, @p57, @p58, @p59, @p60, @p61, @p62, @p63, 0),
(@p64, @p65, @p66, @p67, @p68, @p69, @p70, @p71, @p72, @p73, @p74, @p75, @p76, @p77, @p78, @p79, @p80, @p81, @p82, @p83, @p84, @p85, @p86, @p87, @p88, @p89, @p90, @p91, @p92, @p93, 1),
(@p94, @p95, @p96, @p97, @p98, @p99, @p100, @p101, @p102, @p103, @p104, @p105, @p106, @p107, @p108, @p109, @p110, @p111, @p112, @p113, @p114, @p115, @p116, @p117, @p118, @p119, @p120, @p121, @p122, @p123, 2),
(@p124, @p125, @p126, @p127, @p128, @p129, @p130, @p131, @p132, @p133, @p134, @p135, @p136, @p137, @p138, @p139, @p140, @p141, @p142, @p143, @p144, @p145, @p146, @p147, @p148, @p149, @p150, @p151, @p152, @p153, 3),
(@p154, @p155, @p156, @p157, @p158, @p159, @p160, @p161, @p162, @p163, @p164, @p165, @p166, @p167, @p168, @p169, @p170, @p171, @p172, @p173, @p174, @p175, @p176, @p177, @p178, @p179, @p180, @p181, @p182, @p183, 4)) AS i ([CapitalExpenditures], [CashflowFromFinancing], [CashflowFromInvestment], [ChangeInCashAndCashEquivalents], [ChangeInExchangeRate], [ChangeInInventory], [ChangeInOperatingAssets], [ChangeInOperatingLiabilities], [ChangeInReceivables], [DepreciationDepletionAndAmortization], [DividendPayout], [DividendPayoutCommonStock], [DividendPayoutPreferredStock], [FiscalDateEnding], [NetIncome], [OperatingCashFlow], [PaymentsForOperatingActivities], [PaymentsForRepurchaseOfCommonStock], [PaymentsForRepurchaseOfEquity], [PaymentsForRepurchaseOfPreferredStock], [ProceedsFromIssuanceOfCommonStock], [ProceedsFromIssuanceOfLongTermDebtAndCapitalSecuritiesNet], [ProceedsFromIssuanceOfPreferredStock], [ProceedsFromOperatingActivities], [ProceedsFromRepaymentsOfShortTermDebt], [ProceedsFromRepurchaseOfEquity], [ProceedsFromSaleOfTreasuryStock], [ProfitLoss], [ReportedCurrency], [Symbol], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([CapitalExpenditures], [CashflowFromFinancing], [CashflowFromInvestment], [ChangeInCashAndCashEquivalents], [ChangeInExchangeRate], [ChangeInInventory], [ChangeInOperatingAssets], [ChangeInOperatingLiabilities], [ChangeInReceivables], [DepreciationDepletionAndAmortization], [DividendPayout], [DividendPayoutCommonStock], [DividendPayoutPreferredStock], [FiscalDateEnding], [NetIncome], [OperatingCashFlow], [PaymentsForOperatingActivities], [PaymentsForRepurchaseOfCommonStock], [PaymentsForRepurchaseOfEquity], [PaymentsForRepurchaseOfPreferredStock], [ProceedsFromIssuanceOfCommonStock], [ProceedsFromIssuanceOfLongTermDebtAndCapitalSecuritiesNet], [ProceedsFromIssuanceOfPreferredStock], [ProceedsFromOperatingActivities], [ProceedsFromRepaymentsOfShortTermDebt], [ProceedsFromRepurchaseOfEquity], [ProceedsFromSaleOfTreasuryStock], [ProfitLoss], [ReportedCurrency], [Symbol])
VALUES (i.[CapitalExpenditures], i.[CashflowFromFinancing], i.[CashflowFromInvestment], i.[ChangeInCashAndCashEquivalents], i.[ChangeInExchangeRate], i.[ChangeInInventory], i.[ChangeInOperatingAssets], i.[ChangeInOperatingLiabilities], i.[ChangeInReceivables], i.[DepreciationDepletionAndAmortization], i.[DividendPayout], i.[DividendPayoutCommonStock], i.[DividendPayoutPreferredStock], i.[FiscalDateEnding], i.[NetIncome], i.[OperatingCashFlow], i.[PaymentsForOperatingActivities], i.[PaymentsForRepurchaseOfCommonStock], i.[PaymentsForRepurchaseOfEquity], i.[PaymentsForRepurchaseOfPreferredStock], i.[ProceedsFromIssuanceOfCommonStock], i.[ProceedsFromIssuanceOfLongTermDebtAndCapitalSecuritiesNet], i.[ProceedsFromIssuanceOfPreferredStock], i.[ProceedsFromOperatingActivities], i.[ProceedsFromRepaymentsOfShortTermDebt], i.[ProceedsFromRepurchaseOfEquity], i.[ProceedsFromSaleOfTreasuryStock], i.[ProfitLoss], i.[ReportedCurrency], i.[Symbol])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted1;

SELECT [i].[Id] FROM @inserted1 i
ORDER BY [i].[_Position];
2022-05-12 01:05:01.535 +03:00 [INF] AddOrUpdate run successful.
2022-05-12 01:05:23.312 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CompanyOverview with Symbol BKI
2022-05-12 01:05:23.316 +03:00 [INF] Generating URI for OVERVIEW with params: symbol: BKI
2022-05-12 01:05:23.316 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=OVERVIEW&symbol=BKI
2022-05-12 01:05:23.317 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=OVERVIEW&symbol=BKI".
2022-05-12 01:05:23.788 +03:00 [INF] Response has success status code
2022-05-12 01:05:23.788 +03:00 [INF] Trying to deserialize response.
2022-05-12 01:05:23.789 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.CompanyOverview.
2022-05-12 01:05:23.790 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 01:05:23.801 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__entity_Symbol_0
2022-05-12 01:05:23.802 +03:00 [INF] Entity does not exist. Adding to DB.
2022-05-12 01:05:23.819 +03:00 [INF] Executed DbCommand (12ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (Size = 4000), @p2='?' (DbType = Double), @p3='?' (Size = 4000), @p4='?' (DbType = Double), @p5='?' (DbType = Double), @p6='?' (DbType = Int64), @p7='?' (Size = 4000), @p8='?' (Size = 4000), @p9='?' (Size = 4000), @p10='?' (DbType = Double), @p11='?' (DbType = DateTime2), @p12='?' (DbType = Double), @p13='?' (DbType = Double), @p14='?' (DbType = Int64), @p15='?' (DbType = Double), @p16='?' (DbType = Double), @p17='?' (DbType = Double), @p18='?' (DbType = DateTime2), @p19='?' (Size = 4000), @p20='?' (DbType = Boolean), @p21='?' (Size = 4000), @p22='?' (DbType = Double), @p23='?' (DbType = Int64), @p24='?' (Size = 4000), @p25='?' (DbType = DateTime2), @p26='?' (DbType = DateTime2), @p27='?' (DbType = DateTime2), @p28='?' (DbType = Int64), @p29='?' (Size = 4000), @p30='?' (DbType = Double), @p31='?' (DbType = Double), @p32='?' (DbType = Double), @p33='?' (DbType = Double), @p34='?' (DbType = Double), @p35='?' (DbType = Double), @p36='?' (DbType = Double), @p37='?' (DbType = Double), @p38='?' (DbType = Double), @p39='?' (DbType = Double), @p40='?' (DbType = Double), @p41='?' (DbType = Int64), @p42='?' (Size = 4000), @p43='?' (DbType = Int64), @p44='?' (DbType = Double), @p45='?' (DbType = Double), @p46='?' (DbType = Double), @p47='?' (DbType = Double), @p48='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [CompanyOverviews] ([Symbol], [Address], [AnalystTargetPrice], [AssetType], [Beta], [BookValue], [CIK], [Country], [Currency], [Description], [DilutedEPSTTM], [DividendDate], [DividendPerShare], [DividendYield], [EBITDA], [EPS], [EVToEBITDA], [EVToRevenue], [ExDividendDate], [Exchange], [ExistInApi], [FiscalYearEnd], [ForwardPE], [GrossProfitTTM], [Industry], [LastApiRefresh], [LastLocalRefresh], [LatestQuarter], [MarketCapitalization], [Name], [OperatingMarginTTM], [PEGRatio], [PERatio], [PriceToBookRatio], [PriceToSalesRatioTTM], [ProfitMargin], [QuarterlyEarningsGrowthYOY], [QuarterlyRevenueGrowthYOY], [ReturnOnAssetsTTM], [ReturnOnEquityTTM], [RevenuePerShareTTM], [RevenueTTM], [Sector], [SharesOutstanding], [TrailingPE], [_200DayMovingAverage], [_50DayMovingAverage], [_52WeekHigh], [_52WeekLow])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21, @p22, @p23, @p24, @p25, @p26, @p27, @p28, @p29, @p30, @p31, @p32, @p33, @p34, @p35, @p36, @p37, @p38, @p39, @p40, @p41, @p42, @p43, @p44, @p45, @p46, @p47, @p48);
2022-05-12 01:05:23.831 +03:00 [INF] AddOrUpdate run successful.
2022-05-12 01:05:25.893 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.Earnings with Symbol AWTM
2022-05-12 01:05:25.897 +03:00 [INF] Generating URI for EARNINGS with params: symbol: AWTM
2022-05-12 01:05:25.897 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=EARNINGS&symbol=AWTM
2022-05-12 01:05:25.898 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=EARNINGS&symbol=AWTM".
2022-05-12 01:05:26.129 +03:00 [INF] Response has success status code
2022-05-12 01:05:26.130 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 01:05:26.141 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__symbol_0
2022-05-12 01:05:26.143 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.Earnings.
2022-05-12 01:05:26.151 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [e].[Symbol], [e].[ExistInApi], [e].[LastApiRefresh], [e].[LastLocalRefresh]
FROM [Earnings] AS [e]
WHERE [e].[Symbol] = @__entity_Symbol_0
2022-05-12 01:05:26.152 +03:00 [INF] Entity does not exist. Adding to DB.
2022-05-12 01:05:26.164 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = Boolean), @p2='?' (DbType = DateTime2), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Earnings] ([Symbol], [ExistInApi], [LastApiRefresh], [LastLocalRefresh])
VALUES (@p0, @p1, @p2, @p3);
2022-05-12 01:05:26.171 +03:00 [INF] AddOrUpdate run successful.
2022-05-12 01:05:26.171 +03:00 [WRN] Alpha Vantage has no SaluteStocksAPI.Models.FundamentalData.Earnings for symbol AWTM
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageEmptyResponse: Response was empty.
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyEarnings(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 142
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:05:26.900 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.BalanceSheet with Symbol BEN
2022-05-12 01:05:26.900 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.IncomeStatement with Symbol AUSF
2022-05-12 01:05:26.903 +03:00 [INF] Generating URI for BALANCE_SHEET with params: symbol: BEN
2022-05-12 01:05:26.903 +03:00 [INF] Generating URI for INCOME_STATEMENT with params: symbol: AUSF
2022-05-12 01:05:26.904 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BEN
2022-05-12 01:05:26.904 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=INCOME_STATEMENT&symbol=AUSF
2022-05-12 01:05:26.905 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BEN".
2022-05-12 01:05:26.905 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=INCOME_STATEMENT&symbol=AUSF".
2022-05-12 01:05:27.436 +03:00 [INF] Response has success status code
2022-05-12 01:05:27.437 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 01:05:27.448 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__symbol_0
2022-05-12 01:05:27.449 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.IncomeStatement.
2022-05-12 01:05:27.457 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [i].[Symbol], [i].[ExistInApi], [i].[LastApiRefresh], [i].[LastLocalRefresh]
FROM [IncomeStatements] AS [i]
WHERE [i].[Symbol] = @__entity_Symbol_0
2022-05-12 01:05:27.458 +03:00 [INF] Entity does not exist. Adding to DB.
2022-05-12 01:05:27.472 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = Boolean), @p2='?' (DbType = DateTime2), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [IncomeStatements] ([Symbol], [ExistInApi], [LastApiRefresh], [LastLocalRefresh])
VALUES (@p0, @p1, @p2, @p3);
2022-05-12 01:05:27.478 +03:00 [INF] AddOrUpdate run successful.
2022-05-12 01:05:27.478 +03:00 [WRN] Alpha Vantage has no SaluteStocksAPI.Models.FundamentalData.IncomeStatement for symbol AUSF
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageEmptyResponse: Response was empty.
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetIncomeStatement(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 69
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:05:27.684 +03:00 [INF] Response has success status code
2022-05-12 01:05:27.684 +03:00 [INF] Trying to deserialize response.
2022-05-12 01:05:27.686 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 01:05:27.694 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__symbol_0
2022-05-12 01:05:27.696 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.BalanceSheet.
2022-05-12 01:05:27.703 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [b].[Symbol], [b].[ExistInApi], [b].[LastApiRefresh], [b].[LastLocalRefresh]
FROM [BalanceSheets] AS [b]
WHERE [b].[Symbol] = @__entity_Symbol_0
2022-05-12 01:05:27.704 +03:00 [INF] Entity does not exist. Adding to DB.
2022-05-12 01:05:27.716 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = Boolean), @p2='?' (DbType = DateTime2), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [BalanceSheets] ([Symbol], [ExistInApi], [LastApiRefresh], [LastLocalRefresh])
VALUES (@p0, @p1, @p2, @p3);
2022-05-12 01:05:27.775 +03:00 [INF] Executed DbCommand (57ms) [Parameters=[@p4='?' (DbType = Int64), @p5='?' (DbType = Double), @p6='?' (DbType = Double), @p7='?' (DbType = Double), @p8='?' (DbType = Double), @p9='?' (DbType = Int64), @p10='?' (DbType = Int64), @p11='?' (DbType = Int64), @p12='?' (DbType = Double), @p13='?' (DbType = Int64), @p14='?' (DbType = Int64), @p15='?' (DbType = DateTime2), @p16='?' (DbType = Double), @p17='?' (DbType = Double), @p18='?' (DbType = Double), @p19='?' (DbType = Double), @p20='?' (DbType = Int64), @p21='?' (DbType = Double), @p22='?' (DbType = Int64), @p23='?' (DbType = Double), @p24='?' (DbType = Double), @p25='?' (DbType = Double), @p26='?' (DbType = Double), @p27='?' (DbType = Double), @p28='?' (DbType = Int64), @p29='?' (Size = 4000), @p30='?' (DbType = Double), @p31='?' (DbType = Double), @p32='?' (DbType = Double), @p33='?' (DbType = Double), @p34='?' (Size = 450), @p35='?' (DbType = Double), @p36='?' (DbType = Double), @p37='?' (DbType = Double), @p38='?' (DbType = Double), @p39='?' (DbType = Double), @p40='?' (DbType = Double), @p41='?' (DbType = Double), @p42='?' (DbType = Double), @p43='?' (DbType = Int64), @p44='?' (DbType = Double), @p45='?' (DbType = Double), @p46='?' (DbType = Double), @p47='?' (DbType = Double), @p48='?' (DbType = Int64), @p49='?' (DbType = Int64), @p50='?' (DbType = Int64), @p51='?' (DbType = Double), @p52='?' (DbType = Int64), @p53='?' (DbType = Int64), @p54='?' (DbType = DateTime2), @p55='?' (DbType = Double), @p56='?' (DbType = Double), @p57='?' (DbType = Double), @p58='?' (DbType = Double), @p59='?' (DbType = Int64), @p60='?' (DbType = Double), @p61='?' (DbType = Int64), @p62='?' (DbType = Double), @p63='?' (DbType = Double), @p64='?' (DbType = Double), @p65='?' (DbType = Double), @p66='?' (DbType = Double), @p67='?' (DbType = Int64), @p68='?' (Size = 4000), @p69='?' (DbType = Double), @p70='?' (DbType = Double), @p71='?' (DbType = Double), @p72='?' (DbType = Double), @p73='?' (Size = 450), @p74='?' (DbType = Double), @p75='?' (DbType = Double), @p76='?' (DbType = Double), @p77='?' (DbType = Double), @p78='?' (DbType = Double), @p79='?' (DbType = Double), @p80='?' (DbType = Double), @p81='?' (DbType = Double), @p82='?' (DbType = Int64), @p83='?' (DbType = Double), @p84='?' (DbType = Double), @p85='?' (DbType = Double), @p86='?' (DbType = Double), @p87='?' (DbType = Int64), @p88='?' (DbType = Int64), @p89='?' (DbType = Int64), @p90='?' (DbType = Double), @p91='?' (DbType = Int64), @p92='?' (DbType = Int64), @p93='?' (DbType = DateTime2), @p94='?' (DbType = Double), @p95='?' (DbType = Double), @p96='?' (DbType = Double), @p97='?' (DbType = Double), @p98='?' (DbType = Int64), @p99='?' (DbType = Double), @p100='?' (DbType = Int64), @p101='?' (DbType = Double), @p102='?' (DbType = Double), @p103='?' (DbType = Double), @p104='?' (DbType = Double), @p105='?' (DbType = Double), @p106='?' (DbType = Int64), @p107='?' (Size = 4000), @p108='?' (DbType = Double), @p109='?' (DbType = Double), @p110='?' (DbType = Double), @p111='?' (DbType = Double), @p112='?' (Size = 450), @p113='?' (DbType = Double), @p114='?' (DbType = Double), @p115='?' (DbType = Double), @p116='?' (DbType = Double), @p117='?' (DbType = Double), @p118='?' (DbType = Double), @p119='?' (DbType = Double), @p120='?' (DbType = Double), @p121='?' (DbType = Int64), @p122='?' (DbType = Double), @p123='?' (DbType = Double), @p124='?' (DbType = Double), @p125='?' (DbType = Double), @p126='?' (DbType = Int64), @p127='?' (DbType = Int64), @p128='?' (DbType = Int64), @p129='?' (DbType = Double), @p130='?' (DbType = Int64), @p131='?' (DbType = Int64), @p132='?' (DbType = DateTime2), @p133='?' (DbType = Double), @p134='?' (DbType = Double), @p135='?' (DbType = Double), @p136='?' (DbType = Double), @p137='?' (DbType = Int64), @p138='?' (DbType = Double), @p139='?' (DbType = Int64), @p140='?' (DbType = Double), @p141='?' (DbType = Double), @p142='?' (DbType = Double), @p143='?' (DbType = Double), @p144='?' (DbType = Double), @p145='?' (DbType = Int64), @p146='?' (Size = 4000), @p147='?' (DbType = Double), @p148='?' (DbType = Double), @p149='?' (DbType = Double), @p150='?' (DbType = Double), @p151='?' (Size = 450), @p152='?' (DbType = Double), @p153='?' (DbType = Double), @p154='?' (DbType = Double), @p155='?' (DbType = Double), @p156='?' (DbType = Double), @p157='?' (DbType = Double), @p158='?' (DbType = Double), @p159='?' (DbType = Double), @p160='?' (DbType = Int64), @p161='?' (DbType = Double), @p162='?' (DbType = Double), @p163='?' (DbType = Double), @p164='?' (DbType = Double), @p165='?' (DbType = Int64), @p166='?' (DbType = Int64), @p167='?' (DbType = Int64), @p168='?' (DbType = Double), @p169='?' (DbType = Int64), @p170='?' (DbType = Int64), @p171='?' (DbType = DateTime2), @p172='?' (DbType = Double), @p173='?' (DbType = Double), @p174='?' (DbType = Double), @p175='?' (DbType = Double), @p176='?' (DbType = Int64), @p177='?' (DbType = Double), @p178='?' (DbType = Int64), @p179='?' (DbType = Double), @p180='?' (DbType = Double), @p181='?' (DbType = Double), @p182='?' (DbType = Double), @p183='?' (DbType = Double), @p184='?' (DbType = Int64), @p185='?' (Size = 4000), @p186='?' (DbType = Double), @p187='?' (DbType = Double), @p188='?' (DbType = Double), @p189='?' (DbType = Double), @p190='?' (Size = 450), @p191='?' (DbType = Double), @p192='?' (DbType = Double), @p193='?' (DbType = Double), @p194='?' (DbType = Double), @p195='?' (DbType = Double), @p196='?' (DbType = Double), @p197='?' (DbType = Double), @p198='?' (DbType = Double), @p199='?' (DbType = Int64), @p200='?' (DbType = Double), @p201='?' (DbType = Double), @p202='?' (DbType = Double), @p203='?' (DbType = Double), @p204='?' (DbType = Int64), @p205='?' (DbType = Int64), @p206='?' (DbType = Int64), @p207='?' (DbType = Double), @p208='?' (DbType = Int64), @p209='?' (DbType = Int64), @p210='?' (DbType = DateTime2), @p211='?' (DbType = Double), @p212='?' (DbType = Double), @p213='?' (DbType = Double), @p214='?' (DbType = Double), @p215='?' (DbType = Int64), @p216='?' (DbType = Double), @p217='?' (DbType = Int64), @p218='?' (DbType = Double), @p219='?' (DbType = Double), @p220='?' (DbType = Double), @p221='?' (DbType = Double), @p222='?' (DbType = Double), @p223='?' (DbType = Int64), @p224='?' (Size = 4000), @p225='?' (DbType = Double), @p226='?' (DbType = Double), @p227='?' (DbType = Double), @p228='?' (DbType = Double), @p229='?' (Size = 450), @p230='?' (DbType = Double), @p231='?' (DbType = Double), @p232='?' (DbType = Double), @p233='?' (DbType = Double), @p234='?' (DbType = Double), @p235='?' (DbType = Double), @p236='?' (DbType = Double), @p237='?' (DbType = Double), @p238='?' (DbType = Int64), @p239='?' (DbType = Double), @p240='?' (DbType = Double), @p241='?' (DbType = Double), @p242='?' (DbType = Double), @p243='?' (DbType = Int64), @p244='?' (DbType = Int64), @p245='?' (DbType = Int64), @p246='?' (DbType = Double), @p247='?' (DbType = Int64), @p248='?' (DbType = Int64), @p249='?' (DbType = DateTime2), @p250='?' (DbType = Double), @p251='?' (DbType = Double), @p252='?' (DbType = Double), @p253='?' (DbType = Double), @p254='?' (DbType = Int64), @p255='?' (DbType = Double), @p256='?' (DbType = Int64), @p257='?' (DbType = Double), @p258='?' (DbType = Double), @p259='?' (DbType = Double), @p260='?' (DbType = Double), @p261='?' (DbType = Double), @p262='?' (DbType = Int64), @p263='?' (Size = 4000), @p264='?' (DbType = Double), @p265='?' (DbType = Double), @p266='?' (DbType = Double), @p267='?' (DbType = Double), @p268='?' (Size = 450), @p269='?' (DbType = Double), @p270='?' (DbType = Double), @p271='?' (DbType = Double), @p272='?' (DbType = Double), @p273='?' (DbType = Double), @p274='?' (DbType = Double), @p275='?' (DbType = Double), @p276='?' (DbType = Double), @p277='?' (DbType = Int64), @p278='?' (DbType = Double), @p279='?' (DbType = Double), @p280='?' (DbType = Double), @p281='?' (DbType = Double), @p282='?' (DbType = Int64), @p283='?' (DbType = Int64), @p284='?' (DbType = Int64), @p285='?' (DbType = Double), @p286='?' (DbType = Int64), @p287='?' (DbType = Int64), @p288='?' (DbType = DateTime2), @p289='?' (DbType = Double), @p290='?' (DbType = Double), @p291='?' (DbType = Double), @p292='?' (DbType = Double), @p293='?' (DbType = Int64), @p294='?' (DbType = Double), @p295='?' (DbType = Int64), @p296='?' (DbType = Double), @p297='?' (DbType = Double), @p298='?' (DbType = Double), @p299='?' (DbType = Double), @p300='?' (DbType = Double), @p301='?' (DbType = Int64), @p302='?' (Size = 4000), @p303='?' (DbType = Double), @p304='?' (DbType = Double), @p305='?' (DbType = Double), @p306='?' (DbType = Double), @p307='?' (Size = 450), @p308='?' (DbType = Double), @p309='?' (DbType = Double), @p310='?' (DbType = Double), @p311='?' (DbType = Double), @p312='?' (DbType = Double), @p313='?' (DbType = Double), @p314='?' (DbType = Double), @p315='?' (DbType = Double), @p316='?' (DbType = Int64), @p317='?' (DbType = Double), @p318='?' (DbType = Double), @p319='?' (DbType = Double), @p320='?' (DbType = Double), @p321='?' (DbType = Int64), @p322='?' (DbType = Int64), @p323='?' (DbType = Int64), @p324='?' (DbType = Double), @p325='?' (DbType = Int64), @p326='?' (DbType = Int64), @p327='?' (DbType = DateTime2), @p328='?' (DbType = Double), @p329='?' (DbType = Double), @p330='?' (DbType = Double), @p331='?' (DbType = Double), @p332='?' (DbType = Int64), @p333='?' (DbType = Double), @p334='?' (DbType = Int64), @p335='?' (DbType = Double), @p336='?' (DbType = Double), @p337='?' (DbType = Double), @p338='?' (DbType = Double), @p339='?' (DbType = Double), @p340='?' (DbType = Int64), @p341='?' (Size = 4000), @p342='?' (DbType = Double), @p343='?' (DbType = Double), @p344='?' (DbType = Double), @p345='?' (DbType = Double), @p346='?' (Size = 450), @p347='?' (DbType = Double), @p348='?' (DbType = Double), @p349='?' (DbType = Double), @p350='?' (DbType = Double), @p351='?' (DbType = Double), @p352='?' (DbType = Double), @p353='?' (DbType = Double), @p354='?' (DbType = Double), @p355='?' (DbType = Int64), @p356='?' (DbType = Double), @p357='?' (DbType = Double), @p358='?' (DbType = Double), @p359='?' (DbType = Double), @p360='?' (DbType = Int64), @p361='?' (DbType = Int64), @p362='?' (DbType = Int64), @p363='?' (DbType = Double), @p364='?' (DbType = Int64), @p365='?' (DbType = Int64), @p366='?' (DbType = DateTime2), @p367='?' (DbType = Double), @p368='?' (DbType = Double), @p369='?' (DbType = Double), @p370='?' (DbType = Double), @p371='?' (DbType = Int64), @p372='?' (DbType = Double), @p373='?' (DbType = Int64), @p374='?' (DbType = Double), @p375='?' (DbType = Double), @p376='?' (DbType = Double), @p377='?' (DbType = Double), @p378='?' (DbType = Double), @p379='?' (DbType = Int64), @p380='?' (Size = 4000), @p381='?' (DbType = Double), @p382='?' (DbType = Double), @p383='?' (DbType = Double), @p384='?' (DbType = Double), @p385='?' (Size = 450), @p386='?' (DbType = Double), @p387='?' (DbType = Double), @p388='?' (DbType = Double), @p389='?' (DbType = Double), @p390='?' (DbType = Double), @p391='?' (DbType = Double), @p392='?' (DbType = Double), @p393='?' (DbType = Double), @p394='?' (DbType = Int64), @p395='?' (DbType = Double), @p396='?' (DbType = Double), @p397='?' (DbType = Double), @p398='?' (DbType = Double), @p399='?' (DbType = Int64), @p400='?' (DbType = Int64), @p401='?' (DbType = Int64), @p402='?' (DbType = Double), @p403='?' (DbType = Int64), @p404='?' (DbType = Int64), @p405='?' (DbType = DateTime2), @p406='?' (DbType = Double), @p407='?' (DbType = Double), @p408='?' (DbType = Double), @p409='?' (DbType = Double), @p410='?' (DbType = Int64), @p411='?' (DbType = Double), @p412='?' (DbType = Int64), @p413='?' (DbType = Double), @p414='?' (DbType = Double), @p415='?' (DbType = Double), @p416='?' (DbType = Double), @p417='?' (DbType = Double), @p418='?' (DbType = Int64), @p419='?' (Size = 4000), @p420='?' (DbType = Double), @p421='?' (DbType = Double), @p422='?' (DbType = Double), @p423='?' (DbType = Double), @p424='?' (Size = 450), @p425='?' (DbType = Double), @p426='?' (DbType = Double), @p427='?' (DbType = Double), @p428='?' (DbType = Double), @p429='?' (DbType = Double), @p430='?' (DbType = Double), @p431='?' (DbType = Double), @p432='?' (DbType = Double), @p433='?' (DbType = Int64), @p434='?' (DbType = Double), @p435='?' (DbType = Double), @p436='?' (DbType = Double), @p437='?' (DbType = Double), @p438='?' (DbType = Int64), @p439='?' (DbType = Int64), @p440='?' (DbType = Int64), @p441='?' (DbType = Double), @p442='?' (DbType = Int64), @p443='?' (DbType = Int64), @p444='?' (DbType = DateTime2), @p445='?' (DbType = Double), @p446='?' (DbType = Double), @p447='?' (DbType = Double), @p448='?' (DbType = Double), @p449='?' (DbType = Int64), @p450='?' (DbType = Double), @p451='?' (DbType = Int64), @p452='?' (DbType = Double), @p453='?' (DbType = Double), @p454='?' (DbType = Double), @p455='?' (DbType = Double), @p456='?' (DbType = Double), @p457='?' (DbType = Int64), @p458='?' (Size = 4000), @p459='?' (DbType = Double), @p460='?' (DbType = Double), @p461='?' (DbType = Double), @p462='?' (DbType = Double), @p463='?' (Size = 450), @p464='?' (DbType = Double), @p465='?' (DbType = Double), @p466='?' (DbType = Double), @p467='?' (DbType = Double), @p468='?' (DbType = Double), @p469='?' (DbType = Double), @p470='?' (DbType = Double), @p471='?' (DbType = Double), @p472='?' (DbType = Int64), @p473='?' (DbType = Double), @p474='?' (DbType = Double), @p475='?' (DbType = Double), @p476='?' (DbType = Double), @p477='?' (DbType = Int64), @p478='?' (DbType = Int64), @p479='?' (DbType = Int64), @p480='?' (DbType = Double), @p481='?' (DbType = Int64), @p482='?' (DbType = Int64), @p483='?' (DbType = DateTime2), @p484='?' (DbType = Double), @p485='?' (DbType = Double), @p486='?' (DbType = Double), @p487='?' (DbType = Double), @p488='?' (DbType = Int64), @p489='?' (DbType = Double), @p490='?' (DbType = Int64), @p491='?' (DbType = Double), @p492='?' (DbType = Double), @p493='?' (DbType = Double), @p494='?' (DbType = Double), @p495='?' (DbType = Double), @p496='?' (DbType = Int64), @p497='?' (Size = 4000), @p498='?' (DbType = Double), @p499='?' (DbType = Double), @p500='?' (DbType = Double), @p501='?' (DbType = Double), @p502='?' (Size = 450), @p503='?' (DbType = Double), @p504='?' (DbType = Double), @p505='?' (DbType = Double), @p506='?' (DbType = Double), @p507='?' (DbType = Double), @p508='?' (DbType = Double), @p509='?' (DbType = Double), @p510='?' (DbType = Double), @p511='?' (DbType = Int64), @p512='?' (DbType = Double), @p513='?' (DbType = Double), @p514='?' (DbType = Double), @p515='?' (DbType = Double), @p516='?' (DbType = Int64), @p517='?' (DbType = Int64), @p518='?' (DbType = Int64), @p519='?' (DbType = Double), @p520='?' (DbType = Int64), @p521='?' (DbType = Int64), @p522='?' (DbType = DateTime2), @p523='?' (DbType = Double), @p524='?' (DbType = Double), @p525='?' (DbType = Double), @p526='?' (DbType = Double), @p527='?' (DbType = Int64), @p528='?' (DbType = Double), @p529='?' (DbType = Int64), @p530='?' (DbType = Double), @p531='?' (DbType = Double), @p532='?' (DbType = Double), @p533='?' (DbType = Double), @p534='?' (DbType = Double), @p535='?' (DbType = Int64), @p536='?' (Size = 4000), @p537='?' (DbType = Double), @p538='?' (DbType = Double), @p539='?' (DbType = Double), @p540='?' (DbType = Double), @p541='?' (Size = 450), @p542='?' (DbType = Double), @p543='?' (DbType = Double), @p544='?' (DbType = Double), @p545='?' (DbType = Double), @p546='?' (DbType = Double), @p547='?' (DbType = Double), @p548='?' (DbType = Double), @p549='?' (DbType = Double), @p550='?' (DbType = Int64), @p551='?' (DbType = Double), @p552='?' (DbType = Double), @p553='?' (DbType = Double), @p554='?' (DbType = Double), @p555='?' (DbType = Int64), @p556='?' (DbType = Int64), @p557='?' (DbType = Int64), @p558='?' (DbType = Double), @p559='?' (DbType = Int64), @p560='?' (DbType = Int64), @p561='?' (DbType = DateTime2), @p562='?' (DbType = Double), @p563='?' (DbType = Double), @p564='?' (DbType = Double), @p565='?' (DbType = Double), @p566='?' (DbType = Int64), @p567='?' (DbType = Double), @p568='?' (DbType = Int64), @p569='?' (DbType = Double), @p570='?' (DbType = Double), @p571='?' (DbType = Double), @p572='?' (DbType = Double), @p573='?' (DbType = Double), @p574='?' (DbType = Int64), @p575='?' (Size = 4000), @p576='?' (DbType = Double), @p577='?' (DbType = Double), @p578='?' (DbType = Double), @p579='?' (DbType = Double), @p580='?' (Size = 450), @p581='?' (DbType = Double), @p582='?' (DbType = Double), @p583='?' (DbType = Double), @p584='?' (DbType = Double), @p585='?' (DbType = Double), @p586='?' (DbType = Double), @p587='?' (DbType = Double), @p588='?' (DbType = Double), @p589='?' (DbType = Int64), @p590='?' (DbType = Double), @p591='?' (DbType = Double), @p592='?' (DbType = Double), @p593='?' (DbType = Double), @p594='?' (DbType = Int64), @p595='?' (DbType = Int64), @p596='?' (DbType = Int64), @p597='?' (DbType = Double), @p598='?' (DbType = Int64), @p599='?' (DbType = Int64), @p600='?' (DbType = DateTime2), @p601='?' (DbType = Double), @p602='?' (DbType = Double), @p603='?' (DbType = Double), @p604='?' (DbType = Double), @p605='?' (DbType = Int64), @p606='?' (DbType = Double), @p607='?' (DbType = Int64), @p608='?' (DbType = Double), @p609='?' (DbType = Double), @p610='?' (DbType = Double), @p611='?' (DbType = Double), @p612='?' (DbType = Double), @p613='?' (DbType = Int64), @p614='?' (Size = 4000), @p615='?' (DbType = Double), @p616='?' (DbType = Double), @p617='?' (DbType = Double), @p618='?' (DbType = Double), @p619='?' (Size = 450), @p620='?' (DbType = Double), @p621='?' (DbType = Double), @p622='?' (DbType = Double), @p623='?' (DbType = Double), @p624='?' (DbType = Double), @p625='?' (DbType = Double), @p626='?' (DbType = Double), @p627='?' (DbType = Double), @p628='?' (DbType = Int64), @p629='?' (DbType = Double), @p630='?' (DbType = Double), @p631='?' (DbType = Double), @p632='?' (DbType = Double), @p633='?' (DbType = Int64), @p634='?' (DbType = Int64), @p635='?' (DbType = Int64), @p636='?' (DbType = Double), @p637='?' (DbType = Int64), @p638='?' (DbType = Int64), @p639='?' (DbType = DateTime2), @p640='?' (DbType = Double), @p641='?' (DbType = Double), @p642='?' (DbType = Double), @p643='?' (DbType = Double), @p644='?' (DbType = Int64), @p645='?' (DbType = Double), @p646='?' (DbType = Int64), @p647='?' (DbType = Double), @p648='?' (DbType = Double), @p649='?' (DbType = Double), @p650='?' (DbType = Double), @p651='?' (DbType = Double), @p652='?' (DbType = Int64), @p653='?' (Size = 4000), @p654='?' (DbType = Double), @p655='?' (DbType = Double), @p656='?' (DbType = Double), @p657='?' (DbType = Double), @p658='?' (Size = 450), @p659='?' (DbType = Double), @p660='?' (DbType = Double), @p661='?' (DbType = Double), @p662='?' (DbType = Double), @p663='?' (DbType = Double), @p664='?' (DbType = Double), @p665='?' (DbType = Double), @p666='?' (DbType = Double), @p667='?' (DbType = Int64), @p668='?' (DbType = Double), @p669='?' (DbType = Double), @p670='?' (DbType = Double), @p671='?' (DbType = Double), @p672='?' (DbType = Int64), @p673='?' (DbType = Int64), @p674='?' (DbType = Int64), @p675='?' (DbType = Double), @p676='?' (DbType = Int64), @p677='?' (DbType = Int64), @p678='?' (DbType = DateTime2), @p679='?' (DbType = Double), @p680='?' (DbType = Double), @p681='?' (DbType = Double), @p682='?' (DbType = Double), @p683='?' (DbType = Int64), @p684='?' (DbType = Double), @p685='?' (DbType = Int64), @p686='?' (DbType = Double), @p687='?' (DbType = Double), @p688='?' (DbType = Double), @p689='?' (DbType = Double), @p690='?' (DbType = Double), @p691='?' (DbType = Int64), @p692='?' (Size = 4000), @p693='?' (DbType = Double), @p694='?' (DbType = Double), @p695='?' (DbType = Double), @p696='?' (DbType = Double), @p697='?' (Size = 450), @p698='?' (DbType = Double), @p699='?' (DbType = Double), @p700='?' (DbType = Double), @p701='?' (DbType = Double), @p702='?' (DbType = Double), @p703='?' (DbType = Double), @p704='?' (DbType = Double), @p705='?' (DbType = Double), @p706='?' (DbType = Int64), @p707='?' (DbType = Double), @p708='?' (DbType = Double), @p709='?' (DbType = Double), @p710='?' (DbType = Double), @p711='?' (DbType = Int64), @p712='?' (DbType = Int64), @p713='?' (DbType = Int64), @p714='?' (DbType = Double), @p715='?' (DbType = Int64), @p716='?' (DbType = Int64), @p717='?' (DbType = DateTime2), @p718='?' (DbType = Double), @p719='?' (DbType = Double), @p720='?' (DbType = Double), @p721='?' (DbType = Double), @p722='?' (DbType = Int64), @p723='?' (DbType = Double), @p724='?' (DbType = Int64), @p725='?' (DbType = Double), @p726='?' (DbType = Double), @p727='?' (DbType = Double), @p728='?' (DbType = Double), @p729='?' (DbType = Double), @p730='?' (DbType = Int64), @p731='?' (Size = 4000), @p732='?' (DbType = Double), @p733='?' (DbType = Double), @p734='?' (DbType = Double), @p735='?' (DbType = Double), @p736='?' (Size = 450), @p737='?' (DbType = Double), @p738='?' (DbType = Double), @p739='?' (DbType = Double), @p740='?' (DbType = Double), @p741='?' (DbType = Double), @p742='?' (DbType = Double), @p743='?' (DbType = Double), @p744='?' (DbType = Double), @p745='?' (DbType = Int64), @p746='?' (DbType = Double), @p747='?' (DbType = Double), @p748='?' (DbType = Double), @p749='?' (DbType = Double), @p750='?' (DbType = Int64), @p751='?' (DbType = Int64), @p752='?' (DbType = Int64), @p753='?' (DbType = Double), @p754='?' (DbType = Int64), @p755='?' (DbType = Int64), @p756='?' (DbType = DateTime2), @p757='?' (DbType = Double), @p758='?' (DbType = Double), @p759='?' (DbType = Double), @p760='?' (DbType = Double), @p761='?' (DbType = Int64), @p762='?' (DbType = Double), @p763='?' (DbType = Int64), @p764='?' (DbType = Double), @p765='?' (DbType = Double), @p766='?' (DbType = Double), @p767='?' (DbType = Double), @p768='?' (DbType = Double), @p769='?' (DbType = Int64), @p770='?' (Size = 4000), @p771='?' (DbType = Double), @p772='?' (DbType = Double), @p773='?' (DbType = Double), @p774='?' (DbType = Double), @p775='?' (Size = 450), @p776='?' (DbType = Double), @p777='?' (DbType = Double), @p778='?' (DbType = Double), @p779='?' (DbType = Double), @p780='?' (DbType = Double), @p781='?' (DbType = Double), @p782='?' (DbType = Double), @p783='?' (DbType = Double), @p784='?' (DbType = Int64), @p785='?' (DbType = Double), @p786='?' (DbType = Double), @p787='?' (DbType = Double), @p788='?' (DbType = Double), @p789='?' (DbType = Int64), @p790='?' (DbType = Int64), @p791='?' (DbType = Int64), @p792='?' (DbType = Double), @p793='?' (DbType = Int64), @p794='?' (DbType = Int64), @p795='?' (DbType = DateTime2), @p796='?' (DbType = Double), @p797='?' (DbType = Double), @p798='?' (DbType = Double), @p799='?' (DbType = Double), @p800='?' (DbType = Int64), @p801='?' (DbType = Double), @p802='?' (DbType = Int64), @p803='?' (DbType = Double), @p804='?' (DbType = Double), @p805='?' (DbType = Double), @p806='?' (DbType = Double), @p807='?' (DbType = Double), @p808='?' (DbType = Int64), @p809='?' (Size = 4000), @p810='?' (DbType = Double), @p811='?' (DbType = Double), @p812='?' (DbType = Double), @p813='?' (DbType = Double), @p814='?' (Size = 450), @p815='?' (DbType = Double), @p816='?' (DbType = Double), @p817='?' (DbType = Double), @p818='?' (DbType = Double), @p819='?' (DbType = Double), @p820='?' (DbType = Double), @p821='?' (DbType = Double), @p822='?' (DbType = Double), @p823='?' (DbType = Int64), @p824='?' (DbType = Double), @p825='?' (DbType = Double), @p826='?' (DbType = Double), @p827='?' (DbType = Double), @p828='?' (DbType = Int64), @p829='?' (DbType = Int64), @p830='?' (DbType = Int64), @p831='?' (DbType = Double), @p832='?' (DbType = Int64), @p833='?' (DbType = Int64), @p834='?' (DbType = DateTime2), @p835='?' (DbType = Double), @p836='?' (DbType = Double), @p837='?' (DbType = Double), @p838='?' (DbType = Double), @p839='?' (DbType = Int64), @p840='?' (DbType = Double), @p841='?' (DbType = Int64), @p842='?' (DbType = Double), @p843='?' (DbType = Double), @p844='?' (DbType = Double), @p845='?' (DbType = Double), @p846='?' (DbType = Double), @p847='?' (DbType = Int64), @p848='?' (Size = 4000), @p849='?' (DbType = Double), @p850='?' (DbType = Double), @p851='?' (DbType = Double), @p852='?' (DbType = Double), @p853='?' (Size = 450), @p854='?' (DbType = Double), @p855='?' (DbType = Double), @p856='?' (DbType = Double), @p857='?' (DbType = Double), @p858='?' (DbType = Double), @p859='?' (DbType = Double), @p860='?' (DbType = Double), @p861='?' (DbType = Double), @p862='?' (DbType = Int64), @p863='?' (DbType = Double), @p864='?' (DbType = Double), @p865='?' (DbType = Double), @p866='?' (DbType = Double), @p867='?' (DbType = Int64), @p868='?' (DbType = Int64), @p869='?' (DbType = Int64), @p870='?' (DbType = Double), @p871='?' (DbType = Int64), @p872='?' (DbType = Int64), @p873='?' (DbType = DateTime2), @p874='?' (DbType = Double), @p875='?' (DbType = Double), @p876='?' (DbType = Double), @p877='?' (DbType = Double), @p878='?' (DbType = Int64), @p879='?' (DbType = Double), @p880='?' (DbType = Int64), @p881='?' (DbType = Double), @p882='?' (DbType = Double), @p883='?' (DbType = Double), @p884='?' (DbType = Double), @p885='?' (DbType = Double), @p886='?' (DbType = Int64), @p887='?' (Size = 4000), @p888='?' (DbType = Double), @p889='?' (DbType = Double), @p890='?' (DbType = Double), @p891='?' (DbType = Double), @p892='?' (Size = 450), @p893='?' (DbType = Double), @p894='?' (DbType = Double), @p895='?' (DbType = Double), @p896='?' (DbType = Double), @p897='?' (DbType = Double), @p898='?' (DbType = Double), @p899='?' (DbType = Double), @p900='?' (DbType = Double), @p901='?' (DbType = Int64), @p902='?' (DbType = Double), @p903='?' (DbType = Double), @p904='?' (DbType = Double), @p905='?' (DbType = Double), @p906='?' (DbType = Int64), @p907='?' (DbType = Int64), @p908='?' (DbType = Int64), @p909='?' (DbType = Double), @p910='?' (DbType = Int64), @p911='?' (DbType = Int64), @p912='?' (DbType = DateTime2), @p913='?' (DbType = Double), @p914='?' (DbType = Double), @p915='?' (DbType = Double), @p916='?' (DbType = Double), @p917='?' (DbType = Int64), @p918='?' (DbType = Double), @p919='?' (DbType = Int64), @p920='?' (DbType = Double), @p921='?' (DbType = Double), @p922='?' (DbType = Double), @p923='?' (DbType = Double), @p924='?' (DbType = Double), @p925='?' (DbType = Int64), @p926='?' (Size = 4000), @p927='?' (DbType = Double), @p928='?' (DbType = Double), @p929='?' (DbType = Double), @p930='?' (DbType = Double), @p931='?' (Size = 450), @p932='?' (DbType = Double), @p933='?' (DbType = Double), @p934='?' (DbType = Double), @p935='?' (DbType = Double), @p936='?' (DbType = Double), @p937='?' (DbType = Double), @p938='?' (DbType = Double), @p939='?' (DbType = Double), @p940='?' (DbType = Int64), @p941='?' (DbType = Double), @p942='?' (DbType = Double), @p943='?' (DbType = Double), @p944='?' (DbType = Double), @p945='?' (DbType = Int64), @p946='?' (DbType = Int64), @p947='?' (DbType = Int64), @p948='?' (DbType = Double), @p949='?' (DbType = Int64), @p950='?' (DbType = Int64), @p951='?' (DbType = DateTime2), @p952='?' (DbType = Double), @p953='?' (DbType = Double), @p954='?' (DbType = Double), @p955='?' (DbType = Double), @p956='?' (DbType = Int64), @p957='?' (DbType = Double), @p958='?' (DbType = Int64), @p959='?' (DbType = Double), @p960='?' (DbType = Double), @p961='?' (DbType = Double), @p962='?' (DbType = Double), @p963='?' (DbType = Double), @p964='?' (DbType = Int64), @p965='?' (Size = 4000), @p966='?' (DbType = Double), @p967='?' (DbType = Double), @p968='?' (DbType = Double), @p969='?' (DbType = Double), @p970='?' (Size = 450), @p971='?' (DbType = Double), @p972='?' (DbType = Double), @p973='?' (DbType = Double), @p974='?' (DbType = Double), @p975='?' (DbType = Double), @p976='?' (DbType = Double), @p977='?' (DbType = Double), @p978='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
DECLARE @inserted0 TABLE ([Id] int, [_Position] [int]);
MERGE [BalanceSheetAnnualReport] USING (
VALUES (@p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21, @p22, @p23, @p24, @p25, @p26, @p27, @p28, @p29, @p30, @p31, @p32, @p33, @p34, @p35, @p36, @p37, @p38, @p39, @p40, @p41, @p42, 0),
(@p43, @p44, @p45, @p46, @p47, @p48, @p49, @p50, @p51, @p52, @p53, @p54, @p55, @p56, @p57, @p58, @p59, @p60, @p61, @p62, @p63, @p64, @p65, @p66, @p67, @p68, @p69, @p70, @p71, @p72, @p73, @p74, @p75, @p76, @p77, @p78, @p79, @p80, @p81, 1),
(@p82, @p83, @p84, @p85, @p86, @p87, @p88, @p89, @p90, @p91, @p92, @p93, @p94, @p95, @p96, @p97, @p98, @p99, @p100, @p101, @p102, @p103, @p104, @p105, @p106, @p107, @p108, @p109, @p110, @p111, @p112, @p113, @p114, @p115, @p116, @p117, @p118, @p119, @p120, 2),
(@p121, @p122, @p123, @p124, @p125, @p126, @p127, @p128, @p129, @p130, @p131, @p132, @p133, @p134, @p135, @p136, @p137, @p138, @p139, @p140, @p141, @p142, @p143, @p144, @p145, @p146, @p147, @p148, @p149, @p150, @p151, @p152, @p153, @p154, @p155, @p156, @p157, @p158, @p159, 3),
(@p160, @p161, @p162, @p163, @p164, @p165, @p166, @p167, @p168, @p169, @p170, @p171, @p172, @p173, @p174, @p175, @p176, @p177, @p178, @p179, @p180, @p181, @p182, @p183, @p184, @p185, @p186, @p187, @p188, @p189, @p190, @p191, @p192, @p193, @p194, @p195, @p196, @p197, @p198, 4)) AS i ([AccumulatedDepreciationAmortizationPPE], [CapitalLeaseObligations], [CashAndCashEquivalentsAtCarryingValue], [CashAndShortTermInvestments], [CommonStock], [CommonStockSharesOutstanding], [CurrentAccountsPayable], [CurrentDebt], [CurrentLongTermDebt], [CurrentNetReceivables], [DeferredRevenue], [FiscalDateEnding], [Goodwill], [IntangibleAssets], [IntangibleAssetsExcludingGoodwill], [Inventory], [Investments], [LongTermDebt], [LongTermDebtNoncurrent], [LongTermInvestments], [OtherCurrentAssets], [OtherCurrentLiabilities], [OtherNonCurrentAssets], [OtherNonCurrentLiabilities], [PropertyPlantEquipment], [ReportedCurrency], [RetainedEarnings], [ShortLongTermDebtTotal], [ShortTermDebt], [ShortTermInvestments], [Symbol], [TotalAssets], [TotalCurrentAssets], [TotalCurrentLiabilities], [TotalLiabilities], [TotalNonCurrentAssets], [TotalNonCurrentLiabilities], [TotalShareholderEquity], [TreasuryStock], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([AccumulatedDepreciationAmortizationPPE], [CapitalLeaseObligations], [CashAndCashEquivalentsAtCarryingValue], [CashAndShortTermInvestments], [CommonStock], [CommonStockSharesOutstanding], [CurrentAccountsPayable], [CurrentDebt], [CurrentLongTermDebt], [CurrentNetReceivables], [DeferredRevenue], [FiscalDateEnding], [Goodwill], [IntangibleAssets], [IntangibleAssetsExcludingGoodwill], [Inventory], [Investments], [LongTermDebt], [LongTermDebtNoncurrent], [LongTermInvestments], [OtherCurrentAssets], [OtherCurrentLiabilities], [OtherNonCurrentAssets], [OtherNonCurrentLiabilities], [PropertyPlantEquipment], [ReportedCurrency], [RetainedEarnings], [ShortLongTermDebtTotal], [ShortTermDebt], [ShortTermInvestments], [Symbol], [TotalAssets], [TotalCurrentAssets], [TotalCurrentLiabilities], [TotalLiabilities], [TotalNonCurrentAssets], [TotalNonCurrentLiabilities], [TotalShareholderEquity], [TreasuryStock])
VALUES (i.[AccumulatedDepreciationAmortizationPPE], i.[CapitalLeaseObligations], i.[CashAndCashEquivalentsAtCarryingValue], i.[CashAndShortTermInvestments], i.[CommonStock], i.[CommonStockSharesOutstanding], i.[CurrentAccountsPayable], i.[CurrentDebt], i.[CurrentLongTermDebt], i.[CurrentNetReceivables], i.[DeferredRevenue], i.[FiscalDateEnding], i.[Goodwill], i.[IntangibleAssets], i.[IntangibleAssetsExcludingGoodwill], i.[Inventory], i.[Investments], i.[LongTermDebt], i.[LongTermDebtNoncurrent], i.[LongTermInvestments], i.[OtherCurrentAssets], i.[OtherCurrentLiabilities], i.[OtherNonCurrentAssets], i.[OtherNonCurrentLiabilities], i.[PropertyPlantEquipment], i.[ReportedCurrency], i.[RetainedEarnings], i.[ShortLongTermDebtTotal], i.[ShortTermDebt], i.[ShortTermInvestments], i.[Symbol], i.[TotalAssets], i.[TotalCurrentAssets], i.[TotalCurrentLiabilities], i.[TotalLiabilities], i.[TotalNonCurrentAssets], i.[TotalNonCurrentLiabilities], i.[TotalShareholderEquity], i.[TreasuryStock])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted0;

SELECT [i].[Id] FROM @inserted0 i
ORDER BY [i].[_Position];

DECLARE @inserted5 TABLE ([Id] int, [_Position] [int]);
MERGE [BalanceSheetQuarterlyReports] USING (
VALUES (@p199, @p200, @p201, @p202, @p203, @p204, @p205, @p206, @p207, @p208, @p209, @p210, @p211, @p212, @p213, @p214, @p215, @p216, @p217, @p218, @p219, @p220, @p221, @p222, @p223, @p224, @p225, @p226, @p227, @p228, @p229, @p230, @p231, @p232, @p233, @p234, @p235, @p236, @p237, 0),
(@p238, @p239, @p240, @p241, @p242, @p243, @p244, @p245, @p246, @p247, @p248, @p249, @p250, @p251, @p252, @p253, @p254, @p255, @p256, @p257, @p258, @p259, @p260, @p261, @p262, @p263, @p264, @p265, @p266, @p267, @p268, @p269, @p270, @p271, @p272, @p273, @p274, @p275, @p276, 1),
(@p277, @p278, @p279, @p280, @p281, @p282, @p283, @p284, @p285, @p286, @p287, @p288, @p289, @p290, @p291, @p292, @p293, @p294, @p295, @p296, @p297, @p298, @p299, @p300, @p301, @p302, @p303, @p304, @p305, @p306, @p307, @p308, @p309, @p310, @p311, @p312, @p313, @p314, @p315, 2),
(@p316, @p317, @p318, @p319, @p320, @p321, @p322, @p323, @p324, @p325, @p326, @p327, @p328, @p329, @p330, @p331, @p332, @p333, @p334, @p335, @p336, @p337, @p338, @p339, @p340, @p341, @p342, @p343, @p344, @p345, @p346, @p347, @p348, @p349, @p350, @p351, @p352, @p353, @p354, 3),
(@p355, @p356, @p357, @p358, @p359, @p360, @p361, @p362, @p363, @p364, @p365, @p366, @p367, @p368, @p369, @p370, @p371, @p372, @p373, @p374, @p375, @p376, @p377, @p378, @p379, @p380, @p381, @p382, @p383, @p384, @p385, @p386, @p387, @p388, @p389, @p390, @p391, @p392, @p393, 4),
(@p394, @p395, @p396, @p397, @p398, @p399, @p400, @p401, @p402, @p403, @p404, @p405, @p406, @p407, @p408, @p409, @p410, @p411, @p412, @p413, @p414, @p415, @p416, @p417, @p418, @p419, @p420, @p421, @p422, @p423, @p424, @p425, @p426, @p427, @p428, @p429, @p430, @p431, @p432, 5),
(@p433, @p434, @p435, @p436, @p437, @p438, @p439, @p440, @p441, @p442, @p443, @p444, @p445, @p446, @p447, @p448, @p449, @p450, @p451, @p452, @p453, @p454, @p455, @p456, @p457, @p458, @p459, @p460, @p461, @p462, @p463, @p464, @p465, @p466, @p467, @p468, @p469, @p470, @p471, 6),
(@p472, @p473, @p474, @p475, @p476, @p477, @p478, @p479, @p480, @p481, @p482, @p483, @p484, @p485, @p486, @p487, @p488, @p489, @p490, @p491, @p492, @p493, @p494, @p495, @p496, @p497, @p498, @p499, @p500, @p501, @p502, @p503, @p504, @p505, @p506, @p507, @p508, @p509, @p510, 7),
(@p511, @p512, @p513, @p514, @p515, @p516, @p517, @p518, @p519, @p520, @p521, @p522, @p523, @p524, @p525, @p526, @p527, @p528, @p529, @p530, @p531, @p532, @p533, @p534, @p535, @p536, @p537, @p538, @p539, @p540, @p541, @p542, @p543, @p544, @p545, @p546, @p547, @p548, @p549, 8),
(@p550, @p551, @p552, @p553, @p554, @p555, @p556, @p557, @p558, @p559, @p560, @p561, @p562, @p563, @p564, @p565, @p566, @p567, @p568, @p569, @p570, @p571, @p572, @p573, @p574, @p575, @p576, @p577, @p578, @p579, @p580, @p581, @p582, @p583, @p584, @p585, @p586, @p587, @p588, 9),
(@p589, @p590, @p591, @p592, @p593, @p594, @p595, @p596, @p597, @p598, @p599, @p600, @p601, @p602, @p603, @p604, @p605, @p606, @p607, @p608, @p609, @p610, @p611, @p612, @p613, @p614, @p615, @p616, @p617, @p618, @p619, @p620, @p621, @p622, @p623, @p624, @p625, @p626, @p627, 10),
(@p628, @p629, @p630, @p631, @p632, @p633, @p634, @p635, @p636, @p637, @p638, @p639, @p640, @p641, @p642, @p643, @p644, @p645, @p646, @p647, @p648, @p649, @p650, @p651, @p652, @p653, @p654, @p655, @p656, @p657, @p658, @p659, @p660, @p661, @p662, @p663, @p664, @p665, @p666, 11),
(@p667, @p668, @p669, @p670, @p671, @p672, @p673, @p674, @p675, @p676, @p677, @p678, @p679, @p680, @p681, @p682, @p683, @p684, @p685, @p686, @p687, @p688, @p689, @p690, @p691, @p692, @p693, @p694, @p695, @p696, @p697, @p698, @p699, @p700, @p701, @p702, @p703, @p704, @p705, 12),
(@p706, @p707, @p708, @p709, @p710, @p711, @p712, @p713, @p714, @p715, @p716, @p717, @p718, @p719, @p720, @p721, @p722, @p723, @p724, @p725, @p726, @p727, @p728, @p729, @p730, @p731, @p732, @p733, @p734, @p735, @p736, @p737, @p738, @p739, @p740, @p741, @p742, @p743, @p744, 13),
(@p745, @p746, @p747, @p748, @p749, @p750, @p751, @p752, @p753, @p754, @p755, @p756, @p757, @p758, @p759, @p760, @p761, @p762, @p763, @p764, @p765, @p766, @p767, @p768, @p769, @p770, @p771, @p772, @p773, @p774, @p775, @p776, @p777, @p778, @p779, @p780, @p781, @p782, @p783, 14),
(@p784, @p785, @p786, @p787, @p788, @p789, @p790, @p791, @p792, @p793, @p794, @p795, @p796, @p797, @p798, @p799, @p800, @p801, @p802, @p803, @p804, @p805, @p806, @p807, @p808, @p809, @p810, @p811, @p812, @p813, @p814, @p815, @p816, @p817, @p818, @p819, @p820, @p821, @p822, 15),
(@p823, @p824, @p825, @p826, @p827, @p828, @p829, @p830, @p831, @p832, @p833, @p834, @p835, @p836, @p837, @p838, @p839, @p840, @p841, @p842, @p843, @p844, @p845, @p846, @p847, @p848, @p849, @p850, @p851, @p852, @p853, @p854, @p855, @p856, @p857, @p858, @p859, @p860, @p861, 16),
(@p862, @p863, @p864, @p865, @p866, @p867, @p868, @p869, @p870, @p871, @p872, @p873, @p874, @p875, @p876, @p877, @p878, @p879, @p880, @p881, @p882, @p883, @p884, @p885, @p886, @p887, @p888, @p889, @p890, @p891, @p892, @p893, @p894, @p895, @p896, @p897, @p898, @p899, @p900, 17),
(@p901, @p902, @p903, @p904, @p905, @p906, @p907, @p908, @p909, @p910, @p911, @p912, @p913, @p914, @p915, @p916, @p917, @p918, @p919, @p920, @p921, @p922, @p923, @p924, @p925, @p926, @p927, @p928, @p929, @p930, @p931, @p932, @p933, @p934, @p935, @p936, @p937, @p938, @p939, 18),
(@p940, @p941, @p942, @p943, @p944, @p945, @p946, @p947, @p948, @p949, @p950, @p951, @p952, @p953, @p954, @p955, @p956, @p957, @p958, @p959, @p960, @p961, @p962, @p963, @p964, @p965, @p966, @p967, @p968, @p969, @p970, @p971, @p972, @p973, @p974, @p975, @p976, @p977, @p978, 19)) AS i ([AccumulatedDepreciationAmortizationPPE], [CapitalLeaseObligations], [CashAndCashEquivalentsAtCarryingValue], [CashAndShortTermInvestments], [CommonStock], [CommonStockSharesOutstanding], [CurrentAccountsPayable], [CurrentDebt], [CurrentLongTermDebt], [CurrentNetReceivables], [DeferredRevenue], [FiscalDateEnding], [Goodwill], [IntangibleAssets], [IntangibleAssetsExcludingGoodwill], [Inventory], [Investments], [LongTermDebt], [LongTermDebtNoncurrent], [LongTermInvestments], [OtherCurrentAssets], [OtherCurrentLiabilities], [OtherNonCurrentAssets], [OtherNonCurrentLiabilities], [PropertyPlantEquipment], [ReportedCurrency], [RetainedEarnings], [ShortLongTermDebtTotal], [ShortTermDebt], [ShortTermInvestments], [Symbol], [TotalAssets], [TotalCurrentAssets], [TotalCurrentLiabilities], [TotalLiabilities], [TotalNonCurrentAssets], [TotalNonCurrentLiabilities], [TotalShareholderEquity], [TreasuryStock], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([AccumulatedDepreciationAmortizationPPE], [CapitalLeaseObligations], [CashAndCashEquivalentsAtCarryingValue], [CashAndShortTermInvestments], [CommonStock], [CommonStockSharesOutstanding], [CurrentAccountsPayable], [CurrentDebt], [CurrentLongTermDebt], [CurrentNetReceivables], [DeferredRevenue], [FiscalDateEnding], [Goodwill], [IntangibleAssets], [IntangibleAssetsExcludingGoodwill], [Inventory], [Investments], [LongTermDebt], [LongTermDebtNoncurrent], [LongTermInvestments], [OtherCurrentAssets], [OtherCurrentLiabilities], [OtherNonCurrentAssets], [OtherNonCurrentLiabilities], [PropertyPlantEquipment], [ReportedCurrency], [RetainedEarnings], [ShortLongTermDebtTotal], [ShortTermDebt], [ShortTermInvestments], [Symbol], [TotalAssets], [TotalCurrentAssets], [TotalCurrentLiabilities], [TotalLiabilities], [TotalNonCurrentAssets], [TotalNonCurrentLiabilities], [TotalShareholderEquity], [TreasuryStock])
VALUES (i.[AccumulatedDepreciationAmortizationPPE], i.[CapitalLeaseObligations], i.[CashAndCashEquivalentsAtCarryingValue], i.[CashAndShortTermInvestments], i.[CommonStock], i.[CommonStockSharesOutstanding], i.[CurrentAccountsPayable], i.[CurrentDebt], i.[CurrentLongTermDebt], i.[CurrentNetReceivables], i.[DeferredRevenue], i.[FiscalDateEnding], i.[Goodwill], i.[IntangibleAssets], i.[IntangibleAssetsExcludingGoodwill], i.[Inventory], i.[Investments], i.[LongTermDebt], i.[LongTermDebtNoncurrent], i.[LongTermInvestments], i.[OtherCurrentAssets], i.[OtherCurrentLiabilities], i.[OtherNonCurrentAssets], i.[OtherNonCurrentLiabilities], i.[PropertyPlantEquipment], i.[ReportedCurrency], i.[RetainedEarnings], i.[ShortLongTermDebtTotal], i.[ShortTermDebt], i.[ShortTermInvestments], i.[Symbol], i.[TotalAssets], i.[TotalCurrentAssets], i.[TotalCurrentLiabilities], i.[TotalLiabilities], i.[TotalNonCurrentAssets], i.[TotalNonCurrentLiabilities], i.[TotalShareholderEquity], i.[TreasuryStock])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted5;

SELECT [i].[Id] FROM @inserted5 i
ORDER BY [i].[_Position];
2022-05-12 01:05:27.790 +03:00 [INF] AddOrUpdate run successful.
2022-05-12 01:05:31.551 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CashFlow with Symbol ATXI
2022-05-12 01:05:31.554 +03:00 [INF] Generating URI for CASH_FLOW with params: symbol: ATXI
2022-05-12 01:05:31.555 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=CASH_FLOW&symbol=ATXI
2022-05-12 01:05:31.555 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=CASH_FLOW&symbol=ATXI".
2022-05-12 01:05:33.248 +03:00 [INF] Response has success status code
2022-05-12 01:05:33.249 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.CashFlow for symbol ATXI
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCashFlow(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 96
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:05:53.851 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CompanyOverview with Symbol BKIS
2022-05-12 01:05:53.852 +03:00 [INF] Generating URI for OVERVIEW with params: symbol: BKIS
2022-05-12 01:05:53.852 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=OVERVIEW&symbol=BKIS
2022-05-12 01:05:53.853 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=OVERVIEW&symbol=BKIS".
2022-05-12 01:05:54.640 +03:00 [INF] Response has success status code
2022-05-12 01:05:54.641 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.CompanyOverview for symbol BKIS
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyOverview(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 116
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:05:56.176 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.Earnings with Symbol AWYX
2022-05-12 01:05:56.180 +03:00 [INF] Generating URI for EARNINGS with params: symbol: AWYX
2022-05-12 01:05:56.180 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=EARNINGS&symbol=AWYX
2022-05-12 01:05:56.181 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=EARNINGS&symbol=AWYX".
2022-05-12 01:05:57.232 +03:00 [INF] Response has success status code
2022-05-12 01:05:57.233 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.Earnings for symbol AWYX
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyEarnings(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 142
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:05:57.492 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.IncomeStatement with Symbol AUS-U
2022-05-12 01:05:57.496 +03:00 [INF] Generating URI for INCOME_STATEMENT with params: symbol: AUS-U
2022-05-12 01:05:57.497 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=INCOME_STATEMENT&symbol=AUS-U
2022-05-12 01:05:57.497 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=INCOME_STATEMENT&symbol=AUS-U".
2022-05-12 01:05:57.804 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.BalanceSheet with Symbol BENER
2022-05-12 01:05:57.808 +03:00 [INF] Generating URI for BALANCE_SHEET with params: symbol: BENER
2022-05-12 01:05:57.808 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BENER
2022-05-12 01:05:57.809 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BENER".
2022-05-12 01:05:57.872 +03:00 [INF] Response has success status code
2022-05-12 01:05:57.872 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.IncomeStatement for symbol AUS-U
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetIncomeStatement(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 69
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:05:59.193 +03:00 [INF] Response has success status code
2022-05-12 01:05:59.193 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.BalanceSheet for symbol BENER
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetBalanceSheet(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 82
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:06:03.256 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CashFlow with Symbol AU
2022-05-12 01:06:03.257 +03:00 [INF] Generating URI for CASH_FLOW with params: symbol: AU
2022-05-12 01:06:03.258 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=CASH_FLOW&symbol=AU
2022-05-12 01:06:03.258 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=CASH_FLOW&symbol=AU".
2022-05-12 01:06:03.912 +03:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/screener-model - -
2022-05-12 01:06:03.912 +03:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/distribution/market-cap/30 - -
2022-05-12 01:06:03.913 +03:00 [INF] CORS policy execution successful.
2022-05-12 01:06:03.913 +03:00 [INF] CORS policy execution successful.
2022-05-12 01:06:03.914 +03:00 [INF] Executing endpoint 'SaluteStocksAPI.Controllers.ApiController.GetScreenerModel (SaluteStocksAPI)'
2022-05-12 01:06:03.914 +03:00 [INF] Executing endpoint 'SaluteStocksAPI.Controllers.ApiController.GetMarketCapDistribution (SaluteStocksAPI)'
2022-05-12 01:06:03.915 +03:00 [INF] Route matched with {action = "GetScreenerModel", controller = "Api"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetScreenerModel() on controller SaluteStocksAPI.Controllers.ApiController (SaluteStocksAPI).
2022-05-12 01:06:03.915 +03:00 [INF] Route matched with {action = "GetMarketCapDistribution", controller = "Api"}. Executing controller action with signature System.Threading.Tasks.Task`1[System.String] GetMarketCapDistribution(Int32) on controller SaluteStocksAPI.Controllers.ApiController (SaluteStocksAPI).
2022-05-12 01:06:03.917 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 01:06:03.918 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 01:06:03.928 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[MarketCapitalization])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 01:06:03.929 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[MarketCapitalization])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 01:06:03.939 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[MarketCapitalization])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 01:06:03.940 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[MarketCapitalization])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 01:06:03.950 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:06:03.950 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[EBITDA])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 01:06:03.963 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[EBITDA])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 01:06:03.963 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:06:03.973 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[PERatio])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 01:06:03.974 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:06:03.982 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[PERatio])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 01:06:03.984 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2022-05-12 01:06:03.985 +03:00 [INF] Executed action SaluteStocksAPI.Controllers.ApiController.GetScreenerModel (SaluteStocksAPI) in 68.0114ms
2022-05-12 01:06:03.985 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:06:03.985 +03:00 [INF] Executed endpoint 'SaluteStocksAPI.Controllers.ApiController.GetScreenerModel (SaluteStocksAPI)'
2022-05-12 01:06:03.987 +03:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/screener-model - - - 200 - text/plain;+charset=utf-8 75.0481ms
2022-05-12 01:06:03.998 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:06:04.010 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:06:04.025 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:06:04.039 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:06:04.051 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:06:04.062 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:06:04.072 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:06:04.084 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:06:04.094 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:06:04.106 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:06:04.116 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:06:04.128 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:06:04.140 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:06:04.153 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:06:04.164 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:06:04.175 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:06:04.185 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:06:04.195 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:06:04.205 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:06:04.215 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:06:04.227 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:06:04.237 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:06:04.250 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:06:04.261 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:06:04.274 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:06:04.275 +03:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2022-05-12 01:06:04.276 +03:00 [INF] Executed action SaluteStocksAPI.Controllers.ApiController.GetMarketCapDistribution (SaluteStocksAPI) in 357.7589ms
2022-05-12 01:06:04.277 +03:00 [INF] Executed endpoint 'SaluteStocksAPI.Controllers.ApiController.GetMarketCapDistribution (SaluteStocksAPI)'
2022-05-12 01:06:04.278 +03:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/distribution/market-cap/30 - - - 200 - text/plain;+charset=utf-8 365.7075ms
2022-05-12 01:06:07.630 +03:00 [INF] Response has success status code
2022-05-12 01:06:07.631 +03:00 [INF] Trying to deserialize response.
2022-05-12 01:06:07.632 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 01:06:07.682 +03:00 [INF] Executed DbCommand (49ms) [Parameters=[@__symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__symbol_0
2022-05-12 01:06:07.683 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.CashFlow.
2022-05-12 01:06:07.694 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[ExistInApi], [c].[LastApiRefresh], [c].[LastLocalRefresh]
FROM [CashFlows] AS [c]
WHERE [c].[Symbol] = @__entity_Symbol_0
2022-05-12 01:06:07.695 +03:00 [INF] Entity does not exist. Adding to DB.
2022-05-12 01:06:07.709 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = Boolean), @p2='?' (DbType = DateTime2), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [CashFlows] ([Symbol], [ExistInApi], [LastApiRefresh], [LastLocalRefresh])
VALUES (@p0, @p1, @p2, @p3);
2022-05-12 01:06:07.758 +03:00 [INF] Executed DbCommand (45ms) [Parameters=[@p4='?' (DbType = Double), @p5='?' (DbType = Double), @p6='?' (DbType = Int64), @p7='?' (DbType = Int64), @p8='?' (DbType = Int64), @p9='?' (DbType = Int64), @p10='?' (DbType = Int64), @p11='?' (DbType = Int64), @p12='?' (DbType = Int64), @p13='?' (DbType = Double), @p14='?' (DbType = Int64), @p15='?' (DbType = Double), @p16='?' (DbType = Int64), @p17='?' (Size = 4000), @p18='?' (DbType = Double), @p19='?' (DbType = Double), @p20='?' (DbType = Int64), @p21='?' (DbType = Int64), @p22='?' (DbType = Int64), @p23='?' (DbType = Int64), @p24='?' (DbType = Int64), @p25='?' (DbType = Int64), @p26='?' (DbType = Int64), @p27='?' (DbType = Int64), @p28='?' (DbType = Int64), @p29='?' (DbType = Double), @p30='?' (DbType = Int64), @p31='?' (DbType = Int64), @p32='?' (Size = 4000), @p33='?' (Size = 450), @p34='?' (DbType = Double), @p35='?' (DbType = Double), @p36='?' (DbType = Int64), @p37='?' (DbType = Int64), @p38='?' (DbType = Int64), @p39='?' (DbType = Int64), @p40='?' (DbType = Int64), @p41='?' (DbType = Int64), @p42='?' (DbType = Int64), @p43='?' (DbType = Double), @p44='?' (DbType = Int64), @p45='?' (DbType = Double), @p46='?' (DbType = Int64), @p47='?' (Size = 4000), @p48='?' (DbType = Double), @p49='?' (DbType = Double), @p50='?' (DbType = Int64), @p51='?' (DbType = Int64), @p52='?' (DbType = Int64), @p53='?' (DbType = Int64), @p54='?' (DbType = Int64), @p55='?' (DbType = Int64), @p56='?' (DbType = Int64), @p57='?' (DbType = Int64), @p58='?' (DbType = Int64), @p59='?' (DbType = Double), @p60='?' (DbType = Int64), @p61='?' (DbType = Int64), @p62='?' (Size = 4000), @p63='?' (Size = 450), @p64='?' (DbType = Double), @p65='?' (DbType = Double), @p66='?' (DbType = Int64), @p67='?' (DbType = Int64), @p68='?' (DbType = Int64), @p69='?' (DbType = Int64), @p70='?' (DbType = Int64), @p71='?' (DbType = Int64), @p72='?' (DbType = Int64), @p73='?' (DbType = Double), @p74='?' (DbType = Int64), @p75='?' (DbType = Double), @p76='?' (DbType = Int64), @p77='?' (Size = 4000), @p78='?' (DbType = Double), @p79='?' (DbType = Double), @p80='?' (DbType = Int64), @p81='?' (DbType = Int64), @p82='?' (DbType = Int64), @p83='?' (DbType = Int64), @p84='?' (DbType = Int64), @p85='?' (DbType = Int64), @p86='?' (DbType = Int64), @p87='?' (DbType = Int64), @p88='?' (DbType = Int64), @p89='?' (DbType = Double), @p90='?' (DbType = Int64), @p91='?' (DbType = Int64), @p92='?' (Size = 4000), @p93='?' (Size = 450), @p94='?' (DbType = Double), @p95='?' (DbType = Double), @p96='?' (DbType = Int64), @p97='?' (DbType = Int64), @p98='?' (DbType = Int64), @p99='?' (DbType = Int64), @p100='?' (DbType = Int64), @p101='?' (DbType = Int64), @p102='?' (DbType = Int64), @p103='?' (DbType = Double), @p104='?' (DbType = Int64), @p105='?' (DbType = Double), @p106='?' (DbType = Int64), @p107='?' (Size = 4000), @p108='?' (DbType = Double), @p109='?' (DbType = Double), @p110='?' (DbType = Int64), @p111='?' (DbType = Int64), @p112='?' (DbType = Int64), @p113='?' (DbType = Int64), @p114='?' (DbType = Int64), @p115='?' (DbType = Int64), @p116='?' (DbType = Int64), @p117='?' (DbType = Int64), @p118='?' (DbType = Int64), @p119='?' (DbType = Double), @p120='?' (DbType = Int64), @p121='?' (DbType = Int64), @p122='?' (Size = 4000), @p123='?' (Size = 450), @p124='?' (DbType = Double), @p125='?' (DbType = Double), @p126='?' (DbType = Int64), @p127='?' (DbType = Int64), @p128='?' (DbType = Int64), @p129='?' (DbType = Int64), @p130='?' (DbType = Int64), @p131='?' (DbType = Int64), @p132='?' (DbType = Int64), @p133='?' (DbType = Double), @p134='?' (DbType = Int64), @p135='?' (DbType = Double), @p136='?' (DbType = Int64), @p137='?' (Size = 4000), @p138='?' (DbType = Double), @p139='?' (DbType = Double), @p140='?' (DbType = Int64), @p141='?' (DbType = Int64), @p142='?' (DbType = Int64), @p143='?' (DbType = Int64), @p144='?' (DbType = Int64), @p145='?' (DbType = Int64), @p146='?' (DbType = Int64), @p147='?' (DbType = Int64), @p148='?' (DbType = Int64), @p149='?' (DbType = Double), @p150='?' (DbType = Int64), @p151='?' (DbType = Int64), @p152='?' (Size = 4000), @p153='?' (Size = 450), @p154='?' (DbType = Double), @p155='?' (DbType = Double), @p156='?' (DbType = Int64), @p157='?' (DbType = Int64), @p158='?' (DbType = Int64), @p159='?' (DbType = Int64), @p160='?' (DbType = Int64), @p161='?' (DbType = Int64), @p162='?' (DbType = Int64), @p163='?' (DbType = Double), @p164='?' (DbType = Int64), @p165='?' (DbType = Double), @p166='?' (DbType = Int64), @p167='?' (Size = 4000), @p168='?' (DbType = Double), @p169='?' (DbType = Double), @p170='?' (DbType = Int64), @p171='?' (DbType = Int64), @p172='?' (DbType = Int64), @p173='?' (DbType = Int64), @p174='?' (DbType = Int64), @p175='?' (DbType = Int64), @p176='?' (DbType = Int64), @p177='?' (DbType = Int64), @p178='?' (DbType = Int64), @p179='?' (DbType = Double), @p180='?' (DbType = Int64), @p181='?' (DbType = Int64), @p182='?' (Size = 4000), @p183='?' (Size = 450), @p184='?' (DbType = Double), @p185='?' (DbType = Double), @p186='?' (DbType = Int64), @p187='?' (DbType = Int64), @p188='?' (DbType = Int64), @p189='?' (DbType = Int64), @p190='?' (DbType = Int64), @p191='?' (DbType = Int64), @p192='?' (DbType = Int64), @p193='?' (DbType = Double), @p194='?' (DbType = Int64), @p195='?' (DbType = Double), @p196='?' (DbType = Int64), @p197='?' (Size = 4000), @p198='?' (DbType = Double), @p199='?' (DbType = Double), @p200='?' (DbType = Int64), @p201='?' (DbType = Int64), @p202='?' (DbType = Int64), @p203='?' (DbType = Int64), @p204='?' (DbType = Int64), @p205='?' (DbType = Int64), @p206='?' (DbType = Int64), @p207='?' (DbType = Int64), @p208='?' (DbType = Int64), @p209='?' (DbType = Double), @p210='?' (DbType = Int64), @p211='?' (DbType = Int64), @p212='?' (Size = 4000), @p213='?' (Size = 450), @p214='?' (DbType = Double), @p215='?' (DbType = Double), @p216='?' (DbType = Int64), @p217='?' (DbType = Int64), @p218='?' (DbType = Int64), @p219='?' (DbType = Int64), @p220='?' (DbType = Int64), @p221='?' (DbType = Int64), @p222='?' (DbType = Int64), @p223='?' (DbType = Double), @p224='?' (DbType = Int64), @p225='?' (DbType = Double), @p226='?' (DbType = Int64), @p227='?' (Size = 4000), @p228='?' (DbType = Double), @p229='?' (DbType = Double), @p230='?' (DbType = Int64), @p231='?' (DbType = Int64), @p232='?' (DbType = Int64), @p233='?' (DbType = Int64), @p234='?' (DbType = Int64), @p235='?' (DbType = Int64), @p236='?' (DbType = Int64), @p237='?' (DbType = Int64), @p238='?' (DbType = Int64), @p239='?' (DbType = Double), @p240='?' (DbType = Int64), @p241='?' (DbType = Int64), @p242='?' (Size = 4000), @p243='?' (Size = 450), @p244='?' (DbType = Double), @p245='?' (DbType = Double), @p246='?' (DbType = Int64), @p247='?' (DbType = Int64), @p248='?' (DbType = Int64), @p249='?' (DbType = Int64), @p250='?' (DbType = Int64), @p251='?' (DbType = Int64), @p252='?' (DbType = Int64), @p253='?' (DbType = Double), @p254='?' (DbType = Int64), @p255='?' (DbType = Double), @p256='?' (DbType = Int64), @p257='?' (Size = 4000), @p258='?' (DbType = Double), @p259='?' (DbType = Double), @p260='?' (DbType = Int64), @p261='?' (DbType = Int64), @p262='?' (DbType = Int64), @p263='?' (DbType = Int64), @p264='?' (DbType = Int64), @p265='?' (DbType = Int64), @p266='?' (DbType = Int64), @p267='?' (DbType = Int64), @p268='?' (DbType = Int64), @p269='?' (DbType = Double), @p270='?' (DbType = Int64), @p271='?' (DbType = Int64), @p272='?' (Size = 4000), @p273='?' (Size = 450), @p274='?' (DbType = Double), @p275='?' (DbType = Double), @p276='?' (DbType = Int64), @p277='?' (DbType = Int64), @p278='?' (DbType = Int64), @p279='?' (DbType = Int64), @p280='?' (DbType = Int64), @p281='?' (DbType = Int64), @p282='?' (DbType = Int64), @p283='?' (DbType = Double), @p284='?' (DbType = Int64), @p285='?' (DbType = Double), @p286='?' (DbType = Int64), @p287='?' (Size = 4000), @p288='?' (DbType = Double), @p289='?' (DbType = Double), @p290='?' (DbType = Int64), @p291='?' (DbType = Int64), @p292='?' (DbType = Int64), @p293='?' (DbType = Int64), @p294='?' (DbType = Int64), @p295='?' (DbType = Int64), @p296='?' (DbType = Int64), @p297='?' (DbType = Int64), @p298='?' (DbType = Int64), @p299='?' (DbType = Double), @p300='?' (DbType = Int64), @p301='?' (DbType = Int64), @p302='?' (Size = 4000), @p303='?' (Size = 450), @p304='?' (DbType = Double), @p305='?' (DbType = Double), @p306='?' (DbType = Int64), @p307='?' (DbType = Int64), @p308='?' (DbType = Int64), @p309='?' (DbType = Int64), @p310='?' (DbType = Int64), @p311='?' (DbType = Int64), @p312='?' (DbType = Int64), @p313='?' (DbType = Double), @p314='?' (DbType = Int64), @p315='?' (DbType = Double), @p316='?' (DbType = Int64), @p317='?' (Size = 4000), @p318='?' (DbType = Double), @p319='?' (DbType = Double), @p320='?' (DbType = Int64), @p321='?' (DbType = Int64), @p322='?' (DbType = Int64), @p323='?' (DbType = Int64), @p324='?' (DbType = Int64), @p325='?' (DbType = Int64), @p326='?' (DbType = Int64), @p327='?' (DbType = Int64), @p328='?' (DbType = Int64), @p329='?' (DbType = Double), @p330='?' (DbType = Int64), @p331='?' (DbType = Int64), @p332='?' (Size = 4000), @p333='?' (Size = 450), @p334='?' (DbType = Double), @p335='?' (DbType = Double), @p336='?' (DbType = Int64), @p337='?' (DbType = Int64), @p338='?' (DbType = Int64), @p339='?' (DbType = Int64), @p340='?' (DbType = Int64), @p341='?' (DbType = Int64), @p342='?' (DbType = Int64), @p343='?' (DbType = Double), @p344='?' (DbType = Int64), @p345='?' (DbType = Double), @p346='?' (DbType = Int64), @p347='?' (Size = 4000), @p348='?' (DbType = Double), @p349='?' (DbType = Double), @p350='?' (DbType = Int64), @p351='?' (DbType = Int64), @p352='?' (DbType = Int64), @p353='?' (DbType = Int64), @p354='?' (DbType = Int64), @p355='?' (DbType = Int64), @p356='?' (DbType = Int64), @p357='?' (DbType = Int64), @p358='?' (DbType = Int64), @p359='?' (DbType = Double), @p360='?' (DbType = Int64), @p361='?' (DbType = Int64), @p362='?' (Size = 4000), @p363='?' (Size = 450), @p364='?' (DbType = Double), @p365='?' (DbType = Double), @p366='?' (DbType = Int64), @p367='?' (DbType = Int64), @p368='?' (DbType = Int64), @p369='?' (DbType = Int64), @p370='?' (DbType = Int64), @p371='?' (DbType = Int64), @p372='?' (DbType = Int64), @p373='?' (DbType = Double), @p374='?' (DbType = Int64), @p375='?' (DbType = Double), @p376='?' (DbType = Int64), @p377='?' (Size = 4000), @p378='?' (DbType = Double), @p379='?' (DbType = Double), @p380='?' (DbType = Int64), @p381='?' (DbType = Int64), @p382='?' (DbType = Int64), @p383='?' (DbType = Int64), @p384='?' (DbType = Int64), @p385='?' (DbType = Int64), @p386='?' (DbType = Int64), @p387='?' (DbType = Int64), @p388='?' (DbType = Int64), @p389='?' (DbType = Double), @p390='?' (DbType = Int64), @p391='?' (DbType = Int64), @p392='?' (Size = 4000), @p393='?' (Size = 450), @p394='?' (DbType = Double), @p395='?' (DbType = Double), @p396='?' (DbType = Int64), @p397='?' (DbType = Int64), @p398='?' (DbType = Int64), @p399='?' (DbType = Int64), @p400='?' (DbType = Int64), @p401='?' (DbType = Int64), @p402='?' (DbType = Int64), @p403='?' (DbType = Double), @p404='?' (DbType = Int64), @p405='?' (DbType = Double), @p406='?' (DbType = Int64), @p407='?' (Size = 4000), @p408='?' (DbType = Double), @p409='?' (DbType = Double), @p410='?' (DbType = Int64), @p411='?' (DbType = Int64), @p412='?' (DbType = Int64), @p413='?' (DbType = Int64), @p414='?' (DbType = Int64), @p415='?' (DbType = Int64), @p416='?' (DbType = Int64), @p417='?' (DbType = Int64), @p418='?' (DbType = Int64), @p419='?' (DbType = Double), @p420='?' (DbType = Int64), @p421='?' (DbType = Int64), @p422='?' (Size = 4000), @p423='?' (Size = 450), @p424='?' (DbType = Double), @p425='?' (DbType = Double), @p426='?' (DbType = Int64), @p427='?' (DbType = Int64), @p428='?' (DbType = Int64), @p429='?' (DbType = Int64), @p430='?' (DbType = Int64), @p431='?' (DbType = Int64), @p432='?' (DbType = Int64), @p433='?' (DbType = Double), @p434='?' (DbType = Int64), @p435='?' (DbType = Double), @p436='?' (DbType = Int64), @p437='?' (Size = 4000), @p438='?' (DbType = Double), @p439='?' (DbType = Double), @p440='?' (DbType = Int64), @p441='?' (DbType = Int64), @p442='?' (DbType = Int64), @p443='?' (DbType = Int64), @p444='?' (DbType = Int64), @p445='?' (DbType = Int64), @p446='?' (DbType = Int64), @p447='?' (DbType = Int64), @p448='?' (DbType = Int64), @p449='?' (DbType = Double), @p450='?' (DbType = Int64), @p451='?' (DbType = Int64), @p452='?' (Size = 4000), @p453='?' (Size = 450), @p454='?' (DbType = Double), @p455='?' (DbType = Double), @p456='?' (DbType = Int64), @p457='?' (DbType = Int64), @p458='?' (DbType = Int64), @p459='?' (DbType = Int64), @p460='?' (DbType = Int64), @p461='?' (DbType = Int64), @p462='?' (DbType = Int64), @p463='?' (DbType = Double), @p464='?' (DbType = Int64), @p465='?' (DbType = Double), @p466='?' (DbType = Int64), @p467='?' (Size = 4000), @p468='?' (DbType = Double), @p469='?' (DbType = Double), @p470='?' (DbType = Int64), @p471='?' (DbType = Int64), @p472='?' (DbType = Int64), @p473='?' (DbType = Int64), @p474='?' (DbType = Int64), @p475='?' (DbType = Int64), @p476='?' (DbType = Int64), @p477='?' (DbType = Int64), @p478='?' (DbType = Int64), @p479='?' (DbType = Double), @p480='?' (DbType = Int64), @p481='?' (DbType = Int64), @p482='?' (Size = 4000), @p483='?' (Size = 450), @p484='?' (DbType = Double), @p485='?' (DbType = Double), @p486='?' (DbType = Int64), @p487='?' (DbType = Int64), @p488='?' (DbType = Int64), @p489='?' (DbType = Int64), @p490='?' (DbType = Int64), @p491='?' (DbType = Int64), @p492='?' (DbType = Int64), @p493='?' (DbType = Double), @p494='?' (DbType = Int64), @p495='?' (DbType = Double), @p496='?' (DbType = Int64), @p497='?' (Size = 4000), @p498='?' (DbType = Double), @p499='?' (DbType = Double), @p500='?' (DbType = Int64), @p501='?' (DbType = Int64), @p502='?' (DbType = Int64), @p503='?' (DbType = Int64), @p504='?' (DbType = Int64), @p505='?' (DbType = Int64), @p506='?' (DbType = Int64), @p507='?' (DbType = Int64), @p508='?' (DbType = Int64), @p509='?' (DbType = Double), @p510='?' (DbType = Int64), @p511='?' (DbType = Int64), @p512='?' (Size = 4000), @p513='?' (Size = 450), @p514='?' (DbType = Double), @p515='?' (DbType = Double), @p516='?' (DbType = Int64), @p517='?' (DbType = Int64), @p518='?' (DbType = Int64), @p519='?' (DbType = Int64), @p520='?' (DbType = Int64), @p521='?' (DbType = Int64), @p522='?' (DbType = Int64), @p523='?' (DbType = Double), @p524='?' (DbType = Int64), @p525='?' (DbType = Double), @p526='?' (DbType = Int64), @p527='?' (Size = 4000), @p528='?' (DbType = Double), @p529='?' (DbType = Double), @p530='?' (DbType = Int64), @p531='?' (DbType = Int64), @p532='?' (DbType = Int64), @p533='?' (DbType = Int64), @p534='?' (DbType = Int64), @p535='?' (DbType = Int64), @p536='?' (DbType = Int64), @p537='?' (DbType = Int64), @p538='?' (DbType = Int64), @p539='?' (DbType = Double), @p540='?' (DbType = Int64), @p541='?' (DbType = Int64), @p542='?' (Size = 4000), @p543='?' (Size = 450), @p544='?' (DbType = Double), @p545='?' (DbType = Double), @p546='?' (DbType = Int64), @p547='?' (DbType = Int64), @p548='?' (DbType = Int64), @p549='?' (DbType = Int64), @p550='?' (DbType = Int64), @p551='?' (DbType = Int64), @p552='?' (DbType = Int64), @p553='?' (DbType = Double), @p554='?' (DbType = Int64), @p555='?' (DbType = Double), @p556='?' (DbType = Int64), @p557='?' (Size = 4000), @p558='?' (DbType = Double), @p559='?' (DbType = Double), @p560='?' (DbType = Int64), @p561='?' (DbType = Int64), @p562='?' (DbType = Int64), @p563='?' (DbType = Int64), @p564='?' (DbType = Int64), @p565='?' (DbType = Int64), @p566='?' (DbType = Int64), @p567='?' (DbType = Int64), @p568='?' (DbType = Int64), @p569='?' (DbType = Double), @p570='?' (DbType = Int64), @p571='?' (DbType = Int64), @p572='?' (Size = 4000), @p573='?' (Size = 450), @p574='?' (DbType = Double), @p575='?' (DbType = Double), @p576='?' (DbType = Int64), @p577='?' (DbType = Int64), @p578='?' (DbType = Int64), @p579='?' (DbType = Int64), @p580='?' (DbType = Int64), @p581='?' (DbType = Int64), @p582='?' (DbType = Int64), @p583='?' (DbType = Double), @p584='?' (DbType = Int64), @p585='?' (DbType = Double), @p586='?' (DbType = Int64), @p587='?' (Size = 4000), @p588='?' (DbType = Double), @p589='?' (DbType = Double), @p590='?' (DbType = Int64), @p591='?' (DbType = Int64), @p592='?' (DbType = Int64), @p593='?' (DbType = Int64), @p594='?' (DbType = Int64), @p595='?' (DbType = Int64), @p596='?' (DbType = Int64), @p597='?' (DbType = Int64), @p598='?' (DbType = Int64), @p599='?' (DbType = Double), @p600='?' (DbType = Int64), @p601='?' (DbType = Int64), @p602='?' (Size = 4000), @p603='?' (Size = 450), @p604='?' (DbType = Double), @p605='?' (DbType = Double), @p606='?' (DbType = Int64), @p607='?' (DbType = Int64), @p608='?' (DbType = Int64), @p609='?' (DbType = Int64), @p610='?' (DbType = Int64), @p611='?' (DbType = Int64), @p612='?' (DbType = Int64), @p613='?' (DbType = Double), @p614='?' (DbType = Int64), @p615='?' (DbType = Double), @p616='?' (DbType = Int64), @p617='?' (Size = 4000), @p618='?' (DbType = Double), @p619='?' (DbType = Double), @p620='?' (DbType = Int64), @p621='?' (DbType = Int64), @p622='?' (DbType = Int64), @p623='?' (DbType = Int64), @p624='?' (DbType = Int64), @p625='?' (DbType = Int64), @p626='?' (DbType = Int64), @p627='?' (DbType = Int64), @p628='?' (DbType = Int64), @p629='?' (DbType = Double), @p630='?' (DbType = Int64), @p631='?' (DbType = Int64), @p632='?' (Size = 4000), @p633='?' (Size = 450), @p634='?' (DbType = Double), @p635='?' (DbType = Double), @p636='?' (DbType = Int64), @p637='?' (DbType = Int64), @p638='?' (DbType = Int64), @p639='?' (DbType = Int64), @p640='?' (DbType = Int64), @p641='?' (DbType = Int64), @p642='?' (DbType = Int64), @p643='?' (DbType = Double), @p644='?' (DbType = Int64), @p645='?' (DbType = Double), @p646='?' (DbType = Int64), @p647='?' (Size = 4000), @p648='?' (DbType = Double), @p649='?' (DbType = Double), @p650='?' (DbType = Int64), @p651='?' (DbType = Int64), @p652='?' (DbType = Int64), @p653='?' (DbType = Int64), @p654='?' (DbType = Int64), @p655='?' (DbType = Int64), @p656='?' (DbType = Int64), @p657='?' (DbType = Int64), @p658='?' (DbType = Int64), @p659='?' (DbType = Double), @p660='?' (DbType = Int64), @p661='?' (DbType = Int64), @p662='?' (Size = 4000), @p663='?' (Size = 450), @p664='?' (DbType = Double), @p665='?' (DbType = Double), @p666='?' (DbType = Int64), @p667='?' (DbType = Int64), @p668='?' (DbType = Int64), @p669='?' (DbType = Int64), @p670='?' (DbType = Int64), @p671='?' (DbType = Int64), @p672='?' (DbType = Int64), @p673='?' (DbType = Double), @p674='?' (DbType = Int64), @p675='?' (DbType = Double), @p676='?' (DbType = Int64), @p677='?' (Size = 4000), @p678='?' (DbType = Double), @p679='?' (DbType = Double), @p680='?' (DbType = Int64), @p681='?' (DbType = Int64), @p682='?' (DbType = Int64), @p683='?' (DbType = Int64), @p684='?' (DbType = Int64), @p685='?' (DbType = Int64), @p686='?' (DbType = Int64), @p687='?' (DbType = Int64), @p688='?' (DbType = Int64), @p689='?' (DbType = Double), @p690='?' (DbType = Int64), @p691='?' (DbType = Int64), @p692='?' (Size = 4000), @p693='?' (Size = 450), @p694='?' (DbType = Double), @p695='?' (DbType = Double), @p696='?' (DbType = Int64), @p697='?' (DbType = Int64), @p698='?' (DbType = Int64), @p699='?' (DbType = Int64), @p700='?' (DbType = Int64), @p701='?' (DbType = Int64), @p702='?' (DbType = Int64), @p703='?' (DbType = Double), @p704='?' (DbType = Int64), @p705='?' (DbType = Double), @p706='?' (DbType = Int64), @p707='?' (Size = 4000), @p708='?' (DbType = Double), @p709='?' (DbType = Double), @p710='?' (DbType = Int64), @p711='?' (DbType = Int64), @p712='?' (DbType = Int64), @p713='?' (DbType = Int64), @p714='?' (DbType = Int64), @p715='?' (DbType = Int64), @p716='?' (DbType = Int64), @p717='?' (DbType = Int64), @p718='?' (DbType = Int64), @p719='?' (DbType = Double), @p720='?' (DbType = Int64), @p721='?' (DbType = Int64), @p722='?' (Size = 4000), @p723='?' (Size = 450), @p724='?' (DbType = Double), @p725='?' (DbType = Double), @p726='?' (DbType = Int64), @p727='?' (DbType = Int64), @p728='?' (DbType = Int64), @p729='?' (DbType = Int64), @p730='?' (DbType = Int64), @p731='?' (DbType = Int64), @p732='?' (DbType = Int64), @p733='?' (DbType = Double), @p734='?' (DbType = Int64), @p735='?' (DbType = Double), @p736='?' (DbType = Int64), @p737='?' (Size = 4000), @p738='?' (DbType = Double), @p739='?' (DbType = Double), @p740='?' (DbType = Int64), @p741='?' (DbType = Int64), @p742='?' (DbType = Int64), @p743='?' (DbType = Int64), @p744='?' (DbType = Int64), @p745='?' (DbType = Int64), @p746='?' (DbType = Int64), @p747='?' (DbType = Int64), @p748='?' (DbType = Int64), @p749='?' (DbType = Double), @p750='?' (DbType = Int64), @p751='?' (DbType = Int64), @p752='?' (Size = 4000), @p753='?' (Size = 450), @p754='?' (DbType = Double), @p755='?' (DbType = Double), @p756='?' (DbType = Int64), @p757='?' (DbType = Int64), @p758='?' (DbType = Int64), @p759='?' (DbType = Int64), @p760='?' (DbType = Int64), @p761='?' (DbType = Int64), @p762='?' (DbType = Int64), @p763='?' (DbType = Double), @p764='?' (DbType = Int64), @p765='?' (DbType = Double), @p766='?' (DbType = Int64), @p767='?' (Size = 4000), @p768='?' (DbType = Double), @p769='?' (DbType = Double), @p770='?' (DbType = Int64), @p771='?' (DbType = Int64), @p772='?' (DbType = Int64), @p773='?' (DbType = Int64), @p774='?' (DbType = Int64), @p775='?' (DbType = Int64), @p776='?' (DbType = Int64), @p777='?' (DbType = Int64), @p778='?' (DbType = Int64), @p779='?' (DbType = Double), @p780='?' (DbType = Int64), @p781='?' (DbType = Int64), @p782='?' (Size = 4000), @p783='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
DECLARE @inserted0 TABLE ([Id] int, [_Position] [int]);
MERGE [CashFlowAnnualReport] USING (
VALUES (@p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21, @p22, @p23, @p24, @p25, @p26, @p27, @p28, @p29, @p30, @p31, @p32, @p33, 0),
(@p34, @p35, @p36, @p37, @p38, @p39, @p40, @p41, @p42, @p43, @p44, @p45, @p46, @p47, @p48, @p49, @p50, @p51, @p52, @p53, @p54, @p55, @p56, @p57, @p58, @p59, @p60, @p61, @p62, @p63, 1),
(@p64, @p65, @p66, @p67, @p68, @p69, @p70, @p71, @p72, @p73, @p74, @p75, @p76, @p77, @p78, @p79, @p80, @p81, @p82, @p83, @p84, @p85, @p86, @p87, @p88, @p89, @p90, @p91, @p92, @p93, 2),
(@p94, @p95, @p96, @p97, @p98, @p99, @p100, @p101, @p102, @p103, @p104, @p105, @p106, @p107, @p108, @p109, @p110, @p111, @p112, @p113, @p114, @p115, @p116, @p117, @p118, @p119, @p120, @p121, @p122, @p123, 3),
(@p124, @p125, @p126, @p127, @p128, @p129, @p130, @p131, @p132, @p133, @p134, @p135, @p136, @p137, @p138, @p139, @p140, @p141, @p142, @p143, @p144, @p145, @p146, @p147, @p148, @p149, @p150, @p151, @p152, @p153, 4)) AS i ([CapitalExpenditures], [CashflowFromFinancing], [CashflowFromInvestment], [ChangeInCashAndCashEquivalents], [ChangeInExchangeRate], [ChangeInInventory], [ChangeInOperatingAssets], [ChangeInOperatingLiabilities], [ChangeInReceivables], [DepreciationDepletionAndAmortization], [DividendPayout], [DividendPayoutCommonStock], [DividendPayoutPreferredStock], [FiscalDateEnding], [NetIncome], [OperatingCashFlow], [PaymentsForOperatingActivities], [PaymentsForRepurchaseOfCommonStock], [PaymentsForRepurchaseOfEquity], [PaymentsForRepurchaseOfPreferredStock], [ProceedsFromIssuanceOfCommonStock], [ProceedsFromIssuanceOfLongTermDebtAndCapitalSecuritiesNet], [ProceedsFromIssuanceOfPreferredStock], [ProceedsFromOperatingActivities], [ProceedsFromRepaymentsOfShortTermDebt], [ProceedsFromRepurchaseOfEquity], [ProceedsFromSaleOfTreasuryStock], [ProfitLoss], [ReportedCurrency], [Symbol], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([CapitalExpenditures], [CashflowFromFinancing], [CashflowFromInvestment], [ChangeInCashAndCashEquivalents], [ChangeInExchangeRate], [ChangeInInventory], [ChangeInOperatingAssets], [ChangeInOperatingLiabilities], [ChangeInReceivables], [DepreciationDepletionAndAmortization], [DividendPayout], [DividendPayoutCommonStock], [DividendPayoutPreferredStock], [FiscalDateEnding], [NetIncome], [OperatingCashFlow], [PaymentsForOperatingActivities], [PaymentsForRepurchaseOfCommonStock], [PaymentsForRepurchaseOfEquity], [PaymentsForRepurchaseOfPreferredStock], [ProceedsFromIssuanceOfCommonStock], [ProceedsFromIssuanceOfLongTermDebtAndCapitalSecuritiesNet], [ProceedsFromIssuanceOfPreferredStock], [ProceedsFromOperatingActivities], [ProceedsFromRepaymentsOfShortTermDebt], [ProceedsFromRepurchaseOfEquity], [ProceedsFromSaleOfTreasuryStock], [ProfitLoss], [ReportedCurrency], [Symbol])
VALUES (i.[CapitalExpenditures], i.[CashflowFromFinancing], i.[CashflowFromInvestment], i.[ChangeInCashAndCashEquivalents], i.[ChangeInExchangeRate], i.[ChangeInInventory], i.[ChangeInOperatingAssets], i.[ChangeInOperatingLiabilities], i.[ChangeInReceivables], i.[DepreciationDepletionAndAmortization], i.[DividendPayout], i.[DividendPayoutCommonStock], i.[DividendPayoutPreferredStock], i.[FiscalDateEnding], i.[NetIncome], i.[OperatingCashFlow], i.[PaymentsForOperatingActivities], i.[PaymentsForRepurchaseOfCommonStock], i.[PaymentsForRepurchaseOfEquity], i.[PaymentsForRepurchaseOfPreferredStock], i.[ProceedsFromIssuanceOfCommonStock], i.[ProceedsFromIssuanceOfLongTermDebtAndCapitalSecuritiesNet], i.[ProceedsFromIssuanceOfPreferredStock], i.[ProceedsFromOperatingActivities], i.[ProceedsFromRepaymentsOfShortTermDebt], i.[ProceedsFromRepurchaseOfEquity], i.[ProceedsFromSaleOfTreasuryStock], i.[ProfitLoss], i.[ReportedCurrency], i.[Symbol])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted0;

SELECT [i].[Id] FROM @inserted0 i
ORDER BY [i].[_Position];

DECLARE @inserted5 TABLE ([Id] int, [_Position] [int]);
MERGE [CashFlowQuarterlyReport] USING (
VALUES (@p154, @p155, @p156, @p157, @p158, @p159, @p160, @p161, @p162, @p163, @p164, @p165, @p166, @p167, @p168, @p169, @p170, @p171, @p172, @p173, @p174, @p175, @p176, @p177, @p178, @p179, @p180, @p181, @p182, @p183, 0),
(@p184, @p185, @p186, @p187, @p188, @p189, @p190, @p191, @p192, @p193, @p194, @p195, @p196, @p197, @p198, @p199, @p200, @p201, @p202, @p203, @p204, @p205, @p206, @p207, @p208, @p209, @p210, @p211, @p212, @p213, 1),
(@p214, @p215, @p216, @p217, @p218, @p219, @p220, @p221, @p222, @p223, @p224, @p225, @p226, @p227, @p228, @p229, @p230, @p231, @p232, @p233, @p234, @p235, @p236, @p237, @p238, @p239, @p240, @p241, @p242, @p243, 2),
(@p244, @p245, @p246, @p247, @p248, @p249, @p250, @p251, @p252, @p253, @p254, @p255, @p256, @p257, @p258, @p259, @p260, @p261, @p262, @p263, @p264, @p265, @p266, @p267, @p268, @p269, @p270, @p271, @p272, @p273, 3),
(@p274, @p275, @p276, @p277, @p278, @p279, @p280, @p281, @p282, @p283, @p284, @p285, @p286, @p287, @p288, @p289, @p290, @p291, @p292, @p293, @p294, @p295, @p296, @p297, @p298, @p299, @p300, @p301, @p302, @p303, 4),
(@p304, @p305, @p306, @p307, @p308, @p309, @p310, @p311, @p312, @p313, @p314, @p315, @p316, @p317, @p318, @p319, @p320, @p321, @p322, @p323, @p324, @p325, @p326, @p327, @p328, @p329, @p330, @p331, @p332, @p333, 5),
(@p334, @p335, @p336, @p337, @p338, @p339, @p340, @p341, @p342, @p343, @p344, @p345, @p346, @p347, @p348, @p349, @p350, @p351, @p352, @p353, @p354, @p355, @p356, @p357, @p358, @p359, @p360, @p361, @p362, @p363, 6),
(@p364, @p365, @p366, @p367, @p368, @p369, @p370, @p371, @p372, @p373, @p374, @p375, @p376, @p377, @p378, @p379, @p380, @p381, @p382, @p383, @p384, @p385, @p386, @p387, @p388, @p389, @p390, @p391, @p392, @p393, 7),
(@p394, @p395, @p396, @p397, @p398, @p399, @p400, @p401, @p402, @p403, @p404, @p405, @p406, @p407, @p408, @p409, @p410, @p411, @p412, @p413, @p414, @p415, @p416, @p417, @p418, @p419, @p420, @p421, @p422, @p423, 8),
(@p424, @p425, @p426, @p427, @p428, @p429, @p430, @p431, @p432, @p433, @p434, @p435, @p436, @p437, @p438, @p439, @p440, @p441, @p442, @p443, @p444, @p445, @p446, @p447, @p448, @p449, @p450, @p451, @p452, @p453, 9),
(@p454, @p455, @p456, @p457, @p458, @p459, @p460, @p461, @p462, @p463, @p464, @p465, @p466, @p467, @p468, @p469, @p470, @p471, @p472, @p473, @p474, @p475, @p476, @p477, @p478, @p479, @p480, @p481, @p482, @p483, 10),
(@p484, @p485, @p486, @p487, @p488, @p489, @p490, @p491, @p492, @p493, @p494, @p495, @p496, @p497, @p498, @p499, @p500, @p501, @p502, @p503, @p504, @p505, @p506, @p507, @p508, @p509, @p510, @p511, @p512, @p513, 11),
(@p514, @p515, @p516, @p517, @p518, @p519, @p520, @p521, @p522, @p523, @p524, @p525, @p526, @p527, @p528, @p529, @p530, @p531, @p532, @p533, @p534, @p535, @p536, @p537, @p538, @p539, @p540, @p541, @p542, @p543, 12),
(@p544, @p545, @p546, @p547, @p548, @p549, @p550, @p551, @p552, @p553, @p554, @p555, @p556, @p557, @p558, @p559, @p560, @p561, @p562, @p563, @p564, @p565, @p566, @p567, @p568, @p569, @p570, @p571, @p572, @p573, 13),
(@p574, @p575, @p576, @p577, @p578, @p579, @p580, @p581, @p582, @p583, @p584, @p585, @p586, @p587, @p588, @p589, @p590, @p591, @p592, @p593, @p594, @p595, @p596, @p597, @p598, @p599, @p600, @p601, @p602, @p603, 14),
(@p604, @p605, @p606, @p607, @p608, @p609, @p610, @p611, @p612, @p613, @p614, @p615, @p616, @p617, @p618, @p619, @p620, @p621, @p622, @p623, @p624, @p625, @p626, @p627, @p628, @p629, @p630, @p631, @p632, @p633, 15),
(@p634, @p635, @p636, @p637, @p638, @p639, @p640, @p641, @p642, @p643, @p644, @p645, @p646, @p647, @p648, @p649, @p650, @p651, @p652, @p653, @p654, @p655, @p656, @p657, @p658, @p659, @p660, @p661, @p662, @p663, 16),
(@p664, @p665, @p666, @p667, @p668, @p669, @p670, @p671, @p672, @p673, @p674, @p675, @p676, @p677, @p678, @p679, @p680, @p681, @p682, @p683, @p684, @p685, @p686, @p687, @p688, @p689, @p690, @p691, @p692, @p693, 17),
(@p694, @p695, @p696, @p697, @p698, @p699, @p700, @p701, @p702, @p703, @p704, @p705, @p706, @p707, @p708, @p709, @p710, @p711, @p712, @p713, @p714, @p715, @p716, @p717, @p718, @p719, @p720, @p721, @p722, @p723, 18),
(@p724, @p725, @p726, @p727, @p728, @p729, @p730, @p731, @p732, @p733, @p734, @p735, @p736, @p737, @p738, @p739, @p740, @p741, @p742, @p743, @p744, @p745, @p746, @p747, @p748, @p749, @p750, @p751, @p752, @p753, 19),
(@p754, @p755, @p756, @p757, @p758, @p759, @p760, @p761, @p762, @p763, @p764, @p765, @p766, @p767, @p768, @p769, @p770, @p771, @p772, @p773, @p774, @p775, @p776, @p777, @p778, @p779, @p780, @p781, @p782, @p783, 20)) AS i ([CapitalExpenditures], [CashflowFromFinancing], [CashflowFromInvestment], [ChangeInCashAndCashEquivalents], [ChangeInExchangeRate], [ChangeInInventory], [ChangeInOperatingAssets], [ChangeInOperatingLiabilities], [ChangeInReceivables], [DepreciationDepletionAndAmortization], [DividendPayout], [DividendPayoutCommonStock], [DividendPayoutPreferredStock], [FiscalDateEnding], [NetIncome], [OperatingCashFlow], [PaymentsForOperatingActivities], [PaymentsForRepurchaseOfCommonStock], [PaymentsForRepurchaseOfEquity], [PaymentsForRepurchaseOfPreferredStock], [ProceedsFromIssuanceOfCommonStock], [ProceedsFromIssuanceOfLongTermDebtAndCapitalSecuritiesNet], [ProceedsFromIssuanceOfPreferredStock], [ProceedsFromOperatingActivities], [ProceedsFromRepaymentsOfShortTermDebt], [ProceedsFromRepurchaseOfEquity], [ProceedsFromSaleOfTreasuryStock], [ProfitLoss], [ReportedCurrency], [Symbol], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([CapitalExpenditures], [CashflowFromFinancing], [CashflowFromInvestment], [ChangeInCashAndCashEquivalents], [ChangeInExchangeRate], [ChangeInInventory], [ChangeInOperatingAssets], [ChangeInOperatingLiabilities], [ChangeInReceivables], [DepreciationDepletionAndAmortization], [DividendPayout], [DividendPayoutCommonStock], [DividendPayoutPreferredStock], [FiscalDateEnding], [NetIncome], [OperatingCashFlow], [PaymentsForOperatingActivities], [PaymentsForRepurchaseOfCommonStock], [PaymentsForRepurchaseOfEquity], [PaymentsForRepurchaseOfPreferredStock], [ProceedsFromIssuanceOfCommonStock], [ProceedsFromIssuanceOfLongTermDebtAndCapitalSecuritiesNet], [ProceedsFromIssuanceOfPreferredStock], [ProceedsFromOperatingActivities], [ProceedsFromRepaymentsOfShortTermDebt], [ProceedsFromRepurchaseOfEquity], [ProceedsFromSaleOfTreasuryStock], [ProfitLoss], [ReportedCurrency], [Symbol])
VALUES (i.[CapitalExpenditures], i.[CashflowFromFinancing], i.[CashflowFromInvestment], i.[ChangeInCashAndCashEquivalents], i.[ChangeInExchangeRate], i.[ChangeInInventory], i.[ChangeInOperatingAssets], i.[ChangeInOperatingLiabilities], i.[ChangeInReceivables], i.[DepreciationDepletionAndAmortization], i.[DividendPayout], i.[DividendPayoutCommonStock], i.[DividendPayoutPreferredStock], i.[FiscalDateEnding], i.[NetIncome], i.[OperatingCashFlow], i.[PaymentsForOperatingActivities], i.[PaymentsForRepurchaseOfCommonStock], i.[PaymentsForRepurchaseOfEquity], i.[PaymentsForRepurchaseOfPreferredStock], i.[ProceedsFromIssuanceOfCommonStock], i.[ProceedsFromIssuanceOfLongTermDebtAndCapitalSecuritiesNet], i.[ProceedsFromIssuanceOfPreferredStock], i.[ProceedsFromOperatingActivities], i.[ProceedsFromRepaymentsOfShortTermDebt], i.[ProceedsFromRepurchaseOfEquity], i.[ProceedsFromSaleOfTreasuryStock], i.[ProfitLoss], i.[ReportedCurrency], i.[Symbol])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted5;

SELECT [i].[Id] FROM @inserted5 i
ORDER BY [i].[_Position];
2022-05-12 01:06:07.771 +03:00 [INF] AddOrUpdate run successful.
2022-05-12 01:06:24.643 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CompanyOverview with Symbol BKKT
2022-05-12 01:06:24.646 +03:00 [INF] Generating URI for OVERVIEW with params: symbol: BKKT
2022-05-12 01:06:24.647 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=OVERVIEW&symbol=BKKT
2022-05-12 01:06:24.647 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=OVERVIEW&symbol=BKKT".
2022-05-12 01:06:24.877 +03:00 [INF] Response has success status code
2022-05-12 01:06:24.878 +03:00 [INF] Trying to deserialize response.
2022-05-12 01:06:24.879 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.CompanyOverview.
2022-05-12 01:06:24.879 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 01:06:24.920 +03:00 [INF] Executed DbCommand (39ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__entity_Symbol_0
2022-05-12 01:06:24.921 +03:00 [INF] Entity does not exist. Adding to DB.
2022-05-12 01:06:24.937 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (Size = 4000), @p2='?' (DbType = Double), @p3='?' (Size = 4000), @p4='?' (DbType = Double), @p5='?' (DbType = Double), @p6='?' (DbType = Int64), @p7='?' (Size = 4000), @p8='?' (Size = 4000), @p9='?' (Size = 4000), @p10='?' (DbType = Double), @p11='?' (DbType = DateTime2), @p12='?' (DbType = Double), @p13='?' (DbType = Double), @p14='?' (DbType = Int64), @p15='?' (DbType = Double), @p16='?' (DbType = Double), @p17='?' (DbType = Double), @p18='?' (DbType = DateTime2), @p19='?' (Size = 4000), @p20='?' (DbType = Boolean), @p21='?' (Size = 4000), @p22='?' (DbType = Double), @p23='?' (DbType = Int64), @p24='?' (Size = 4000), @p25='?' (DbType = DateTime2), @p26='?' (DbType = DateTime2), @p27='?' (DbType = DateTime2), @p28='?' (DbType = Int64), @p29='?' (Size = 4000), @p30='?' (DbType = Double), @p31='?' (DbType = Double), @p32='?' (DbType = Double), @p33='?' (DbType = Double), @p34='?' (DbType = Double), @p35='?' (DbType = Double), @p36='?' (DbType = Double), @p37='?' (DbType = Double), @p38='?' (DbType = Double), @p39='?' (DbType = Double), @p40='?' (DbType = Double), @p41='?' (DbType = Int64), @p42='?' (Size = 4000), @p43='?' (DbType = Int64), @p44='?' (DbType = Double), @p45='?' (DbType = Double), @p46='?' (DbType = Double), @p47='?' (DbType = Double), @p48='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [CompanyOverviews] ([Symbol], [Address], [AnalystTargetPrice], [AssetType], [Beta], [BookValue], [CIK], [Country], [Currency], [Description], [DilutedEPSTTM], [DividendDate], [DividendPerShare], [DividendYield], [EBITDA], [EPS], [EVToEBITDA], [EVToRevenue], [ExDividendDate], [Exchange], [ExistInApi], [FiscalYearEnd], [ForwardPE], [GrossProfitTTM], [Industry], [LastApiRefresh], [LastLocalRefresh], [LatestQuarter], [MarketCapitalization], [Name], [OperatingMarginTTM], [PEGRatio], [PERatio], [PriceToBookRatio], [PriceToSalesRatioTTM], [ProfitMargin], [QuarterlyEarningsGrowthYOY], [QuarterlyRevenueGrowthYOY], [ReturnOnAssetsTTM], [ReturnOnEquityTTM], [RevenuePerShareTTM], [RevenueTTM], [Sector], [SharesOutstanding], [TrailingPE], [_200DayMovingAverage], [_50DayMovingAverage], [_52WeekHigh], [_52WeekLow])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21, @p22, @p23, @p24, @p25, @p26, @p27, @p28, @p29, @p30, @p31, @p32, @p33, @p34, @p35, @p36, @p37, @p38, @p39, @p40, @p41, @p42, @p43, @p44, @p45, @p46, @p47, @p48);
2022-05-12 01:06:24.945 +03:00 [INF] AddOrUpdate run successful.
2022-05-12 01:06:27.248 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.Earnings with Symbol AXAC
2022-05-12 01:06:27.252 +03:00 [INF] Generating URI for EARNINGS with params: symbol: AXAC
2022-05-12 01:06:27.252 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=EARNINGS&symbol=AXAC
2022-05-12 01:06:27.253 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=EARNINGS&symbol=AXAC".
2022-05-12 01:06:27.487 +03:00 [INF] Response has success status code
2022-05-12 01:06:27.488 +03:00 [INF] Trying to deserialize response.
2022-05-12 01:06:27.489 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 01:06:27.544 +03:00 [INF] Executed DbCommand (54ms) [Parameters=[@__symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__symbol_0
2022-05-12 01:06:27.545 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.Earnings.
2022-05-12 01:06:27.554 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [e].[Symbol], [e].[ExistInApi], [e].[LastApiRefresh], [e].[LastLocalRefresh]
FROM [Earnings] AS [e]
WHERE [e].[Symbol] = @__entity_Symbol_0
2022-05-12 01:06:27.555 +03:00 [INF] Entity does not exist. Adding to DB.
2022-05-12 01:06:27.567 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = Boolean), @p2='?' (DbType = DateTime2), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Earnings] ([Symbol], [ExistInApi], [LastApiRefresh], [LastLocalRefresh])
VALUES (@p0, @p1, @p2, @p3);
2022-05-12 01:06:27.574 +03:00 [INF] AddOrUpdate run successful.
2022-05-12 01:06:27.882 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.IncomeStatement with Symbol AUTO
2022-05-12 01:06:27.885 +03:00 [INF] Generating URI for INCOME_STATEMENT with params: symbol: AUTO
2022-05-12 01:06:27.886 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=INCOME_STATEMENT&symbol=AUTO
2022-05-12 01:06:27.886 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=INCOME_STATEMENT&symbol=AUTO".
2022-05-12 01:06:28.260 +03:00 [INF] Response has success status code
2022-05-12 01:06:28.261 +03:00 [INF] Trying to deserialize response.
2022-05-12 01:06:28.262 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 01:06:28.310 +03:00 [INF] Executed DbCommand (47ms) [Parameters=[@__symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__symbol_0
2022-05-12 01:06:28.311 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.IncomeStatement.
2022-05-12 01:06:28.320 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [i].[Symbol], [i].[ExistInApi], [i].[LastApiRefresh], [i].[LastLocalRefresh]
FROM [IncomeStatements] AS [i]
WHERE [i].[Symbol] = @__entity_Symbol_0
2022-05-12 01:06:28.321 +03:00 [INF] Entity does not exist. Adding to DB.
2022-05-12 01:06:28.338 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = Boolean), @p2='?' (DbType = DateTime2), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [IncomeStatements] ([Symbol], [ExistInApi], [LastApiRefresh], [LastLocalRefresh])
VALUES (@p0, @p1, @p2, @p3);
2022-05-12 01:06:28.379 +03:00 [INF] Executed DbCommand (39ms) [Parameters=[@p4='?' (DbType = Int64), @p5='?' (DbType = Double), @p6='?' (DbType = Double), @p7='?' (DbType = Int64), @p8='?' (DbType = Int64), @p9='?' (DbType = Int64), @p10='?' (DbType = Double), @p11='?' (DbType = DateTime2), @p12='?' (DbType = Double), @p13='?' (DbType = Double), @p14='?' (DbType = Int64), @p15='?' (DbType = Int64), @p16='?' (DbType = Double), @p17='?' (DbType = Int64), @p18='?' (DbType = Int64), @p19='?' (DbType = Double), @p20='?' (DbType = Double), @p21='?' (DbType = Double), @p22='?' (DbType = Int64), @p23='?' (DbType = Double), @p24='?' (DbType = Double), @p25='?' (DbType = Int64), @p26='?' (Size = 4000), @p27='?' (DbType = Int64), @p28='?' (DbType = Double), @p29='?' (Size = 450), @p30='?' (DbType = Int64), @p31='?' (DbType = Int64), @p32='?' (DbType = Double), @p33='?' (DbType = Double), @p34='?' (DbType = Int64), @p35='?' (DbType = Int64), @p36='?' (DbType = Int64), @p37='?' (DbType = Double), @p38='?' (DbType = DateTime2), @p39='?' (DbType = Double), @p40='?' (DbType = Double), @p41='?' (DbType = Int64), @p42='?' (DbType = Int64), @p43='?' (DbType = Double), @p44='?' (DbType = Int64), @p45='?' (DbType = Int64), @p46='?' (DbType = Double), @p47='?' (DbType = Double), @p48='?' (DbType = Double), @p49='?' (DbType = Int64), @p50='?' (DbType = Double), @p51='?' (DbType = Double), @p52='?' (DbType = Int64), @p53='?' (Size = 4000), @p54='?' (DbType = Int64), @p55='?' (DbType = Double), @p56='?' (Size = 450), @p57='?' (DbType = Int64), @p58='?' (DbType = Int64), @p59='?' (DbType = Double), @p60='?' (DbType = Double), @p61='?' (DbType = Int64), @p62='?' (DbType = Int64), @p63='?' (DbType = Int64), @p64='?' (DbType = Double), @p65='?' (DbType = DateTime2), @p66='?' (DbType = Double), @p67='?' (DbType = Double), @p68='?' (DbType = Int64), @p69='?' (DbType = Int64), @p70='?' (DbType = Double), @p71='?' (DbType = Int64), @p72='?' (DbType = Int64), @p73='?' (DbType = Double), @p74='?' (DbType = Double), @p75='?' (DbType = Double), @p76='?' (DbType = Int64), @p77='?' (DbType = Double), @p78='?' (DbType = Double), @p79='?' (DbType = Int64), @p80='?' (Size = 4000), @p81='?' (DbType = Int64), @p82='?' (DbType = Double), @p83='?' (Size = 450), @p84='?' (DbType = Int64), @p85='?' (DbType = Int64), @p86='?' (DbType = Double), @p87='?' (DbType = Double), @p88='?' (DbType = Int64), @p89='?' (DbType = Int64), @p90='?' (DbType = Int64), @p91='?' (DbType = Double), @p92='?' (DbType = DateTime2), @p93='?' (DbType = Double), @p94='?' (DbType = Double), @p95='?' (DbType = Int64), @p96='?' (DbType = Int64), @p97='?' (DbType = Double), @p98='?' (DbType = Int64), @p99='?' (DbType = Int64), @p100='?' (DbType = Double), @p101='?' (DbType = Double), @p102='?' (DbType = Double), @p103='?' (DbType = Int64), @p104='?' (DbType = Double), @p105='?' (DbType = Double), @p106='?' (DbType = Int64), @p107='?' (Size = 4000), @p108='?' (DbType = Int64), @p109='?' (DbType = Double), @p110='?' (Size = 450), @p111='?' (DbType = Int64), @p112='?' (DbType = Int64), @p113='?' (DbType = Double), @p114='?' (DbType = Double), @p115='?' (DbType = Int64), @p116='?' (DbType = Int64), @p117='?' (DbType = Int64), @p118='?' (DbType = Double), @p119='?' (DbType = DateTime2), @p120='?' (DbType = Double), @p121='?' (DbType = Double), @p122='?' (DbType = Int64), @p123='?' (DbType = Int64), @p124='?' (DbType = Double), @p125='?' (DbType = Int64), @p126='?' (DbType = Int64), @p127='?' (DbType = Double), @p128='?' (DbType = Double), @p129='?' (DbType = Double), @p130='?' (DbType = Int64), @p131='?' (DbType = Double), @p132='?' (DbType = Double), @p133='?' (DbType = Int64), @p134='?' (Size = 4000), @p135='?' (DbType = Int64), @p136='?' (DbType = Double), @p137='?' (Size = 450), @p138='?' (DbType = Int64), @p139='?' (DbType = Int64), @p140='?' (DbType = Double), @p141='?' (DbType = Double), @p142='?' (DbType = Int64), @p143='?' (DbType = Int64), @p144='?' (DbType = Int64), @p145='?' (DbType = Double), @p146='?' (DbType = DateTime2), @p147='?' (DbType = Double), @p148='?' (DbType = Double), @p149='?' (DbType = Int64), @p150='?' (DbType = Int64), @p151='?' (DbType = Double), @p152='?' (DbType = Int64), @p153='?' (DbType = Int64), @p154='?' (DbType = Double), @p155='?' (DbType = Double), @p156='?' (DbType = Double), @p157='?' (DbType = Int64), @p158='?' (DbType = Double), @p159='?' (DbType = Double), @p160='?' (DbType = Int64), @p161='?' (Size = 4000), @p162='?' (DbType = Int64), @p163='?' (DbType = Double), @p164='?' (Size = 450), @p165='?' (DbType = Int64), @p166='?' (DbType = Int64), @p167='?' (DbType = Double), @p168='?' (DbType = Double), @p169='?' (DbType = Int64), @p170='?' (DbType = Int64), @p171='?' (DbType = Int64), @p172='?' (DbType = Double), @p173='?' (DbType = DateTime2), @p174='?' (DbType = Double), @p175='?' (DbType = Double), @p176='?' (DbType = Int64), @p177='?' (DbType = Int64), @p178='?' (DbType = Double), @p179='?' (DbType = Int64), @p180='?' (DbType = Int64), @p181='?' (DbType = Double), @p182='?' (DbType = Double), @p183='?' (DbType = Double), @p184='?' (DbType = Int64), @p185='?' (DbType = Double), @p186='?' (DbType = Double), @p187='?' (DbType = Int64), @p188='?' (Size = 4000), @p189='?' (DbType = Int64), @p190='?' (DbType = Double), @p191='?' (Size = 450), @p192='?' (DbType = Int64), @p193='?' (DbType = Int64), @p194='?' (DbType = Double), @p195='?' (DbType = Double), @p196='?' (DbType = Int64), @p197='?' (DbType = Int64), @p198='?' (DbType = Int64), @p199='?' (DbType = Double), @p200='?' (DbType = DateTime2), @p201='?' (DbType = Double), @p202='?' (DbType = Double), @p203='?' (DbType = Int64), @p204='?' (DbType = Int64), @p205='?' (DbType = Double), @p206='?' (DbType = Int64), @p207='?' (DbType = Int64), @p208='?' (DbType = Double), @p209='?' (DbType = Double), @p210='?' (DbType = Double), @p211='?' (DbType = Int64), @p212='?' (DbType = Double), @p213='?' (DbType = Double), @p214='?' (DbType = Int64), @p215='?' (Size = 4000), @p216='?' (DbType = Int64), @p217='?' (DbType = Double), @p218='?' (Size = 450), @p219='?' (DbType = Int64), @p220='?' (DbType = Int64), @p221='?' (DbType = Double), @p222='?' (DbType = Double), @p223='?' (DbType = Int64), @p224='?' (DbType = Int64), @p225='?' (DbType = Int64), @p226='?' (DbType = Double), @p227='?' (DbType = DateTime2), @p228='?' (DbType = Double), @p229='?' (DbType = Double), @p230='?' (DbType = Int64), @p231='?' (DbType = Int64), @p232='?' (DbType = Double), @p233='?' (DbType = Int64), @p234='?' (DbType = Int64), @p235='?' (DbType = Double), @p236='?' (DbType = Double), @p237='?' (DbType = Double), @p238='?' (DbType = Int64), @p239='?' (DbType = Double), @p240='?' (DbType = Double), @p241='?' (DbType = Int64), @p242='?' (Size = 4000), @p243='?' (DbType = Int64), @p244='?' (DbType = Double), @p245='?' (Size = 450), @p246='?' (DbType = Int64), @p247='?' (DbType = Int64), @p248='?' (DbType = Double), @p249='?' (DbType = Double), @p250='?' (DbType = Int64), @p251='?' (DbType = Int64), @p252='?' (DbType = Int64), @p253='?' (DbType = Double), @p254='?' (DbType = DateTime2), @p255='?' (DbType = Double), @p256='?' (DbType = Double), @p257='?' (DbType = Int64), @p258='?' (DbType = Int64), @p259='?' (DbType = Double), @p260='?' (DbType = Int64), @p261='?' (DbType = Int64), @p262='?' (DbType = Double), @p263='?' (DbType = Double), @p264='?' (DbType = Double), @p265='?' (DbType = Int64), @p266='?' (DbType = Double), @p267='?' (DbType = Double), @p268='?' (DbType = Int64), @p269='?' (Size = 4000), @p270='?' (DbType = Int64), @p271='?' (DbType = Double), @p272='?' (Size = 450), @p273='?' (DbType = Int64), @p274='?' (DbType = Int64), @p275='?' (DbType = Double), @p276='?' (DbType = Double), @p277='?' (DbType = Int64), @p278='?' (DbType = Int64), @p279='?' (DbType = Int64), @p280='?' (DbType = Double), @p281='?' (DbType = DateTime2), @p282='?' (DbType = Double), @p283='?' (DbType = Double), @p284='?' (DbType = Int64), @p285='?' (DbType = Int64), @p286='?' (DbType = Double), @p287='?' (DbType = Int64), @p288='?' (DbType = Int64), @p289='?' (DbType = Double), @p290='?' (DbType = Double), @p291='?' (DbType = Double), @p292='?' (DbType = Int64), @p293='?' (DbType = Double), @p294='?' (DbType = Double), @p295='?' (DbType = Int64), @p296='?' (Size = 4000), @p297='?' (DbType = Int64), @p298='?' (DbType = Double), @p299='?' (Size = 450), @p300='?' (DbType = Int64), @p301='?' (DbType = Int64), @p302='?' (DbType = Double), @p303='?' (DbType = Double), @p304='?' (DbType = Int64), @p305='?' (DbType = Int64), @p306='?' (DbType = Int64), @p307='?' (DbType = Double), @p308='?' (DbType = DateTime2), @p309='?' (DbType = Double), @p310='?' (DbType = Double), @p311='?' (DbType = Int64), @p312='?' (DbType = Int64), @p313='?' (DbType = Double), @p314='?' (DbType = Int64), @p315='?' (DbType = Int64), @p316='?' (DbType = Double), @p317='?' (DbType = Double), @p318='?' (DbType = Double), @p319='?' (DbType = Int64), @p320='?' (DbType = Double), @p321='?' (DbType = Double), @p322='?' (DbType = Int64), @p323='?' (Size = 4000), @p324='?' (DbType = Int64), @p325='?' (DbType = Double), @p326='?' (Size = 450), @p327='?' (DbType = Int64), @p328='?' (DbType = Int64), @p329='?' (DbType = Double), @p330='?' (DbType = Double), @p331='?' (DbType = Int64), @p332='?' (DbType = Int64), @p333='?' (DbType = Int64), @p334='?' (DbType = Double), @p335='?' (DbType = DateTime2), @p336='?' (DbType = Double), @p337='?' (DbType = Double), @p338='?' (DbType = Int64), @p339='?' (DbType = Int64), @p340='?' (DbType = Double), @p341='?' (DbType = Int64), @p342='?' (DbType = Int64), @p343='?' (DbType = Double), @p344='?' (DbType = Double), @p345='?' (DbType = Double), @p346='?' (DbType = Int64), @p347='?' (DbType = Double), @p348='?' (DbType = Double), @p349='?' (DbType = Int64), @p350='?' (Size = 4000), @p351='?' (DbType = Int64), @p352='?' (DbType = Double), @p353='?' (Size = 450), @p354='?' (DbType = Int64), @p355='?' (DbType = Int64), @p356='?' (DbType = Double), @p357='?' (DbType = Double), @p358='?' (DbType = Int64), @p359='?' (DbType = Int64), @p360='?' (DbType = Int64), @p361='?' (DbType = Double), @p362='?' (DbType = DateTime2), @p363='?' (DbType = Double), @p364='?' (DbType = Double), @p365='?' (DbType = Int64), @p366='?' (DbType = Int64), @p367='?' (DbType = Double), @p368='?' (DbType = Int64), @p369='?' (DbType = Int64), @p370='?' (DbType = Double), @p371='?' (DbType = Double), @p372='?' (DbType = Double), @p373='?' (DbType = Int64), @p374='?' (DbType = Double), @p375='?' (DbType = Double), @p376='?' (DbType = Int64), @p377='?' (Size = 4000), @p378='?' (DbType = Int64), @p379='?' (DbType = Double), @p380='?' (Size = 450), @p381='?' (DbType = Int64), @p382='?' (DbType = Int64), @p383='?' (DbType = Double), @p384='?' (DbType = Double), @p385='?' (DbType = Int64), @p386='?' (DbType = Int64), @p387='?' (DbType = Int64), @p388='?' (DbType = Double), @p389='?' (DbType = DateTime2), @p390='?' (DbType = Double), @p391='?' (DbType = Double), @p392='?' (DbType = Int64), @p393='?' (DbType = Int64), @p394='?' (DbType = Double), @p395='?' (DbType = Int64), @p396='?' (DbType = Int64), @p397='?' (DbType = Double), @p398='?' (DbType = Double), @p399='?' (DbType = Double), @p400='?' (DbType = Int64), @p401='?' (DbType = Double), @p402='?' (DbType = Double), @p403='?' (DbType = Int64), @p404='?' (Size = 4000), @p405='?' (DbType = Int64), @p406='?' (DbType = Double), @p407='?' (Size = 450), @p408='?' (DbType = Int64), @p409='?' (DbType = Int64), @p410='?' (DbType = Double), @p411='?' (DbType = Double), @p412='?' (DbType = Int64), @p413='?' (DbType = Int64), @p414='?' (DbType = Int64), @p415='?' (DbType = Double), @p416='?' (DbType = DateTime2), @p417='?' (DbType = Double), @p418='?' (DbType = Double), @p419='?' (DbType = Int64), @p420='?' (DbType = Int64), @p421='?' (DbType = Double), @p422='?' (DbType = Int64), @p423='?' (DbType = Int64), @p424='?' (DbType = Double), @p425='?' (DbType = Double), @p426='?' (DbType = Double), @p427='?' (DbType = Int64), @p428='?' (DbType = Double), @p429='?' (DbType = Double), @p430='?' (DbType = Int64), @p431='?' (Size = 4000), @p432='?' (DbType = Int64), @p433='?' (DbType = Double), @p434='?' (Size = 450), @p435='?' (DbType = Int64), @p436='?' (DbType = Int64), @p437='?' (DbType = Double), @p438='?' (DbType = Double), @p439='?' (DbType = Int64), @p440='?' (DbType = Int64), @p441='?' (DbType = Int64), @p442='?' (DbType = Double), @p443='?' (DbType = DateTime2), @p444='?' (DbType = Double), @p445='?' (DbType = Double), @p446='?' (DbType = Int64), @p447='?' (DbType = Int64), @p448='?' (DbType = Double), @p449='?' (DbType = Int64), @p450='?' (DbType = Int64), @p451='?' (DbType = Double), @p452='?' (DbType = Double), @p453='?' (DbType = Double), @p454='?' (DbType = Int64), @p455='?' (DbType = Double), @p456='?' (DbType = Double), @p457='?' (DbType = Int64), @p458='?' (Size = 4000), @p459='?' (DbType = Int64), @p460='?' (DbType = Double), @p461='?' (Size = 450), @p462='?' (DbType = Int64), @p463='?' (DbType = Int64), @p464='?' (DbType = Double), @p465='?' (DbType = Double), @p466='?' (DbType = Int64), @p467='?' (DbType = Int64), @p468='?' (DbType = Int64), @p469='?' (DbType = Double), @p470='?' (DbType = DateTime2), @p471='?' (DbType = Double), @p472='?' (DbType = Double), @p473='?' (DbType = Int64), @p474='?' (DbType = Int64), @p475='?' (DbType = Double), @p476='?' (DbType = Int64), @p477='?' (DbType = Int64), @p478='?' (DbType = Double), @p479='?' (DbType = Double), @p480='?' (DbType = Double), @p481='?' (DbType = Int64), @p482='?' (DbType = Double), @p483='?' (DbType = Double), @p484='?' (DbType = Int64), @p485='?' (Size = 4000), @p486='?' (DbType = Int64), @p487='?' (DbType = Double), @p488='?' (Size = 450), @p489='?' (DbType = Int64), @p490='?' (DbType = Int64), @p491='?' (DbType = Double), @p492='?' (DbType = Double), @p493='?' (DbType = Int64), @p494='?' (DbType = Int64), @p495='?' (DbType = Int64), @p496='?' (DbType = Double), @p497='?' (DbType = DateTime2), @p498='?' (DbType = Double), @p499='?' (DbType = Double), @p500='?' (DbType = Int64), @p501='?' (DbType = Int64), @p502='?' (DbType = Double), @p503='?' (DbType = Int64), @p504='?' (DbType = Int64), @p505='?' (DbType = Double), @p506='?' (DbType = Double), @p507='?' (DbType = Double), @p508='?' (DbType = Int64), @p509='?' (DbType = Double), @p510='?' (DbType = Double), @p511='?' (DbType = Int64), @p512='?' (Size = 4000), @p513='?' (DbType = Int64), @p514='?' (DbType = Double), @p515='?' (Size = 450), @p516='?' (DbType = Int64), @p517='?' (DbType = Int64), @p518='?' (DbType = Double), @p519='?' (DbType = Double), @p520='?' (DbType = Int64), @p521='?' (DbType = Int64), @p522='?' (DbType = Int64), @p523='?' (DbType = Double), @p524='?' (DbType = DateTime2), @p525='?' (DbType = Double), @p526='?' (DbType = Double), @p527='?' (DbType = Int64), @p528='?' (DbType = Int64), @p529='?' (DbType = Double), @p530='?' (DbType = Int64), @p531='?' (DbType = Int64), @p532='?' (DbType = Double), @p533='?' (DbType = Double), @p534='?' (DbType = Double), @p535='?' (DbType = Int64), @p536='?' (DbType = Double), @p537='?' (DbType = Double), @p538='?' (DbType = Int64), @p539='?' (Size = 4000), @p540='?' (DbType = Int64), @p541='?' (DbType = Double), @p542='?' (Size = 450), @p543='?' (DbType = Int64), @p544='?' (DbType = Int64), @p545='?' (DbType = Double), @p546='?' (DbType = Double), @p547='?' (DbType = Int64), @p548='?' (DbType = Int64), @p549='?' (DbType = Int64), @p550='?' (DbType = Double), @p551='?' (DbType = DateTime2), @p552='?' (DbType = Double), @p553='?' (DbType = Double), @p554='?' (DbType = Int64), @p555='?' (DbType = Int64), @p556='?' (DbType = Double), @p557='?' (DbType = Int64), @p558='?' (DbType = Int64), @p559='?' (DbType = Double), @p560='?' (DbType = Double), @p561='?' (DbType = Double), @p562='?' (DbType = Int64), @p563='?' (DbType = Double), @p564='?' (DbType = Double), @p565='?' (DbType = Int64), @p566='?' (Size = 4000), @p567='?' (DbType = Int64), @p568='?' (DbType = Double), @p569='?' (Size = 450), @p570='?' (DbType = Int64), @p571='?' (DbType = Int64), @p572='?' (DbType = Double), @p573='?' (DbType = Double), @p574='?' (DbType = Int64), @p575='?' (DbType = Int64), @p576='?' (DbType = Int64), @p577='?' (DbType = Double), @p578='?' (DbType = DateTime2), @p579='?' (DbType = Double), @p580='?' (DbType = Double), @p581='?' (DbType = Int64), @p582='?' (DbType = Int64), @p583='?' (DbType = Double), @p584='?' (DbType = Int64), @p585='?' (DbType = Int64), @p586='?' (DbType = Double), @p587='?' (DbType = Double), @p588='?' (DbType = Double), @p589='?' (DbType = Int64), @p590='?' (DbType = Double), @p591='?' (DbType = Double), @p592='?' (DbType = Int64), @p593='?' (Size = 4000), @p594='?' (DbType = Int64), @p595='?' (DbType = Double), @p596='?' (Size = 450), @p597='?' (DbType = Int64), @p598='?' (DbType = Int64), @p599='?' (DbType = Double), @p600='?' (DbType = Double), @p601='?' (DbType = Int64), @p602='?' (DbType = Int64), @p603='?' (DbType = Int64), @p604='?' (DbType = Double), @p605='?' (DbType = DateTime2), @p606='?' (DbType = Double), @p607='?' (DbType = Double), @p608='?' (DbType = Int64), @p609='?' (DbType = Int64), @p610='?' (DbType = Double), @p611='?' (DbType = Int64), @p612='?' (DbType = Int64), @p613='?' (DbType = Double), @p614='?' (DbType = Double), @p615='?' (DbType = Double), @p616='?' (DbType = Int64), @p617='?' (DbType = Double), @p618='?' (DbType = Double), @p619='?' (DbType = Int64), @p620='?' (Size = 4000), @p621='?' (DbType = Int64), @p622='?' (DbType = Double), @p623='?' (Size = 450), @p624='?' (DbType = Int64), @p625='?' (DbType = Int64), @p626='?' (DbType = Double), @p627='?' (DbType = Double), @p628='?' (DbType = Int64), @p629='?' (DbType = Int64), @p630='?' (DbType = Int64), @p631='?' (DbType = Double), @p632='?' (DbType = DateTime2), @p633='?' (DbType = Double), @p634='?' (DbType = Double), @p635='?' (DbType = Int64), @p636='?' (DbType = Int64), @p637='?' (DbType = Double), @p638='?' (DbType = Int64), @p639='?' (DbType = Int64), @p640='?' (DbType = Double), @p641='?' (DbType = Double), @p642='?' (DbType = Double), @p643='?' (DbType = Int64), @p644='?' (DbType = Double), @p645='?' (DbType = Double), @p646='?' (DbType = Int64), @p647='?' (Size = 4000), @p648='?' (DbType = Int64), @p649='?' (DbType = Double), @p650='?' (Size = 450), @p651='?' (DbType = Int64), @p652='?' (DbType = Int64), @p653='?' (DbType = Double), @p654='?' (DbType = Double), @p655='?' (DbType = Int64), @p656='?' (DbType = Int64), @p657='?' (DbType = Int64), @p658='?' (DbType = Double), @p659='?' (DbType = DateTime2), @p660='?' (DbType = Double), @p661='?' (DbType = Double), @p662='?' (DbType = Int64), @p663='?' (DbType = Int64), @p664='?' (DbType = Double), @p665='?' (DbType = Int64), @p666='?' (DbType = Int64), @p667='?' (DbType = Double), @p668='?' (DbType = Double), @p669='?' (DbType = Double), @p670='?' (DbType = Int64), @p671='?' (DbType = Double), @p672='?' (DbType = Double), @p673='?' (DbType = Int64), @p674='?' (Size = 4000), @p675='?' (DbType = Int64), @p676='?' (DbType = Double), @p677='?' (Size = 450), @p678='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
DECLARE @inserted0 TABLE ([Id] int, [_Position] [int]);
MERGE [IncomeStatementAnnualReport] USING (
VALUES (@p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21, @p22, @p23, @p24, @p25, @p26, @p27, @p28, @p29, @p30, 0),
(@p31, @p32, @p33, @p34, @p35, @p36, @p37, @p38, @p39, @p40, @p41, @p42, @p43, @p44, @p45, @p46, @p47, @p48, @p49, @p50, @p51, @p52, @p53, @p54, @p55, @p56, @p57, 1),
(@p58, @p59, @p60, @p61, @p62, @p63, @p64, @p65, @p66, @p67, @p68, @p69, @p70, @p71, @p72, @p73, @p74, @p75, @p76, @p77, @p78, @p79, @p80, @p81, @p82, @p83, @p84, 2),
(@p85, @p86, @p87, @p88, @p89, @p90, @p91, @p92, @p93, @p94, @p95, @p96, @p97, @p98, @p99, @p100, @p101, @p102, @p103, @p104, @p105, @p106, @p107, @p108, @p109, @p110, @p111, 3),
(@p112, @p113, @p114, @p115, @p116, @p117, @p118, @p119, @p120, @p121, @p122, @p123, @p124, @p125, @p126, @p127, @p128, @p129, @p130, @p131, @p132, @p133, @p134, @p135, @p136, @p137, @p138, 4)) AS i ([ComprehensiveIncomeNetOfTax], [CostOfRevenue], [CostofGoodsAndServicesSold], [Depreciation], [DepreciationAndAmortization], [Ebit], [Ebitda], [FiscalDateEnding], [GrossProfit], [IncomeBeforeTax], [IncomeTaxExpense], [InterestAndDebtExpense], [InterestExpense], [InterestIncome], [InvestmentIncomeNet], [NetIncome], [NetIncomeFromContinuingOperations], [NetInterestIncome], [NonInterestIncome], [OperatingExpenses], [OperatingIncome], [OtherNonOperatingIncome], [ReportedCurrency], [ResearchAndDevelopment], [SellingGeneralAndAdministrative], [Symbol], [TotalRevenue], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([ComprehensiveIncomeNetOfTax], [CostOfRevenue], [CostofGoodsAndServicesSold], [Depreciation], [DepreciationAndAmortization], [Ebit], [Ebitda], [FiscalDateEnding], [GrossProfit], [IncomeBeforeTax], [IncomeTaxExpense], [InterestAndDebtExpense], [InterestExpense], [InterestIncome], [InvestmentIncomeNet], [NetIncome], [NetIncomeFromContinuingOperations], [NetInterestIncome], [NonInterestIncome], [OperatingExpenses], [OperatingIncome], [OtherNonOperatingIncome], [ReportedCurrency], [ResearchAndDevelopment], [SellingGeneralAndAdministrative], [Symbol], [TotalRevenue])
VALUES (i.[ComprehensiveIncomeNetOfTax], i.[CostOfRevenue], i.[CostofGoodsAndServicesSold], i.[Depreciation], i.[DepreciationAndAmortization], i.[Ebit], i.[Ebitda], i.[FiscalDateEnding], i.[GrossProfit], i.[IncomeBeforeTax], i.[IncomeTaxExpense], i.[InterestAndDebtExpense], i.[InterestExpense], i.[InterestIncome], i.[InvestmentIncomeNet], i.[NetIncome], i.[NetIncomeFromContinuingOperations], i.[NetInterestIncome], i.[NonInterestIncome], i.[OperatingExpenses], i.[OperatingIncome], i.[OtherNonOperatingIncome], i.[ReportedCurrency], i.[ResearchAndDevelopment], i.[SellingGeneralAndAdministrative], i.[Symbol], i.[TotalRevenue])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted0;

SELECT [i].[Id] FROM @inserted0 i
ORDER BY [i].[_Position];

DECLARE @inserted5 TABLE ([Id] int, [_Position] [int]);
MERGE [IncomeStatementQuarterlyReport] USING (
VALUES (@p139, @p140, @p141, @p142, @p143, @p144, @p145, @p146, @p147, @p148, @p149, @p150, @p151, @p152, @p153, @p154, @p155, @p156, @p157, @p158, @p159, @p160, @p161, @p162, @p163, @p164, @p165, 0),
(@p166, @p167, @p168, @p169, @p170, @p171, @p172, @p173, @p174, @p175, @p176, @p177, @p178, @p179, @p180, @p181, @p182, @p183, @p184, @p185, @p186, @p187, @p188, @p189, @p190, @p191, @p192, 1),
(@p193, @p194, @p195, @p196, @p197, @p198, @p199, @p200, @p201, @p202, @p203, @p204, @p205, @p206, @p207, @p208, @p209, @p210, @p211, @p212, @p213, @p214, @p215, @p216, @p217, @p218, @p219, 2),
(@p220, @p221, @p222, @p223, @p224, @p225, @p226, @p227, @p228, @p229, @p230, @p231, @p232, @p233, @p234, @p235, @p236, @p237, @p238, @p239, @p240, @p241, @p242, @p243, @p244, @p245, @p246, 3),
(@p247, @p248, @p249, @p250, @p251, @p252, @p253, @p254, @p255, @p256, @p257, @p258, @p259, @p260, @p261, @p262, @p263, @p264, @p265, @p266, @p267, @p268, @p269, @p270, @p271, @p272, @p273, 4),
(@p274, @p275, @p276, @p277, @p278, @p279, @p280, @p281, @p282, @p283, @p284, @p285, @p286, @p287, @p288, @p289, @p290, @p291, @p292, @p293, @p294, @p295, @p296, @p297, @p298, @p299, @p300, 5),
(@p301, @p302, @p303, @p304, @p305, @p306, @p307, @p308, @p309, @p310, @p311, @p312, @p313, @p314, @p315, @p316, @p317, @p318, @p319, @p320, @p321, @p322, @p323, @p324, @p325, @p326, @p327, 6),
(@p328, @p329, @p330, @p331, @p332, @p333, @p334, @p335, @p336, @p337, @p338, @p339, @p340, @p341, @p342, @p343, @p344, @p345, @p346, @p347, @p348, @p349, @p350, @p351, @p352, @p353, @p354, 7),
(@p355, @p356, @p357, @p358, @p359, @p360, @p361, @p362, @p363, @p364, @p365, @p366, @p367, @p368, @p369, @p370, @p371, @p372, @p373, @p374, @p375, @p376, @p377, @p378, @p379, @p380, @p381, 8),
(@p382, @p383, @p384, @p385, @p386, @p387, @p388, @p389, @p390, @p391, @p392, @p393, @p394, @p395, @p396, @p397, @p398, @p399, @p400, @p401, @p402, @p403, @p404, @p405, @p406, @p407, @p408, 9),
(@p409, @p410, @p411, @p412, @p413, @p414, @p415, @p416, @p417, @p418, @p419, @p420, @p421, @p422, @p423, @p424, @p425, @p426, @p427, @p428, @p429, @p430, @p431, @p432, @p433, @p434, @p435, 10),
(@p436, @p437, @p438, @p439, @p440, @p441, @p442, @p443, @p444, @p445, @p446, @p447, @p448, @p449, @p450, @p451, @p452, @p453, @p454, @p455, @p456, @p457, @p458, @p459, @p460, @p461, @p462, 11),
(@p463, @p464, @p465, @p466, @p467, @p468, @p469, @p470, @p471, @p472, @p473, @p474, @p475, @p476, @p477, @p478, @p479, @p480, @p481, @p482, @p483, @p484, @p485, @p486, @p487, @p488, @p489, 12),
(@p490, @p491, @p492, @p493, @p494, @p495, @p496, @p497, @p498, @p499, @p500, @p501, @p502, @p503, @p504, @p505, @p506, @p507, @p508, @p509, @p510, @p511, @p512, @p513, @p514, @p515, @p516, 13),
(@p517, @p518, @p519, @p520, @p521, @p522, @p523, @p524, @p525, @p526, @p527, @p528, @p529, @p530, @p531, @p532, @p533, @p534, @p535, @p536, @p537, @p538, @p539, @p540, @p541, @p542, @p543, 14),
(@p544, @p545, @p546, @p547, @p548, @p549, @p550, @p551, @p552, @p553, @p554, @p555, @p556, @p557, @p558, @p559, @p560, @p561, @p562, @p563, @p564, @p565, @p566, @p567, @p568, @p569, @p570, 15),
(@p571, @p572, @p573, @p574, @p575, @p576, @p577, @p578, @p579, @p580, @p581, @p582, @p583, @p584, @p585, @p586, @p587, @p588, @p589, @p590, @p591, @p592, @p593, @p594, @p595, @p596, @p597, 16),
(@p598, @p599, @p600, @p601, @p602, @p603, @p604, @p605, @p606, @p607, @p608, @p609, @p610, @p611, @p612, @p613, @p614, @p615, @p616, @p617, @p618, @p619, @p620, @p621, @p622, @p623, @p624, 17),
(@p625, @p626, @p627, @p628, @p629, @p630, @p631, @p632, @p633, @p634, @p635, @p636, @p637, @p638, @p639, @p640, @p641, @p642, @p643, @p644, @p645, @p646, @p647, @p648, @p649, @p650, @p651, 18),
(@p652, @p653, @p654, @p655, @p656, @p657, @p658, @p659, @p660, @p661, @p662, @p663, @p664, @p665, @p666, @p667, @p668, @p669, @p670, @p671, @p672, @p673, @p674, @p675, @p676, @p677, @p678, 19)) AS i ([ComprehensiveIncomeNetOfTax], [CostOfRevenue], [CostofGoodsAndServicesSold], [Depreciation], [DepreciationAndAmortization], [Ebit], [Ebitda], [FiscalDateEnding], [GrossProfit], [IncomeBeforeTax], [IncomeTaxExpense], [InterestAndDebtExpense], [InterestExpense], [InterestIncome], [InvestmentIncomeNet], [NetIncome], [NetIncomeFromContinuingOperations], [NetInterestIncome], [NonInterestIncome], [OperatingExpenses], [OperatingIncome], [OtherNonOperatingIncome], [ReportedCurrency], [ResearchAndDevelopment], [SellingGeneralAndAdministrative], [Symbol], [TotalRevenue], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([ComprehensiveIncomeNetOfTax], [CostOfRevenue], [CostofGoodsAndServicesSold], [Depreciation], [DepreciationAndAmortization], [Ebit], [Ebitda], [FiscalDateEnding], [GrossProfit], [IncomeBeforeTax], [IncomeTaxExpense], [InterestAndDebtExpense], [InterestExpense], [InterestIncome], [InvestmentIncomeNet], [NetIncome], [NetIncomeFromContinuingOperations], [NetInterestIncome], [NonInterestIncome], [OperatingExpenses], [OperatingIncome], [OtherNonOperatingIncome], [ReportedCurrency], [ResearchAndDevelopment], [SellingGeneralAndAdministrative], [Symbol], [TotalRevenue])
VALUES (i.[ComprehensiveIncomeNetOfTax], i.[CostOfRevenue], i.[CostofGoodsAndServicesSold], i.[Depreciation], i.[DepreciationAndAmortization], i.[Ebit], i.[Ebitda], i.[FiscalDateEnding], i.[GrossProfit], i.[IncomeBeforeTax], i.[IncomeTaxExpense], i.[InterestAndDebtExpense], i.[InterestExpense], i.[InterestIncome], i.[InvestmentIncomeNet], i.[NetIncome], i.[NetIncomeFromContinuingOperations], i.[NetInterestIncome], i.[NonInterestIncome], i.[OperatingExpenses], i.[OperatingIncome], i.[OtherNonOperatingIncome], i.[ReportedCurrency], i.[ResearchAndDevelopment], i.[SellingGeneralAndAdministrative], i.[Symbol], i.[TotalRevenue])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted5;

SELECT [i].[Id] FROM @inserted5 i
ORDER BY [i].[_Position];
2022-05-12 01:06:28.394 +03:00 [INF] AddOrUpdate run successful.
2022-05-12 01:06:29.199 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.BalanceSheet with Symbol BENEW
2022-05-12 01:06:29.201 +03:00 [INF] Generating URI for BALANCE_SHEET with params: symbol: BENEW
2022-05-12 01:06:29.201 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BENEW
2022-05-12 01:06:29.202 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BENEW".
2022-05-12 01:06:30.024 +03:00 [INF] Response has success status code
2022-05-12 01:06:30.024 +03:00 [INF] Trying to deserialize response.
2022-05-12 01:06:30.025 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 01:06:30.075 +03:00 [INF] Executed DbCommand (48ms) [Parameters=[@__symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__symbol_0
2022-05-12 01:06:30.076 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.BalanceSheet.
2022-05-12 01:06:30.083 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [b].[Symbol], [b].[ExistInApi], [b].[LastApiRefresh], [b].[LastLocalRefresh]
FROM [BalanceSheets] AS [b]
WHERE [b].[Symbol] = @__entity_Symbol_0
2022-05-12 01:06:30.084 +03:00 [INF] Entity does not exist. Adding to DB.
2022-05-12 01:06:30.097 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = Boolean), @p2='?' (DbType = DateTime2), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [BalanceSheets] ([Symbol], [ExistInApi], [LastApiRefresh], [LastLocalRefresh])
VALUES (@p0, @p1, @p2, @p3);
2022-05-12 01:06:30.120 +03:00 [INF] Executed DbCommand (19ms) [Parameters=[@p4='?' (DbType = Int64), @p5='?' (DbType = Double), @p6='?' (DbType = Double), @p7='?' (DbType = Double), @p8='?' (DbType = Double), @p9='?' (DbType = Int64), @p10='?' (DbType = Int64), @p11='?' (DbType = Int64), @p12='?' (DbType = Double), @p13='?' (DbType = Int64), @p14='?' (DbType = Int64), @p15='?' (DbType = DateTime2), @p16='?' (DbType = Double), @p17='?' (DbType = Double), @p18='?' (DbType = Double), @p19='?' (DbType = Double), @p20='?' (DbType = Int64), @p21='?' (DbType = Double), @p22='?' (DbType = Int64), @p23='?' (DbType = Double), @p24='?' (DbType = Double), @p25='?' (DbType = Double), @p26='?' (DbType = Double), @p27='?' (DbType = Double), @p28='?' (DbType = Int64), @p29='?' (Size = 4000), @p30='?' (DbType = Double), @p31='?' (DbType = Double), @p32='?' (DbType = Double), @p33='?' (DbType = Double), @p34='?' (Size = 450), @p35='?' (DbType = Double), @p36='?' (DbType = Double), @p37='?' (DbType = Double), @p38='?' (DbType = Double), @p39='?' (DbType = Double), @p40='?' (DbType = Double), @p41='?' (DbType = Double), @p42='?' (DbType = Double), @p43='?' (DbType = Int64), @p44='?' (DbType = Double), @p45='?' (DbType = Double), @p46='?' (DbType = Double), @p47='?' (DbType = Double), @p48='?' (DbType = Int64), @p49='?' (DbType = Int64), @p50='?' (DbType = Int64), @p51='?' (DbType = Double), @p52='?' (DbType = Int64), @p53='?' (DbType = Int64), @p54='?' (DbType = DateTime2), @p55='?' (DbType = Double), @p56='?' (DbType = Double), @p57='?' (DbType = Double), @p58='?' (DbType = Double), @p59='?' (DbType = Int64), @p60='?' (DbType = Double), @p61='?' (DbType = Int64), @p62='?' (DbType = Double), @p63='?' (DbType = Double), @p64='?' (DbType = Double), @p65='?' (DbType = Double), @p66='?' (DbType = Double), @p67='?' (DbType = Int64), @p68='?' (Size = 4000), @p69='?' (DbType = Double), @p70='?' (DbType = Double), @p71='?' (DbType = Double), @p72='?' (DbType = Double), @p73='?' (Size = 450), @p74='?' (DbType = Double), @p75='?' (DbType = Double), @p76='?' (DbType = Double), @p77='?' (DbType = Double), @p78='?' (DbType = Double), @p79='?' (DbType = Double), @p80='?' (DbType = Double), @p81='?' (DbType = Double), @p82='?' (DbType = Int64), @p83='?' (DbType = Double), @p84='?' (DbType = Double), @p85='?' (DbType = Double), @p86='?' (DbType = Double), @p87='?' (DbType = Int64), @p88='?' (DbType = Int64), @p89='?' (DbType = Int64), @p90='?' (DbType = Double), @p91='?' (DbType = Int64), @p92='?' (DbType = Int64), @p93='?' (DbType = DateTime2), @p94='?' (DbType = Double), @p95='?' (DbType = Double), @p96='?' (DbType = Double), @p97='?' (DbType = Double), @p98='?' (DbType = Int64), @p99='?' (DbType = Double), @p100='?' (DbType = Int64), @p101='?' (DbType = Double), @p102='?' (DbType = Double), @p103='?' (DbType = Double), @p104='?' (DbType = Double), @p105='?' (DbType = Double), @p106='?' (DbType = Int64), @p107='?' (Size = 4000), @p108='?' (DbType = Double), @p109='?' (DbType = Double), @p110='?' (DbType = Double), @p111='?' (DbType = Double), @p112='?' (Size = 450), @p113='?' (DbType = Double), @p114='?' (DbType = Double), @p115='?' (DbType = Double), @p116='?' (DbType = Double), @p117='?' (DbType = Double), @p118='?' (DbType = Double), @p119='?' (DbType = Double), @p120='?' (DbType = Double), @p121='?' (DbType = Int64), @p122='?' (DbType = Double), @p123='?' (DbType = Double), @p124='?' (DbType = Double), @p125='?' (DbType = Double), @p126='?' (DbType = Int64), @p127='?' (DbType = Int64), @p128='?' (DbType = Int64), @p129='?' (DbType = Double), @p130='?' (DbType = Int64), @p131='?' (DbType = Int64), @p132='?' (DbType = DateTime2), @p133='?' (DbType = Double), @p134='?' (DbType = Double), @p135='?' (DbType = Double), @p136='?' (DbType = Double), @p137='?' (DbType = Int64), @p138='?' (DbType = Double), @p139='?' (DbType = Int64), @p140='?' (DbType = Double), @p141='?' (DbType = Double), @p142='?' (DbType = Double), @p143='?' (DbType = Double), @p144='?' (DbType = Double), @p145='?' (DbType = Int64), @p146='?' (Size = 4000), @p147='?' (DbType = Double), @p148='?' (DbType = Double), @p149='?' (DbType = Double), @p150='?' (DbType = Double), @p151='?' (Size = 450), @p152='?' (DbType = Double), @p153='?' (DbType = Double), @p154='?' (DbType = Double), @p155='?' (DbType = Double), @p156='?' (DbType = Double), @p157='?' (DbType = Double), @p158='?' (DbType = Double), @p159='?' (DbType = Double), @p160='?' (DbType = Int64), @p161='?' (DbType = Double), @p162='?' (DbType = Double), @p163='?' (DbType = Double), @p164='?' (DbType = Double), @p165='?' (DbType = Int64), @p166='?' (DbType = Int64), @p167='?' (DbType = Int64), @p168='?' (DbType = Double), @p169='?' (DbType = Int64), @p170='?' (DbType = Int64), @p171='?' (DbType = DateTime2), @p172='?' (DbType = Double), @p173='?' (DbType = Double), @p174='?' (DbType = Double), @p175='?' (DbType = Double), @p176='?' (DbType = Int64), @p177='?' (DbType = Double), @p178='?' (DbType = Int64), @p179='?' (DbType = Double), @p180='?' (DbType = Double), @p181='?' (DbType = Double), @p182='?' (DbType = Double), @p183='?' (DbType = Double), @p184='?' (DbType = Int64), @p185='?' (Size = 4000), @p186='?' (DbType = Double), @p187='?' (DbType = Double), @p188='?' (DbType = Double), @p189='?' (DbType = Double), @p190='?' (Size = 450), @p191='?' (DbType = Double), @p192='?' (DbType = Double), @p193='?' (DbType = Double), @p194='?' (DbType = Double), @p195='?' (DbType = Double), @p196='?' (DbType = Double), @p197='?' (DbType = Double), @p198='?' (DbType = Double), @p199='?' (DbType = Int64), @p200='?' (DbType = Double), @p201='?' (DbType = Double), @p202='?' (DbType = Double), @p203='?' (DbType = Double), @p204='?' (DbType = Int64), @p205='?' (DbType = Int64), @p206='?' (DbType = Int64), @p207='?' (DbType = Double), @p208='?' (DbType = Int64), @p209='?' (DbType = Int64), @p210='?' (DbType = DateTime2), @p211='?' (DbType = Double), @p212='?' (DbType = Double), @p213='?' (DbType = Double), @p214='?' (DbType = Double), @p215='?' (DbType = Int64), @p216='?' (DbType = Double), @p217='?' (DbType = Int64), @p218='?' (DbType = Double), @p219='?' (DbType = Double), @p220='?' (DbType = Double), @p221='?' (DbType = Double), @p222='?' (DbType = Double), @p223='?' (DbType = Int64), @p224='?' (Size = 4000), @p225='?' (DbType = Double), @p226='?' (DbType = Double), @p227='?' (DbType = Double), @p228='?' (DbType = Double), @p229='?' (Size = 450), @p230='?' (DbType = Double), @p231='?' (DbType = Double), @p232='?' (DbType = Double), @p233='?' (DbType = Double), @p234='?' (DbType = Double), @p235='?' (DbType = Double), @p236='?' (DbType = Double), @p237='?' (DbType = Double), @p238='?' (DbType = Int64), @p239='?' (DbType = Double), @p240='?' (DbType = Double), @p241='?' (DbType = Double), @p242='?' (DbType = Double), @p243='?' (DbType = Int64), @p244='?' (DbType = Int64), @p245='?' (DbType = Int64), @p246='?' (DbType = Double), @p247='?' (DbType = Int64), @p248='?' (DbType = Int64), @p249='?' (DbType = DateTime2), @p250='?' (DbType = Double), @p251='?' (DbType = Double), @p252='?' (DbType = Double), @p253='?' (DbType = Double), @p254='?' (DbType = Int64), @p255='?' (DbType = Double), @p256='?' (DbType = Int64), @p257='?' (DbType = Double), @p258='?' (DbType = Double), @p259='?' (DbType = Double), @p260='?' (DbType = Double), @p261='?' (DbType = Double), @p262='?' (DbType = Int64), @p263='?' (Size = 4000), @p264='?' (DbType = Double), @p265='?' (DbType = Double), @p266='?' (DbType = Double), @p267='?' (DbType = Double), @p268='?' (Size = 450), @p269='?' (DbType = Double), @p270='?' (DbType = Double), @p271='?' (DbType = Double), @p272='?' (DbType = Double), @p273='?' (DbType = Double), @p274='?' (DbType = Double), @p275='?' (DbType = Double), @p276='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
DECLARE @inserted0 TABLE ([Id] int, [_Position] [int]);
MERGE [BalanceSheetAnnualReport] USING (
VALUES (@p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21, @p22, @p23, @p24, @p25, @p26, @p27, @p28, @p29, @p30, @p31, @p32, @p33, @p34, @p35, @p36, @p37, @p38, @p39, @p40, @p41, @p42, 0),
(@p43, @p44, @p45, @p46, @p47, @p48, @p49, @p50, @p51, @p52, @p53, @p54, @p55, @p56, @p57, @p58, @p59, @p60, @p61, @p62, @p63, @p64, @p65, @p66, @p67, @p68, @p69, @p70, @p71, @p72, @p73, @p74, @p75, @p76, @p77, @p78, @p79, @p80, @p81, 1),
(@p82, @p83, @p84, @p85, @p86, @p87, @p88, @p89, @p90, @p91, @p92, @p93, @p94, @p95, @p96, @p97, @p98, @p99, @p100, @p101, @p102, @p103, @p104, @p105, @p106, @p107, @p108, @p109, @p110, @p111, @p112, @p113, @p114, @p115, @p116, @p117, @p118, @p119, @p120, 2)) AS i ([AccumulatedDepreciationAmortizationPPE], [CapitalLeaseObligations], [CashAndCashEquivalentsAtCarryingValue], [CashAndShortTermInvestments], [CommonStock], [CommonStockSharesOutstanding], [CurrentAccountsPayable], [CurrentDebt], [CurrentLongTermDebt], [CurrentNetReceivables], [DeferredRevenue], [FiscalDateEnding], [Goodwill], [IntangibleAssets], [IntangibleAssetsExcludingGoodwill], [Inventory], [Investments], [LongTermDebt], [LongTermDebtNoncurrent], [LongTermInvestments], [OtherCurrentAssets], [OtherCurrentLiabilities], [OtherNonCurrentAssets], [OtherNonCurrentLiabilities], [PropertyPlantEquipment], [ReportedCurrency], [RetainedEarnings], [ShortLongTermDebtTotal], [ShortTermDebt], [ShortTermInvestments], [Symbol], [TotalAssets], [TotalCurrentAssets], [TotalCurrentLiabilities], [TotalLiabilities], [TotalNonCurrentAssets], [TotalNonCurrentLiabilities], [TotalShareholderEquity], [TreasuryStock], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([AccumulatedDepreciationAmortizationPPE], [CapitalLeaseObligations], [CashAndCashEquivalentsAtCarryingValue], [CashAndShortTermInvestments], [CommonStock], [CommonStockSharesOutstanding], [CurrentAccountsPayable], [CurrentDebt], [CurrentLongTermDebt], [CurrentNetReceivables], [DeferredRevenue], [FiscalDateEnding], [Goodwill], [IntangibleAssets], [IntangibleAssetsExcludingGoodwill], [Inventory], [Investments], [LongTermDebt], [LongTermDebtNoncurrent], [LongTermInvestments], [OtherCurrentAssets], [OtherCurrentLiabilities], [OtherNonCurrentAssets], [OtherNonCurrentLiabilities], [PropertyPlantEquipment], [ReportedCurrency], [RetainedEarnings], [ShortLongTermDebtTotal], [ShortTermDebt], [ShortTermInvestments], [Symbol], [TotalAssets], [TotalCurrentAssets], [TotalCurrentLiabilities], [TotalLiabilities], [TotalNonCurrentAssets], [TotalNonCurrentLiabilities], [TotalShareholderEquity], [TreasuryStock])
VALUES (i.[AccumulatedDepreciationAmortizationPPE], i.[CapitalLeaseObligations], i.[CashAndCashEquivalentsAtCarryingValue], i.[CashAndShortTermInvestments], i.[CommonStock], i.[CommonStockSharesOutstanding], i.[CurrentAccountsPayable], i.[CurrentDebt], i.[CurrentLongTermDebt], i.[CurrentNetReceivables], i.[DeferredRevenue], i.[FiscalDateEnding], i.[Goodwill], i.[IntangibleAssets], i.[IntangibleAssetsExcludingGoodwill], i.[Inventory], i.[Investments], i.[LongTermDebt], i.[LongTermDebtNoncurrent], i.[LongTermInvestments], i.[OtherCurrentAssets], i.[OtherCurrentLiabilities], i.[OtherNonCurrentAssets], i.[OtherNonCurrentLiabilities], i.[PropertyPlantEquipment], i.[ReportedCurrency], i.[RetainedEarnings], i.[ShortLongTermDebtTotal], i.[ShortTermDebt], i.[ShortTermInvestments], i.[Symbol], i.[TotalAssets], i.[TotalCurrentAssets], i.[TotalCurrentLiabilities], i.[TotalLiabilities], i.[TotalNonCurrentAssets], i.[TotalNonCurrentLiabilities], i.[TotalShareholderEquity], i.[TreasuryStock])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted0;

SELECT [i].[Id] FROM @inserted0 i
ORDER BY [i].[_Position];

DECLARE @inserted3 TABLE ([Id] int, [_Position] [int]);
MERGE [BalanceSheetQuarterlyReports] USING (
VALUES (@p121, @p122, @p123, @p124, @p125, @p126, @p127, @p128, @p129, @p130, @p131, @p132, @p133, @p134, @p135, @p136, @p137, @p138, @p139, @p140, @p141, @p142, @p143, @p144, @p145, @p146, @p147, @p148, @p149, @p150, @p151, @p152, @p153, @p154, @p155, @p156, @p157, @p158, @p159, 0),
(@p160, @p161, @p162, @p163, @p164, @p165, @p166, @p167, @p168, @p169, @p170, @p171, @p172, @p173, @p174, @p175, @p176, @p177, @p178, @p179, @p180, @p181, @p182, @p183, @p184, @p185, @p186, @p187, @p188, @p189, @p190, @p191, @p192, @p193, @p194, @p195, @p196, @p197, @p198, 1),
(@p199, @p200, @p201, @p202, @p203, @p204, @p205, @p206, @p207, @p208, @p209, @p210, @p211, @p212, @p213, @p214, @p215, @p216, @p217, @p218, @p219, @p220, @p221, @p222, @p223, @p224, @p225, @p226, @p227, @p228, @p229, @p230, @p231, @p232, @p233, @p234, @p235, @p236, @p237, 2),
(@p238, @p239, @p240, @p241, @p242, @p243, @p244, @p245, @p246, @p247, @p248, @p249, @p250, @p251, @p252, @p253, @p254, @p255, @p256, @p257, @p258, @p259, @p260, @p261, @p262, @p263, @p264, @p265, @p266, @p267, @p268, @p269, @p270, @p271, @p272, @p273, @p274, @p275, @p276, 3)) AS i ([AccumulatedDepreciationAmortizationPPE], [CapitalLeaseObligations], [CashAndCashEquivalentsAtCarryingValue], [CashAndShortTermInvestments], [CommonStock], [CommonStockSharesOutstanding], [CurrentAccountsPayable], [CurrentDebt], [CurrentLongTermDebt], [CurrentNetReceivables], [DeferredRevenue], [FiscalDateEnding], [Goodwill], [IntangibleAssets], [IntangibleAssetsExcludingGoodwill], [Inventory], [Investments], [LongTermDebt], [LongTermDebtNoncurrent], [LongTermInvestments], [OtherCurrentAssets], [OtherCurrentLiabilities], [OtherNonCurrentAssets], [OtherNonCurrentLiabilities], [PropertyPlantEquipment], [ReportedCurrency], [RetainedEarnings], [ShortLongTermDebtTotal], [ShortTermDebt], [ShortTermInvestments], [Symbol], [TotalAssets], [TotalCurrentAssets], [TotalCurrentLiabilities], [TotalLiabilities], [TotalNonCurrentAssets], [TotalNonCurrentLiabilities], [TotalShareholderEquity], [TreasuryStock], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([AccumulatedDepreciationAmortizationPPE], [CapitalLeaseObligations], [CashAndCashEquivalentsAtCarryingValue], [CashAndShortTermInvestments], [CommonStock], [CommonStockSharesOutstanding], [CurrentAccountsPayable], [CurrentDebt], [CurrentLongTermDebt], [CurrentNetReceivables], [DeferredRevenue], [FiscalDateEnding], [Goodwill], [IntangibleAssets], [IntangibleAssetsExcludingGoodwill], [Inventory], [Investments], [LongTermDebt], [LongTermDebtNoncurrent], [LongTermInvestments], [OtherCurrentAssets], [OtherCurrentLiabilities], [OtherNonCurrentAssets], [OtherNonCurrentLiabilities], [PropertyPlantEquipment], [ReportedCurrency], [RetainedEarnings], [ShortLongTermDebtTotal], [ShortTermDebt], [ShortTermInvestments], [Symbol], [TotalAssets], [TotalCurrentAssets], [TotalCurrentLiabilities], [TotalLiabilities], [TotalNonCurrentAssets], [TotalNonCurrentLiabilities], [TotalShareholderEquity], [TreasuryStock])
VALUES (i.[AccumulatedDepreciationAmortizationPPE], i.[CapitalLeaseObligations], i.[CashAndCashEquivalentsAtCarryingValue], i.[CashAndShortTermInvestments], i.[CommonStock], i.[CommonStockSharesOutstanding], i.[CurrentAccountsPayable], i.[CurrentDebt], i.[CurrentLongTermDebt], i.[CurrentNetReceivables], i.[DeferredRevenue], i.[FiscalDateEnding], i.[Goodwill], i.[IntangibleAssets], i.[IntangibleAssetsExcludingGoodwill], i.[Inventory], i.[Investments], i.[LongTermDebt], i.[LongTermDebtNoncurrent], i.[LongTermInvestments], i.[OtherCurrentAssets], i.[OtherCurrentLiabilities], i.[OtherNonCurrentAssets], i.[OtherNonCurrentLiabilities], i.[PropertyPlantEquipment], i.[ReportedCurrency], i.[RetainedEarnings], i.[ShortLongTermDebtTotal], i.[ShortTermDebt], i.[ShortTermInvestments], i.[Symbol], i.[TotalAssets], i.[TotalCurrentAssets], i.[TotalCurrentLiabilities], i.[TotalLiabilities], i.[TotalNonCurrentAssets], i.[TotalNonCurrentLiabilities], i.[TotalShareholderEquity], i.[TreasuryStock])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted3;

SELECT [i].[Id] FROM @inserted3 i
ORDER BY [i].[_Position];
2022-05-12 01:06:30.130 +03:00 [INF] AddOrUpdate run successful.
2022-05-12 01:06:37.785 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CashFlow with Symbol AUD
2022-05-12 01:06:37.786 +03:00 [INF] Generating URI for CASH_FLOW with params: symbol: AUD
2022-05-12 01:06:37.787 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=CASH_FLOW&symbol=AUD
2022-05-12 01:06:37.788 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=CASH_FLOW&symbol=AUD".
2022-05-12 01:06:38.520 +03:00 [INF] Response has success status code
2022-05-12 01:06:38.520 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.CashFlow for symbol AUD
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCashFlow(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 96
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:06:43.877 +03:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/screener-model - -
2022-05-12 01:06:43.877 +03:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/distribution/market-cap/30 - -
2022-05-12 01:06:43.878 +03:00 [INF] CORS policy execution successful.
2022-05-12 01:06:43.879 +03:00 [INF] CORS policy execution successful.
2022-05-12 01:06:43.879 +03:00 [INF] Executing endpoint 'SaluteStocksAPI.Controllers.ApiController.GetScreenerModel (SaluteStocksAPI)'
2022-05-12 01:06:43.880 +03:00 [INF] Executing endpoint 'SaluteStocksAPI.Controllers.ApiController.GetMarketCapDistribution (SaluteStocksAPI)'
2022-05-12 01:06:43.880 +03:00 [INF] Route matched with {action = "GetScreenerModel", controller = "Api"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetScreenerModel() on controller SaluteStocksAPI.Controllers.ApiController (SaluteStocksAPI).
2022-05-12 01:06:43.881 +03:00 [INF] Route matched with {action = "GetMarketCapDistribution", controller = "Api"}. Executing controller action with signature System.Threading.Tasks.Task`1[System.String] GetMarketCapDistribution(Int32) on controller SaluteStocksAPI.Controllers.ApiController (SaluteStocksAPI).
2022-05-12 01:06:43.883 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 01:06:43.884 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 01:06:43.894 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[MarketCapitalization])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 01:06:43.895 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[MarketCapitalization])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 01:06:43.908 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[MarketCapitalization])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 01:06:43.908 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[MarketCapitalization])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 01:06:43.920 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[EBITDA])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 01:06:43.921 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:06:43.931 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[EBITDA])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 01:06:43.932 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:06:43.941 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:06:43.942 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[PERatio])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 01:06:43.952 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[PERatio])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 01:06:43.953 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2022-05-12 01:06:43.953 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:06:43.954 +03:00 [INF] Executed action SaluteStocksAPI.Controllers.ApiController.GetScreenerModel (SaluteStocksAPI) in 71.8449ms
2022-05-12 01:06:43.959 +03:00 [INF] Executed endpoint 'SaluteStocksAPI.Controllers.ApiController.GetScreenerModel (SaluteStocksAPI)'
2022-05-12 01:06:43.960 +03:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/screener-model - - - 200 - text/plain;+charset=utf-8 82.7868ms
2022-05-12 01:06:43.967 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:06:43.981 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:06:43.993 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:06:44.004 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:06:44.017 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:06:44.028 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:06:44.039 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:06:44.050 +03:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/screener-model - -
2022-05-12 01:06:44.051 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:06:44.053 +03:00 [INF] CORS policy execution successful.
2022-05-12 01:06:44.055 +03:00 [INF] Executing endpoint 'SaluteStocksAPI.Controllers.ApiController.GetScreenerModel (SaluteStocksAPI)'
2022-05-12 01:06:44.056 +03:00 [INF] Route matched with {action = "GetScreenerModel", controller = "Api"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetScreenerModel() on controller SaluteStocksAPI.Controllers.ApiController (SaluteStocksAPI).
2022-05-12 01:06:44.057 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 01:06:44.066 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:06:44.068 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[MarketCapitalization])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 01:06:44.076 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:06:44.083 +03:00 [INF] Executed DbCommand (13ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[MarketCapitalization])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 01:06:44.096 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:06:44.099 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[EBITDA])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 01:06:44.109 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:06:44.112 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[EBITDA])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 01:06:44.120 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:06:44.125 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[PERatio])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 01:06:44.138 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[PERatio])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 01:06:44.138 +03:00 [INF] Executed DbCommand (15ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:06:44.140 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2022-05-12 01:06:44.142 +03:00 [INF] Executed action SaluteStocksAPI.Controllers.ApiController.GetScreenerModel (SaluteStocksAPI) in 85.2835ms
2022-05-12 01:06:44.144 +03:00 [INF] Executed endpoint 'SaluteStocksAPI.Controllers.ApiController.GetScreenerModel (SaluteStocksAPI)'
2022-05-12 01:06:44.145 +03:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/screener-model - - - 200 - text/plain;+charset=utf-8 94.4583ms
2022-05-12 01:06:44.151 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:06:44.163 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:06:44.175 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:06:44.189 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:06:44.201 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:06:44.212 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:06:44.225 +03:00 [INF] Executed DbCommand (12ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:06:44.238 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:06:44.250 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:06:44.262 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:06:44.274 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:06:44.275 +03:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2022-05-12 01:06:44.276 +03:00 [INF] Executed action SaluteStocksAPI.Controllers.ApiController.GetMarketCapDistribution (SaluteStocksAPI) in 392.6004ms
2022-05-12 01:06:44.277 +03:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/distribution/market-cap/30 - -
2022-05-12 01:06:44.277 +03:00 [INF] Executed endpoint 'SaluteStocksAPI.Controllers.ApiController.GetMarketCapDistribution (SaluteStocksAPI)'
2022-05-12 01:06:44.277 +03:00 [INF] CORS policy execution successful.
2022-05-12 01:06:44.278 +03:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/distribution/market-cap/30 - - - 200 - text/plain;+charset=utf-8 400.5269ms
2022-05-12 01:06:44.278 +03:00 [INF] Executing endpoint 'SaluteStocksAPI.Controllers.ApiController.GetMarketCapDistribution (SaluteStocksAPI)'
2022-05-12 01:06:44.279 +03:00 [INF] Route matched with {action = "GetMarketCapDistribution", controller = "Api"}. Executing controller action with signature System.Threading.Tasks.Task`1[System.String] GetMarketCapDistribution(Int32) on controller SaluteStocksAPI.Controllers.ApiController (SaluteStocksAPI).
2022-05-12 01:06:44.281 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 01:06:44.294 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[MarketCapitalization])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 01:06:44.304 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[MarketCapitalization])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 01:06:44.315 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:06:44.327 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:06:44.339 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:06:44.351 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:06:44.363 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:06:44.375 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:06:44.387 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:06:44.397 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:06:44.411 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:06:44.420 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:06:44.430 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:06:44.440 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:06:44.450 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:06:44.460 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:06:44.470 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:06:44.480 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:06:44.490 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:06:44.505 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:06:44.517 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:06:44.529 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:06:44.541 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:06:44.552 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:06:44.563 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:06:44.573 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:06:44.583 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:06:44.598 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:06:44.610 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:06:44.620 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:06:44.632 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:06:44.633 +03:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2022-05-12 01:06:44.634 +03:00 [INF] Executed action SaluteStocksAPI.Controllers.ApiController.GetMarketCapDistribution (SaluteStocksAPI) in 353.5134ms
2022-05-12 01:06:44.635 +03:00 [INF] Executed endpoint 'SaluteStocksAPI.Controllers.ApiController.GetMarketCapDistribution (SaluteStocksAPI)'
2022-05-12 01:06:44.636 +03:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/distribution/market-cap/30 - - - 200 - text/plain;+charset=utf-8 358.8173ms
2022-05-12 01:06:54.953 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CompanyOverview with Symbol BKLC
2022-05-12 01:06:54.954 +03:00 [INF] Generating URI for OVERVIEW with params: symbol: BKLC
2022-05-12 01:06:54.955 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=OVERVIEW&symbol=BKLC
2022-05-12 01:06:54.955 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=OVERVIEW&symbol=BKLC".
2022-05-12 01:06:55.182 +03:00 [INF] Response has success status code
2022-05-12 01:06:55.183 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.CompanyOverview for symbol BKLC
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyOverview(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 116
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:06:57.581 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.Earnings with Symbol AXAC-WS
2022-05-12 01:06:57.584 +03:00 [INF] Generating URI for EARNINGS with params: symbol: AXAC-WS
2022-05-12 01:06:57.585 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=EARNINGS&symbol=AXAC-WS
2022-05-12 01:06:57.585 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=EARNINGS&symbol=AXAC-WS".
2022-05-12 01:06:57.819 +03:00 [INF] Response has success status code
2022-05-12 01:06:57.820 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.Earnings for symbol AXAC-WS
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyEarnings(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 142
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:06:58.416 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.IncomeStatement with Symbol AUUDW
2022-05-12 01:06:58.418 +03:00 [INF] Generating URI for INCOME_STATEMENT with params: symbol: AUUDW
2022-05-12 01:06:58.419 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=INCOME_STATEMENT&symbol=AUUDW
2022-05-12 01:06:58.419 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=INCOME_STATEMENT&symbol=AUUDW".
2022-05-12 01:06:58.635 +03:00 [INF] Response has success status code
2022-05-12 01:06:58.635 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.IncomeStatement for symbol AUUDW
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetIncomeStatement(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 69
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:07:00.142 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.BalanceSheet with Symbol BEPC
2022-05-12 01:07:00.145 +03:00 [INF] Generating URI for BALANCE_SHEET with params: symbol: BEPC
2022-05-12 01:07:00.145 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BEPC
2022-05-12 01:07:00.146 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BEPC".
2022-05-12 01:07:01.093 +03:00 [INF] Response has success status code
2022-05-12 01:07:01.094 +03:00 [INF] Trying to deserialize response.
2022-05-12 01:07:01.095 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 01:07:01.152 +03:00 [INF] Executed DbCommand (55ms) [Parameters=[@__symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__symbol_0
2022-05-12 01:07:01.153 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.BalanceSheet.
2022-05-12 01:07:01.162 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [b].[Symbol], [b].[ExistInApi], [b].[LastApiRefresh], [b].[LastLocalRefresh]
FROM [BalanceSheets] AS [b]
WHERE [b].[Symbol] = @__entity_Symbol_0
2022-05-12 01:07:01.163 +03:00 [INF] Entity does not exist. Adding to DB.
2022-05-12 01:07:01.178 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = Boolean), @p2='?' (DbType = DateTime2), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [BalanceSheets] ([Symbol], [ExistInApi], [LastApiRefresh], [LastLocalRefresh])
VALUES (@p0, @p1, @p2, @p3);
2022-05-12 01:07:01.322 +03:00 [INF] Executed DbCommand (138ms) [Parameters=[@p4='?' (DbType = Int64), @p5='?' (DbType = Double), @p6='?' (DbType = Double), @p7='?' (DbType = Double), @p8='?' (DbType = Double), @p9='?' (DbType = Int64), @p10='?' (DbType = Int64), @p11='?' (DbType = Int64), @p12='?' (DbType = Double), @p13='?' (DbType = Int64), @p14='?' (DbType = Int64), @p15='?' (DbType = DateTime2), @p16='?' (DbType = Double), @p17='?' (DbType = Double), @p18='?' (DbType = Double), @p19='?' (DbType = Double), @p20='?' (DbType = Int64), @p21='?' (DbType = Double), @p22='?' (DbType = Int64), @p23='?' (DbType = Double), @p24='?' (DbType = Double), @p25='?' (DbType = Double), @p26='?' (DbType = Double), @p27='?' (DbType = Double), @p28='?' (DbType = Int64), @p29='?' (Size = 4000), @p30='?' (DbType = Double), @p31='?' (DbType = Double), @p32='?' (DbType = Double), @p33='?' (DbType = Double), @p34='?' (Size = 450), @p35='?' (DbType = Double), @p36='?' (DbType = Double), @p37='?' (DbType = Double), @p38='?' (DbType = Double), @p39='?' (DbType = Double), @p40='?' (DbType = Double), @p41='?' (DbType = Double), @p42='?' (DbType = Double), @p43='?' (DbType = Int64), @p44='?' (DbType = Double), @p45='?' (DbType = Double), @p46='?' (DbType = Double), @p47='?' (DbType = Double), @p48='?' (DbType = Int64), @p49='?' (DbType = Int64), @p50='?' (DbType = Int64), @p51='?' (DbType = Double), @p52='?' (DbType = Int64), @p53='?' (DbType = Int64), @p54='?' (DbType = DateTime2), @p55='?' (DbType = Double), @p56='?' (DbType = Double), @p57='?' (DbType = Double), @p58='?' (DbType = Double), @p59='?' (DbType = Int64), @p60='?' (DbType = Double), @p61='?' (DbType = Int64), @p62='?' (DbType = Double), @p63='?' (DbType = Double), @p64='?' (DbType = Double), @p65='?' (DbType = Double), @p66='?' (DbType = Double), @p67='?' (DbType = Int64), @p68='?' (Size = 4000), @p69='?' (DbType = Double), @p70='?' (DbType = Double), @p71='?' (DbType = Double), @p72='?' (DbType = Double), @p73='?' (Size = 450), @p74='?' (DbType = Double), @p75='?' (DbType = Double), @p76='?' (DbType = Double), @p77='?' (DbType = Double), @p78='?' (DbType = Double), @p79='?' (DbType = Double), @p80='?' (DbType = Double), @p81='?' (DbType = Double), @p82='?' (DbType = Int64), @p83='?' (DbType = Double), @p84='?' (DbType = Double), @p85='?' (DbType = Double), @p86='?' (DbType = Double), @p87='?' (DbType = Int64), @p88='?' (DbType = Int64), @p89='?' (DbType = Int64), @p90='?' (DbType = Double), @p91='?' (DbType = Int64), @p92='?' (DbType = Int64), @p93='?' (DbType = DateTime2), @p94='?' (DbType = Double), @p95='?' (DbType = Double), @p96='?' (DbType = Double), @p97='?' (DbType = Double), @p98='?' (DbType = Int64), @p99='?' (DbType = Double), @p100='?' (DbType = Int64), @p101='?' (DbType = Double), @p102='?' (DbType = Double), @p103='?' (DbType = Double), @p104='?' (DbType = Double), @p105='?' (DbType = Double), @p106='?' (DbType = Int64), @p107='?' (Size = 4000), @p108='?' (DbType = Double), @p109='?' (DbType = Double), @p110='?' (DbType = Double), @p111='?' (DbType = Double), @p112='?' (Size = 450), @p113='?' (DbType = Double), @p114='?' (DbType = Double), @p115='?' (DbType = Double), @p116='?' (DbType = Double), @p117='?' (DbType = Double), @p118='?' (DbType = Double), @p119='?' (DbType = Double), @p120='?' (DbType = Double), @p121='?' (DbType = Int64), @p122='?' (DbType = Double), @p123='?' (DbType = Double), @p124='?' (DbType = Double), @p125='?' (DbType = Double), @p126='?' (DbType = Int64), @p127='?' (DbType = Int64), @p128='?' (DbType = Int64), @p129='?' (DbType = Double), @p130='?' (DbType = Int64), @p131='?' (DbType = Int64), @p132='?' (DbType = DateTime2), @p133='?' (DbType = Double), @p134='?' (DbType = Double), @p135='?' (DbType = Double), @p136='?' (DbType = Double), @p137='?' (DbType = Int64), @p138='?' (DbType = Double), @p139='?' (DbType = Int64), @p140='?' (DbType = Double), @p141='?' (DbType = Double), @p142='?' (DbType = Double), @p143='?' (DbType = Double), @p144='?' (DbType = Double), @p145='?' (DbType = Int64), @p146='?' (Size = 4000), @p147='?' (DbType = Double), @p148='?' (DbType = Double), @p149='?' (DbType = Double), @p150='?' (DbType = Double), @p151='?' (Size = 450), @p152='?' (DbType = Double), @p153='?' (DbType = Double), @p154='?' (DbType = Double), @p155='?' (DbType = Double), @p156='?' (DbType = Double), @p157='?' (DbType = Double), @p158='?' (DbType = Double), @p159='?' (DbType = Double), @p160='?' (DbType = Int64), @p161='?' (DbType = Double), @p162='?' (DbType = Double), @p163='?' (DbType = Double), @p164='?' (DbType = Double), @p165='?' (DbType = Int64), @p166='?' (DbType = Int64), @p167='?' (DbType = Int64), @p168='?' (DbType = Double), @p169='?' (DbType = Int64), @p170='?' (DbType = Int64), @p171='?' (DbType = DateTime2), @p172='?' (DbType = Double), @p173='?' (DbType = Double), @p174='?' (DbType = Double), @p175='?' (DbType = Double), @p176='?' (DbType = Int64), @p177='?' (DbType = Double), @p178='?' (DbType = Int64), @p179='?' (DbType = Double), @p180='?' (DbType = Double), @p181='?' (DbType = Double), @p182='?' (DbType = Double), @p183='?' (DbType = Double), @p184='?' (DbType = Int64), @p185='?' (Size = 4000), @p186='?' (DbType = Double), @p187='?' (DbType = Double), @p188='?' (DbType = Double), @p189='?' (DbType = Double), @p190='?' (Size = 450), @p191='?' (DbType = Double), @p192='?' (DbType = Double), @p193='?' (DbType = Double), @p194='?' (DbType = Double), @p195='?' (DbType = Double), @p196='?' (DbType = Double), @p197='?' (DbType = Double), @p198='?' (DbType = Double), @p199='?' (DbType = Int64), @p200='?' (DbType = Double), @p201='?' (DbType = Double), @p202='?' (DbType = Double), @p203='?' (DbType = Double), @p204='?' (DbType = Int64), @p205='?' (DbType = Int64), @p206='?' (DbType = Int64), @p207='?' (DbType = Double), @p208='?' (DbType = Int64), @p209='?' (DbType = Int64), @p210='?' (DbType = DateTime2), @p211='?' (DbType = Double), @p212='?' (DbType = Double), @p213='?' (DbType = Double), @p214='?' (DbType = Double), @p215='?' (DbType = Int64), @p216='?' (DbType = Double), @p217='?' (DbType = Int64), @p218='?' (DbType = Double), @p219='?' (DbType = Double), @p220='?' (DbType = Double), @p221='?' (DbType = Double), @p222='?' (DbType = Double), @p223='?' (DbType = Int64), @p224='?' (Size = 4000), @p225='?' (DbType = Double), @p226='?' (DbType = Double), @p227='?' (DbType = Double), @p228='?' (DbType = Double), @p229='?' (Size = 450), @p230='?' (DbType = Double), @p231='?' (DbType = Double), @p232='?' (DbType = Double), @p233='?' (DbType = Double), @p234='?' (DbType = Double), @p235='?' (DbType = Double), @p236='?' (DbType = Double), @p237='?' (DbType = Double), @p238='?' (DbType = Int64), @p239='?' (DbType = Double), @p240='?' (DbType = Double), @p241='?' (DbType = Double), @p242='?' (DbType = Double), @p243='?' (DbType = Int64), @p244='?' (DbType = Int64), @p245='?' (DbType = Int64), @p246='?' (DbType = Double), @p247='?' (DbType = Int64), @p248='?' (DbType = Int64), @p249='?' (DbType = DateTime2), @p250='?' (DbType = Double), @p251='?' (DbType = Double), @p252='?' (DbType = Double), @p253='?' (DbType = Double), @p254='?' (DbType = Int64), @p255='?' (DbType = Double), @p256='?' (DbType = Int64), @p257='?' (DbType = Double), @p258='?' (DbType = Double), @p259='?' (DbType = Double), @p260='?' (DbType = Double), @p261='?' (DbType = Double), @p262='?' (DbType = Int64), @p263='?' (Size = 4000), @p264='?' (DbType = Double), @p265='?' (DbType = Double), @p266='?' (DbType = Double), @p267='?' (DbType = Double), @p268='?' (Size = 450), @p269='?' (DbType = Double), @p270='?' (DbType = Double), @p271='?' (DbType = Double), @p272='?' (DbType = Double), @p273='?' (DbType = Double), @p274='?' (DbType = Double), @p275='?' (DbType = Double), @p276='?' (DbType = Double), @p277='?' (DbType = Int64), @p278='?' (DbType = Double), @p279='?' (DbType = Double), @p280='?' (DbType = Double), @p281='?' (DbType = Double), @p282='?' (DbType = Int64), @p283='?' (DbType = Int64), @p284='?' (DbType = Int64), @p285='?' (DbType = Double), @p286='?' (DbType = Int64), @p287='?' (DbType = Int64), @p288='?' (DbType = DateTime2), @p289='?' (DbType = Double), @p290='?' (DbType = Double), @p291='?' (DbType = Double), @p292='?' (DbType = Double), @p293='?' (DbType = Int64), @p294='?' (DbType = Double), @p295='?' (DbType = Int64), @p296='?' (DbType = Double), @p297='?' (DbType = Double), @p298='?' (DbType = Double), @p299='?' (DbType = Double), @p300='?' (DbType = Double), @p301='?' (DbType = Int64), @p302='?' (Size = 4000), @p303='?' (DbType = Double), @p304='?' (DbType = Double), @p305='?' (DbType = Double), @p306='?' (DbType = Double), @p307='?' (Size = 450), @p308='?' (DbType = Double), @p309='?' (DbType = Double), @p310='?' (DbType = Double), @p311='?' (DbType = Double), @p312='?' (DbType = Double), @p313='?' (DbType = Double), @p314='?' (DbType = Double), @p315='?' (DbType = Double), @p316='?' (DbType = Int64), @p317='?' (DbType = Double), @p318='?' (DbType = Double), @p319='?' (DbType = Double), @p320='?' (DbType = Double), @p321='?' (DbType = Int64), @p322='?' (DbType = Int64), @p323='?' (DbType = Int64), @p324='?' (DbType = Double), @p325='?' (DbType = Int64), @p326='?' (DbType = Int64), @p327='?' (DbType = DateTime2), @p328='?' (DbType = Double), @p329='?' (DbType = Double), @p330='?' (DbType = Double), @p331='?' (DbType = Double), @p332='?' (DbType = Int64), @p333='?' (DbType = Double), @p334='?' (DbType = Int64), @p335='?' (DbType = Double), @p336='?' (DbType = Double), @p337='?' (DbType = Double), @p338='?' (DbType = Double), @p339='?' (DbType = Double), @p340='?' (DbType = Int64), @p341='?' (Size = 4000), @p342='?' (DbType = Double), @p343='?' (DbType = Double), @p344='?' (DbType = Double), @p345='?' (DbType = Double), @p346='?' (Size = 450), @p347='?' (DbType = Double), @p348='?' (DbType = Double), @p349='?' (DbType = Double), @p350='?' (DbType = Double), @p351='?' (DbType = Double), @p352='?' (DbType = Double), @p353='?' (DbType = Double), @p354='?' (DbType = Double), @p355='?' (DbType = Int64), @p356='?' (DbType = Double), @p357='?' (DbType = Double), @p358='?' (DbType = Double), @p359='?' (DbType = Double), @p360='?' (DbType = Int64), @p361='?' (DbType = Int64), @p362='?' (DbType = Int64), @p363='?' (DbType = Double), @p364='?' (DbType = Int64), @p365='?' (DbType = Int64), @p366='?' (DbType = DateTime2), @p367='?' (DbType = Double), @p368='?' (DbType = Double), @p369='?' (DbType = Double), @p370='?' (DbType = Double), @p371='?' (DbType = Int64), @p372='?' (DbType = Double), @p373='?' (DbType = Int64), @p374='?' (DbType = Double), @p375='?' (DbType = Double), @p376='?' (DbType = Double), @p377='?' (DbType = Double), @p378='?' (DbType = Double), @p379='?' (DbType = Int64), @p380='?' (Size = 4000), @p381='?' (DbType = Double), @p382='?' (DbType = Double), @p383='?' (DbType = Double), @p384='?' (DbType = Double), @p385='?' (Size = 450), @p386='?' (DbType = Double), @p387='?' (DbType = Double), @p388='?' (DbType = Double), @p389='?' (DbType = Double), @p390='?' (DbType = Double), @p391='?' (DbType = Double), @p392='?' (DbType = Double), @p393='?' (DbType = Double), @p394='?' (DbType = Int64), @p395='?' (DbType = Double), @p396='?' (DbType = Double), @p397='?' (DbType = Double), @p398='?' (DbType = Double), @p399='?' (DbType = Int64), @p400='?' (DbType = Int64), @p401='?' (DbType = Int64), @p402='?' (DbType = Double), @p403='?' (DbType = Int64), @p404='?' (DbType = Int64), @p405='?' (DbType = DateTime2), @p406='?' (DbType = Double), @p407='?' (DbType = Double), @p408='?' (DbType = Double), @p409='?' (DbType = Double), @p410='?' (DbType = Int64), @p411='?' (DbType = Double), @p412='?' (DbType = Int64), @p413='?' (DbType = Double), @p414='?' (DbType = Double), @p415='?' (DbType = Double), @p416='?' (DbType = Double), @p417='?' (DbType = Double), @p418='?' (DbType = Int64), @p419='?' (Size = 4000), @p420='?' (DbType = Double), @p421='?' (DbType = Double), @p422='?' (DbType = Double), @p423='?' (DbType = Double), @p424='?' (Size = 450), @p425='?' (DbType = Double), @p426='?' (DbType = Double), @p427='?' (DbType = Double), @p428='?' (DbType = Double), @p429='?' (DbType = Double), @p430='?' (DbType = Double), @p431='?' (DbType = Double), @p432='?' (DbType = Double), @p433='?' (DbType = Int64), @p434='?' (DbType = Double), @p435='?' (DbType = Double), @p436='?' (DbType = Double), @p437='?' (DbType = Double), @p438='?' (DbType = Int64), @p439='?' (DbType = Int64), @p440='?' (DbType = Int64), @p441='?' (DbType = Double), @p442='?' (DbType = Int64), @p443='?' (DbType = Int64), @p444='?' (DbType = DateTime2), @p445='?' (DbType = Double), @p446='?' (DbType = Double), @p447='?' (DbType = Double), @p448='?' (DbType = Double), @p449='?' (DbType = Int64), @p450='?' (DbType = Double), @p451='?' (DbType = Int64), @p452='?' (DbType = Double), @p453='?' (DbType = Double), @p454='?' (DbType = Double), @p455='?' (DbType = Double), @p456='?' (DbType = Double), @p457='?' (DbType = Int64), @p458='?' (Size = 4000), @p459='?' (DbType = Double), @p460='?' (DbType = Double), @p461='?' (DbType = Double), @p462='?' (DbType = Double), @p463='?' (Size = 450), @p464='?' (DbType = Double), @p465='?' (DbType = Double), @p466='?' (DbType = Double), @p467='?' (DbType = Double), @p468='?' (DbType = Double), @p469='?' (DbType = Double), @p470='?' (DbType = Double), @p471='?' (DbType = Double), @p472='?' (DbType = Int64), @p473='?' (DbType = Double), @p474='?' (DbType = Double), @p475='?' (DbType = Double), @p476='?' (DbType = Double), @p477='?' (DbType = Int64), @p478='?' (DbType = Int64), @p479='?' (DbType = Int64), @p480='?' (DbType = Double), @p481='?' (DbType = Int64), @p482='?' (DbType = Int64), @p483='?' (DbType = DateTime2), @p484='?' (DbType = Double), @p485='?' (DbType = Double), @p486='?' (DbType = Double), @p487='?' (DbType = Double), @p488='?' (DbType = Int64), @p489='?' (DbType = Double), @p490='?' (DbType = Int64), @p491='?' (DbType = Double), @p492='?' (DbType = Double), @p493='?' (DbType = Double), @p494='?' (DbType = Double), @p495='?' (DbType = Double), @p496='?' (DbType = Int64), @p497='?' (Size = 4000), @p498='?' (DbType = Double), @p499='?' (DbType = Double), @p500='?' (DbType = Double), @p501='?' (DbType = Double), @p502='?' (Size = 450), @p503='?' (DbType = Double), @p504='?' (DbType = Double), @p505='?' (DbType = Double), @p506='?' (DbType = Double), @p507='?' (DbType = Double), @p508='?' (DbType = Double), @p509='?' (DbType = Double), @p510='?' (DbType = Double), @p511='?' (DbType = Int64), @p512='?' (DbType = Double), @p513='?' (DbType = Double), @p514='?' (DbType = Double), @p515='?' (DbType = Double), @p516='?' (DbType = Int64), @p517='?' (DbType = Int64), @p518='?' (DbType = Int64), @p519='?' (DbType = Double), @p520='?' (DbType = Int64), @p521='?' (DbType = Int64), @p522='?' (DbType = DateTime2), @p523='?' (DbType = Double), @p524='?' (DbType = Double), @p525='?' (DbType = Double), @p526='?' (DbType = Double), @p527='?' (DbType = Int64), @p528='?' (DbType = Double), @p529='?' (DbType = Int64), @p530='?' (DbType = Double), @p531='?' (DbType = Double), @p532='?' (DbType = Double), @p533='?' (DbType = Double), @p534='?' (DbType = Double), @p535='?' (DbType = Int64), @p536='?' (Size = 4000), @p537='?' (DbType = Double), @p538='?' (DbType = Double), @p539='?' (DbType = Double), @p540='?' (DbType = Double), @p541='?' (Size = 450), @p542='?' (DbType = Double), @p543='?' (DbType = Double), @p544='?' (DbType = Double), @p545='?' (DbType = Double), @p546='?' (DbType = Double), @p547='?' (DbType = Double), @p548='?' (DbType = Double), @p549='?' (DbType = Double), @p550='?' (DbType = Int64), @p551='?' (DbType = Double), @p552='?' (DbType = Double), @p553='?' (DbType = Double), @p554='?' (DbType = Double), @p555='?' (DbType = Int64), @p556='?' (DbType = Int64), @p557='?' (DbType = Int64), @p558='?' (DbType = Double), @p559='?' (DbType = Int64), @p560='?' (DbType = Int64), @p561='?' (DbType = DateTime2), @p562='?' (DbType = Double), @p563='?' (DbType = Double), @p564='?' (DbType = Double), @p565='?' (DbType = Double), @p566='?' (DbType = Int64), @p567='?' (DbType = Double), @p568='?' (DbType = Int64), @p569='?' (DbType = Double), @p570='?' (DbType = Double), @p571='?' (DbType = Double), @p572='?' (DbType = Double), @p573='?' (DbType = Double), @p574='?' (DbType = Int64), @p575='?' (Size = 4000), @p576='?' (DbType = Double), @p577='?' (DbType = Double), @p578='?' (DbType = Double), @p579='?' (DbType = Double), @p580='?' (Size = 450), @p581='?' (DbType = Double), @p582='?' (DbType = Double), @p583='?' (DbType = Double), @p584='?' (DbType = Double), @p585='?' (DbType = Double), @p586='?' (DbType = Double), @p587='?' (DbType = Double), @p588='?' (DbType = Double), @p589='?' (DbType = Int64), @p590='?' (DbType = Double), @p591='?' (DbType = Double), @p592='?' (DbType = Double), @p593='?' (DbType = Double), @p594='?' (DbType = Int64), @p595='?' (DbType = Int64), @p596='?' (DbType = Int64), @p597='?' (DbType = Double), @p598='?' (DbType = Int64), @p599='?' (DbType = Int64), @p600='?' (DbType = DateTime2), @p601='?' (DbType = Double), @p602='?' (DbType = Double), @p603='?' (DbType = Double), @p604='?' (DbType = Double), @p605='?' (DbType = Int64), @p606='?' (DbType = Double), @p607='?' (DbType = Int64), @p608='?' (DbType = Double), @p609='?' (DbType = Double), @p610='?' (DbType = Double), @p611='?' (DbType = Double), @p612='?' (DbType = Double), @p613='?' (DbType = Int64), @p614='?' (Size = 4000), @p615='?' (DbType = Double), @p616='?' (DbType = Double), @p617='?' (DbType = Double), @p618='?' (DbType = Double), @p619='?' (Size = 450), @p620='?' (DbType = Double), @p621='?' (DbType = Double), @p622='?' (DbType = Double), @p623='?' (DbType = Double), @p624='?' (DbType = Double), @p625='?' (DbType = Double), @p626='?' (DbType = Double), @p627='?' (DbType = Double), @p628='?' (DbType = Int64), @p629='?' (DbType = Double), @p630='?' (DbType = Double), @p631='?' (DbType = Double), @p632='?' (DbType = Double), @p633='?' (DbType = Int64), @p634='?' (DbType = Int64), @p635='?' (DbType = Int64), @p636='?' (DbType = Double), @p637='?' (DbType = Int64), @p638='?' (DbType = Int64), @p639='?' (DbType = DateTime2), @p640='?' (DbType = Double), @p641='?' (DbType = Double), @p642='?' (DbType = Double), @p643='?' (DbType = Double), @p644='?' (DbType = Int64), @p645='?' (DbType = Double), @p646='?' (DbType = Int64), @p647='?' (DbType = Double), @p648='?' (DbType = Double), @p649='?' (DbType = Double), @p650='?' (DbType = Double), @p651='?' (DbType = Double), @p652='?' (DbType = Int64), @p653='?' (Size = 4000), @p654='?' (DbType = Double), @p655='?' (DbType = Double), @p656='?' (DbType = Double), @p657='?' (DbType = Double), @p658='?' (Size = 450), @p659='?' (DbType = Double), @p660='?' (DbType = Double), @p661='?' (DbType = Double), @p662='?' (DbType = Double), @p663='?' (DbType = Double), @p664='?' (DbType = Double), @p665='?' (DbType = Double), @p666='?' (DbType = Double), @p667='?' (DbType = Int64), @p668='?' (DbType = Double), @p669='?' (DbType = Double), @p670='?' (DbType = Double), @p671='?' (DbType = Double), @p672='?' (DbType = Int64), @p673='?' (DbType = Int64), @p674='?' (DbType = Int64), @p675='?' (DbType = Double), @p676='?' (DbType = Int64), @p677='?' (DbType = Int64), @p678='?' (DbType = DateTime2), @p679='?' (DbType = Double), @p680='?' (DbType = Double), @p681='?' (DbType = Double), @p682='?' (DbType = Double), @p683='?' (DbType = Int64), @p684='?' (DbType = Double), @p685='?' (DbType = Int64), @p686='?' (DbType = Double), @p687='?' (DbType = Double), @p688='?' (DbType = Double), @p689='?' (DbType = Double), @p690='?' (DbType = Double), @p691='?' (DbType = Int64), @p692='?' (Size = 4000), @p693='?' (DbType = Double), @p694='?' (DbType = Double), @p695='?' (DbType = Double), @p696='?' (DbType = Double), @p697='?' (Size = 450), @p698='?' (DbType = Double), @p699='?' (DbType = Double), @p700='?' (DbType = Double), @p701='?' (DbType = Double), @p702='?' (DbType = Double), @p703='?' (DbType = Double), @p704='?' (DbType = Double), @p705='?' (DbType = Double), @p706='?' (DbType = Int64), @p707='?' (DbType = Double), @p708='?' (DbType = Double), @p709='?' (DbType = Double), @p710='?' (DbType = Double), @p711='?' (DbType = Int64), @p712='?' (DbType = Int64), @p713='?' (DbType = Int64), @p714='?' (DbType = Double), @p715='?' (DbType = Int64), @p716='?' (DbType = Int64), @p717='?' (DbType = DateTime2), @p718='?' (DbType = Double), @p719='?' (DbType = Double), @p720='?' (DbType = Double), @p721='?' (DbType = Double), @p722='?' (DbType = Int64), @p723='?' (DbType = Double), @p724='?' (DbType = Int64), @p725='?' (DbType = Double), @p726='?' (DbType = Double), @p727='?' (DbType = Double), @p728='?' (DbType = Double), @p729='?' (DbType = Double), @p730='?' (DbType = Int64), @p731='?' (Size = 4000), @p732='?' (DbType = Double), @p733='?' (DbType = Double), @p734='?' (DbType = Double), @p735='?' (DbType = Double), @p736='?' (Size = 450), @p737='?' (DbType = Double), @p738='?' (DbType = Double), @p739='?' (DbType = Double), @p740='?' (DbType = Double), @p741='?' (DbType = Double), @p742='?' (DbType = Double), @p743='?' (DbType = Double), @p744='?' (DbType = Double), @p745='?' (DbType = Int64), @p746='?' (DbType = Double), @p747='?' (DbType = Double), @p748='?' (DbType = Double), @p749='?' (DbType = Double), @p750='?' (DbType = Int64), @p751='?' (DbType = Int64), @p752='?' (DbType = Int64), @p753='?' (DbType = Double), @p754='?' (DbType = Int64), @p755='?' (DbType = Int64), @p756='?' (DbType = DateTime2), @p757='?' (DbType = Double), @p758='?' (DbType = Double), @p759='?' (DbType = Double), @p760='?' (DbType = Double), @p761='?' (DbType = Int64), @p762='?' (DbType = Double), @p763='?' (DbType = Int64), @p764='?' (DbType = Double), @p765='?' (DbType = Double), @p766='?' (DbType = Double), @p767='?' (DbType = Double), @p768='?' (DbType = Double), @p769='?' (DbType = Int64), @p770='?' (Size = 4000), @p771='?' (DbType = Double), @p772='?' (DbType = Double), @p773='?' (DbType = Double), @p774='?' (DbType = Double), @p775='?' (Size = 450), @p776='?' (DbType = Double), @p777='?' (DbType = Double), @p778='?' (DbType = Double), @p779='?' (DbType = Double), @p780='?' (DbType = Double), @p781='?' (DbType = Double), @p782='?' (DbType = Double), @p783='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
DECLARE @inserted0 TABLE ([Id] int, [_Position] [int]);
MERGE [BalanceSheetAnnualReport] USING (
VALUES (@p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21, @p22, @p23, @p24, @p25, @p26, @p27, @p28, @p29, @p30, @p31, @p32, @p33, @p34, @p35, @p36, @p37, @p38, @p39, @p40, @p41, @p42, 0),
(@p43, @p44, @p45, @p46, @p47, @p48, @p49, @p50, @p51, @p52, @p53, @p54, @p55, @p56, @p57, @p58, @p59, @p60, @p61, @p62, @p63, @p64, @p65, @p66, @p67, @p68, @p69, @p70, @p71, @p72, @p73, @p74, @p75, @p76, @p77, @p78, @p79, @p80, @p81, 1),
(@p82, @p83, @p84, @p85, @p86, @p87, @p88, @p89, @p90, @p91, @p92, @p93, @p94, @p95, @p96, @p97, @p98, @p99, @p100, @p101, @p102, @p103, @p104, @p105, @p106, @p107, @p108, @p109, @p110, @p111, @p112, @p113, @p114, @p115, @p116, @p117, @p118, @p119, @p120, 2),
(@p121, @p122, @p123, @p124, @p125, @p126, @p127, @p128, @p129, @p130, @p131, @p132, @p133, @p134, @p135, @p136, @p137, @p138, @p139, @p140, @p141, @p142, @p143, @p144, @p145, @p146, @p147, @p148, @p149, @p150, @p151, @p152, @p153, @p154, @p155, @p156, @p157, @p158, @p159, 3),
(@p160, @p161, @p162, @p163, @p164, @p165, @p166, @p167, @p168, @p169, @p170, @p171, @p172, @p173, @p174, @p175, @p176, @p177, @p178, @p179, @p180, @p181, @p182, @p183, @p184, @p185, @p186, @p187, @p188, @p189, @p190, @p191, @p192, @p193, @p194, @p195, @p196, @p197, @p198, 4)) AS i ([AccumulatedDepreciationAmortizationPPE], [CapitalLeaseObligations], [CashAndCashEquivalentsAtCarryingValue], [CashAndShortTermInvestments], [CommonStock], [CommonStockSharesOutstanding], [CurrentAccountsPayable], [CurrentDebt], [CurrentLongTermDebt], [CurrentNetReceivables], [DeferredRevenue], [FiscalDateEnding], [Goodwill], [IntangibleAssets], [IntangibleAssetsExcludingGoodwill], [Inventory], [Investments], [LongTermDebt], [LongTermDebtNoncurrent], [LongTermInvestments], [OtherCurrentAssets], [OtherCurrentLiabilities], [OtherNonCurrentAssets], [OtherNonCurrentLiabilities], [PropertyPlantEquipment], [ReportedCurrency], [RetainedEarnings], [ShortLongTermDebtTotal], [ShortTermDebt], [ShortTermInvestments], [Symbol], [TotalAssets], [TotalCurrentAssets], [TotalCurrentLiabilities], [TotalLiabilities], [TotalNonCurrentAssets], [TotalNonCurrentLiabilities], [TotalShareholderEquity], [TreasuryStock], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([AccumulatedDepreciationAmortizationPPE], [CapitalLeaseObligations], [CashAndCashEquivalentsAtCarryingValue], [CashAndShortTermInvestments], [CommonStock], [CommonStockSharesOutstanding], [CurrentAccountsPayable], [CurrentDebt], [CurrentLongTermDebt], [CurrentNetReceivables], [DeferredRevenue], [FiscalDateEnding], [Goodwill], [IntangibleAssets], [IntangibleAssetsExcludingGoodwill], [Inventory], [Investments], [LongTermDebt], [LongTermDebtNoncurrent], [LongTermInvestments], [OtherCurrentAssets], [OtherCurrentLiabilities], [OtherNonCurrentAssets], [OtherNonCurrentLiabilities], [PropertyPlantEquipment], [ReportedCurrency], [RetainedEarnings], [ShortLongTermDebtTotal], [ShortTermDebt], [ShortTermInvestments], [Symbol], [TotalAssets], [TotalCurrentAssets], [TotalCurrentLiabilities], [TotalLiabilities], [TotalNonCurrentAssets], [TotalNonCurrentLiabilities], [TotalShareholderEquity], [TreasuryStock])
VALUES (i.[AccumulatedDepreciationAmortizationPPE], i.[CapitalLeaseObligations], i.[CashAndCashEquivalentsAtCarryingValue], i.[CashAndShortTermInvestments], i.[CommonStock], i.[CommonStockSharesOutstanding], i.[CurrentAccountsPayable], i.[CurrentDebt], i.[CurrentLongTermDebt], i.[CurrentNetReceivables], i.[DeferredRevenue], i.[FiscalDateEnding], i.[Goodwill], i.[IntangibleAssets], i.[IntangibleAssetsExcludingGoodwill], i.[Inventory], i.[Investments], i.[LongTermDebt], i.[LongTermDebtNoncurrent], i.[LongTermInvestments], i.[OtherCurrentAssets], i.[OtherCurrentLiabilities], i.[OtherNonCurrentAssets], i.[OtherNonCurrentLiabilities], i.[PropertyPlantEquipment], i.[ReportedCurrency], i.[RetainedEarnings], i.[ShortLongTermDebtTotal], i.[ShortTermDebt], i.[ShortTermInvestments], i.[Symbol], i.[TotalAssets], i.[TotalCurrentAssets], i.[TotalCurrentLiabilities], i.[TotalLiabilities], i.[TotalNonCurrentAssets], i.[TotalNonCurrentLiabilities], i.[TotalShareholderEquity], i.[TreasuryStock])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted0;

SELECT [i].[Id] FROM @inserted0 i
ORDER BY [i].[_Position];

DECLARE @inserted5 TABLE ([Id] int, [_Position] [int]);
MERGE [BalanceSheetQuarterlyReports] USING (
VALUES (@p199, @p200, @p201, @p202, @p203, @p204, @p205, @p206, @p207, @p208, @p209, @p210, @p211, @p212, @p213, @p214, @p215, @p216, @p217, @p218, @p219, @p220, @p221, @p222, @p223, @p224, @p225, @p226, @p227, @p228, @p229, @p230, @p231, @p232, @p233, @p234, @p235, @p236, @p237, 0),
(@p238, @p239, @p240, @p241, @p242, @p243, @p244, @p245, @p246, @p247, @p248, @p249, @p250, @p251, @p252, @p253, @p254, @p255, @p256, @p257, @p258, @p259, @p260, @p261, @p262, @p263, @p264, @p265, @p266, @p267, @p268, @p269, @p270, @p271, @p272, @p273, @p274, @p275, @p276, 1),
(@p277, @p278, @p279, @p280, @p281, @p282, @p283, @p284, @p285, @p286, @p287, @p288, @p289, @p290, @p291, @p292, @p293, @p294, @p295, @p296, @p297, @p298, @p299, @p300, @p301, @p302, @p303, @p304, @p305, @p306, @p307, @p308, @p309, @p310, @p311, @p312, @p313, @p314, @p315, 2),
(@p316, @p317, @p318, @p319, @p320, @p321, @p322, @p323, @p324, @p325, @p326, @p327, @p328, @p329, @p330, @p331, @p332, @p333, @p334, @p335, @p336, @p337, @p338, @p339, @p340, @p341, @p342, @p343, @p344, @p345, @p346, @p347, @p348, @p349, @p350, @p351, @p352, @p353, @p354, 3),
(@p355, @p356, @p357, @p358, @p359, @p360, @p361, @p362, @p363, @p364, @p365, @p366, @p367, @p368, @p369, @p370, @p371, @p372, @p373, @p374, @p375, @p376, @p377, @p378, @p379, @p380, @p381, @p382, @p383, @p384, @p385, @p386, @p387, @p388, @p389, @p390, @p391, @p392, @p393, 4),
(@p394, @p395, @p396, @p397, @p398, @p399, @p400, @p401, @p402, @p403, @p404, @p405, @p406, @p407, @p408, @p409, @p410, @p411, @p412, @p413, @p414, @p415, @p416, @p417, @p418, @p419, @p420, @p421, @p422, @p423, @p424, @p425, @p426, @p427, @p428, @p429, @p430, @p431, @p432, 5),
(@p433, @p434, @p435, @p436, @p437, @p438, @p439, @p440, @p441, @p442, @p443, @p444, @p445, @p446, @p447, @p448, @p449, @p450, @p451, @p452, @p453, @p454, @p455, @p456, @p457, @p458, @p459, @p460, @p461, @p462, @p463, @p464, @p465, @p466, @p467, @p468, @p469, @p470, @p471, 6),
(@p472, @p473, @p474, @p475, @p476, @p477, @p478, @p479, @p480, @p481, @p482, @p483, @p484, @p485, @p486, @p487, @p488, @p489, @p490, @p491, @p492, @p493, @p494, @p495, @p496, @p497, @p498, @p499, @p500, @p501, @p502, @p503, @p504, @p505, @p506, @p507, @p508, @p509, @p510, 7),
(@p511, @p512, @p513, @p514, @p515, @p516, @p517, @p518, @p519, @p520, @p521, @p522, @p523, @p524, @p525, @p526, @p527, @p528, @p529, @p530, @p531, @p532, @p533, @p534, @p535, @p536, @p537, @p538, @p539, @p540, @p541, @p542, @p543, @p544, @p545, @p546, @p547, @p548, @p549, 8),
(@p550, @p551, @p552, @p553, @p554, @p555, @p556, @p557, @p558, @p559, @p560, @p561, @p562, @p563, @p564, @p565, @p566, @p567, @p568, @p569, @p570, @p571, @p572, @p573, @p574, @p575, @p576, @p577, @p578, @p579, @p580, @p581, @p582, @p583, @p584, @p585, @p586, @p587, @p588, 9),
(@p589, @p590, @p591, @p592, @p593, @p594, @p595, @p596, @p597, @p598, @p599, @p600, @p601, @p602, @p603, @p604, @p605, @p606, @p607, @p608, @p609, @p610, @p611, @p612, @p613, @p614, @p615, @p616, @p617, @p618, @p619, @p620, @p621, @p622, @p623, @p624, @p625, @p626, @p627, 10),
(@p628, @p629, @p630, @p631, @p632, @p633, @p634, @p635, @p636, @p637, @p638, @p639, @p640, @p641, @p642, @p643, @p644, @p645, @p646, @p647, @p648, @p649, @p650, @p651, @p652, @p653, @p654, @p655, @p656, @p657, @p658, @p659, @p660, @p661, @p662, @p663, @p664, @p665, @p666, 11),
(@p667, @p668, @p669, @p670, @p671, @p672, @p673, @p674, @p675, @p676, @p677, @p678, @p679, @p680, @p681, @p682, @p683, @p684, @p685, @p686, @p687, @p688, @p689, @p690, @p691, @p692, @p693, @p694, @p695, @p696, @p697, @p698, @p699, @p700, @p701, @p702, @p703, @p704, @p705, 12),
(@p706, @p707, @p708, @p709, @p710, @p711, @p712, @p713, @p714, @p715, @p716, @p717, @p718, @p719, @p720, @p721, @p722, @p723, @p724, @p725, @p726, @p727, @p728, @p729, @p730, @p731, @p732, @p733, @p734, @p735, @p736, @p737, @p738, @p739, @p740, @p741, @p742, @p743, @p744, 13),
(@p745, @p746, @p747, @p748, @p749, @p750, @p751, @p752, @p753, @p754, @p755, @p756, @p757, @p758, @p759, @p760, @p761, @p762, @p763, @p764, @p765, @p766, @p767, @p768, @p769, @p770, @p771, @p772, @p773, @p774, @p775, @p776, @p777, @p778, @p779, @p780, @p781, @p782, @p783, 14)) AS i ([AccumulatedDepreciationAmortizationPPE], [CapitalLeaseObligations], [CashAndCashEquivalentsAtCarryingValue], [CashAndShortTermInvestments], [CommonStock], [CommonStockSharesOutstanding], [CurrentAccountsPayable], [CurrentDebt], [CurrentLongTermDebt], [CurrentNetReceivables], [DeferredRevenue], [FiscalDateEnding], [Goodwill], [IntangibleAssets], [IntangibleAssetsExcludingGoodwill], [Inventory], [Investments], [LongTermDebt], [LongTermDebtNoncurrent], [LongTermInvestments], [OtherCurrentAssets], [OtherCurrentLiabilities], [OtherNonCurrentAssets], [OtherNonCurrentLiabilities], [PropertyPlantEquipment], [ReportedCurrency], [RetainedEarnings], [ShortLongTermDebtTotal], [ShortTermDebt], [ShortTermInvestments], [Symbol], [TotalAssets], [TotalCurrentAssets], [TotalCurrentLiabilities], [TotalLiabilities], [TotalNonCurrentAssets], [TotalNonCurrentLiabilities], [TotalShareholderEquity], [TreasuryStock], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([AccumulatedDepreciationAmortizationPPE], [CapitalLeaseObligations], [CashAndCashEquivalentsAtCarryingValue], [CashAndShortTermInvestments], [CommonStock], [CommonStockSharesOutstanding], [CurrentAccountsPayable], [CurrentDebt], [CurrentLongTermDebt], [CurrentNetReceivables], [DeferredRevenue], [FiscalDateEnding], [Goodwill], [IntangibleAssets], [IntangibleAssetsExcludingGoodwill], [Inventory], [Investments], [LongTermDebt], [LongTermDebtNoncurrent], [LongTermInvestments], [OtherCurrentAssets], [OtherCurrentLiabilities], [OtherNonCurrentAssets], [OtherNonCurrentLiabilities], [PropertyPlantEquipment], [ReportedCurrency], [RetainedEarnings], [ShortLongTermDebtTotal], [ShortTermDebt], [ShortTermInvestments], [Symbol], [TotalAssets], [TotalCurrentAssets], [TotalCurrentLiabilities], [TotalLiabilities], [TotalNonCurrentAssets], [TotalNonCurrentLiabilities], [TotalShareholderEquity], [TreasuryStock])
VALUES (i.[AccumulatedDepreciationAmortizationPPE], i.[CapitalLeaseObligations], i.[CashAndCashEquivalentsAtCarryingValue], i.[CashAndShortTermInvestments], i.[CommonStock], i.[CommonStockSharesOutstanding], i.[CurrentAccountsPayable], i.[CurrentDebt], i.[CurrentLongTermDebt], i.[CurrentNetReceivables], i.[DeferredRevenue], i.[FiscalDateEnding], i.[Goodwill], i.[IntangibleAssets], i.[IntangibleAssetsExcludingGoodwill], i.[Inventory], i.[Investments], i.[LongTermDebt], i.[LongTermDebtNoncurrent], i.[LongTermInvestments], i.[OtherCurrentAssets], i.[OtherCurrentLiabilities], i.[OtherNonCurrentAssets], i.[OtherNonCurrentLiabilities], i.[PropertyPlantEquipment], i.[ReportedCurrency], i.[RetainedEarnings], i.[ShortLongTermDebtTotal], i.[ShortTermDebt], i.[ShortTermInvestments], i.[Symbol], i.[TotalAssets], i.[TotalCurrentAssets], i.[TotalCurrentLiabilities], i.[TotalLiabilities], i.[TotalNonCurrentAssets], i.[TotalNonCurrentLiabilities], i.[TotalShareholderEquity], i.[TreasuryStock])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted5;

SELECT [i].[Id] FROM @inserted5 i
ORDER BY [i].[_Position];
2022-05-12 01:07:01.335 +03:00 [INF] AddOrUpdate run successful.
2022-05-12 01:07:08.525 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CashFlow with Symbol AUID
2022-05-12 01:07:08.529 +03:00 [INF] Generating URI for CASH_FLOW with params: symbol: AUID
2022-05-12 01:07:08.530 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=CASH_FLOW&symbol=AUID
2022-05-12 01:07:08.530 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=CASH_FLOW&symbol=AUID".
2022-05-12 01:07:09.016 +03:00 [INF] Response has success status code
2022-05-12 01:07:09.017 +03:00 [INF] Trying to deserialize response.
2022-05-12 01:07:09.018 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 01:07:09.028 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__symbol_0
2022-05-12 01:07:09.030 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.CashFlow.
2022-05-12 01:07:09.038 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[ExistInApi], [c].[LastApiRefresh], [c].[LastLocalRefresh]
FROM [CashFlows] AS [c]
WHERE [c].[Symbol] = @__entity_Symbol_0
2022-05-12 01:07:09.039 +03:00 [INF] Entity does not exist. Adding to DB.
2022-05-12 01:07:09.055 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = Boolean), @p2='?' (DbType = DateTime2), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [CashFlows] ([Symbol], [ExistInApi], [LastApiRefresh], [LastLocalRefresh])
VALUES (@p0, @p1, @p2, @p3);
2022-05-12 01:07:09.115 +03:00 [INF] Executed DbCommand (58ms) [Parameters=[@p4='?' (DbType = Double), @p5='?' (DbType = Double), @p6='?' (DbType = Int64), @p7='?' (DbType = Int64), @p8='?' (DbType = Int64), @p9='?' (DbType = Int64), @p10='?' (DbType = Int64), @p11='?' (DbType = Int64), @p12='?' (DbType = Int64), @p13='?' (DbType = Double), @p14='?' (DbType = Int64), @p15='?' (DbType = Double), @p16='?' (DbType = Int64), @p17='?' (Size = 4000), @p18='?' (DbType = Double), @p19='?' (DbType = Double), @p20='?' (DbType = Int64), @p21='?' (DbType = Int64), @p22='?' (DbType = Int64), @p23='?' (DbType = Int64), @p24='?' (DbType = Int64), @p25='?' (DbType = Int64), @p26='?' (DbType = Int64), @p27='?' (DbType = Int64), @p28='?' (DbType = Int64), @p29='?' (DbType = Double), @p30='?' (DbType = Int64), @p31='?' (DbType = Int64), @p32='?' (Size = 4000), @p33='?' (Size = 450), @p34='?' (DbType = Double), @p35='?' (DbType = Double), @p36='?' (DbType = Int64), @p37='?' (DbType = Int64), @p38='?' (DbType = Int64), @p39='?' (DbType = Int64), @p40='?' (DbType = Int64), @p41='?' (DbType = Int64), @p42='?' (DbType = Int64), @p43='?' (DbType = Double), @p44='?' (DbType = Int64), @p45='?' (DbType = Double), @p46='?' (DbType = Int64), @p47='?' (Size = 4000), @p48='?' (DbType = Double), @p49='?' (DbType = Double), @p50='?' (DbType = Int64), @p51='?' (DbType = Int64), @p52='?' (DbType = Int64), @p53='?' (DbType = Int64), @p54='?' (DbType = Int64), @p55='?' (DbType = Int64), @p56='?' (DbType = Int64), @p57='?' (DbType = Int64), @p58='?' (DbType = Int64), @p59='?' (DbType = Double), @p60='?' (DbType = Int64), @p61='?' (DbType = Int64), @p62='?' (Size = 4000), @p63='?' (Size = 450), @p64='?' (DbType = Double), @p65='?' (DbType = Double), @p66='?' (DbType = Int64), @p67='?' (DbType = Int64), @p68='?' (DbType = Int64), @p69='?' (DbType = Int64), @p70='?' (DbType = Int64), @p71='?' (DbType = Int64), @p72='?' (DbType = Int64), @p73='?' (DbType = Double), @p74='?' (DbType = Int64), @p75='?' (DbType = Double), @p76='?' (DbType = Int64), @p77='?' (Size = 4000), @p78='?' (DbType = Double), @p79='?' (DbType = Double), @p80='?' (DbType = Int64), @p81='?' (DbType = Int64), @p82='?' (DbType = Int64), @p83='?' (DbType = Int64), @p84='?' (DbType = Int64), @p85='?' (DbType = Int64), @p86='?' (DbType = Int64), @p87='?' (DbType = Int64), @p88='?' (DbType = Int64), @p89='?' (DbType = Double), @p90='?' (DbType = Int64), @p91='?' (DbType = Int64), @p92='?' (Size = 4000), @p93='?' (Size = 450), @p94='?' (DbType = Double), @p95='?' (DbType = Double), @p96='?' (DbType = Int64), @p97='?' (DbType = Int64), @p98='?' (DbType = Int64), @p99='?' (DbType = Int64), @p100='?' (DbType = Int64), @p101='?' (DbType = Int64), @p102='?' (DbType = Int64), @p103='?' (DbType = Double), @p104='?' (DbType = Int64), @p105='?' (DbType = Double), @p106='?' (DbType = Int64), @p107='?' (Size = 4000), @p108='?' (DbType = Double), @p109='?' (DbType = Double), @p110='?' (DbType = Int64), @p111='?' (DbType = Int64), @p112='?' (DbType = Int64), @p113='?' (DbType = Int64), @p114='?' (DbType = Int64), @p115='?' (DbType = Int64), @p116='?' (DbType = Int64), @p117='?' (DbType = Int64), @p118='?' (DbType = Int64), @p119='?' (DbType = Double), @p120='?' (DbType = Int64), @p121='?' (DbType = Int64), @p122='?' (Size = 4000), @p123='?' (Size = 450), @p124='?' (DbType = Double), @p125='?' (DbType = Double), @p126='?' (DbType = Int64), @p127='?' (DbType = Int64), @p128='?' (DbType = Int64), @p129='?' (DbType = Int64), @p130='?' (DbType = Int64), @p131='?' (DbType = Int64), @p132='?' (DbType = Int64), @p133='?' (DbType = Double), @p134='?' (DbType = Int64), @p135='?' (DbType = Double), @p136='?' (DbType = Int64), @p137='?' (Size = 4000), @p138='?' (DbType = Double), @p139='?' (DbType = Double), @p140='?' (DbType = Int64), @p141='?' (DbType = Int64), @p142='?' (DbType = Int64), @p143='?' (DbType = Int64), @p144='?' (DbType = Int64), @p145='?' (DbType = Int64), @p146='?' (DbType = Int64), @p147='?' (DbType = Int64), @p148='?' (DbType = Int64), @p149='?' (DbType = Double), @p150='?' (DbType = Int64), @p151='?' (DbType = Int64), @p152='?' (Size = 4000), @p153='?' (Size = 450), @p154='?' (DbType = Double), @p155='?' (DbType = Double), @p156='?' (DbType = Int64), @p157='?' (DbType = Int64), @p158='?' (DbType = Int64), @p159='?' (DbType = Int64), @p160='?' (DbType = Int64), @p161='?' (DbType = Int64), @p162='?' (DbType = Int64), @p163='?' (DbType = Double), @p164='?' (DbType = Int64), @p165='?' (DbType = Double), @p166='?' (DbType = Int64), @p167='?' (Size = 4000), @p168='?' (DbType = Double), @p169='?' (DbType = Double), @p170='?' (DbType = Int64), @p171='?' (DbType = Int64), @p172='?' (DbType = Int64), @p173='?' (DbType = Int64), @p174='?' (DbType = Int64), @p175='?' (DbType = Int64), @p176='?' (DbType = Int64), @p177='?' (DbType = Int64), @p178='?' (DbType = Int64), @p179='?' (DbType = Double), @p180='?' (DbType = Int64), @p181='?' (DbType = Int64), @p182='?' (Size = 4000), @p183='?' (Size = 450), @p184='?' (DbType = Double), @p185='?' (DbType = Double), @p186='?' (DbType = Int64), @p187='?' (DbType = Int64), @p188='?' (DbType = Int64), @p189='?' (DbType = Int64), @p190='?' (DbType = Int64), @p191='?' (DbType = Int64), @p192='?' (DbType = Int64), @p193='?' (DbType = Double), @p194='?' (DbType = Int64), @p195='?' (DbType = Double), @p196='?' (DbType = Int64), @p197='?' (Size = 4000), @p198='?' (DbType = Double), @p199='?' (DbType = Double), @p200='?' (DbType = Int64), @p201='?' (DbType = Int64), @p202='?' (DbType = Int64), @p203='?' (DbType = Int64), @p204='?' (DbType = Int64), @p205='?' (DbType = Int64), @p206='?' (DbType = Int64), @p207='?' (DbType = Int64), @p208='?' (DbType = Int64), @p209='?' (DbType = Double), @p210='?' (DbType = Int64), @p211='?' (DbType = Int64), @p212='?' (Size = 4000), @p213='?' (Size = 450), @p214='?' (DbType = Double), @p215='?' (DbType = Double), @p216='?' (DbType = Int64), @p217='?' (DbType = Int64), @p218='?' (DbType = Int64), @p219='?' (DbType = Int64), @p220='?' (DbType = Int64), @p221='?' (DbType = Int64), @p222='?' (DbType = Int64), @p223='?' (DbType = Double), @p224='?' (DbType = Int64), @p225='?' (DbType = Double), @p226='?' (DbType = Int64), @p227='?' (Size = 4000), @p228='?' (DbType = Double), @p229='?' (DbType = Double), @p230='?' (DbType = Int64), @p231='?' (DbType = Int64), @p232='?' (DbType = Int64), @p233='?' (DbType = Int64), @p234='?' (DbType = Int64), @p235='?' (DbType = Int64), @p236='?' (DbType = Int64), @p237='?' (DbType = Int64), @p238='?' (DbType = Int64), @p239='?' (DbType = Double), @p240='?' (DbType = Int64), @p241='?' (DbType = Int64), @p242='?' (Size = 4000), @p243='?' (Size = 450), @p244='?' (DbType = Double), @p245='?' (DbType = Double), @p246='?' (DbType = Int64), @p247='?' (DbType = Int64), @p248='?' (DbType = Int64), @p249='?' (DbType = Int64), @p250='?' (DbType = Int64), @p251='?' (DbType = Int64), @p252='?' (DbType = Int64), @p253='?' (DbType = Double), @p254='?' (DbType = Int64), @p255='?' (DbType = Double), @p256='?' (DbType = Int64), @p257='?' (Size = 4000), @p258='?' (DbType = Double), @p259='?' (DbType = Double), @p260='?' (DbType = Int64), @p261='?' (DbType = Int64), @p262='?' (DbType = Int64), @p263='?' (DbType = Int64), @p264='?' (DbType = Int64), @p265='?' (DbType = Int64), @p266='?' (DbType = Int64), @p267='?' (DbType = Int64), @p268='?' (DbType = Int64), @p269='?' (DbType = Double), @p270='?' (DbType = Int64), @p271='?' (DbType = Int64), @p272='?' (Size = 4000), @p273='?' (Size = 450), @p274='?' (DbType = Double), @p275='?' (DbType = Double), @p276='?' (DbType = Int64), @p277='?' (DbType = Int64), @p278='?' (DbType = Int64), @p279='?' (DbType = Int64), @p280='?' (DbType = Int64), @p281='?' (DbType = Int64), @p282='?' (DbType = Int64), @p283='?' (DbType = Double), @p284='?' (DbType = Int64), @p285='?' (DbType = Double), @p286='?' (DbType = Int64), @p287='?' (Size = 4000), @p288='?' (DbType = Double), @p289='?' (DbType = Double), @p290='?' (DbType = Int64), @p291='?' (DbType = Int64), @p292='?' (DbType = Int64), @p293='?' (DbType = Int64), @p294='?' (DbType = Int64), @p295='?' (DbType = Int64), @p296='?' (DbType = Int64), @p297='?' (DbType = Int64), @p298='?' (DbType = Int64), @p299='?' (DbType = Double), @p300='?' (DbType = Int64), @p301='?' (DbType = Int64), @p302='?' (Size = 4000), @p303='?' (Size = 450), @p304='?' (DbType = Double), @p305='?' (DbType = Double), @p306='?' (DbType = Int64), @p307='?' (DbType = Int64), @p308='?' (DbType = Int64), @p309='?' (DbType = Int64), @p310='?' (DbType = Int64), @p311='?' (DbType = Int64), @p312='?' (DbType = Int64), @p313='?' (DbType = Double), @p314='?' (DbType = Int64), @p315='?' (DbType = Double), @p316='?' (DbType = Int64), @p317='?' (Size = 4000), @p318='?' (DbType = Double), @p319='?' (DbType = Double), @p320='?' (DbType = Int64), @p321='?' (DbType = Int64), @p322='?' (DbType = Int64), @p323='?' (DbType = Int64), @p324='?' (DbType = Int64), @p325='?' (DbType = Int64), @p326='?' (DbType = Int64), @p327='?' (DbType = Int64), @p328='?' (DbType = Int64), @p329='?' (DbType = Double), @p330='?' (DbType = Int64), @p331='?' (DbType = Int64), @p332='?' (Size = 4000), @p333='?' (Size = 450), @p334='?' (DbType = Double), @p335='?' (DbType = Double), @p336='?' (DbType = Int64), @p337='?' (DbType = Int64), @p338='?' (DbType = Int64), @p339='?' (DbType = Int64), @p340='?' (DbType = Int64), @p341='?' (DbType = Int64), @p342='?' (DbType = Int64), @p343='?' (DbType = Double), @p344='?' (DbType = Int64), @p345='?' (DbType = Double), @p346='?' (DbType = Int64), @p347='?' (Size = 4000), @p348='?' (DbType = Double), @p349='?' (DbType = Double), @p350='?' (DbType = Int64), @p351='?' (DbType = Int64), @p352='?' (DbType = Int64), @p353='?' (DbType = Int64), @p354='?' (DbType = Int64), @p355='?' (DbType = Int64), @p356='?' (DbType = Int64), @p357='?' (DbType = Int64), @p358='?' (DbType = Int64), @p359='?' (DbType = Double), @p360='?' (DbType = Int64), @p361='?' (DbType = Int64), @p362='?' (Size = 4000), @p363='?' (Size = 450), @p364='?' (DbType = Double), @p365='?' (DbType = Double), @p366='?' (DbType = Int64), @p367='?' (DbType = Int64), @p368='?' (DbType = Int64), @p369='?' (DbType = Int64), @p370='?' (DbType = Int64), @p371='?' (DbType = Int64), @p372='?' (DbType = Int64), @p373='?' (DbType = Double), @p374='?' (DbType = Int64), @p375='?' (DbType = Double), @p376='?' (DbType = Int64), @p377='?' (Size = 4000), @p378='?' (DbType = Double), @p379='?' (DbType = Double), @p380='?' (DbType = Int64), @p381='?' (DbType = Int64), @p382='?' (DbType = Int64), @p383='?' (DbType = Int64), @p384='?' (DbType = Int64), @p385='?' (DbType = Int64), @p386='?' (DbType = Int64), @p387='?' (DbType = Int64), @p388='?' (DbType = Int64), @p389='?' (DbType = Double), @p390='?' (DbType = Int64), @p391='?' (DbType = Int64), @p392='?' (Size = 4000), @p393='?' (Size = 450), @p394='?' (DbType = Double), @p395='?' (DbType = Double), @p396='?' (DbType = Int64), @p397='?' (DbType = Int64), @p398='?' (DbType = Int64), @p399='?' (DbType = Int64), @p400='?' (DbType = Int64), @p401='?' (DbType = Int64), @p402='?' (DbType = Int64), @p403='?' (DbType = Double), @p404='?' (DbType = Int64), @p405='?' (DbType = Double), @p406='?' (DbType = Int64), @p407='?' (Size = 4000), @p408='?' (DbType = Double), @p409='?' (DbType = Double), @p410='?' (DbType = Int64), @p411='?' (DbType = Int64), @p412='?' (DbType = Int64), @p413='?' (DbType = Int64), @p414='?' (DbType = Int64), @p415='?' (DbType = Int64), @p416='?' (DbType = Int64), @p417='?' (DbType = Int64), @p418='?' (DbType = Int64), @p419='?' (DbType = Double), @p420='?' (DbType = Int64), @p421='?' (DbType = Int64), @p422='?' (Size = 4000), @p423='?' (Size = 450), @p424='?' (DbType = Double), @p425='?' (DbType = Double), @p426='?' (DbType = Int64), @p427='?' (DbType = Int64), @p428='?' (DbType = Int64), @p429='?' (DbType = Int64), @p430='?' (DbType = Int64), @p431='?' (DbType = Int64), @p432='?' (DbType = Int64), @p433='?' (DbType = Double), @p434='?' (DbType = Int64), @p435='?' (DbType = Double), @p436='?' (DbType = Int64), @p437='?' (Size = 4000), @p438='?' (DbType = Double), @p439='?' (DbType = Double), @p440='?' (DbType = Int64), @p441='?' (DbType = Int64), @p442='?' (DbType = Int64), @p443='?' (DbType = Int64), @p444='?' (DbType = Int64), @p445='?' (DbType = Int64), @p446='?' (DbType = Int64), @p447='?' (DbType = Int64), @p448='?' (DbType = Int64), @p449='?' (DbType = Double), @p450='?' (DbType = Int64), @p451='?' (DbType = Int64), @p452='?' (Size = 4000), @p453='?' (Size = 450), @p454='?' (DbType = Double), @p455='?' (DbType = Double), @p456='?' (DbType = Int64), @p457='?' (DbType = Int64), @p458='?' (DbType = Int64), @p459='?' (DbType = Int64), @p460='?' (DbType = Int64), @p461='?' (DbType = Int64), @p462='?' (DbType = Int64), @p463='?' (DbType = Double), @p464='?' (DbType = Int64), @p465='?' (DbType = Double), @p466='?' (DbType = Int64), @p467='?' (Size = 4000), @p468='?' (DbType = Double), @p469='?' (DbType = Double), @p470='?' (DbType = Int64), @p471='?' (DbType = Int64), @p472='?' (DbType = Int64), @p473='?' (DbType = Int64), @p474='?' (DbType = Int64), @p475='?' (DbType = Int64), @p476='?' (DbType = Int64), @p477='?' (DbType = Int64), @p478='?' (DbType = Int64), @p479='?' (DbType = Double), @p480='?' (DbType = Int64), @p481='?' (DbType = Int64), @p482='?' (Size = 4000), @p483='?' (Size = 450), @p484='?' (DbType = Double), @p485='?' (DbType = Double), @p486='?' (DbType = Int64), @p487='?' (DbType = Int64), @p488='?' (DbType = Int64), @p489='?' (DbType = Int64), @p490='?' (DbType = Int64), @p491='?' (DbType = Int64), @p492='?' (DbType = Int64), @p493='?' (DbType = Double), @p494='?' (DbType = Int64), @p495='?' (DbType = Double), @p496='?' (DbType = Int64), @p497='?' (Size = 4000), @p498='?' (DbType = Double), @p499='?' (DbType = Double), @p500='?' (DbType = Int64), @p501='?' (DbType = Int64), @p502='?' (DbType = Int64), @p503='?' (DbType = Int64), @p504='?' (DbType = Int64), @p505='?' (DbType = Int64), @p506='?' (DbType = Int64), @p507='?' (DbType = Int64), @p508='?' (DbType = Int64), @p509='?' (DbType = Double), @p510='?' (DbType = Int64), @p511='?' (DbType = Int64), @p512='?' (Size = 4000), @p513='?' (Size = 450), @p514='?' (DbType = Double), @p515='?' (DbType = Double), @p516='?' (DbType = Int64), @p517='?' (DbType = Int64), @p518='?' (DbType = Int64), @p519='?' (DbType = Int64), @p520='?' (DbType = Int64), @p521='?' (DbType = Int64), @p522='?' (DbType = Int64), @p523='?' (DbType = Double), @p524='?' (DbType = Int64), @p525='?' (DbType = Double), @p526='?' (DbType = Int64), @p527='?' (Size = 4000), @p528='?' (DbType = Double), @p529='?' (DbType = Double), @p530='?' (DbType = Int64), @p531='?' (DbType = Int64), @p532='?' (DbType = Int64), @p533='?' (DbType = Int64), @p534='?' (DbType = Int64), @p535='?' (DbType = Int64), @p536='?' (DbType = Int64), @p537='?' (DbType = Int64), @p538='?' (DbType = Int64), @p539='?' (DbType = Double), @p540='?' (DbType = Int64), @p541='?' (DbType = Int64), @p542='?' (Size = 4000), @p543='?' (Size = 450), @p544='?' (DbType = Double), @p545='?' (DbType = Double), @p546='?' (DbType = Int64), @p547='?' (DbType = Int64), @p548='?' (DbType = Int64), @p549='?' (DbType = Int64), @p550='?' (DbType = Int64), @p551='?' (DbType = Int64), @p552='?' (DbType = Int64), @p553='?' (DbType = Double), @p554='?' (DbType = Int64), @p555='?' (DbType = Double), @p556='?' (DbType = Int64), @p557='?' (Size = 4000), @p558='?' (DbType = Double), @p559='?' (DbType = Double), @p560='?' (DbType = Int64), @p561='?' (DbType = Int64), @p562='?' (DbType = Int64), @p563='?' (DbType = Int64), @p564='?' (DbType = Int64), @p565='?' (DbType = Int64), @p566='?' (DbType = Int64), @p567='?' (DbType = Int64), @p568='?' (DbType = Int64), @p569='?' (DbType = Double), @p570='?' (DbType = Int64), @p571='?' (DbType = Int64), @p572='?' (Size = 4000), @p573='?' (Size = 450), @p574='?' (DbType = Double), @p575='?' (DbType = Double), @p576='?' (DbType = Int64), @p577='?' (DbType = Int64), @p578='?' (DbType = Int64), @p579='?' (DbType = Int64), @p580='?' (DbType = Int64), @p581='?' (DbType = Int64), @p582='?' (DbType = Int64), @p583='?' (DbType = Double), @p584='?' (DbType = Int64), @p585='?' (DbType = Double), @p586='?' (DbType = Int64), @p587='?' (Size = 4000), @p588='?' (DbType = Double), @p589='?' (DbType = Double), @p590='?' (DbType = Int64), @p591='?' (DbType = Int64), @p592='?' (DbType = Int64), @p593='?' (DbType = Int64), @p594='?' (DbType = Int64), @p595='?' (DbType = Int64), @p596='?' (DbType = Int64), @p597='?' (DbType = Int64), @p598='?' (DbType = Int64), @p599='?' (DbType = Double), @p600='?' (DbType = Int64), @p601='?' (DbType = Int64), @p602='?' (Size = 4000), @p603='?' (Size = 450), @p604='?' (DbType = Double), @p605='?' (DbType = Double), @p606='?' (DbType = Int64), @p607='?' (DbType = Int64), @p608='?' (DbType = Int64), @p609='?' (DbType = Int64), @p610='?' (DbType = Int64), @p611='?' (DbType = Int64), @p612='?' (DbType = Int64), @p613='?' (DbType = Double), @p614='?' (DbType = Int64), @p615='?' (DbType = Double), @p616='?' (DbType = Int64), @p617='?' (Size = 4000), @p618='?' (DbType = Double), @p619='?' (DbType = Double), @p620='?' (DbType = Int64), @p621='?' (DbType = Int64), @p622='?' (DbType = Int64), @p623='?' (DbType = Int64), @p624='?' (DbType = Int64), @p625='?' (DbType = Int64), @p626='?' (DbType = Int64), @p627='?' (DbType = Int64), @p628='?' (DbType = Int64), @p629='?' (DbType = Double), @p630='?' (DbType = Int64), @p631='?' (DbType = Int64), @p632='?' (Size = 4000), @p633='?' (Size = 450), @p634='?' (DbType = Double), @p635='?' (DbType = Double), @p636='?' (DbType = Int64), @p637='?' (DbType = Int64), @p638='?' (DbType = Int64), @p639='?' (DbType = Int64), @p640='?' (DbType = Int64), @p641='?' (DbType = Int64), @p642='?' (DbType = Int64), @p643='?' (DbType = Double), @p644='?' (DbType = Int64), @p645='?' (DbType = Double), @p646='?' (DbType = Int64), @p647='?' (Size = 4000), @p648='?' (DbType = Double), @p649='?' (DbType = Double), @p650='?' (DbType = Int64), @p651='?' (DbType = Int64), @p652='?' (DbType = Int64), @p653='?' (DbType = Int64), @p654='?' (DbType = Int64), @p655='?' (DbType = Int64), @p656='?' (DbType = Int64), @p657='?' (DbType = Int64), @p658='?' (DbType = Int64), @p659='?' (DbType = Double), @p660='?' (DbType = Int64), @p661='?' (DbType = Int64), @p662='?' (Size = 4000), @p663='?' (Size = 450), @p664='?' (DbType = Double), @p665='?' (DbType = Double), @p666='?' (DbType = Int64), @p667='?' (DbType = Int64), @p668='?' (DbType = Int64), @p669='?' (DbType = Int64), @p670='?' (DbType = Int64), @p671='?' (DbType = Int64), @p672='?' (DbType = Int64), @p673='?' (DbType = Double), @p674='?' (DbType = Int64), @p675='?' (DbType = Double), @p676='?' (DbType = Int64), @p677='?' (Size = 4000), @p678='?' (DbType = Double), @p679='?' (DbType = Double), @p680='?' (DbType = Int64), @p681='?' (DbType = Int64), @p682='?' (DbType = Int64), @p683='?' (DbType = Int64), @p684='?' (DbType = Int64), @p685='?' (DbType = Int64), @p686='?' (DbType = Int64), @p687='?' (DbType = Int64), @p688='?' (DbType = Int64), @p689='?' (DbType = Double), @p690='?' (DbType = Int64), @p691='?' (DbType = Int64), @p692='?' (Size = 4000), @p693='?' (Size = 450), @p694='?' (DbType = Double), @p695='?' (DbType = Double), @p696='?' (DbType = Int64), @p697='?' (DbType = Int64), @p698='?' (DbType = Int64), @p699='?' (DbType = Int64), @p700='?' (DbType = Int64), @p701='?' (DbType = Int64), @p702='?' (DbType = Int64), @p703='?' (DbType = Double), @p704='?' (DbType = Int64), @p705='?' (DbType = Double), @p706='?' (DbType = Int64), @p707='?' (Size = 4000), @p708='?' (DbType = Double), @p709='?' (DbType = Double), @p710='?' (DbType = Int64), @p711='?' (DbType = Int64), @p712='?' (DbType = Int64), @p713='?' (DbType = Int64), @p714='?' (DbType = Int64), @p715='?' (DbType = Int64), @p716='?' (DbType = Int64), @p717='?' (DbType = Int64), @p718='?' (DbType = Int64), @p719='?' (DbType = Double), @p720='?' (DbType = Int64), @p721='?' (DbType = Int64), @p722='?' (Size = 4000), @p723='?' (Size = 450), @p724='?' (DbType = Double), @p725='?' (DbType = Double), @p726='?' (DbType = Int64), @p727='?' (DbType = Int64), @p728='?' (DbType = Int64), @p729='?' (DbType = Int64), @p730='?' (DbType = Int64), @p731='?' (DbType = Int64), @p732='?' (DbType = Int64), @p733='?' (DbType = Double), @p734='?' (DbType = Int64), @p735='?' (DbType = Double), @p736='?' (DbType = Int64), @p737='?' (Size = 4000), @p738='?' (DbType = Double), @p739='?' (DbType = Double), @p740='?' (DbType = Int64), @p741='?' (DbType = Int64), @p742='?' (DbType = Int64), @p743='?' (DbType = Int64), @p744='?' (DbType = Int64), @p745='?' (DbType = Int64), @p746='?' (DbType = Int64), @p747='?' (DbType = Int64), @p748='?' (DbType = Int64), @p749='?' (DbType = Double), @p750='?' (DbType = Int64), @p751='?' (DbType = Int64), @p752='?' (Size = 4000), @p753='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
DECLARE @inserted0 TABLE ([Id] int, [_Position] [int]);
MERGE [CashFlowAnnualReport] USING (
VALUES (@p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21, @p22, @p23, @p24, @p25, @p26, @p27, @p28, @p29, @p30, @p31, @p32, @p33, 0),
(@p34, @p35, @p36, @p37, @p38, @p39, @p40, @p41, @p42, @p43, @p44, @p45, @p46, @p47, @p48, @p49, @p50, @p51, @p52, @p53, @p54, @p55, @p56, @p57, @p58, @p59, @p60, @p61, @p62, @p63, 1),
(@p64, @p65, @p66, @p67, @p68, @p69, @p70, @p71, @p72, @p73, @p74, @p75, @p76, @p77, @p78, @p79, @p80, @p81, @p82, @p83, @p84, @p85, @p86, @p87, @p88, @p89, @p90, @p91, @p92, @p93, 2),
(@p94, @p95, @p96, @p97, @p98, @p99, @p100, @p101, @p102, @p103, @p104, @p105, @p106, @p107, @p108, @p109, @p110, @p111, @p112, @p113, @p114, @p115, @p116, @p117, @p118, @p119, @p120, @p121, @p122, @p123, 3),
(@p124, @p125, @p126, @p127, @p128, @p129, @p130, @p131, @p132, @p133, @p134, @p135, @p136, @p137, @p138, @p139, @p140, @p141, @p142, @p143, @p144, @p145, @p146, @p147, @p148, @p149, @p150, @p151, @p152, @p153, 4)) AS i ([CapitalExpenditures], [CashflowFromFinancing], [CashflowFromInvestment], [ChangeInCashAndCashEquivalents], [ChangeInExchangeRate], [ChangeInInventory], [ChangeInOperatingAssets], [ChangeInOperatingLiabilities], [ChangeInReceivables], [DepreciationDepletionAndAmortization], [DividendPayout], [DividendPayoutCommonStock], [DividendPayoutPreferredStock], [FiscalDateEnding], [NetIncome], [OperatingCashFlow], [PaymentsForOperatingActivities], [PaymentsForRepurchaseOfCommonStock], [PaymentsForRepurchaseOfEquity], [PaymentsForRepurchaseOfPreferredStock], [ProceedsFromIssuanceOfCommonStock], [ProceedsFromIssuanceOfLongTermDebtAndCapitalSecuritiesNet], [ProceedsFromIssuanceOfPreferredStock], [ProceedsFromOperatingActivities], [ProceedsFromRepaymentsOfShortTermDebt], [ProceedsFromRepurchaseOfEquity], [ProceedsFromSaleOfTreasuryStock], [ProfitLoss], [ReportedCurrency], [Symbol], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([CapitalExpenditures], [CashflowFromFinancing], [CashflowFromInvestment], [ChangeInCashAndCashEquivalents], [ChangeInExchangeRate], [ChangeInInventory], [ChangeInOperatingAssets], [ChangeInOperatingLiabilities], [ChangeInReceivables], [DepreciationDepletionAndAmortization], [DividendPayout], [DividendPayoutCommonStock], [DividendPayoutPreferredStock], [FiscalDateEnding], [NetIncome], [OperatingCashFlow], [PaymentsForOperatingActivities], [PaymentsForRepurchaseOfCommonStock], [PaymentsForRepurchaseOfEquity], [PaymentsForRepurchaseOfPreferredStock], [ProceedsFromIssuanceOfCommonStock], [ProceedsFromIssuanceOfLongTermDebtAndCapitalSecuritiesNet], [ProceedsFromIssuanceOfPreferredStock], [ProceedsFromOperatingActivities], [ProceedsFromRepaymentsOfShortTermDebt], [ProceedsFromRepurchaseOfEquity], [ProceedsFromSaleOfTreasuryStock], [ProfitLoss], [ReportedCurrency], [Symbol])
VALUES (i.[CapitalExpenditures], i.[CashflowFromFinancing], i.[CashflowFromInvestment], i.[ChangeInCashAndCashEquivalents], i.[ChangeInExchangeRate], i.[ChangeInInventory], i.[ChangeInOperatingAssets], i.[ChangeInOperatingLiabilities], i.[ChangeInReceivables], i.[DepreciationDepletionAndAmortization], i.[DividendPayout], i.[DividendPayoutCommonStock], i.[DividendPayoutPreferredStock], i.[FiscalDateEnding], i.[NetIncome], i.[OperatingCashFlow], i.[PaymentsForOperatingActivities], i.[PaymentsForRepurchaseOfCommonStock], i.[PaymentsForRepurchaseOfEquity], i.[PaymentsForRepurchaseOfPreferredStock], i.[ProceedsFromIssuanceOfCommonStock], i.[ProceedsFromIssuanceOfLongTermDebtAndCapitalSecuritiesNet], i.[ProceedsFromIssuanceOfPreferredStock], i.[ProceedsFromOperatingActivities], i.[ProceedsFromRepaymentsOfShortTermDebt], i.[ProceedsFromRepurchaseOfEquity], i.[ProceedsFromSaleOfTreasuryStock], i.[ProfitLoss], i.[ReportedCurrency], i.[Symbol])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted0;

SELECT [i].[Id] FROM @inserted0 i
ORDER BY [i].[_Position];

DECLARE @inserted5 TABLE ([Id] int, [_Position] [int]);
MERGE [CashFlowQuarterlyReport] USING (
VALUES (@p154, @p155, @p156, @p157, @p158, @p159, @p160, @p161, @p162, @p163, @p164, @p165, @p166, @p167, @p168, @p169, @p170, @p171, @p172, @p173, @p174, @p175, @p176, @p177, @p178, @p179, @p180, @p181, @p182, @p183, 0),
(@p184, @p185, @p186, @p187, @p188, @p189, @p190, @p191, @p192, @p193, @p194, @p195, @p196, @p197, @p198, @p199, @p200, @p201, @p202, @p203, @p204, @p205, @p206, @p207, @p208, @p209, @p210, @p211, @p212, @p213, 1),
(@p214, @p215, @p216, @p217, @p218, @p219, @p220, @p221, @p222, @p223, @p224, @p225, @p226, @p227, @p228, @p229, @p230, @p231, @p232, @p233, @p234, @p235, @p236, @p237, @p238, @p239, @p240, @p241, @p242, @p243, 2),
(@p244, @p245, @p246, @p247, @p248, @p249, @p250, @p251, @p252, @p253, @p254, @p255, @p256, @p257, @p258, @p259, @p260, @p261, @p262, @p263, @p264, @p265, @p266, @p267, @p268, @p269, @p270, @p271, @p272, @p273, 3),
(@p274, @p275, @p276, @p277, @p278, @p279, @p280, @p281, @p282, @p283, @p284, @p285, @p286, @p287, @p288, @p289, @p290, @p291, @p292, @p293, @p294, @p295, @p296, @p297, @p298, @p299, @p300, @p301, @p302, @p303, 4),
(@p304, @p305, @p306, @p307, @p308, @p309, @p310, @p311, @p312, @p313, @p314, @p315, @p316, @p317, @p318, @p319, @p320, @p321, @p322, @p323, @p324, @p325, @p326, @p327, @p328, @p329, @p330, @p331, @p332, @p333, 5),
(@p334, @p335, @p336, @p337, @p338, @p339, @p340, @p341, @p342, @p343, @p344, @p345, @p346, @p347, @p348, @p349, @p350, @p351, @p352, @p353, @p354, @p355, @p356, @p357, @p358, @p359, @p360, @p361, @p362, @p363, 6),
(@p364, @p365, @p366, @p367, @p368, @p369, @p370, @p371, @p372, @p373, @p374, @p375, @p376, @p377, @p378, @p379, @p380, @p381, @p382, @p383, @p384, @p385, @p386, @p387, @p388, @p389, @p390, @p391, @p392, @p393, 7),
(@p394, @p395, @p396, @p397, @p398, @p399, @p400, @p401, @p402, @p403, @p404, @p405, @p406, @p407, @p408, @p409, @p410, @p411, @p412, @p413, @p414, @p415, @p416, @p417, @p418, @p419, @p420, @p421, @p422, @p423, 8),
(@p424, @p425, @p426, @p427, @p428, @p429, @p430, @p431, @p432, @p433, @p434, @p435, @p436, @p437, @p438, @p439, @p440, @p441, @p442, @p443, @p444, @p445, @p446, @p447, @p448, @p449, @p450, @p451, @p452, @p453, 9),
(@p454, @p455, @p456, @p457, @p458, @p459, @p460, @p461, @p462, @p463, @p464, @p465, @p466, @p467, @p468, @p469, @p470, @p471, @p472, @p473, @p474, @p475, @p476, @p477, @p478, @p479, @p480, @p481, @p482, @p483, 10),
(@p484, @p485, @p486, @p487, @p488, @p489, @p490, @p491, @p492, @p493, @p494, @p495, @p496, @p497, @p498, @p499, @p500, @p501, @p502, @p503, @p504, @p505, @p506, @p507, @p508, @p509, @p510, @p511, @p512, @p513, 11),
(@p514, @p515, @p516, @p517, @p518, @p519, @p520, @p521, @p522, @p523, @p524, @p525, @p526, @p527, @p528, @p529, @p530, @p531, @p532, @p533, @p534, @p535, @p536, @p537, @p538, @p539, @p540, @p541, @p542, @p543, 12),
(@p544, @p545, @p546, @p547, @p548, @p549, @p550, @p551, @p552, @p553, @p554, @p555, @p556, @p557, @p558, @p559, @p560, @p561, @p562, @p563, @p564, @p565, @p566, @p567, @p568, @p569, @p570, @p571, @p572, @p573, 13),
(@p574, @p575, @p576, @p577, @p578, @p579, @p580, @p581, @p582, @p583, @p584, @p585, @p586, @p587, @p588, @p589, @p590, @p591, @p592, @p593, @p594, @p595, @p596, @p597, @p598, @p599, @p600, @p601, @p602, @p603, 14),
(@p604, @p605, @p606, @p607, @p608, @p609, @p610, @p611, @p612, @p613, @p614, @p615, @p616, @p617, @p618, @p619, @p620, @p621, @p622, @p623, @p624, @p625, @p626, @p627, @p628, @p629, @p630, @p631, @p632, @p633, 15),
(@p634, @p635, @p636, @p637, @p638, @p639, @p640, @p641, @p642, @p643, @p644, @p645, @p646, @p647, @p648, @p649, @p650, @p651, @p652, @p653, @p654, @p655, @p656, @p657, @p658, @p659, @p660, @p661, @p662, @p663, 16),
(@p664, @p665, @p666, @p667, @p668, @p669, @p670, @p671, @p672, @p673, @p674, @p675, @p676, @p677, @p678, @p679, @p680, @p681, @p682, @p683, @p684, @p685, @p686, @p687, @p688, @p689, @p690, @p691, @p692, @p693, 17),
(@p694, @p695, @p696, @p697, @p698, @p699, @p700, @p701, @p702, @p703, @p704, @p705, @p706, @p707, @p708, @p709, @p710, @p711, @p712, @p713, @p714, @p715, @p716, @p717, @p718, @p719, @p720, @p721, @p722, @p723, 18),
(@p724, @p725, @p726, @p727, @p728, @p729, @p730, @p731, @p732, @p733, @p734, @p735, @p736, @p737, @p738, @p739, @p740, @p741, @p742, @p743, @p744, @p745, @p746, @p747, @p748, @p749, @p750, @p751, @p752, @p753, 19)) AS i ([CapitalExpenditures], [CashflowFromFinancing], [CashflowFromInvestment], [ChangeInCashAndCashEquivalents], [ChangeInExchangeRate], [ChangeInInventory], [ChangeInOperatingAssets], [ChangeInOperatingLiabilities], [ChangeInReceivables], [DepreciationDepletionAndAmortization], [DividendPayout], [DividendPayoutCommonStock], [DividendPayoutPreferredStock], [FiscalDateEnding], [NetIncome], [OperatingCashFlow], [PaymentsForOperatingActivities], [PaymentsForRepurchaseOfCommonStock], [PaymentsForRepurchaseOfEquity], [PaymentsForRepurchaseOfPreferredStock], [ProceedsFromIssuanceOfCommonStock], [ProceedsFromIssuanceOfLongTermDebtAndCapitalSecuritiesNet], [ProceedsFromIssuanceOfPreferredStock], [ProceedsFromOperatingActivities], [ProceedsFromRepaymentsOfShortTermDebt], [ProceedsFromRepurchaseOfEquity], [ProceedsFromSaleOfTreasuryStock], [ProfitLoss], [ReportedCurrency], [Symbol], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([CapitalExpenditures], [CashflowFromFinancing], [CashflowFromInvestment], [ChangeInCashAndCashEquivalents], [ChangeInExchangeRate], [ChangeInInventory], [ChangeInOperatingAssets], [ChangeInOperatingLiabilities], [ChangeInReceivables], [DepreciationDepletionAndAmortization], [DividendPayout], [DividendPayoutCommonStock], [DividendPayoutPreferredStock], [FiscalDateEnding], [NetIncome], [OperatingCashFlow], [PaymentsForOperatingActivities], [PaymentsForRepurchaseOfCommonStock], [PaymentsForRepurchaseOfEquity], [PaymentsForRepurchaseOfPreferredStock], [ProceedsFromIssuanceOfCommonStock], [ProceedsFromIssuanceOfLongTermDebtAndCapitalSecuritiesNet], [ProceedsFromIssuanceOfPreferredStock], [ProceedsFromOperatingActivities], [ProceedsFromRepaymentsOfShortTermDebt], [ProceedsFromRepurchaseOfEquity], [ProceedsFromSaleOfTreasuryStock], [ProfitLoss], [ReportedCurrency], [Symbol])
VALUES (i.[CapitalExpenditures], i.[CashflowFromFinancing], i.[CashflowFromInvestment], i.[ChangeInCashAndCashEquivalents], i.[ChangeInExchangeRate], i.[ChangeInInventory], i.[ChangeInOperatingAssets], i.[ChangeInOperatingLiabilities], i.[ChangeInReceivables], i.[DepreciationDepletionAndAmortization], i.[DividendPayout], i.[DividendPayoutCommonStock], i.[DividendPayoutPreferredStock], i.[FiscalDateEnding], i.[NetIncome], i.[OperatingCashFlow], i.[PaymentsForOperatingActivities], i.[PaymentsForRepurchaseOfCommonStock], i.[PaymentsForRepurchaseOfEquity], i.[PaymentsForRepurchaseOfPreferredStock], i.[ProceedsFromIssuanceOfCommonStock], i.[ProceedsFromIssuanceOfLongTermDebtAndCapitalSecuritiesNet], i.[ProceedsFromIssuanceOfPreferredStock], i.[ProceedsFromOperatingActivities], i.[ProceedsFromRepaymentsOfShortTermDebt], i.[ProceedsFromRepurchaseOfEquity], i.[ProceedsFromSaleOfTreasuryStock], i.[ProfitLoss], i.[ReportedCurrency], i.[Symbol])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted5;

SELECT [i].[Id] FROM @inserted5 i
ORDER BY [i].[_Position];
2022-05-12 01:07:09.129 +03:00 [INF] AddOrUpdate run successful.
2022-05-12 01:07:25.190 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CompanyOverview with Symbol BKLN
2022-05-12 01:07:25.193 +03:00 [INF] Generating URI for OVERVIEW with params: symbol: BKLN
2022-05-12 01:07:25.194 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=OVERVIEW&symbol=BKLN
2022-05-12 01:07:25.194 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=OVERVIEW&symbol=BKLN".
2022-05-12 01:07:26.215 +03:00 [INF] Response has success status code
2022-05-12 01:07:26.215 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.CompanyOverview.
2022-05-12 01:07:26.216 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 01:07:26.228 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__entity_Symbol_0
2022-05-12 01:07:26.229 +03:00 [INF] Entity does not exist. Adding to DB.
2022-05-12 01:07:26.244 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (Size = 4000), @p2='?' (DbType = Double), @p3='?' (Size = 4000), @p4='?' (DbType = Double), @p5='?' (DbType = Double), @p6='?' (DbType = Int64), @p7='?' (Size = 4000), @p8='?' (Size = 4000), @p9='?' (Size = 4000), @p10='?' (DbType = Double), @p11='?' (DbType = DateTime2), @p12='?' (DbType = Double), @p13='?' (DbType = Double), @p14='?' (DbType = Int64), @p15='?' (DbType = Double), @p16='?' (DbType = Double), @p17='?' (DbType = Double), @p18='?' (DbType = DateTime2), @p19='?' (Size = 4000), @p20='?' (DbType = Boolean), @p21='?' (Size = 4000), @p22='?' (DbType = Double), @p23='?' (DbType = Int64), @p24='?' (Size = 4000), @p25='?' (DbType = DateTime2), @p26='?' (DbType = DateTime2), @p27='?' (DbType = DateTime2), @p28='?' (DbType = Int64), @p29='?' (Size = 4000), @p30='?' (DbType = Double), @p31='?' (DbType = Double), @p32='?' (DbType = Double), @p33='?' (DbType = Double), @p34='?' (DbType = Double), @p35='?' (DbType = Double), @p36='?' (DbType = Double), @p37='?' (DbType = Double), @p38='?' (DbType = Double), @p39='?' (DbType = Double), @p40='?' (DbType = Double), @p41='?' (DbType = Int64), @p42='?' (Size = 4000), @p43='?' (DbType = Int64), @p44='?' (DbType = Double), @p45='?' (DbType = Double), @p46='?' (DbType = Double), @p47='?' (DbType = Double), @p48='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [CompanyOverviews] ([Symbol], [Address], [AnalystTargetPrice], [AssetType], [Beta], [BookValue], [CIK], [Country], [Currency], [Description], [DilutedEPSTTM], [DividendDate], [DividendPerShare], [DividendYield], [EBITDA], [EPS], [EVToEBITDA], [EVToRevenue], [ExDividendDate], [Exchange], [ExistInApi], [FiscalYearEnd], [ForwardPE], [GrossProfitTTM], [Industry], [LastApiRefresh], [LastLocalRefresh], [LatestQuarter], [MarketCapitalization], [Name], [OperatingMarginTTM], [PEGRatio], [PERatio], [PriceToBookRatio], [PriceToSalesRatioTTM], [ProfitMargin], [QuarterlyEarningsGrowthYOY], [QuarterlyRevenueGrowthYOY], [ReturnOnAssetsTTM], [ReturnOnEquityTTM], [RevenuePerShareTTM], [RevenueTTM], [Sector], [SharesOutstanding], [TrailingPE], [_200DayMovingAverage], [_50DayMovingAverage], [_52WeekHigh], [_52WeekLow])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21, @p22, @p23, @p24, @p25, @p26, @p27, @p28, @p29, @p30, @p31, @p32, @p33, @p34, @p35, @p36, @p37, @p38, @p39, @p40, @p41, @p42, @p43, @p44, @p45, @p46, @p47, @p48);
2022-05-12 01:07:26.251 +03:00 [INF] AddOrUpdate run successful.
2022-05-12 01:07:26.252 +03:00 [WRN] Alpha Vantage has no SaluteStocksAPI.Models.FundamentalData.CompanyOverview for symbol BKLN
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageEmptyResponse: Response was empty.
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyOverview(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 116
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:07:27.837 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.Earnings with Symbol AXDX
2022-05-12 01:07:27.840 +03:00 [INF] Generating URI for EARNINGS with params: symbol: AXDX
2022-05-12 01:07:27.841 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=EARNINGS&symbol=AXDX
2022-05-12 01:07:27.841 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=EARNINGS&symbol=AXDX".
2022-05-12 01:07:28.407 +03:00 [INF] Response has success status code
2022-05-12 01:07:28.408 +03:00 [INF] Trying to deserialize response.
2022-05-12 01:07:28.409 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 01:07:28.418 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__symbol_0
2022-05-12 01:07:28.420 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.Earnings.
2022-05-12 01:07:28.428 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [e].[Symbol], [e].[ExistInApi], [e].[LastApiRefresh], [e].[LastLocalRefresh]
FROM [Earnings] AS [e]
WHERE [e].[Symbol] = @__entity_Symbol_0
2022-05-12 01:07:28.429 +03:00 [INF] Entity does not exist. Adding to DB.
2022-05-12 01:07:28.445 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = Boolean), @p2='?' (DbType = DateTime2), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Earnings] ([Symbol], [ExistInApi], [LastApiRefresh], [LastLocalRefresh])
VALUES (@p0, @p1, @p2, @p3);
2022-05-12 01:07:28.462 +03:00 [INF] Executed DbCommand (16ms) [Parameters=[@p4='?' (DbType = DateTime2), @p5='?' (DbType = Double), @p6='?' (Size = 450), @p7='?' (DbType = DateTime2), @p8='?' (DbType = Double), @p9='?' (Size = 450), @p10='?' (DbType = DateTime2), @p11='?' (DbType = Double), @p12='?' (Size = 450), @p13='?' (DbType = DateTime2), @p14='?' (DbType = Double), @p15='?' (Size = 450), @p16='?' (DbType = DateTime2), @p17='?' (DbType = Double), @p18='?' (Size = 450), @p19='?' (DbType = DateTime2), @p20='?' (DbType = Double), @p21='?' (Size = 450), @p22='?' (DbType = DateTime2), @p23='?' (DbType = Double), @p24='?' (Size = 450), @p25='?' (DbType = DateTime2), @p26='?' (DbType = Double), @p27='?' (Size = 450), @p28='?' (DbType = DateTime2), @p29='?' (DbType = Double), @p30='?' (Size = 450), @p31='?' (DbType = DateTime2), @p32='?' (DbType = Double), @p33='?' (Size = 450), @p34='?' (DbType = DateTime2), @p35='?' (DbType = Double), @p36='?' (Size = 450), @p37='?' (DbType = DateTime2), @p38='?' (DbType = Double), @p39='?' (Size = 450), @p40='?' (DbType = DateTime2), @p41='?' (DbType = Double), @p42='?' (Size = 450), @p43='?' (DbType = DateTime2), @p44='?' (DbType = Double), @p45='?' (Size = 450), @p46='?' (DbType = DateTime2), @p47='?' (DbType = Double), @p48='?' (Size = 450), @p49='?' (DbType = DateTime2), @p50='?' (DbType = Double), @p51='?' (Size = 450), @p52='?' (DbType = DateTime2), @p53='?' (DbType = Double), @p54='?' (Size = 450), @p55='?' (DbType = DateTime2), @p56='?' (DbType = Double), @p57='?' (Size = 450), @p58='?' (DbType = DateTime2), @p59='?' (DbType = Double), @p60='?' (Size = 450), @p61='?' (DbType = DateTime2), @p62='?' (DbType = Double), @p63='?' (Size = 450), @p64='?' (DbType = DateTime2), @p65='?' (DbType = Double), @p66='?' (Size = 450), @p67='?' (DbType = DateTime2), @p68='?' (DbType = Double), @p69='?' (Size = 450), @p70='?' (DbType = DateTime2), @p71='?' (DbType = Double), @p72='?' (Size = 450), @p73='?' (DbType = DateTime2), @p74='?' (DbType = Double), @p75='?' (Size = 450), @p76='?' (DbType = DateTime2), @p77='?' (DbType = Double), @p78='?' (Size = 450), @p79='?' (DbType = DateTime2), @p80='?' (DbType = Double), @p81='?' (Size = 450), @p82='?' (DbType = Double), @p83='?' (DbType = DateTime2), @p84='?' (DbType = DateTime2), @p85='?' (DbType = Double), @p86='?' (DbType = Double), @p87='?' (DbType = Double), @p88='?' (Size = 450), @p89='?' (DbType = Double), @p90='?' (DbType = DateTime2), @p91='?' (DbType = DateTime2), @p92='?' (DbType = Double), @p93='?' (DbType = Double), @p94='?' (DbType = Double), @p95='?' (Size = 450), @p96='?' (DbType = Double), @p97='?' (DbType = DateTime2), @p98='?' (DbType = DateTime2), @p99='?' (DbType = Double), @p100='?' (DbType = Double), @p101='?' (DbType = Double), @p102='?' (Size = 450), @p103='?' (DbType = Double), @p104='?' (DbType = DateTime2), @p105='?' (DbType = DateTime2), @p106='?' (DbType = Double), @p107='?' (DbType = Double), @p108='?' (DbType = Double), @p109='?' (Size = 450), @p110='?' (DbType = Double), @p111='?' (DbType = DateTime2), @p112='?' (DbType = DateTime2), @p113='?' (DbType = Double), @p114='?' (DbType = Double), @p115='?' (DbType = Double), @p116='?' (Size = 450), @p117='?' (DbType = Double), @p118='?' (DbType = DateTime2), @p119='?' (DbType = DateTime2), @p120='?' (DbType = Double), @p121='?' (DbType = Double), @p122='?' (DbType = Double), @p123='?' (Size = 450), @p124='?' (DbType = Double), @p125='?' (DbType = DateTime2), @p126='?' (DbType = DateTime2), @p127='?' (DbType = Double), @p128='?' (DbType = Double), @p129='?' (DbType = Double), @p130='?' (Size = 450), @p131='?' (DbType = Double), @p132='?' (DbType = DateTime2), @p133='?' (DbType = DateTime2), @p134='?' (DbType = Double), @p135='?' (DbType = Double), @p136='?' (DbType = Double), @p137='?' (Size = 450), @p138='?' (DbType = Double), @p139='?' (DbType = DateTime2), @p140='?' (DbType = DateTime2), @p141='?' (DbType = Double), @p142='?' (DbType = Double), @p143='?' (DbType = Double), @p144='?' (Size = 450), @p145='?' (DbType = Double), @p146='?' (DbType = DateTime2), @p147='?' (DbType = DateTime2), @p148='?' (DbType = Double), @p149='?' (DbType = Double), @p150='?' (DbType = Double), @p151='?' (Size = 450), @p152='?' (DbType = Double), @p153='?' (DbType = DateTime2), @p154='?' (DbType = DateTime2), @p155='?' (DbType = Double), @p156='?' (DbType = Double), @p157='?' (DbType = Double), @p158='?' (Size = 450), @p159='?' (DbType = Double), @p160='?' (DbType = DateTime2), @p161='?' (DbType = DateTime2), @p162='?' (DbType = Double), @p163='?' (DbType = Double), @p164='?' (DbType = Double), @p165='?' (Size = 450), @p166='?' (DbType = Double), @p167='?' (DbType = DateTime2), @p168='?' (DbType = DateTime2), @p169='?' (DbType = Double), @p170='?' (DbType = Double), @p171='?' (DbType = Double), @p172='?' (Size = 450), @p173='?' (DbType = Double), @p174='?' (DbType = DateTime2), @p175='?' (DbType = DateTime2), @p176='?' (DbType = Double), @p177='?' (DbType = Double), @p178='?' (DbType = Double), @p179='?' (Size = 450), @p180='?' (DbType = Double), @p181='?' (DbType = DateTime2), @p182='?' (DbType = DateTime2), @p183='?' (DbType = Double), @p184='?' (DbType = Double), @p185='?' (DbType = Double), @p186='?' (Size = 450), @p187='?' (DbType = Double), @p188='?' (DbType = DateTime2), @p189='?' (DbType = DateTime2), @p190='?' (DbType = Double), @p191='?' (DbType = Double), @p192='?' (DbType = Double), @p193='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
DECLARE @inserted0 TABLE ([Id] int, [_Position] [int]);
MERGE [AnnualEarning] USING (
VALUES (@p4, @p5, @p6, 0),
(@p7, @p8, @p9, 1),
(@p10, @p11, @p12, 2),
(@p13, @p14, @p15, 3),
(@p16, @p17, @p18, 4),
(@p19, @p20, @p21, 5),
(@p22, @p23, @p24, 6),
(@p25, @p26, @p27, 7),
(@p28, @p29, @p30, 8),
(@p31, @p32, @p33, 9),
(@p34, @p35, @p36, 10),
(@p37, @p38, @p39, 11),
(@p40, @p41, @p42, 12),
(@p43, @p44, @p45, 13),
(@p46, @p47, @p48, 14),
(@p49, @p50, @p51, 15),
(@p52, @p53, @p54, 16),
(@p55, @p56, @p57, 17),
(@p58, @p59, @p60, 18),
(@p61, @p62, @p63, 19),
(@p64, @p65, @p66, 20),
(@p67, @p68, @p69, 21),
(@p70, @p71, @p72, 22),
(@p73, @p74, @p75, 23),
(@p76, @p77, @p78, 24),
(@p79, @p80, @p81, 25)) AS i ([FiscalDateEnding], [ReportedEPS], [Symbol], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([FiscalDateEnding], [ReportedEPS], [Symbol])
VALUES (i.[FiscalDateEnding], i.[ReportedEPS], i.[Symbol])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted0;

SELECT [i].[Id] FROM @inserted0 i
ORDER BY [i].[_Position];

DECLARE @inserted26 TABLE ([Id] int, [_Position] [int]);
MERGE [QuarterlyEarning] USING (
VALUES (@p82, @p83, @p84, @p85, @p86, @p87, @p88, 0),
(@p89, @p90, @p91, @p92, @p93, @p94, @p95, 1),
(@p96, @p97, @p98, @p99, @p100, @p101, @p102, 2),
(@p103, @p104, @p105, @p106, @p107, @p108, @p109, 3),
(@p110, @p111, @p112, @p113, @p114, @p115, @p116, 4),
(@p117, @p118, @p119, @p120, @p121, @p122, @p123, 5),
(@p124, @p125, @p126, @p127, @p128, @p129, @p130, 6),
(@p131, @p132, @p133, @p134, @p135, @p136, @p137, 7),
(@p138, @p139, @p140, @p141, @p142, @p143, @p144, 8),
(@p145, @p146, @p147, @p148, @p149, @p150, @p151, 9),
(@p152, @p153, @p154, @p155, @p156, @p157, @p158, 10),
(@p159, @p160, @p161, @p162, @p163, @p164, @p165, 11),
(@p166, @p167, @p168, @p169, @p170, @p171, @p172, 12),
(@p173, @p174, @p175, @p176, @p177, @p178, @p179, 13),
(@p180, @p181, @p182, @p183, @p184, @p185, @p186, 14),
(@p187, @p188, @p189, @p190, @p191, @p192, @p193, 15)) AS i ([EstimatedEPS], [FiscalDateEnding], [ReportedDate], [ReportedEPS], [Surprise], [SurprisePercentage], [Symbol], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([EstimatedEPS], [FiscalDateEnding], [ReportedDate], [ReportedEPS], [Surprise], [SurprisePercentage], [Symbol])
VALUES (i.[EstimatedEPS], i.[FiscalDateEnding], i.[ReportedDate], i.[ReportedEPS], i.[Surprise], i.[SurprisePercentage], i.[Symbol])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted26;

SELECT [i].[Id] FROM @inserted26 i
ORDER BY [i].[_Position];
2022-05-12 01:07:28.488 +03:00 [INF] Executed DbCommand (23ms) [Parameters=[@p0='?' (DbType = Double), @p1='?' (DbType = DateTime2), @p2='?' (DbType = DateTime2), @p3='?' (DbType = Double), @p4='?' (DbType = Double), @p5='?' (DbType = Double), @p6='?' (Size = 450), @p7='?' (DbType = Double), @p8='?' (DbType = DateTime2), @p9='?' (DbType = DateTime2), @p10='?' (DbType = Double), @p11='?' (DbType = Double), @p12='?' (DbType = Double), @p13='?' (Size = 450), @p14='?' (DbType = Double), @p15='?' (DbType = DateTime2), @p16='?' (DbType = DateTime2), @p17='?' (DbType = Double), @p18='?' (DbType = Double), @p19='?' (DbType = Double), @p20='?' (Size = 450), @p21='?' (DbType = Double), @p22='?' (DbType = DateTime2), @p23='?' (DbType = DateTime2), @p24='?' (DbType = Double), @p25='?' (DbType = Double), @p26='?' (DbType = Double), @p27='?' (Size = 450), @p28='?' (DbType = Double), @p29='?' (DbType = DateTime2), @p30='?' (DbType = DateTime2), @p31='?' (DbType = Double), @p32='?' (DbType = Double), @p33='?' (DbType = Double), @p34='?' (Size = 450), @p35='?' (DbType = Double), @p36='?' (DbType = DateTime2), @p37='?' (DbType = DateTime2), @p38='?' (DbType = Double), @p39='?' (DbType = Double), @p40='?' (DbType = Double), @p41='?' (Size = 450), @p42='?' (DbType = Double), @p43='?' (DbType = DateTime2), @p44='?' (DbType = DateTime2), @p45='?' (DbType = Double), @p46='?' (DbType = Double), @p47='?' (DbType = Double), @p48='?' (Size = 450), @p49='?' (DbType = Double), @p50='?' (DbType = DateTime2), @p51='?' (DbType = DateTime2), @p52='?' (DbType = Double), @p53='?' (DbType = Double), @p54='?' (DbType = Double), @p55='?' (Size = 450), @p56='?' (DbType = Double), @p57='?' (DbType = DateTime2), @p58='?' (DbType = DateTime2), @p59='?' (DbType = Double), @p60='?' (DbType = Double), @p61='?' (DbType = Double), @p62='?' (Size = 450), @p63='?' (DbType = Double), @p64='?' (DbType = DateTime2), @p65='?' (DbType = DateTime2), @p66='?' (DbType = Double), @p67='?' (DbType = Double), @p68='?' (DbType = Double), @p69='?' (Size = 450), @p70='?' (DbType = Double), @p71='?' (DbType = DateTime2), @p72='?' (DbType = DateTime2), @p73='?' (DbType = Double), @p74='?' (DbType = Double), @p75='?' (DbType = Double), @p76='?' (Size = 450), @p77='?' (DbType = Double), @p78='?' (DbType = DateTime2), @p79='?' (DbType = DateTime2), @p80='?' (DbType = Double), @p81='?' (DbType = Double), @p82='?' (DbType = Double), @p83='?' (Size = 450), @p84='?' (DbType = Double), @p85='?' (DbType = DateTime2), @p86='?' (DbType = DateTime2), @p87='?' (DbType = Double), @p88='?' (DbType = Double), @p89='?' (DbType = Double), @p90='?' (Size = 450), @p91='?' (DbType = Double), @p92='?' (DbType = DateTime2), @p93='?' (DbType = DateTime2), @p94='?' (DbType = Double), @p95='?' (DbType = Double), @p96='?' (DbType = Double), @p97='?' (Size = 450), @p98='?' (DbType = Double), @p99='?' (DbType = DateTime2), @p100='?' (DbType = DateTime2), @p101='?' (DbType = Double), @p102='?' (DbType = Double), @p103='?' (DbType = Double), @p104='?' (Size = 450), @p105='?' (DbType = Double), @p106='?' (DbType = DateTime2), @p107='?' (DbType = DateTime2), @p108='?' (DbType = Double), @p109='?' (DbType = Double), @p110='?' (DbType = Double), @p111='?' (Size = 450), @p112='?' (DbType = Double), @p113='?' (DbType = DateTime2), @p114='?' (DbType = DateTime2), @p115='?' (DbType = Double), @p116='?' (DbType = Double), @p117='?' (DbType = Double), @p118='?' (Size = 450), @p119='?' (DbType = Double), @p120='?' (DbType = DateTime2), @p121='?' (DbType = DateTime2), @p122='?' (DbType = Double), @p123='?' (DbType = Double), @p124='?' (DbType = Double), @p125='?' (Size = 450), @p126='?' (DbType = Double), @p127='?' (DbType = DateTime2), @p128='?' (DbType = DateTime2), @p129='?' (DbType = Double), @p130='?' (DbType = Double), @p131='?' (DbType = Double), @p132='?' (Size = 450), @p133='?' (DbType = Double), @p134='?' (DbType = DateTime2), @p135='?' (DbType = DateTime2), @p136='?' (DbType = Double), @p137='?' (DbType = Double), @p138='?' (DbType = Double), @p139='?' (Size = 450), @p140='?' (DbType = Double), @p141='?' (DbType = DateTime2), @p142='?' (DbType = DateTime2), @p143='?' (DbType = Double), @p144='?' (DbType = Double), @p145='?' (DbType = Double), @p146='?' (Size = 450), @p147='?' (DbType = Double), @p148='?' (DbType = DateTime2), @p149='?' (DbType = DateTime2), @p150='?' (DbType = Double), @p151='?' (DbType = Double), @p152='?' (DbType = Double), @p153='?' (Size = 450), @p154='?' (DbType = Double), @p155='?' (DbType = DateTime2), @p156='?' (DbType = DateTime2), @p157='?' (DbType = Double), @p158='?' (DbType = Double), @p159='?' (DbType = Double), @p160='?' (Size = 450), @p161='?' (DbType = Double), @p162='?' (DbType = DateTime2), @p163='?' (DbType = DateTime2), @p164='?' (DbType = Double), @p165='?' (DbType = Double), @p166='?' (DbType = Double), @p167='?' (Size = 450), @p168='?' (DbType = Double), @p169='?' (DbType = DateTime2), @p170='?' (DbType = DateTime2), @p171='?' (DbType = Double), @p172='?' (DbType = Double), @p173='?' (DbType = Double), @p174='?' (Size = 450), @p175='?' (DbType = Double), @p176='?' (DbType = DateTime2), @p177='?' (DbType = DateTime2), @p178='?' (DbType = Double), @p179='?' (DbType = Double), @p180='?' (DbType = Double), @p181='?' (Size = 450), @p182='?' (DbType = Double), @p183='?' (DbType = DateTime2), @p184='?' (DbType = DateTime2), @p185='?' (DbType = Double), @p186='?' (DbType = Double), @p187='?' (DbType = Double), @p188='?' (Size = 450), @p189='?' (DbType = Double), @p190='?' (DbType = DateTime2), @p191='?' (DbType = DateTime2), @p192='?' (DbType = Double), @p193='?' (DbType = Double), @p194='?' (DbType = Double), @p195='?' (Size = 450), @p196='?' (DbType = Double), @p197='?' (DbType = DateTime2), @p198='?' (DbType = DateTime2), @p199='?' (DbType = Double), @p200='?' (DbType = Double), @p201='?' (DbType = Double), @p202='?' (Size = 450), @p203='?' (DbType = Double), @p204='?' (DbType = DateTime2), @p205='?' (DbType = DateTime2), @p206='?' (DbType = Double), @p207='?' (DbType = Double), @p208='?' (DbType = Double), @p209='?' (Size = 450), @p210='?' (DbType = Double), @p211='?' (DbType = DateTime2), @p212='?' (DbType = DateTime2), @p213='?' (DbType = Double), @p214='?' (DbType = Double), @p215='?' (DbType = Double), @p216='?' (Size = 450), @p217='?' (DbType = Double), @p218='?' (DbType = DateTime2), @p219='?' (DbType = DateTime2), @p220='?' (DbType = Double), @p221='?' (DbType = Double), @p222='?' (DbType = Double), @p223='?' (Size = 450), @p224='?' (DbType = Double), @p225='?' (DbType = DateTime2), @p226='?' (DbType = DateTime2), @p227='?' (DbType = Double), @p228='?' (DbType = Double), @p229='?' (DbType = Double), @p230='?' (Size = 450), @p231='?' (DbType = Double), @p232='?' (DbType = DateTime2), @p233='?' (DbType = DateTime2), @p234='?' (DbType = Double), @p235='?' (DbType = Double), @p236='?' (DbType = Double), @p237='?' (Size = 450), @p238='?' (DbType = Double), @p239='?' (DbType = DateTime2), @p240='?' (DbType = DateTime2), @p241='?' (DbType = Double), @p242='?' (DbType = Double), @p243='?' (DbType = Double), @p244='?' (Size = 450), @p245='?' (DbType = Double), @p246='?' (DbType = DateTime2), @p247='?' (DbType = DateTime2), @p248='?' (DbType = Double), @p249='?' (DbType = Double), @p250='?' (DbType = Double), @p251='?' (Size = 450), @p252='?' (DbType = Double), @p253='?' (DbType = DateTime2), @p254='?' (DbType = DateTime2), @p255='?' (DbType = Double), @p256='?' (DbType = Double), @p257='?' (DbType = Double), @p258='?' (Size = 450), @p259='?' (DbType = Double), @p260='?' (DbType = DateTime2), @p261='?' (DbType = DateTime2), @p262='?' (DbType = Double), @p263='?' (DbType = Double), @p264='?' (DbType = Double), @p265='?' (Size = 450), @p266='?' (DbType = Double), @p267='?' (DbType = DateTime2), @p268='?' (DbType = DateTime2), @p269='?' (DbType = Double), @p270='?' (DbType = Double), @p271='?' (DbType = Double), @p272='?' (Size = 450), @p273='?' (DbType = Double), @p274='?' (DbType = DateTime2), @p275='?' (DbType = DateTime2), @p276='?' (DbType = Double), @p277='?' (DbType = Double), @p278='?' (DbType = Double), @p279='?' (Size = 450), @p280='?' (DbType = Double), @p281='?' (DbType = DateTime2), @p282='?' (DbType = DateTime2), @p283='?' (DbType = Double), @p284='?' (DbType = Double), @p285='?' (DbType = Double), @p286='?' (Size = 450), @p287='?' (DbType = Double), @p288='?' (DbType = DateTime2), @p289='?' (DbType = DateTime2), @p290='?' (DbType = Double), @p291='?' (DbType = Double), @p292='?' (DbType = Double), @p293='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
DECLARE @inserted0 TABLE ([Id] int, [_Position] [int]);
MERGE [QuarterlyEarning] USING (
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, 0),
(@p7, @p8, @p9, @p10, @p11, @p12, @p13, 1),
(@p14, @p15, @p16, @p17, @p18, @p19, @p20, 2),
(@p21, @p22, @p23, @p24, @p25, @p26, @p27, 3),
(@p28, @p29, @p30, @p31, @p32, @p33, @p34, 4),
(@p35, @p36, @p37, @p38, @p39, @p40, @p41, 5),
(@p42, @p43, @p44, @p45, @p46, @p47, @p48, 6),
(@p49, @p50, @p51, @p52, @p53, @p54, @p55, 7),
(@p56, @p57, @p58, @p59, @p60, @p61, @p62, 8),
(@p63, @p64, @p65, @p66, @p67, @p68, @p69, 9),
(@p70, @p71, @p72, @p73, @p74, @p75, @p76, 10),
(@p77, @p78, @p79, @p80, @p81, @p82, @p83, 11),
(@p84, @p85, @p86, @p87, @p88, @p89, @p90, 12),
(@p91, @p92, @p93, @p94, @p95, @p96, @p97, 13),
(@p98, @p99, @p100, @p101, @p102, @p103, @p104, 14),
(@p105, @p106, @p107, @p108, @p109, @p110, @p111, 15),
(@p112, @p113, @p114, @p115, @p116, @p117, @p118, 16),
(@p119, @p120, @p121, @p122, @p123, @p124, @p125, 17),
(@p126, @p127, @p128, @p129, @p130, @p131, @p132, 18),
(@p133, @p134, @p135, @p136, @p137, @p138, @p139, 19),
(@p140, @p141, @p142, @p143, @p144, @p145, @p146, 20),
(@p147, @p148, @p149, @p150, @p151, @p152, @p153, 21),
(@p154, @p155, @p156, @p157, @p158, @p159, @p160, 22),
(@p161, @p162, @p163, @p164, @p165, @p166, @p167, 23),
(@p168, @p169, @p170, @p171, @p172, @p173, @p174, 24),
(@p175, @p176, @p177, @p178, @p179, @p180, @p181, 25),
(@p182, @p183, @p184, @p185, @p186, @p187, @p188, 26),
(@p189, @p190, @p191, @p192, @p193, @p194, @p195, 27),
(@p196, @p197, @p198, @p199, @p200, @p201, @p202, 28),
(@p203, @p204, @p205, @p206, @p207, @p208, @p209, 29),
(@p210, @p211, @p212, @p213, @p214, @p215, @p216, 30),
(@p217, @p218, @p219, @p220, @p221, @p222, @p223, 31),
(@p224, @p225, @p226, @p227, @p228, @p229, @p230, 32),
(@p231, @p232, @p233, @p234, @p235, @p236, @p237, 33),
(@p238, @p239, @p240, @p241, @p242, @p243, @p244, 34),
(@p245, @p246, @p247, @p248, @p249, @p250, @p251, 35),
(@p252, @p253, @p254, @p255, @p256, @p257, @p258, 36),
(@p259, @p260, @p261, @p262, @p263, @p264, @p265, 37),
(@p266, @p267, @p268, @p269, @p270, @p271, @p272, 38),
(@p273, @p274, @p275, @p276, @p277, @p278, @p279, 39),
(@p280, @p281, @p282, @p283, @p284, @p285, @p286, 40),
(@p287, @p288, @p289, @p290, @p291, @p292, @p293, 41)) AS i ([EstimatedEPS], [FiscalDateEnding], [ReportedDate], [ReportedEPS], [Surprise], [SurprisePercentage], [Symbol], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([EstimatedEPS], [FiscalDateEnding], [ReportedDate], [ReportedEPS], [Surprise], [SurprisePercentage], [Symbol])
VALUES (i.[EstimatedEPS], i.[FiscalDateEnding], i.[ReportedDate], i.[ReportedEPS], i.[Surprise], i.[SurprisePercentage], i.[Symbol])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted0;

SELECT [i].[Id] FROM @inserted0 i
ORDER BY [i].[_Position];
2022-05-12 01:07:28.506 +03:00 [INF] Executed DbCommand (15ms) [Parameters=[@p0='?' (DbType = Double), @p1='?' (DbType = DateTime2), @p2='?' (DbType = DateTime2), @p3='?' (DbType = Double), @p4='?' (DbType = Double), @p5='?' (DbType = Double), @p6='?' (Size = 450), @p7='?' (DbType = Double), @p8='?' (DbType = DateTime2), @p9='?' (DbType = DateTime2), @p10='?' (DbType = Double), @p11='?' (DbType = Double), @p12='?' (DbType = Double), @p13='?' (Size = 450), @p14='?' (DbType = Double), @p15='?' (DbType = DateTime2), @p16='?' (DbType = DateTime2), @p17='?' (DbType = Double), @p18='?' (DbType = Double), @p19='?' (DbType = Double), @p20='?' (Size = 450), @p21='?' (DbType = Double), @p22='?' (DbType = DateTime2), @p23='?' (DbType = DateTime2), @p24='?' (DbType = Double), @p25='?' (DbType = Double), @p26='?' (DbType = Double), @p27='?' (Size = 450), @p28='?' (DbType = Double), @p29='?' (DbType = DateTime2), @p30='?' (DbType = DateTime2), @p31='?' (DbType = Double), @p32='?' (DbType = Double), @p33='?' (DbType = Double), @p34='?' (Size = 450), @p35='?' (DbType = Double), @p36='?' (DbType = DateTime2), @p37='?' (DbType = DateTime2), @p38='?' (DbType = Double), @p39='?' (DbType = Double), @p40='?' (DbType = Double), @p41='?' (Size = 450), @p42='?' (DbType = Double), @p43='?' (DbType = DateTime2), @p44='?' (DbType = DateTime2), @p45='?' (DbType = Double), @p46='?' (DbType = Double), @p47='?' (DbType = Double), @p48='?' (Size = 450), @p49='?' (DbType = Double), @p50='?' (DbType = DateTime2), @p51='?' (DbType = DateTime2), @p52='?' (DbType = Double), @p53='?' (DbType = Double), @p54='?' (DbType = Double), @p55='?' (Size = 450), @p56='?' (DbType = Double), @p57='?' (DbType = DateTime2), @p58='?' (DbType = DateTime2), @p59='?' (DbType = Double), @p60='?' (DbType = Double), @p61='?' (DbType = Double), @p62='?' (Size = 450), @p63='?' (DbType = Double), @p64='?' (DbType = DateTime2), @p65='?' (DbType = DateTime2), @p66='?' (DbType = Double), @p67='?' (DbType = Double), @p68='?' (DbType = Double), @p69='?' (Size = 450), @p70='?' (DbType = Double), @p71='?' (DbType = DateTime2), @p72='?' (DbType = DateTime2), @p73='?' (DbType = Double), @p74='?' (DbType = Double), @p75='?' (DbType = Double), @p76='?' (Size = 450), @p77='?' (DbType = Double), @p78='?' (DbType = DateTime2), @p79='?' (DbType = DateTime2), @p80='?' (DbType = Double), @p81='?' (DbType = Double), @p82='?' (DbType = Double), @p83='?' (Size = 450), @p84='?' (DbType = Double), @p85='?' (DbType = DateTime2), @p86='?' (DbType = DateTime2), @p87='?' (DbType = Double), @p88='?' (DbType = Double), @p89='?' (DbType = Double), @p90='?' (Size = 450), @p91='?' (DbType = Double), @p92='?' (DbType = DateTime2), @p93='?' (DbType = DateTime2), @p94='?' (DbType = Double), @p95='?' (DbType = Double), @p96='?' (DbType = Double), @p97='?' (Size = 450), @p98='?' (DbType = Double), @p99='?' (DbType = DateTime2), @p100='?' (DbType = DateTime2), @p101='?' (DbType = Double), @p102='?' (DbType = Double), @p103='?' (DbType = Double), @p104='?' (Size = 450), @p105='?' (DbType = Double), @p106='?' (DbType = DateTime2), @p107='?' (DbType = DateTime2), @p108='?' (DbType = Double), @p109='?' (DbType = Double), @p110='?' (DbType = Double), @p111='?' (Size = 450), @p112='?' (DbType = Double), @p113='?' (DbType = DateTime2), @p114='?' (DbType = DateTime2), @p115='?' (DbType = Double), @p116='?' (DbType = Double), @p117='?' (DbType = Double), @p118='?' (Size = 450), @p119='?' (DbType = Double), @p120='?' (DbType = DateTime2), @p121='?' (DbType = DateTime2), @p122='?' (DbType = Double), @p123='?' (DbType = Double), @p124='?' (DbType = Double), @p125='?' (Size = 450), @p126='?' (DbType = Double), @p127='?' (DbType = DateTime2), @p128='?' (DbType = DateTime2), @p129='?' (DbType = Double), @p130='?' (DbType = Double), @p131='?' (DbType = Double), @p132='?' (Size = 450), @p133='?' (DbType = Double), @p134='?' (DbType = DateTime2), @p135='?' (DbType = DateTime2), @p136='?' (DbType = Double), @p137='?' (DbType = Double), @p138='?' (DbType = Double), @p139='?' (Size = 450), @p140='?' (DbType = Double), @p141='?' (DbType = DateTime2), @p142='?' (DbType = DateTime2), @p143='?' (DbType = Double), @p144='?' (DbType = Double), @p145='?' (DbType = Double), @p146='?' (Size = 450), @p147='?' (DbType = Double), @p148='?' (DbType = DateTime2), @p149='?' (DbType = DateTime2), @p150='?' (DbType = Double), @p151='?' (DbType = Double), @p152='?' (DbType = Double), @p153='?' (Size = 450), @p154='?' (DbType = Double), @p155='?' (DbType = DateTime2), @p156='?' (DbType = DateTime2), @p157='?' (DbType = Double), @p158='?' (DbType = Double), @p159='?' (DbType = Double), @p160='?' (Size = 450), @p161='?' (DbType = Double), @p162='?' (DbType = DateTime2), @p163='?' (DbType = DateTime2), @p164='?' (DbType = Double), @p165='?' (DbType = Double), @p166='?' (DbType = Double), @p167='?' (Size = 450), @p168='?' (DbType = Double), @p169='?' (DbType = DateTime2), @p170='?' (DbType = DateTime2), @p171='?' (DbType = Double), @p172='?' (DbType = Double), @p173='?' (DbType = Double), @p174='?' (Size = 450), @p175='?' (DbType = Double), @p176='?' (DbType = DateTime2), @p177='?' (DbType = DateTime2), @p178='?' (DbType = Double), @p179='?' (DbType = Double), @p180='?' (DbType = Double), @p181='?' (Size = 450), @p182='?' (DbType = Double), @p183='?' (DbType = DateTime2), @p184='?' (DbType = DateTime2), @p185='?' (DbType = Double), @p186='?' (DbType = Double), @p187='?' (DbType = Double), @p188='?' (Size = 450), @p189='?' (DbType = Double), @p190='?' (DbType = DateTime2), @p191='?' (DbType = DateTime2), @p192='?' (DbType = Double), @p193='?' (DbType = Double), @p194='?' (DbType = Double), @p195='?' (Size = 450), @p196='?' (DbType = Double), @p197='?' (DbType = DateTime2), @p198='?' (DbType = DateTime2), @p199='?' (DbType = Double), @p200='?' (DbType = Double), @p201='?' (DbType = Double), @p202='?' (Size = 450), @p203='?' (DbType = Double), @p204='?' (DbType = DateTime2), @p205='?' (DbType = DateTime2), @p206='?' (DbType = Double), @p207='?' (DbType = Double), @p208='?' (DbType = Double), @p209='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
DECLARE @inserted0 TABLE ([Id] int, [_Position] [int]);
MERGE [QuarterlyEarning] USING (
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, 0),
(@p7, @p8, @p9, @p10, @p11, @p12, @p13, 1),
(@p14, @p15, @p16, @p17, @p18, @p19, @p20, 2),
(@p21, @p22, @p23, @p24, @p25, @p26, @p27, 3),
(@p28, @p29, @p30, @p31, @p32, @p33, @p34, 4),
(@p35, @p36, @p37, @p38, @p39, @p40, @p41, 5),
(@p42, @p43, @p44, @p45, @p46, @p47, @p48, 6),
(@p49, @p50, @p51, @p52, @p53, @p54, @p55, 7),
(@p56, @p57, @p58, @p59, @p60, @p61, @p62, 8),
(@p63, @p64, @p65, @p66, @p67, @p68, @p69, 9),
(@p70, @p71, @p72, @p73, @p74, @p75, @p76, 10),
(@p77, @p78, @p79, @p80, @p81, @p82, @p83, 11),
(@p84, @p85, @p86, @p87, @p88, @p89, @p90, 12),
(@p91, @p92, @p93, @p94, @p95, @p96, @p97, 13),
(@p98, @p99, @p100, @p101, @p102, @p103, @p104, 14),
(@p105, @p106, @p107, @p108, @p109, @p110, @p111, 15),
(@p112, @p113, @p114, @p115, @p116, @p117, @p118, 16),
(@p119, @p120, @p121, @p122, @p123, @p124, @p125, 17),
(@p126, @p127, @p128, @p129, @p130, @p131, @p132, 18),
(@p133, @p134, @p135, @p136, @p137, @p138, @p139, 19),
(@p140, @p141, @p142, @p143, @p144, @p145, @p146, 20),
(@p147, @p148, @p149, @p150, @p151, @p152, @p153, 21),
(@p154, @p155, @p156, @p157, @p158, @p159, @p160, 22),
(@p161, @p162, @p163, @p164, @p165, @p166, @p167, 23),
(@p168, @p169, @p170, @p171, @p172, @p173, @p174, 24),
(@p175, @p176, @p177, @p178, @p179, @p180, @p181, 25),
(@p182, @p183, @p184, @p185, @p186, @p187, @p188, 26),
(@p189, @p190, @p191, @p192, @p193, @p194, @p195, 27),
(@p196, @p197, @p198, @p199, @p200, @p201, @p202, 28),
(@p203, @p204, @p205, @p206, @p207, @p208, @p209, 29)) AS i ([EstimatedEPS], [FiscalDateEnding], [ReportedDate], [ReportedEPS], [Surprise], [SurprisePercentage], [Symbol], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([EstimatedEPS], [FiscalDateEnding], [ReportedDate], [ReportedEPS], [Surprise], [SurprisePercentage], [Symbol])
VALUES (i.[EstimatedEPS], i.[FiscalDateEnding], i.[ReportedDate], i.[ReportedEPS], i.[Surprise], i.[SurprisePercentage], i.[Symbol])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted0;

SELECT [i].[Id] FROM @inserted0 i
ORDER BY [i].[_Position];
2022-05-12 01:07:28.516 +03:00 [INF] AddOrUpdate run successful.
2022-05-12 01:07:28.640 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.IncomeStatement with Symbol AUVIP
2022-05-12 01:07:28.641 +03:00 [INF] Generating URI for INCOME_STATEMENT with params: symbol: AUVIP
2022-05-12 01:07:28.642 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=INCOME_STATEMENT&symbol=AUVIP
2022-05-12 01:07:28.642 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=INCOME_STATEMENT&symbol=AUVIP".
2022-05-12 01:07:29.001 +03:00 [INF] Response has success status code
2022-05-12 01:07:29.002 +03:00 [INF] Trying to deserialize response.
2022-05-12 01:07:29.003 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 01:07:29.014 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__symbol_0
2022-05-12 01:07:29.015 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.IncomeStatement.
2022-05-12 01:07:29.023 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [i].[Symbol], [i].[ExistInApi], [i].[LastApiRefresh], [i].[LastLocalRefresh]
FROM [IncomeStatements] AS [i]
WHERE [i].[Symbol] = @__entity_Symbol_0
2022-05-12 01:07:29.024 +03:00 [INF] Entity does not exist. Adding to DB.
2022-05-12 01:07:29.037 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = Boolean), @p2='?' (DbType = DateTime2), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [IncomeStatements] ([Symbol], [ExistInApi], [LastApiRefresh], [LastLocalRefresh])
VALUES (@p0, @p1, @p2, @p3);
2022-05-12 01:07:29.074 +03:00 [INF] Executed DbCommand (35ms) [Parameters=[@p4='?' (DbType = Int64), @p5='?' (DbType = Double), @p6='?' (DbType = Double), @p7='?' (DbType = Int64), @p8='?' (DbType = Int64), @p9='?' (DbType = Int64), @p10='?' (DbType = Double), @p11='?' (DbType = DateTime2), @p12='?' (DbType = Double), @p13='?' (DbType = Double), @p14='?' (DbType = Int64), @p15='?' (DbType = Int64), @p16='?' (DbType = Double), @p17='?' (DbType = Int64), @p18='?' (DbType = Int64), @p19='?' (DbType = Double), @p20='?' (DbType = Double), @p21='?' (DbType = Double), @p22='?' (DbType = Int64), @p23='?' (DbType = Double), @p24='?' (DbType = Double), @p25='?' (DbType = Int64), @p26='?' (Size = 4000), @p27='?' (DbType = Int64), @p28='?' (DbType = Double), @p29='?' (Size = 450), @p30='?' (DbType = Int64), @p31='?' (DbType = Int64), @p32='?' (DbType = Double), @p33='?' (DbType = Double), @p34='?' (DbType = Int64), @p35='?' (DbType = Int64), @p36='?' (DbType = Int64), @p37='?' (DbType = Double), @p38='?' (DbType = DateTime2), @p39='?' (DbType = Double), @p40='?' (DbType = Double), @p41='?' (DbType = Int64), @p42='?' (DbType = Int64), @p43='?' (DbType = Double), @p44='?' (DbType = Int64), @p45='?' (DbType = Int64), @p46='?' (DbType = Double), @p47='?' (DbType = Double), @p48='?' (DbType = Double), @p49='?' (DbType = Int64), @p50='?' (DbType = Double), @p51='?' (DbType = Double), @p52='?' (DbType = Int64), @p53='?' (Size = 4000), @p54='?' (DbType = Int64), @p55='?' (DbType = Double), @p56='?' (Size = 450), @p57='?' (DbType = Int64), @p58='?' (DbType = Int64), @p59='?' (DbType = Double), @p60='?' (DbType = Double), @p61='?' (DbType = Int64), @p62='?' (DbType = Int64), @p63='?' (DbType = Int64), @p64='?' (DbType = Double), @p65='?' (DbType = DateTime2), @p66='?' (DbType = Double), @p67='?' (DbType = Double), @p68='?' (DbType = Int64), @p69='?' (DbType = Int64), @p70='?' (DbType = Double), @p71='?' (DbType = Int64), @p72='?' (DbType = Int64), @p73='?' (DbType = Double), @p74='?' (DbType = Double), @p75='?' (DbType = Double), @p76='?' (DbType = Int64), @p77='?' (DbType = Double), @p78='?' (DbType = Double), @p79='?' (DbType = Int64), @p80='?' (Size = 4000), @p81='?' (DbType = Int64), @p82='?' (DbType = Double), @p83='?' (Size = 450), @p84='?' (DbType = Int64), @p85='?' (DbType = Int64), @p86='?' (DbType = Double), @p87='?' (DbType = Double), @p88='?' (DbType = Int64), @p89='?' (DbType = Int64), @p90='?' (DbType = Int64), @p91='?' (DbType = Double), @p92='?' (DbType = DateTime2), @p93='?' (DbType = Double), @p94='?' (DbType = Double), @p95='?' (DbType = Int64), @p96='?' (DbType = Int64), @p97='?' (DbType = Double), @p98='?' (DbType = Int64), @p99='?' (DbType = Int64), @p100='?' (DbType = Double), @p101='?' (DbType = Double), @p102='?' (DbType = Double), @p103='?' (DbType = Int64), @p104='?' (DbType = Double), @p105='?' (DbType = Double), @p106='?' (DbType = Int64), @p107='?' (Size = 4000), @p108='?' (DbType = Int64), @p109='?' (DbType = Double), @p110='?' (Size = 450), @p111='?' (DbType = Int64), @p112='?' (DbType = Int64), @p113='?' (DbType = Double), @p114='?' (DbType = Double), @p115='?' (DbType = Int64), @p116='?' (DbType = Int64), @p117='?' (DbType = Int64), @p118='?' (DbType = Double), @p119='?' (DbType = DateTime2), @p120='?' (DbType = Double), @p121='?' (DbType = Double), @p122='?' (DbType = Int64), @p123='?' (DbType = Int64), @p124='?' (DbType = Double), @p125='?' (DbType = Int64), @p126='?' (DbType = Int64), @p127='?' (DbType = Double), @p128='?' (DbType = Double), @p129='?' (DbType = Double), @p130='?' (DbType = Int64), @p131='?' (DbType = Double), @p132='?' (DbType = Double), @p133='?' (DbType = Int64), @p134='?' (Size = 4000), @p135='?' (DbType = Int64), @p136='?' (DbType = Double), @p137='?' (Size = 450), @p138='?' (DbType = Int64), @p139='?' (DbType = Int64), @p140='?' (DbType = Double), @p141='?' (DbType = Double), @p142='?' (DbType = Int64), @p143='?' (DbType = Int64), @p144='?' (DbType = Int64), @p145='?' (DbType = Double), @p146='?' (DbType = DateTime2), @p147='?' (DbType = Double), @p148='?' (DbType = Double), @p149='?' (DbType = Int64), @p150='?' (DbType = Int64), @p151='?' (DbType = Double), @p152='?' (DbType = Int64), @p153='?' (DbType = Int64), @p154='?' (DbType = Double), @p155='?' (DbType = Double), @p156='?' (DbType = Double), @p157='?' (DbType = Int64), @p158='?' (DbType = Double), @p159='?' (DbType = Double), @p160='?' (DbType = Int64), @p161='?' (Size = 4000), @p162='?' (DbType = Int64), @p163='?' (DbType = Double), @p164='?' (Size = 450), @p165='?' (DbType = Int64), @p166='?' (DbType = Int64), @p167='?' (DbType = Double), @p168='?' (DbType = Double), @p169='?' (DbType = Int64), @p170='?' (DbType = Int64), @p171='?' (DbType = Int64), @p172='?' (DbType = Double), @p173='?' (DbType = DateTime2), @p174='?' (DbType = Double), @p175='?' (DbType = Double), @p176='?' (DbType = Int64), @p177='?' (DbType = Int64), @p178='?' (DbType = Double), @p179='?' (DbType = Int64), @p180='?' (DbType = Int64), @p181='?' (DbType = Double), @p182='?' (DbType = Double), @p183='?' (DbType = Double), @p184='?' (DbType = Int64), @p185='?' (DbType = Double), @p186='?' (DbType = Double), @p187='?' (DbType = Int64), @p188='?' (Size = 4000), @p189='?' (DbType = Int64), @p190='?' (DbType = Double), @p191='?' (Size = 450), @p192='?' (DbType = Int64), @p193='?' (DbType = Int64), @p194='?' (DbType = Double), @p195='?' (DbType = Double), @p196='?' (DbType = Int64), @p197='?' (DbType = Int64), @p198='?' (DbType = Int64), @p199='?' (DbType = Double), @p200='?' (DbType = DateTime2), @p201='?' (DbType = Double), @p202='?' (DbType = Double), @p203='?' (DbType = Int64), @p204='?' (DbType = Int64), @p205='?' (DbType = Double), @p206='?' (DbType = Int64), @p207='?' (DbType = Int64), @p208='?' (DbType = Double), @p209='?' (DbType = Double), @p210='?' (DbType = Double), @p211='?' (DbType = Int64), @p212='?' (DbType = Double), @p213='?' (DbType = Double), @p214='?' (DbType = Int64), @p215='?' (Size = 4000), @p216='?' (DbType = Int64), @p217='?' (DbType = Double), @p218='?' (Size = 450), @p219='?' (DbType = Int64), @p220='?' (DbType = Int64), @p221='?' (DbType = Double), @p222='?' (DbType = Double), @p223='?' (DbType = Int64), @p224='?' (DbType = Int64), @p225='?' (DbType = Int64), @p226='?' (DbType = Double), @p227='?' (DbType = DateTime2), @p228='?' (DbType = Double), @p229='?' (DbType = Double), @p230='?' (DbType = Int64), @p231='?' (DbType = Int64), @p232='?' (DbType = Double), @p233='?' (DbType = Int64), @p234='?' (DbType = Int64), @p235='?' (DbType = Double), @p236='?' (DbType = Double), @p237='?' (DbType = Double), @p238='?' (DbType = Int64), @p239='?' (DbType = Double), @p240='?' (DbType = Double), @p241='?' (DbType = Int64), @p242='?' (Size = 4000), @p243='?' (DbType = Int64), @p244='?' (DbType = Double), @p245='?' (Size = 450), @p246='?' (DbType = Int64), @p247='?' (DbType = Int64), @p248='?' (DbType = Double), @p249='?' (DbType = Double), @p250='?' (DbType = Int64), @p251='?' (DbType = Int64), @p252='?' (DbType = Int64), @p253='?' (DbType = Double), @p254='?' (DbType = DateTime2), @p255='?' (DbType = Double), @p256='?' (DbType = Double), @p257='?' (DbType = Int64), @p258='?' (DbType = Int64), @p259='?' (DbType = Double), @p260='?' (DbType = Int64), @p261='?' (DbType = Int64), @p262='?' (DbType = Double), @p263='?' (DbType = Double), @p264='?' (DbType = Double), @p265='?' (DbType = Int64), @p266='?' (DbType = Double), @p267='?' (DbType = Double), @p268='?' (DbType = Int64), @p269='?' (Size = 4000), @p270='?' (DbType = Int64), @p271='?' (DbType = Double), @p272='?' (Size = 450), @p273='?' (DbType = Int64), @p274='?' (DbType = Int64), @p275='?' (DbType = Double), @p276='?' (DbType = Double), @p277='?' (DbType = Int64), @p278='?' (DbType = Int64), @p279='?' (DbType = Int64), @p280='?' (DbType = Double), @p281='?' (DbType = DateTime2), @p282='?' (DbType = Double), @p283='?' (DbType = Double), @p284='?' (DbType = Int64), @p285='?' (DbType = Int64), @p286='?' (DbType = Double), @p287='?' (DbType = Int64), @p288='?' (DbType = Int64), @p289='?' (DbType = Double), @p290='?' (DbType = Double), @p291='?' (DbType = Double), @p292='?' (DbType = Int64), @p293='?' (DbType = Double), @p294='?' (DbType = Double), @p295='?' (DbType = Int64), @p296='?' (Size = 4000), @p297='?' (DbType = Int64), @p298='?' (DbType = Double), @p299='?' (Size = 450), @p300='?' (DbType = Int64), @p301='?' (DbType = Int64), @p302='?' (DbType = Double), @p303='?' (DbType = Double), @p304='?' (DbType = Int64), @p305='?' (DbType = Int64), @p306='?' (DbType = Int64), @p307='?' (DbType = Double), @p308='?' (DbType = DateTime2), @p309='?' (DbType = Double), @p310='?' (DbType = Double), @p311='?' (DbType = Int64), @p312='?' (DbType = Int64), @p313='?' (DbType = Double), @p314='?' (DbType = Int64), @p315='?' (DbType = Int64), @p316='?' (DbType = Double), @p317='?' (DbType = Double), @p318='?' (DbType = Double), @p319='?' (DbType = Int64), @p320='?' (DbType = Double), @p321='?' (DbType = Double), @p322='?' (DbType = Int64), @p323='?' (Size = 4000), @p324='?' (DbType = Int64), @p325='?' (DbType = Double), @p326='?' (Size = 450), @p327='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
DECLARE @inserted0 TABLE ([Id] int, [_Position] [int]);
MERGE [IncomeStatementAnnualReport] USING (
VALUES (@p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21, @p22, @p23, @p24, @p25, @p26, @p27, @p28, @p29, @p30, 0),
(@p31, @p32, @p33, @p34, @p35, @p36, @p37, @p38, @p39, @p40, @p41, @p42, @p43, @p44, @p45, @p46, @p47, @p48, @p49, @p50, @p51, @p52, @p53, @p54, @p55, @p56, @p57, 1)) AS i ([ComprehensiveIncomeNetOfTax], [CostOfRevenue], [CostofGoodsAndServicesSold], [Depreciation], [DepreciationAndAmortization], [Ebit], [Ebitda], [FiscalDateEnding], [GrossProfit], [IncomeBeforeTax], [IncomeTaxExpense], [InterestAndDebtExpense], [InterestExpense], [InterestIncome], [InvestmentIncomeNet], [NetIncome], [NetIncomeFromContinuingOperations], [NetInterestIncome], [NonInterestIncome], [OperatingExpenses], [OperatingIncome], [OtherNonOperatingIncome], [ReportedCurrency], [ResearchAndDevelopment], [SellingGeneralAndAdministrative], [Symbol], [TotalRevenue], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([ComprehensiveIncomeNetOfTax], [CostOfRevenue], [CostofGoodsAndServicesSold], [Depreciation], [DepreciationAndAmortization], [Ebit], [Ebitda], [FiscalDateEnding], [GrossProfit], [IncomeBeforeTax], [IncomeTaxExpense], [InterestAndDebtExpense], [InterestExpense], [InterestIncome], [InvestmentIncomeNet], [NetIncome], [NetIncomeFromContinuingOperations], [NetInterestIncome], [NonInterestIncome], [OperatingExpenses], [OperatingIncome], [OtherNonOperatingIncome], [ReportedCurrency], [ResearchAndDevelopment], [SellingGeneralAndAdministrative], [Symbol], [TotalRevenue])
VALUES (i.[ComprehensiveIncomeNetOfTax], i.[CostOfRevenue], i.[CostofGoodsAndServicesSold], i.[Depreciation], i.[DepreciationAndAmortization], i.[Ebit], i.[Ebitda], i.[FiscalDateEnding], i.[GrossProfit], i.[IncomeBeforeTax], i.[IncomeTaxExpense], i.[InterestAndDebtExpense], i.[InterestExpense], i.[InterestIncome], i.[InvestmentIncomeNet], i.[NetIncome], i.[NetIncomeFromContinuingOperations], i.[NetInterestIncome], i.[NonInterestIncome], i.[OperatingExpenses], i.[OperatingIncome], i.[OtherNonOperatingIncome], i.[ReportedCurrency], i.[ResearchAndDevelopment], i.[SellingGeneralAndAdministrative], i.[Symbol], i.[TotalRevenue])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted0;

SELECT [i].[Id] FROM @inserted0 i
ORDER BY [i].[_Position];

DECLARE @inserted2 TABLE ([Id] int, [_Position] [int]);
MERGE [IncomeStatementQuarterlyReport] USING (
VALUES (@p58, @p59, @p60, @p61, @p62, @p63, @p64, @p65, @p66, @p67, @p68, @p69, @p70, @p71, @p72, @p73, @p74, @p75, @p76, @p77, @p78, @p79, @p80, @p81, @p82, @p83, @p84, 0),
(@p85, @p86, @p87, @p88, @p89, @p90, @p91, @p92, @p93, @p94, @p95, @p96, @p97, @p98, @p99, @p100, @p101, @p102, @p103, @p104, @p105, @p106, @p107, @p108, @p109, @p110, @p111, 1),
(@p112, @p113, @p114, @p115, @p116, @p117, @p118, @p119, @p120, @p121, @p122, @p123, @p124, @p125, @p126, @p127, @p128, @p129, @p130, @p131, @p132, @p133, @p134, @p135, @p136, @p137, @p138, 2),
(@p139, @p140, @p141, @p142, @p143, @p144, @p145, @p146, @p147, @p148, @p149, @p150, @p151, @p152, @p153, @p154, @p155, @p156, @p157, @p158, @p159, @p160, @p161, @p162, @p163, @p164, @p165, 3),
(@p166, @p167, @p168, @p169, @p170, @p171, @p172, @p173, @p174, @p175, @p176, @p177, @p178, @p179, @p180, @p181, @p182, @p183, @p184, @p185, @p186, @p187, @p188, @p189, @p190, @p191, @p192, 4),
(@p193, @p194, @p195, @p196, @p197, @p198, @p199, @p200, @p201, @p202, @p203, @p204, @p205, @p206, @p207, @p208, @p209, @p210, @p211, @p212, @p213, @p214, @p215, @p216, @p217, @p218, @p219, 5),
(@p220, @p221, @p222, @p223, @p224, @p225, @p226, @p227, @p228, @p229, @p230, @p231, @p232, @p233, @p234, @p235, @p236, @p237, @p238, @p239, @p240, @p241, @p242, @p243, @p244, @p245, @p246, 6),
(@p247, @p248, @p249, @p250, @p251, @p252, @p253, @p254, @p255, @p256, @p257, @p258, @p259, @p260, @p261, @p262, @p263, @p264, @p265, @p266, @p267, @p268, @p269, @p270, @p271, @p272, @p273, 7),
(@p274, @p275, @p276, @p277, @p278, @p279, @p280, @p281, @p282, @p283, @p284, @p285, @p286, @p287, @p288, @p289, @p290, @p291, @p292, @p293, @p294, @p295, @p296, @p297, @p298, @p299, @p300, 8),
(@p301, @p302, @p303, @p304, @p305, @p306, @p307, @p308, @p309, @p310, @p311, @p312, @p313, @p314, @p315, @p316, @p317, @p318, @p319, @p320, @p321, @p322, @p323, @p324, @p325, @p326, @p327, 9)) AS i ([ComprehensiveIncomeNetOfTax], [CostOfRevenue], [CostofGoodsAndServicesSold], [Depreciation], [DepreciationAndAmortization], [Ebit], [Ebitda], [FiscalDateEnding], [GrossProfit], [IncomeBeforeTax], [IncomeTaxExpense], [InterestAndDebtExpense], [InterestExpense], [InterestIncome], [InvestmentIncomeNet], [NetIncome], [NetIncomeFromContinuingOperations], [NetInterestIncome], [NonInterestIncome], [OperatingExpenses], [OperatingIncome], [OtherNonOperatingIncome], [ReportedCurrency], [ResearchAndDevelopment], [SellingGeneralAndAdministrative], [Symbol], [TotalRevenue], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([ComprehensiveIncomeNetOfTax], [CostOfRevenue], [CostofGoodsAndServicesSold], [Depreciation], [DepreciationAndAmortization], [Ebit], [Ebitda], [FiscalDateEnding], [GrossProfit], [IncomeBeforeTax], [IncomeTaxExpense], [InterestAndDebtExpense], [InterestExpense], [InterestIncome], [InvestmentIncomeNet], [NetIncome], [NetIncomeFromContinuingOperations], [NetInterestIncome], [NonInterestIncome], [OperatingExpenses], [OperatingIncome], [OtherNonOperatingIncome], [ReportedCurrency], [ResearchAndDevelopment], [SellingGeneralAndAdministrative], [Symbol], [TotalRevenue])
VALUES (i.[ComprehensiveIncomeNetOfTax], i.[CostOfRevenue], i.[CostofGoodsAndServicesSold], i.[Depreciation], i.[DepreciationAndAmortization], i.[Ebit], i.[Ebitda], i.[FiscalDateEnding], i.[GrossProfit], i.[IncomeBeforeTax], i.[IncomeTaxExpense], i.[InterestAndDebtExpense], i.[InterestExpense], i.[InterestIncome], i.[InvestmentIncomeNet], i.[NetIncome], i.[NetIncomeFromContinuingOperations], i.[NetInterestIncome], i.[NonInterestIncome], i.[OperatingExpenses], i.[OperatingIncome], i.[OtherNonOperatingIncome], i.[ReportedCurrency], i.[ResearchAndDevelopment], i.[SellingGeneralAndAdministrative], i.[Symbol], i.[TotalRevenue])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted2;

SELECT [i].[Id] FROM @inserted2 i
ORDER BY [i].[_Position];
2022-05-12 01:07:29.083 +03:00 [INF] AddOrUpdate run successful.
2022-05-12 01:07:31.350 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.BalanceSheet with Symbol BEPH
2022-05-12 01:07:31.352 +03:00 [INF] Generating URI for BALANCE_SHEET with params: symbol: BEPH
2022-05-12 01:07:31.352 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BEPH
2022-05-12 01:07:31.353 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BEPH".
2022-05-12 01:07:31.578 +03:00 [INF] Response has success status code
2022-05-12 01:07:31.579 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.BalanceSheet for symbol BEPH
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetBalanceSheet(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 82
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:07:39.150 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CashFlow with Symbol AURA
2022-05-12 01:07:39.153 +03:00 [INF] Generating URI for CASH_FLOW with params: symbol: AURA
2022-05-12 01:07:39.154 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=CASH_FLOW&symbol=AURA
2022-05-12 01:07:39.155 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=CASH_FLOW&symbol=AURA".
2022-05-12 01:07:39.384 +03:00 [INF] Response has success status code
2022-05-12 01:07:39.385 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.CashFlow for symbol AURA
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCashFlow(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 96
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:07:56.261 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CompanyOverview with Symbol BKMC
2022-05-12 01:07:56.262 +03:00 [INF] Generating URI for OVERVIEW with params: symbol: BKMC
2022-05-12 01:07:56.263 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=OVERVIEW&symbol=BKMC
2022-05-12 01:07:56.263 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=OVERVIEW&symbol=BKMC".
2022-05-12 01:07:56.492 +03:00 [INF] Response has success status code
2022-05-12 01:07:56.493 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.CompanyOverview for symbol BKMC
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyOverview(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 116
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:07:58.541 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.Earnings with Symbol AXGN
2022-05-12 01:07:58.544 +03:00 [INF] Generating URI for EARNINGS with params: symbol: AXGN
2022-05-12 01:07:58.545 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=EARNINGS&symbol=AXGN
2022-05-12 01:07:58.545 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=EARNINGS&symbol=AXGN".
2022-05-12 01:07:58.754 +03:00 [INF] Response has success status code
2022-05-12 01:07:58.755 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.Earnings for symbol AXGN
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyEarnings(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 142
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:07:59.094 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.IncomeStatement with Symbol AVA
2022-05-12 01:07:59.097 +03:00 [INF] Generating URI for INCOME_STATEMENT with params: symbol: AVA
2022-05-12 01:07:59.098 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=INCOME_STATEMENT&symbol=AVA
2022-05-12 01:07:59.098 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=INCOME_STATEMENT&symbol=AVA".
2022-05-12 01:07:59.318 +03:00 [INF] Response has success status code
2022-05-12 01:07:59.320 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.IncomeStatement for symbol AVA
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetIncomeStatement(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 69
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:08:01.598 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.BalanceSheet with Symbol BEP-P-A
2022-05-12 01:08:01.602 +03:00 [INF] Generating URI for BALANCE_SHEET with params: symbol: BEP-P-A
2022-05-12 01:08:01.602 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BEP-P-A
2022-05-12 01:08:01.603 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BEP-P-A".
2022-05-12 01:08:02.308 +03:00 [INF] Response has success status code
2022-05-12 01:08:02.308 +03:00 [INF] Trying to deserialize response.
2022-05-12 01:08:02.309 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 01:08:02.371 +03:00 [INF] Executed DbCommand (61ms) [Parameters=[@__symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__symbol_0
2022-05-12 01:08:02.373 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.BalanceSheet.
2022-05-12 01:08:02.380 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [b].[Symbol], [b].[ExistInApi], [b].[LastApiRefresh], [b].[LastLocalRefresh]
FROM [BalanceSheets] AS [b]
WHERE [b].[Symbol] = @__entity_Symbol_0
2022-05-12 01:08:02.381 +03:00 [INF] Entity does not exist. Adding to DB.
2022-05-12 01:08:02.394 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = Boolean), @p2='?' (DbType = DateTime2), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [BalanceSheets] ([Symbol], [ExistInApi], [LastApiRefresh], [LastLocalRefresh])
VALUES (@p0, @p1, @p2, @p3);
2022-05-12 01:08:02.400 +03:00 [INF] AddOrUpdate run successful.
2022-05-12 01:08:09.393 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CashFlow with Symbol AUROW
2022-05-12 01:08:09.396 +03:00 [INF] Generating URI for CASH_FLOW with params: symbol: AUROW
2022-05-12 01:08:09.397 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=CASH_FLOW&symbol=AUROW
2022-05-12 01:08:09.397 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=CASH_FLOW&symbol=AUROW".
2022-05-12 01:08:09.629 +03:00 [INF] Response has success status code
2022-05-12 01:08:09.630 +03:00 [INF] Trying to deserialize response.
2022-05-12 01:08:09.631 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 01:08:09.682 +03:00 [INF] Executed DbCommand (50ms) [Parameters=[@__symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__symbol_0
2022-05-12 01:08:09.683 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.CashFlow.
2022-05-12 01:08:09.691 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[ExistInApi], [c].[LastApiRefresh], [c].[LastLocalRefresh]
FROM [CashFlows] AS [c]
WHERE [c].[Symbol] = @__entity_Symbol_0
2022-05-12 01:08:09.692 +03:00 [INF] Entity does not exist. Adding to DB.
2022-05-12 01:08:09.704 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = Boolean), @p2='?' (DbType = DateTime2), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [CashFlows] ([Symbol], [ExistInApi], [LastApiRefresh], [LastLocalRefresh])
VALUES (@p0, @p1, @p2, @p3);
2022-05-12 01:08:09.715 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@p0='?' (DbType = Double), @p1='?' (DbType = Double), @p2='?' (DbType = Int64), @p3='?' (DbType = Int64), @p4='?' (DbType = Int64), @p5='?' (DbType = Int64), @p6='?' (DbType = Int64), @p7='?' (DbType = Int64), @p8='?' (DbType = Int64), @p9='?' (DbType = Double), @p10='?' (DbType = Int64), @p11='?' (DbType = Double), @p12='?' (DbType = Int64), @p13='?' (Size = 4000), @p14='?' (DbType = Double), @p15='?' (DbType = Double), @p16='?' (DbType = Int64), @p17='?' (DbType = Int64), @p18='?' (DbType = Int64), @p19='?' (DbType = Int64), @p20='?' (DbType = Int64), @p21='?' (DbType = Int64), @p22='?' (DbType = Int64), @p23='?' (DbType = Int64), @p24='?' (DbType = Int64), @p25='?' (DbType = Double), @p26='?' (DbType = Int64), @p27='?' (DbType = Int64), @p28='?' (Size = 4000), @p29='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [CashFlowAnnualReport] ([CapitalExpenditures], [CashflowFromFinancing], [CashflowFromInvestment], [ChangeInCashAndCashEquivalents], [ChangeInExchangeRate], [ChangeInInventory], [ChangeInOperatingAssets], [ChangeInOperatingLiabilities], [ChangeInReceivables], [DepreciationDepletionAndAmortization], [DividendPayout], [DividendPayoutCommonStock], [DividendPayoutPreferredStock], [FiscalDateEnding], [NetIncome], [OperatingCashFlow], [PaymentsForOperatingActivities], [PaymentsForRepurchaseOfCommonStock], [PaymentsForRepurchaseOfEquity], [PaymentsForRepurchaseOfPreferredStock], [ProceedsFromIssuanceOfCommonStock], [ProceedsFromIssuanceOfLongTermDebtAndCapitalSecuritiesNet], [ProceedsFromIssuanceOfPreferredStock], [ProceedsFromOperatingActivities], [ProceedsFromRepaymentsOfShortTermDebt], [ProceedsFromRepurchaseOfEquity], [ProceedsFromSaleOfTreasuryStock], [ProfitLoss], [ReportedCurrency], [Symbol])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21, @p22, @p23, @p24, @p25, @p26, @p27, @p28, @p29);
SELECT [Id]
FROM [CashFlowAnnualReport]
WHERE @@ROWCOUNT = 1 AND [Id] = scope_identity();
2022-05-12 01:08:09.727 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@p0='?' (DbType = Double), @p1='?' (DbType = Double), @p2='?' (DbType = Int64), @p3='?' (DbType = Int64), @p4='?' (DbType = Int64), @p5='?' (DbType = Int64), @p6='?' (DbType = Int64), @p7='?' (DbType = Int64), @p8='?' (DbType = Int64), @p9='?' (DbType = Double), @p10='?' (DbType = Int64), @p11='?' (DbType = Double), @p12='?' (DbType = Int64), @p13='?' (Size = 4000), @p14='?' (DbType = Double), @p15='?' (DbType = Double), @p16='?' (DbType = Int64), @p17='?' (DbType = Int64), @p18='?' (DbType = Int64), @p19='?' (DbType = Int64), @p20='?' (DbType = Int64), @p21='?' (DbType = Int64), @p22='?' (DbType = Int64), @p23='?' (DbType = Int64), @p24='?' (DbType = Int64), @p25='?' (DbType = Double), @p26='?' (DbType = Int64), @p27='?' (DbType = Int64), @p28='?' (Size = 4000), @p29='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [CashFlowAnnualReport] ([CapitalExpenditures], [CashflowFromFinancing], [CashflowFromInvestment], [ChangeInCashAndCashEquivalents], [ChangeInExchangeRate], [ChangeInInventory], [ChangeInOperatingAssets], [ChangeInOperatingLiabilities], [ChangeInReceivables], [DepreciationDepletionAndAmortization], [DividendPayout], [DividendPayoutCommonStock], [DividendPayoutPreferredStock], [FiscalDateEnding], [NetIncome], [OperatingCashFlow], [PaymentsForOperatingActivities], [PaymentsForRepurchaseOfCommonStock], [PaymentsForRepurchaseOfEquity], [PaymentsForRepurchaseOfPreferredStock], [ProceedsFromIssuanceOfCommonStock], [ProceedsFromIssuanceOfLongTermDebtAndCapitalSecuritiesNet], [ProceedsFromIssuanceOfPreferredStock], [ProceedsFromOperatingActivities], [ProceedsFromRepaymentsOfShortTermDebt], [ProceedsFromRepurchaseOfEquity], [ProceedsFromSaleOfTreasuryStock], [ProfitLoss], [ReportedCurrency], [Symbol])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21, @p22, @p23, @p24, @p25, @p26, @p27, @p28, @p29);
SELECT [Id]
FROM [CashFlowAnnualReport]
WHERE @@ROWCOUNT = 1 AND [Id] = scope_identity();
2022-05-12 01:08:09.739 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@p0='?' (DbType = Double), @p1='?' (DbType = Double), @p2='?' (DbType = Int64), @p3='?' (DbType = Int64), @p4='?' (DbType = Int64), @p5='?' (DbType = Int64), @p6='?' (DbType = Int64), @p7='?' (DbType = Int64), @p8='?' (DbType = Int64), @p9='?' (DbType = Double), @p10='?' (DbType = Int64), @p11='?' (DbType = Double), @p12='?' (DbType = Int64), @p13='?' (Size = 4000), @p14='?' (DbType = Double), @p15='?' (DbType = Double), @p16='?' (DbType = Int64), @p17='?' (DbType = Int64), @p18='?' (DbType = Int64), @p19='?' (DbType = Int64), @p20='?' (DbType = Int64), @p21='?' (DbType = Int64), @p22='?' (DbType = Int64), @p23='?' (DbType = Int64), @p24='?' (DbType = Int64), @p25='?' (DbType = Double), @p26='?' (DbType = Int64), @p27='?' (DbType = Int64), @p28='?' (Size = 4000), @p29='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [CashFlowQuarterlyReport] ([CapitalExpenditures], [CashflowFromFinancing], [CashflowFromInvestment], [ChangeInCashAndCashEquivalents], [ChangeInExchangeRate], [ChangeInInventory], [ChangeInOperatingAssets], [ChangeInOperatingLiabilities], [ChangeInReceivables], [DepreciationDepletionAndAmortization], [DividendPayout], [DividendPayoutCommonStock], [DividendPayoutPreferredStock], [FiscalDateEnding], [NetIncome], [OperatingCashFlow], [PaymentsForOperatingActivities], [PaymentsForRepurchaseOfCommonStock], [PaymentsForRepurchaseOfEquity], [PaymentsForRepurchaseOfPreferredStock], [ProceedsFromIssuanceOfCommonStock], [ProceedsFromIssuanceOfLongTermDebtAndCapitalSecuritiesNet], [ProceedsFromIssuanceOfPreferredStock], [ProceedsFromOperatingActivities], [ProceedsFromRepaymentsOfShortTermDebt], [ProceedsFromRepurchaseOfEquity], [ProceedsFromSaleOfTreasuryStock], [ProfitLoss], [ReportedCurrency], [Symbol])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21, @p22, @p23, @p24, @p25, @p26, @p27, @p28, @p29);
SELECT [Id]
FROM [CashFlowQuarterlyReport]
WHERE @@ROWCOUNT = 1 AND [Id] = scope_identity();
2022-05-12 01:08:09.748 +03:00 [INF] AddOrUpdate run successful.
2022-05-12 01:08:17.484 +03:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/screener-model - -
2022-05-12 01:08:17.484 +03:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/distribution/market-cap/30 - -
2022-05-12 01:08:17.485 +03:00 [INF] CORS policy execution successful.
2022-05-12 01:08:17.485 +03:00 [INF] CORS policy execution successful.
2022-05-12 01:08:17.486 +03:00 [INF] Executing endpoint 'SaluteStocksAPI.Controllers.ApiController.GetScreenerModel (SaluteStocksAPI)'
2022-05-12 01:08:17.486 +03:00 [INF] Executing endpoint 'SaluteStocksAPI.Controllers.ApiController.GetMarketCapDistribution (SaluteStocksAPI)'
2022-05-12 01:08:17.487 +03:00 [INF] Route matched with {action = "GetScreenerModel", controller = "Api"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetScreenerModel() on controller SaluteStocksAPI.Controllers.ApiController (SaluteStocksAPI).
2022-05-12 01:08:17.487 +03:00 [INF] Route matched with {action = "GetMarketCapDistribution", controller = "Api"}. Executing controller action with signature System.Threading.Tasks.Task`1[System.String] GetMarketCapDistribution(Int32) on controller SaluteStocksAPI.Controllers.ApiController (SaluteStocksAPI).
2022-05-12 01:08:17.488 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 01:08:17.489 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 01:08:17.501 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[MarketCapitalization])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 01:08:17.501 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[MarketCapitalization])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 01:08:17.511 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[MarketCapitalization])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 01:08:17.512 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[MarketCapitalization])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 01:08:17.523 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[EBITDA])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 01:08:17.524 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:08:17.533 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[EBITDA])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 01:08:17.534 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:08:17.544 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[PERatio])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 01:08:17.544 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:08:17.555 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[PERatio])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 01:08:17.556 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:08:17.557 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2022-05-12 01:08:17.559 +03:00 [INF] Executed action SaluteStocksAPI.Controllers.ApiController.GetScreenerModel (SaluteStocksAPI) in 71.2436ms
2022-05-12 01:08:17.560 +03:00 [INF] Executed endpoint 'SaluteStocksAPI.Controllers.ApiController.GetScreenerModel (SaluteStocksAPI)'
2022-05-12 01:08:17.561 +03:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/screener-model - - - 200 - text/plain;+charset=utf-8 76.6106ms
2022-05-12 01:08:17.569 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:08:17.582 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:08:17.592 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:08:17.601 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:08:17.612 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:08:17.623 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:08:17.636 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:08:17.645 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:08:17.656 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:08:17.666 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:08:17.676 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:08:17.685 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:08:17.699 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:08:17.710 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:08:17.723 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:08:17.733 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:08:17.743 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:08:17.754 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:08:17.764 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:08:17.777 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:08:17.789 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:08:17.797 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:08:17.808 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:08:17.818 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:08:17.827 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:08:17.829 +03:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2022-05-12 01:08:17.830 +03:00 [INF] Executed action SaluteStocksAPI.Controllers.ApiController.GetMarketCapDistribution (SaluteStocksAPI) in 340.6907ms
2022-05-12 01:08:17.831 +03:00 [INF] Executed endpoint 'SaluteStocksAPI.Controllers.ApiController.GetMarketCapDistribution (SaluteStocksAPI)'
2022-05-12 01:08:17.831 +03:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/distribution/market-cap/30 - - - 200 - text/plain;+charset=utf-8 347.2503ms
2022-05-12 01:08:18.040 +03:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/distribution/market-cap/30 - -
2022-05-12 01:08:18.040 +03:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/screener-model - -
2022-05-12 01:08:18.041 +03:00 [INF] CORS policy execution successful.
2022-05-12 01:08:18.041 +03:00 [INF] CORS policy execution successful.
2022-05-12 01:08:18.041 +03:00 [INF] Executing endpoint 'SaluteStocksAPI.Controllers.ApiController.GetMarketCapDistribution (SaluteStocksAPI)'
2022-05-12 01:08:18.042 +03:00 [INF] Executing endpoint 'SaluteStocksAPI.Controllers.ApiController.GetScreenerModel (SaluteStocksAPI)'
2022-05-12 01:08:18.042 +03:00 [INF] Route matched with {action = "GetMarketCapDistribution", controller = "Api"}. Executing controller action with signature System.Threading.Tasks.Task`1[System.String] GetMarketCapDistribution(Int32) on controller SaluteStocksAPI.Controllers.ApiController (SaluteStocksAPI).
2022-05-12 01:08:18.043 +03:00 [INF] Route matched with {action = "GetScreenerModel", controller = "Api"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetScreenerModel() on controller SaluteStocksAPI.Controllers.ApiController (SaluteStocksAPI).
2022-05-12 01:08:18.044 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 01:08:18.045 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 01:08:18.056 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[MarketCapitalization])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 01:08:18.056 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[MarketCapitalization])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 01:08:18.066 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[MarketCapitalization])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 01:08:18.068 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[MarketCapitalization])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 01:08:18.075 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[EBITDA])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 01:08:18.077 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:08:18.085 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[EBITDA])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 01:08:18.088 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:08:18.095 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[PERatio])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 01:08:18.097 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:08:18.107 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[PERatio])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 01:08:18.109 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:08:18.109 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2022-05-12 01:08:18.112 +03:00 [INF] Executed action SaluteStocksAPI.Controllers.ApiController.GetScreenerModel (SaluteStocksAPI) in 67.6604ms
2022-05-12 01:08:18.113 +03:00 [INF] Executed endpoint 'SaluteStocksAPI.Controllers.ApiController.GetScreenerModel (SaluteStocksAPI)'
2022-05-12 01:08:18.114 +03:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/screener-model - - - 200 - text/plain;+charset=utf-8 73.7281ms
2022-05-12 01:08:18.119 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:08:18.129 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:08:18.139 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:08:18.146 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:08:18.156 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:08:18.166 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:08:18.175 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:08:18.186 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:08:18.200 +03:00 [INF] Executed DbCommand (12ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:08:18.211 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:08:18.224 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:08:18.234 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:08:18.243 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:08:18.253 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:08:18.265 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:08:18.277 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:08:18.289 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:08:18.299 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:08:18.308 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:08:18.319 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:08:18.331 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:08:18.341 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:08:18.350 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:08:18.363 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:08:18.374 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:08:18.376 +03:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2022-05-12 01:08:18.377 +03:00 [INF] Executed action SaluteStocksAPI.Controllers.ApiController.GetMarketCapDistribution (SaluteStocksAPI) in 332.8736ms
2022-05-12 01:08:18.377 +03:00 [INF] Executed endpoint 'SaluteStocksAPI.Controllers.ApiController.GetMarketCapDistribution (SaluteStocksAPI)'
2022-05-12 01:08:18.378 +03:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/distribution/market-cap/30 - - - 200 - text/plain;+charset=utf-8 338.0654ms
2022-05-12 01:08:26.506 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CompanyOverview with Symbol BKN
2022-05-12 01:08:26.507 +03:00 [INF] Generating URI for OVERVIEW with params: symbol: BKN
2022-05-12 01:08:26.508 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=OVERVIEW&symbol=BKN
2022-05-12 01:08:26.508 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=OVERVIEW&symbol=BKN".
2022-05-12 01:08:26.730 +03:00 [INF] Response has success status code
2022-05-12 01:08:26.730 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.CompanyOverview.
2022-05-12 01:08:26.731 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 01:08:26.781 +03:00 [INF] Executed DbCommand (48ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__entity_Symbol_0
2022-05-12 01:08:26.782 +03:00 [INF] Entity does not exist. Adding to DB.
2022-05-12 01:08:26.799 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (Size = 4000), @p2='?' (DbType = Double), @p3='?' (Size = 4000), @p4='?' (DbType = Double), @p5='?' (DbType = Double), @p6='?' (DbType = Int64), @p7='?' (Size = 4000), @p8='?' (Size = 4000), @p9='?' (Size = 4000), @p10='?' (DbType = Double), @p11='?' (DbType = DateTime2), @p12='?' (DbType = Double), @p13='?' (DbType = Double), @p14='?' (DbType = Int64), @p15='?' (DbType = Double), @p16='?' (DbType = Double), @p17='?' (DbType = Double), @p18='?' (DbType = DateTime2), @p19='?' (Size = 4000), @p20='?' (DbType = Boolean), @p21='?' (Size = 4000), @p22='?' (DbType = Double), @p23='?' (DbType = Int64), @p24='?' (Size = 4000), @p25='?' (DbType = DateTime2), @p26='?' (DbType = DateTime2), @p27='?' (DbType = DateTime2), @p28='?' (DbType = Int64), @p29='?' (Size = 4000), @p30='?' (DbType = Double), @p31='?' (DbType = Double), @p32='?' (DbType = Double), @p33='?' (DbType = Double), @p34='?' (DbType = Double), @p35='?' (DbType = Double), @p36='?' (DbType = Double), @p37='?' (DbType = Double), @p38='?' (DbType = Double), @p39='?' (DbType = Double), @p40='?' (DbType = Double), @p41='?' (DbType = Int64), @p42='?' (Size = 4000), @p43='?' (DbType = Int64), @p44='?' (DbType = Double), @p45='?' (DbType = Double), @p46='?' (DbType = Double), @p47='?' (DbType = Double), @p48='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [CompanyOverviews] ([Symbol], [Address], [AnalystTargetPrice], [AssetType], [Beta], [BookValue], [CIK], [Country], [Currency], [Description], [DilutedEPSTTM], [DividendDate], [DividendPerShare], [DividendYield], [EBITDA], [EPS], [EVToEBITDA], [EVToRevenue], [ExDividendDate], [Exchange], [ExistInApi], [FiscalYearEnd], [ForwardPE], [GrossProfitTTM], [Industry], [LastApiRefresh], [LastLocalRefresh], [LatestQuarter], [MarketCapitalization], [Name], [OperatingMarginTTM], [PEGRatio], [PERatio], [PriceToBookRatio], [PriceToSalesRatioTTM], [ProfitMargin], [QuarterlyEarningsGrowthYOY], [QuarterlyRevenueGrowthYOY], [ReturnOnAssetsTTM], [ReturnOnEquityTTM], [RevenuePerShareTTM], [RevenueTTM], [Sector], [SharesOutstanding], [TrailingPE], [_200DayMovingAverage], [_50DayMovingAverage], [_52WeekHigh], [_52WeekLow])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21, @p22, @p23, @p24, @p25, @p26, @p27, @p28, @p29, @p30, @p31, @p32, @p33, @p34, @p35, @p36, @p37, @p38, @p39, @p40, @p41, @p42, @p43, @p44, @p45, @p46, @p47, @p48);
2022-05-12 01:08:26.806 +03:00 [INF] AddOrUpdate run successful.
2022-05-12 01:08:26.806 +03:00 [WRN] Alpha Vantage has no SaluteStocksAPI.Models.FundamentalData.CompanyOverview for symbol BKN
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageEmptyResponse: Response was empty.
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyOverview(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 116
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:08:28.770 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.Earnings with Symbol AXH
2022-05-12 01:08:28.774 +03:00 [INF] Generating URI for EARNINGS with params: symbol: AXH
2022-05-12 01:08:28.775 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=EARNINGS&symbol=AXH
2022-05-12 01:08:28.775 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=EARNINGS&symbol=AXH".
2022-05-12 01:08:29.006 +03:00 [INF] Response has success status code
2022-05-12 01:08:29.007 +03:00 [INF] Trying to deserialize response.
2022-05-12 01:08:29.008 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 01:08:29.018 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__symbol_0
2022-05-12 01:08:29.019 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.Earnings.
2022-05-12 01:08:29.027 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [e].[Symbol], [e].[ExistInApi], [e].[LastApiRefresh], [e].[LastLocalRefresh]
FROM [Earnings] AS [e]
WHERE [e].[Symbol] = @__entity_Symbol_0
2022-05-12 01:08:29.028 +03:00 [INF] Entity does not exist. Adding to DB.
2022-05-12 01:08:29.041 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = Boolean), @p2='?' (DbType = DateTime2), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Earnings] ([Symbol], [ExistInApi], [LastApiRefresh], [LastLocalRefresh])
VALUES (@p0, @p1, @p2, @p3);
2022-05-12 01:08:29.056 +03:00 [INF] Executed DbCommand (14ms) [Parameters=[@p4='?' (DbType = DateTime2), @p5='?' (DbType = Double), @p6='?' (Size = 450), @p7='?' (DbType = DateTime2), @p8='?' (DbType = Double), @p9='?' (Size = 450), @p10='?' (DbType = Double), @p11='?' (DbType = DateTime2), @p12='?' (DbType = DateTime2), @p13='?' (DbType = Double), @p14='?' (DbType = Double), @p15='?' (DbType = Double), @p16='?' (Size = 450), @p17='?' (DbType = Double), @p18='?' (DbType = DateTime2), @p19='?' (DbType = DateTime2), @p20='?' (DbType = Double), @p21='?' (DbType = Double), @p22='?' (DbType = Double), @p23='?' (Size = 450), @p24='?' (DbType = Double), @p25='?' (DbType = DateTime2), @p26='?' (DbType = DateTime2), @p27='?' (DbType = Double), @p28='?' (DbType = Double), @p29='?' (DbType = Double), @p30='?' (Size = 450), @p31='?' (DbType = Double), @p32='?' (DbType = DateTime2), @p33='?' (DbType = DateTime2), @p34='?' (DbType = Double), @p35='?' (DbType = Double), @p36='?' (DbType = Double), @p37='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
DECLARE @inserted0 TABLE ([Id] int, [_Position] [int]);
MERGE [AnnualEarning] USING (
VALUES (@p4, @p5, @p6, 0),
(@p7, @p8, @p9, 1)) AS i ([FiscalDateEnding], [ReportedEPS], [Symbol], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([FiscalDateEnding], [ReportedEPS], [Symbol])
VALUES (i.[FiscalDateEnding], i.[ReportedEPS], i.[Symbol])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted0;

SELECT [i].[Id] FROM @inserted0 i
ORDER BY [i].[_Position];

DECLARE @inserted2 TABLE ([Id] int, [_Position] [int]);
MERGE [QuarterlyEarning] USING (
VALUES (@p10, @p11, @p12, @p13, @p14, @p15, @p16, 0),
(@p17, @p18, @p19, @p20, @p21, @p22, @p23, 1),
(@p24, @p25, @p26, @p27, @p28, @p29, @p30, 2),
(@p31, @p32, @p33, @p34, @p35, @p36, @p37, 3)) AS i ([EstimatedEPS], [FiscalDateEnding], [ReportedDate], [ReportedEPS], [Surprise], [SurprisePercentage], [Symbol], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([EstimatedEPS], [FiscalDateEnding], [ReportedDate], [ReportedEPS], [Surprise], [SurprisePercentage], [Symbol])
VALUES (i.[EstimatedEPS], i.[FiscalDateEnding], i.[ReportedDate], i.[ReportedEPS], i.[Surprise], i.[SurprisePercentage], i.[Symbol])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted2;

SELECT [i].[Id] FROM @inserted2 i
ORDER BY [i].[_Position];
2022-05-12 01:08:29.063 +03:00 [INF] AddOrUpdate run successful.
2022-05-12 01:08:29.338 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.IncomeStatement with Symbol AVACW
2022-05-12 01:08:29.341 +03:00 [INF] Generating URI for INCOME_STATEMENT with params: symbol: AVACW
2022-05-12 01:08:29.342 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=INCOME_STATEMENT&symbol=AVACW
2022-05-12 01:08:29.342 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=INCOME_STATEMENT&symbol=AVACW".
2022-05-12 01:08:29.577 +03:00 [INF] Response has success status code
2022-05-12 01:08:29.578 +03:00 [INF] Trying to deserialize response.
2022-05-12 01:08:29.579 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 01:08:29.641 +03:00 [INF] Executed DbCommand (61ms) [Parameters=[@__symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__symbol_0
2022-05-12 01:08:29.642 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.IncomeStatement.
2022-05-12 01:08:29.649 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [i].[Symbol], [i].[ExistInApi], [i].[LastApiRefresh], [i].[LastLocalRefresh]
FROM [IncomeStatements] AS [i]
WHERE [i].[Symbol] = @__entity_Symbol_0
2022-05-12 01:08:29.650 +03:00 [INF] Entity does not exist. Adding to DB.
2022-05-12 01:08:29.663 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = Boolean), @p2='?' (DbType = DateTime2), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [IncomeStatements] ([Symbol], [ExistInApi], [LastApiRefresh], [LastLocalRefresh])
VALUES (@p0, @p1, @p2, @p3);
2022-05-12 01:08:29.677 +03:00 [INF] Executed DbCommand (13ms) [Parameters=[@p4='?' (DbType = Int64), @p5='?' (DbType = Double), @p6='?' (DbType = Double), @p7='?' (DbType = Int64), @p8='?' (DbType = Int64), @p9='?' (DbType = Int64), @p10='?' (DbType = Double), @p11='?' (DbType = DateTime2), @p12='?' (DbType = Double), @p13='?' (DbType = Double), @p14='?' (DbType = Int64), @p15='?' (DbType = Int64), @p16='?' (DbType = Double), @p17='?' (DbType = Int64), @p18='?' (DbType = Int64), @p19='?' (DbType = Double), @p20='?' (DbType = Double), @p21='?' (DbType = Double), @p22='?' (DbType = Int64), @p23='?' (DbType = Double), @p24='?' (DbType = Double), @p25='?' (DbType = Int64), @p26='?' (Size = 4000), @p27='?' (DbType = Int64), @p28='?' (DbType = Double), @p29='?' (Size = 450), @p30='?' (DbType = Int64), @p31='?' (DbType = Int64), @p32='?' (DbType = Double), @p33='?' (DbType = Double), @p34='?' (DbType = Int64), @p35='?' (DbType = Int64), @p36='?' (DbType = Int64), @p37='?' (DbType = Double), @p38='?' (DbType = DateTime2), @p39='?' (DbType = Double), @p40='?' (DbType = Double), @p41='?' (DbType = Int64), @p42='?' (DbType = Int64), @p43='?' (DbType = Double), @p44='?' (DbType = Int64), @p45='?' (DbType = Int64), @p46='?' (DbType = Double), @p47='?' (DbType = Double), @p48='?' (DbType = Double), @p49='?' (DbType = Int64), @p50='?' (DbType = Double), @p51='?' (DbType = Double), @p52='?' (DbType = Int64), @p53='?' (Size = 4000), @p54='?' (DbType = Int64), @p55='?' (DbType = Double), @p56='?' (Size = 450), @p57='?' (DbType = Int64), @p58='?' (DbType = Int64), @p59='?' (DbType = Double), @p60='?' (DbType = Double), @p61='?' (DbType = Int64), @p62='?' (DbType = Int64), @p63='?' (DbType = Int64), @p64='?' (DbType = Double), @p65='?' (DbType = DateTime2), @p66='?' (DbType = Double), @p67='?' (DbType = Double), @p68='?' (DbType = Int64), @p69='?' (DbType = Int64), @p70='?' (DbType = Double), @p71='?' (DbType = Int64), @p72='?' (DbType = Int64), @p73='?' (DbType = Double), @p74='?' (DbType = Double), @p75='?' (DbType = Double), @p76='?' (DbType = Int64), @p77='?' (DbType = Double), @p78='?' (DbType = Double), @p79='?' (DbType = Int64), @p80='?' (Size = 4000), @p81='?' (DbType = Int64), @p82='?' (DbType = Double), @p83='?' (Size = 450), @p84='?' (DbType = Int64), @p85='?' (DbType = Int64), @p86='?' (DbType = Double), @p87='?' (DbType = Double), @p88='?' (DbType = Int64), @p89='?' (DbType = Int64), @p90='?' (DbType = Int64), @p91='?' (DbType = Double), @p92='?' (DbType = DateTime2), @p93='?' (DbType = Double), @p94='?' (DbType = Double), @p95='?' (DbType = Int64), @p96='?' (DbType = Int64), @p97='?' (DbType = Double), @p98='?' (DbType = Int64), @p99='?' (DbType = Int64), @p100='?' (DbType = Double), @p101='?' (DbType = Double), @p102='?' (DbType = Double), @p103='?' (DbType = Int64), @p104='?' (DbType = Double), @p105='?' (DbType = Double), @p106='?' (DbType = Int64), @p107='?' (Size = 4000), @p108='?' (DbType = Int64), @p109='?' (DbType = Double), @p110='?' (Size = 450), @p111='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [IncomeStatementAnnualReport] ([ComprehensiveIncomeNetOfTax], [CostOfRevenue], [CostofGoodsAndServicesSold], [Depreciation], [DepreciationAndAmortization], [Ebit], [Ebitda], [FiscalDateEnding], [GrossProfit], [IncomeBeforeTax], [IncomeTaxExpense], [InterestAndDebtExpense], [InterestExpense], [InterestIncome], [InvestmentIncomeNet], [NetIncome], [NetIncomeFromContinuingOperations], [NetInterestIncome], [NonInterestIncome], [OperatingExpenses], [OperatingIncome], [OtherNonOperatingIncome], [ReportedCurrency], [ResearchAndDevelopment], [SellingGeneralAndAdministrative], [Symbol], [TotalRevenue])
VALUES (@p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21, @p22, @p23, @p24, @p25, @p26, @p27, @p28, @p29, @p30);
SELECT [Id]
FROM [IncomeStatementAnnualReport]
WHERE @@ROWCOUNT = 1 AND [Id] = scope_identity();

DECLARE @inserted1 TABLE ([Id] int, [_Position] [int]);
MERGE [IncomeStatementQuarterlyReport] USING (
VALUES (@p31, @p32, @p33, @p34, @p35, @p36, @p37, @p38, @p39, @p40, @p41, @p42, @p43, @p44, @p45, @p46, @p47, @p48, @p49, @p50, @p51, @p52, @p53, @p54, @p55, @p56, @p57, 0),
(@p58, @p59, @p60, @p61, @p62, @p63, @p64, @p65, @p66, @p67, @p68, @p69, @p70, @p71, @p72, @p73, @p74, @p75, @p76, @p77, @p78, @p79, @p80, @p81, @p82, @p83, @p84, 1),
(@p85, @p86, @p87, @p88, @p89, @p90, @p91, @p92, @p93, @p94, @p95, @p96, @p97, @p98, @p99, @p100, @p101, @p102, @p103, @p104, @p105, @p106, @p107, @p108, @p109, @p110, @p111, 2)) AS i ([ComprehensiveIncomeNetOfTax], [CostOfRevenue], [CostofGoodsAndServicesSold], [Depreciation], [DepreciationAndAmortization], [Ebit], [Ebitda], [FiscalDateEnding], [GrossProfit], [IncomeBeforeTax], [IncomeTaxExpense], [InterestAndDebtExpense], [InterestExpense], [InterestIncome], [InvestmentIncomeNet], [NetIncome], [NetIncomeFromContinuingOperations], [NetInterestIncome], [NonInterestIncome], [OperatingExpenses], [OperatingIncome], [OtherNonOperatingIncome], [ReportedCurrency], [ResearchAndDevelopment], [SellingGeneralAndAdministrative], [Symbol], [TotalRevenue], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([ComprehensiveIncomeNetOfTax], [CostOfRevenue], [CostofGoodsAndServicesSold], [Depreciation], [DepreciationAndAmortization], [Ebit], [Ebitda], [FiscalDateEnding], [GrossProfit], [IncomeBeforeTax], [IncomeTaxExpense], [InterestAndDebtExpense], [InterestExpense], [InterestIncome], [InvestmentIncomeNet], [NetIncome], [NetIncomeFromContinuingOperations], [NetInterestIncome], [NonInterestIncome], [OperatingExpenses], [OperatingIncome], [OtherNonOperatingIncome], [ReportedCurrency], [ResearchAndDevelopment], [SellingGeneralAndAdministrative], [Symbol], [TotalRevenue])
VALUES (i.[ComprehensiveIncomeNetOfTax], i.[CostOfRevenue], i.[CostofGoodsAndServicesSold], i.[Depreciation], i.[DepreciationAndAmortization], i.[Ebit], i.[Ebitda], i.[FiscalDateEnding], i.[GrossProfit], i.[IncomeBeforeTax], i.[IncomeTaxExpense], i.[InterestAndDebtExpense], i.[InterestExpense], i.[InterestIncome], i.[InvestmentIncomeNet], i.[NetIncome], i.[NetIncomeFromContinuingOperations], i.[NetInterestIncome], i.[NonInterestIncome], i.[OperatingExpenses], i.[OperatingIncome], i.[OtherNonOperatingIncome], i.[ReportedCurrency], i.[ResearchAndDevelopment], i.[SellingGeneralAndAdministrative], i.[Symbol], i.[TotalRevenue])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted1;

SELECT [i].[Id] FROM @inserted1 i
ORDER BY [i].[_Position];
2022-05-12 01:08:29.685 +03:00 [INF] AddOrUpdate run successful.
2022-05-12 01:08:32.400 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.BalanceSheet with Symbol BEP-W
2022-05-12 01:08:32.402 +03:00 [INF] Generating URI for BALANCE_SHEET with params: symbol: BEP-W
2022-05-12 01:08:32.402 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BEP-W
2022-05-12 01:08:32.403 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BEP-W".
2022-05-12 01:08:32.665 +03:00 [INF] Response has success status code
2022-05-12 01:08:32.666 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.BalanceSheet for symbol BEP-W
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetBalanceSheet(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 82
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:08:39.758 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CashFlow with Symbol AUST
2022-05-12 01:08:39.759 +03:00 [INF] Generating URI for CASH_FLOW with params: symbol: AUST
2022-05-12 01:08:39.760 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=CASH_FLOW&symbol=AUST
2022-05-12 01:08:39.760 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=CASH_FLOW&symbol=AUST".
2022-05-12 01:08:39.984 +03:00 [INF] Response has success status code
2022-05-12 01:08:39.985 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.CashFlow for symbol AUST
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCashFlow(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 96
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:08:48.797 +03:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/screener-model - -
2022-05-12 01:08:48.797 +03:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/distribution/market-cap/30 - -
2022-05-12 01:08:48.798 +03:00 [INF] CORS policy execution successful.
2022-05-12 01:08:48.798 +03:00 [INF] CORS policy execution successful.
2022-05-12 01:08:48.799 +03:00 [INF] Executing endpoint 'SaluteStocksAPI.Controllers.ApiController.GetScreenerModel (SaluteStocksAPI)'
2022-05-12 01:08:48.800 +03:00 [INF] Executing endpoint 'SaluteStocksAPI.Controllers.ApiController.GetMarketCapDistribution (SaluteStocksAPI)'
2022-05-12 01:08:48.801 +03:00 [INF] Route matched with {action = "GetScreenerModel", controller = "Api"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetScreenerModel() on controller SaluteStocksAPI.Controllers.ApiController (SaluteStocksAPI).
2022-05-12 01:08:48.806 +03:00 [INF] Route matched with {action = "GetMarketCapDistribution", controller = "Api"}. Executing controller action with signature System.Threading.Tasks.Task`1[System.String] GetMarketCapDistribution(Int32) on controller SaluteStocksAPI.Controllers.ApiController (SaluteStocksAPI).
2022-05-12 01:08:48.808 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 01:08:48.809 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 01:08:48.819 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[MarketCapitalization])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 01:08:48.819 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[MarketCapitalization])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 01:08:48.829 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[MarketCapitalization])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 01:08:48.830 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[MarketCapitalization])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 01:08:48.839 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[EBITDA])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 01:08:48.841 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:08:48.849 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[EBITDA])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 01:08:48.852 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:08:48.859 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[PERatio])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 01:08:48.863 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:08:48.870 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[PERatio])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 01:08:48.872 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2022-05-12 01:08:48.873 +03:00 [INF] Executed action SaluteStocksAPI.Controllers.ApiController.GetScreenerModel (SaluteStocksAPI) in 66.1595ms
2022-05-12 01:08:48.874 +03:00 [INF] Executed endpoint 'SaluteStocksAPI.Controllers.ApiController.GetScreenerModel (SaluteStocksAPI)'
2022-05-12 01:08:48.875 +03:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/screener-model - - - 200 - text/plain;+charset=utf-8 78.5528ms
2022-05-12 01:08:48.879 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:08:48.894 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:08:48.906 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:08:48.918 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:08:48.932 +03:00 [INF] Executed DbCommand (12ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:08:48.943 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:08:48.954 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:08:48.966 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:08:48.979 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:08:48.990 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:08:49.004 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:08:49.015 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:08:49.026 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:08:49.032 +03:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/screener-model - -
2022-05-12 01:08:49.033 +03:00 [INF] CORS policy execution successful.
2022-05-12 01:08:49.033 +03:00 [INF] Executing endpoint 'SaluteStocksAPI.Controllers.ApiController.GetScreenerModel (SaluteStocksAPI)'
2022-05-12 01:08:49.034 +03:00 [INF] Route matched with {action = "GetScreenerModel", controller = "Api"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetScreenerModel() on controller SaluteStocksAPI.Controllers.ApiController (SaluteStocksAPI).
2022-05-12 01:08:49.035 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 01:08:49.038 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:08:49.045 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[MarketCapitalization])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 01:08:49.048 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:08:49.055 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[MarketCapitalization])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 01:08:49.059 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:08:49.066 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[EBITDA])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 01:08:49.069 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:08:49.075 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[EBITDA])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 01:08:49.082 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:08:49.083 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[PERatio])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 01:08:49.092 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:08:49.094 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[PERatio])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 01:08:49.095 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2022-05-12 01:08:49.096 +03:00 [INF] Executed action SaluteStocksAPI.Controllers.ApiController.GetScreenerModel (SaluteStocksAPI) in 61.2289ms
2022-05-12 01:08:49.097 +03:00 [INF] Executed endpoint 'SaluteStocksAPI.Controllers.ApiController.GetScreenerModel (SaluteStocksAPI)'
2022-05-12 01:08:49.097 +03:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/screener-model - - - 200 - text/plain;+charset=utf-8 65.1060ms
2022-05-12 01:08:49.103 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:08:49.113 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:08:49.125 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:08:49.137 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:08:49.149 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:08:49.158 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:08:49.168 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:08:49.170 +03:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2022-05-12 01:08:49.170 +03:00 [INF] Executed action SaluteStocksAPI.Controllers.ApiController.GetMarketCapDistribution (SaluteStocksAPI) in 361.8687ms
2022-05-12 01:08:49.171 +03:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/distribution/market-cap/30 - -
2022-05-12 01:08:49.171 +03:00 [INF] Executed endpoint 'SaluteStocksAPI.Controllers.ApiController.GetMarketCapDistribution (SaluteStocksAPI)'
2022-05-12 01:08:49.172 +03:00 [INF] CORS policy execution successful.
2022-05-12 01:08:49.172 +03:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/distribution/market-cap/30 - - - 200 - text/plain;+charset=utf-8 375.3829ms
2022-05-12 01:08:49.173 +03:00 [INF] Executing endpoint 'SaluteStocksAPI.Controllers.ApiController.GetMarketCapDistribution (SaluteStocksAPI)'
2022-05-12 01:08:49.174 +03:00 [INF] Route matched with {action = "GetMarketCapDistribution", controller = "Api"}. Executing controller action with signature System.Threading.Tasks.Task`1[System.String] GetMarketCapDistribution(Int32) on controller SaluteStocksAPI.Controllers.ApiController (SaluteStocksAPI).
2022-05-12 01:08:49.175 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 01:08:49.187 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[MarketCapitalization])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 01:08:49.197 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[MarketCapitalization])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 01:08:49.209 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:08:49.222 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:08:49.232 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:08:49.245 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:08:49.256 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:08:49.269 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:08:49.279 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:08:49.292 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:08:49.303 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:08:49.315 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:08:49.325 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:08:49.334 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:08:49.350 +03:00 [INF] Executed DbCommand (12ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:08:49.364 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:08:49.376 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:08:49.391 +03:00 [INF] Executed DbCommand (13ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:08:49.402 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:08:49.412 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:08:49.423 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:08:49.434 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:08:49.443 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:08:49.455 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:08:49.465 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:08:49.475 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:08:49.484 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:08:49.495 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:08:49.507 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:08:49.519 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:08:49.529 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:08:49.530 +03:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2022-05-12 01:08:49.531 +03:00 [INF] Executed action SaluteStocksAPI.Controllers.ApiController.GetMarketCapDistribution (SaluteStocksAPI) in 356.6253ms
2022-05-12 01:08:49.532 +03:00 [INF] Executed endpoint 'SaluteStocksAPI.Controllers.ApiController.GetMarketCapDistribution (SaluteStocksAPI)'
2022-05-12 01:08:49.533 +03:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/distribution/market-cap/30 - - - 200 - text/plain;+charset=utf-8 361.5769ms
2022-05-12 01:08:56.818 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CompanyOverview with Symbol BKNG
2022-05-12 01:08:56.821 +03:00 [INF] Generating URI for OVERVIEW with params: symbol: BKNG
2022-05-12 01:08:56.822 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=OVERVIEW&symbol=BKNG
2022-05-12 01:08:56.822 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=OVERVIEW&symbol=BKNG".
2022-05-12 01:08:57.046 +03:00 [INF] Response has success status code
2022-05-12 01:08:57.046 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.CompanyOverview for symbol BKNG
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyOverview(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 116
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:08:59.074 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.Earnings with Symbol AXH-U
2022-05-12 01:08:59.077 +03:00 [INF] Generating URI for EARNINGS with params: symbol: AXH-U
2022-05-12 01:08:59.078 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=EARNINGS&symbol=AXH-U
2022-05-12 01:08:59.078 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=EARNINGS&symbol=AXH-U".
2022-05-12 01:08:59.298 +03:00 [INF] Response has success status code
2022-05-12 01:08:59.299 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.Earnings for symbol AXH-U
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyEarnings(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 142
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:08:59.711 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.IncomeStatement with Symbol AVAL
2022-05-12 01:08:59.715 +03:00 [INF] Generating URI for INCOME_STATEMENT with params: symbol: AVAL
2022-05-12 01:08:59.715 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=INCOME_STATEMENT&symbol=AVAL
2022-05-12 01:08:59.716 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=INCOME_STATEMENT&symbol=AVAL".
2022-05-12 01:09:00.177 +03:00 [INF] Response has success status code
2022-05-12 01:09:00.178 +03:00 [INF] Trying to deserialize response.
2022-05-12 01:09:00.179 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 01:09:00.225 +03:00 [INF] Executed DbCommand (44ms) [Parameters=[@__symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__symbol_0
2022-05-12 01:09:00.226 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.IncomeStatement.
2022-05-12 01:09:00.234 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [i].[Symbol], [i].[ExistInApi], [i].[LastApiRefresh], [i].[LastLocalRefresh]
FROM [IncomeStatements] AS [i]
WHERE [i].[Symbol] = @__entity_Symbol_0
2022-05-12 01:09:00.235 +03:00 [INF] Entity does not exist. Adding to DB.
2022-05-12 01:09:00.248 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = Boolean), @p2='?' (DbType = DateTime2), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [IncomeStatements] ([Symbol], [ExistInApi], [LastApiRefresh], [LastLocalRefresh])
VALUES (@p0, @p1, @p2, @p3);
2022-05-12 01:09:00.305 +03:00 [INF] Executed DbCommand (55ms) [Parameters=[@p4='?' (DbType = Int64), @p5='?' (DbType = Double), @p6='?' (DbType = Double), @p7='?' (DbType = Int64), @p8='?' (DbType = Int64), @p9='?' (DbType = Int64), @p10='?' (DbType = Double), @p11='?' (DbType = DateTime2), @p12='?' (DbType = Double), @p13='?' (DbType = Double), @p14='?' (DbType = Int64), @p15='?' (DbType = Int64), @p16='?' (DbType = Double), @p17='?' (DbType = Int64), @p18='?' (DbType = Int64), @p19='?' (DbType = Double), @p20='?' (DbType = Double), @p21='?' (DbType = Double), @p22='?' (DbType = Int64), @p23='?' (DbType = Double), @p24='?' (DbType = Double), @p25='?' (DbType = Int64), @p26='?' (Size = 4000), @p27='?' (DbType = Int64), @p28='?' (DbType = Double), @p29='?' (Size = 450), @p30='?' (DbType = Int64), @p31='?' (DbType = Int64), @p32='?' (DbType = Double), @p33='?' (DbType = Double), @p34='?' (DbType = Int64), @p35='?' (DbType = Int64), @p36='?' (DbType = Int64), @p37='?' (DbType = Double), @p38='?' (DbType = DateTime2), @p39='?' (DbType = Double), @p40='?' (DbType = Double), @p41='?' (DbType = Int64), @p42='?' (DbType = Int64), @p43='?' (DbType = Double), @p44='?' (DbType = Int64), @p45='?' (DbType = Int64), @p46='?' (DbType = Double), @p47='?' (DbType = Double), @p48='?' (DbType = Double), @p49='?' (DbType = Int64), @p50='?' (DbType = Double), @p51='?' (DbType = Double), @p52='?' (DbType = Int64), @p53='?' (Size = 4000), @p54='?' (DbType = Int64), @p55='?' (DbType = Double), @p56='?' (Size = 450), @p57='?' (DbType = Int64), @p58='?' (DbType = Int64), @p59='?' (DbType = Double), @p60='?' (DbType = Double), @p61='?' (DbType = Int64), @p62='?' (DbType = Int64), @p63='?' (DbType = Int64), @p64='?' (DbType = Double), @p65='?' (DbType = DateTime2), @p66='?' (DbType = Double), @p67='?' (DbType = Double), @p68='?' (DbType = Int64), @p69='?' (DbType = Int64), @p70='?' (DbType = Double), @p71='?' (DbType = Int64), @p72='?' (DbType = Int64), @p73='?' (DbType = Double), @p74='?' (DbType = Double), @p75='?' (DbType = Double), @p76='?' (DbType = Int64), @p77='?' (DbType = Double), @p78='?' (DbType = Double), @p79='?' (DbType = Int64), @p80='?' (Size = 4000), @p81='?' (DbType = Int64), @p82='?' (DbType = Double), @p83='?' (Size = 450), @p84='?' (DbType = Int64), @p85='?' (DbType = Int64), @p86='?' (DbType = Double), @p87='?' (DbType = Double), @p88='?' (DbType = Int64), @p89='?' (DbType = Int64), @p90='?' (DbType = Int64), @p91='?' (DbType = Double), @p92='?' (DbType = DateTime2), @p93='?' (DbType = Double), @p94='?' (DbType = Double), @p95='?' (DbType = Int64), @p96='?' (DbType = Int64), @p97='?' (DbType = Double), @p98='?' (DbType = Int64), @p99='?' (DbType = Int64), @p100='?' (DbType = Double), @p101='?' (DbType = Double), @p102='?' (DbType = Double), @p103='?' (DbType = Int64), @p104='?' (DbType = Double), @p105='?' (DbType = Double), @p106='?' (DbType = Int64), @p107='?' (Size = 4000), @p108='?' (DbType = Int64), @p109='?' (DbType = Double), @p110='?' (Size = 450), @p111='?' (DbType = Int64), @p112='?' (DbType = Int64), @p113='?' (DbType = Double), @p114='?' (DbType = Double), @p115='?' (DbType = Int64), @p116='?' (DbType = Int64), @p117='?' (DbType = Int64), @p118='?' (DbType = Double), @p119='?' (DbType = DateTime2), @p120='?' (DbType = Double), @p121='?' (DbType = Double), @p122='?' (DbType = Int64), @p123='?' (DbType = Int64), @p124='?' (DbType = Double), @p125='?' (DbType = Int64), @p126='?' (DbType = Int64), @p127='?' (DbType = Double), @p128='?' (DbType = Double), @p129='?' (DbType = Double), @p130='?' (DbType = Int64), @p131='?' (DbType = Double), @p132='?' (DbType = Double), @p133='?' (DbType = Int64), @p134='?' (Size = 4000), @p135='?' (DbType = Int64), @p136='?' (DbType = Double), @p137='?' (Size = 450), @p138='?' (DbType = Int64), @p139='?' (DbType = Int64), @p140='?' (DbType = Double), @p141='?' (DbType = Double), @p142='?' (DbType = Int64), @p143='?' (DbType = Int64), @p144='?' (DbType = Int64), @p145='?' (DbType = Double), @p146='?' (DbType = DateTime2), @p147='?' (DbType = Double), @p148='?' (DbType = Double), @p149='?' (DbType = Int64), @p150='?' (DbType = Int64), @p151='?' (DbType = Double), @p152='?' (DbType = Int64), @p153='?' (DbType = Int64), @p154='?' (DbType = Double), @p155='?' (DbType = Double), @p156='?' (DbType = Double), @p157='?' (DbType = Int64), @p158='?' (DbType = Double), @p159='?' (DbType = Double), @p160='?' (DbType = Int64), @p161='?' (Size = 4000), @p162='?' (DbType = Int64), @p163='?' (DbType = Double), @p164='?' (Size = 450), @p165='?' (DbType = Int64), @p166='?' (DbType = Int64), @p167='?' (DbType = Double), @p168='?' (DbType = Double), @p169='?' (DbType = Int64), @p170='?' (DbType = Int64), @p171='?' (DbType = Int64), @p172='?' (DbType = Double), @p173='?' (DbType = DateTime2), @p174='?' (DbType = Double), @p175='?' (DbType = Double), @p176='?' (DbType = Int64), @p177='?' (DbType = Int64), @p178='?' (DbType = Double), @p179='?' (DbType = Int64), @p180='?' (DbType = Int64), @p181='?' (DbType = Double), @p182='?' (DbType = Double), @p183='?' (DbType = Double), @p184='?' (DbType = Int64), @p185='?' (DbType = Double), @p186='?' (DbType = Double), @p187='?' (DbType = Int64), @p188='?' (Size = 4000), @p189='?' (DbType = Int64), @p190='?' (DbType = Double), @p191='?' (Size = 450), @p192='?' (DbType = Int64), @p193='?' (DbType = Int64), @p194='?' (DbType = Double), @p195='?' (DbType = Double), @p196='?' (DbType = Int64), @p197='?' (DbType = Int64), @p198='?' (DbType = Int64), @p199='?' (DbType = Double), @p200='?' (DbType = DateTime2), @p201='?' (DbType = Double), @p202='?' (DbType = Double), @p203='?' (DbType = Int64), @p204='?' (DbType = Int64), @p205='?' (DbType = Double), @p206='?' (DbType = Int64), @p207='?' (DbType = Int64), @p208='?' (DbType = Double), @p209='?' (DbType = Double), @p210='?' (DbType = Double), @p211='?' (DbType = Int64), @p212='?' (DbType = Double), @p213='?' (DbType = Double), @p214='?' (DbType = Int64), @p215='?' (Size = 4000), @p216='?' (DbType = Int64), @p217='?' (DbType = Double), @p218='?' (Size = 450), @p219='?' (DbType = Int64), @p220='?' (DbType = Int64), @p221='?' (DbType = Double), @p222='?' (DbType = Double), @p223='?' (DbType = Int64), @p224='?' (DbType = Int64), @p225='?' (DbType = Int64), @p226='?' (DbType = Double), @p227='?' (DbType = DateTime2), @p228='?' (DbType = Double), @p229='?' (DbType = Double), @p230='?' (DbType = Int64), @p231='?' (DbType = Int64), @p232='?' (DbType = Double), @p233='?' (DbType = Int64), @p234='?' (DbType = Int64), @p235='?' (DbType = Double), @p236='?' (DbType = Double), @p237='?' (DbType = Double), @p238='?' (DbType = Int64), @p239='?' (DbType = Double), @p240='?' (DbType = Double), @p241='?' (DbType = Int64), @p242='?' (Size = 4000), @p243='?' (DbType = Int64), @p244='?' (DbType = Double), @p245='?' (Size = 450), @p246='?' (DbType = Int64), @p247='?' (DbType = Int64), @p248='?' (DbType = Double), @p249='?' (DbType = Double), @p250='?' (DbType = Int64), @p251='?' (DbType = Int64), @p252='?' (DbType = Int64), @p253='?' (DbType = Double), @p254='?' (DbType = DateTime2), @p255='?' (DbType = Double), @p256='?' (DbType = Double), @p257='?' (DbType = Int64), @p258='?' (DbType = Int64), @p259='?' (DbType = Double), @p260='?' (DbType = Int64), @p261='?' (DbType = Int64), @p262='?' (DbType = Double), @p263='?' (DbType = Double), @p264='?' (DbType = Double), @p265='?' (DbType = Int64), @p266='?' (DbType = Double), @p267='?' (DbType = Double), @p268='?' (DbType = Int64), @p269='?' (Size = 4000), @p270='?' (DbType = Int64), @p271='?' (DbType = Double), @p272='?' (Size = 450), @p273='?' (DbType = Int64), @p274='?' (DbType = Int64), @p275='?' (DbType = Double), @p276='?' (DbType = Double), @p277='?' (DbType = Int64), @p278='?' (DbType = Int64), @p279='?' (DbType = Int64), @p280='?' (DbType = Double), @p281='?' (DbType = DateTime2), @p282='?' (DbType = Double), @p283='?' (DbType = Double), @p284='?' (DbType = Int64), @p285='?' (DbType = Int64), @p286='?' (DbType = Double), @p287='?' (DbType = Int64), @p288='?' (DbType = Int64), @p289='?' (DbType = Double), @p290='?' (DbType = Double), @p291='?' (DbType = Double), @p292='?' (DbType = Int64), @p293='?' (DbType = Double), @p294='?' (DbType = Double), @p295='?' (DbType = Int64), @p296='?' (Size = 4000), @p297='?' (DbType = Int64), @p298='?' (DbType = Double), @p299='?' (Size = 450), @p300='?' (DbType = Int64), @p301='?' (DbType = Int64), @p302='?' (DbType = Double), @p303='?' (DbType = Double), @p304='?' (DbType = Int64), @p305='?' (DbType = Int64), @p306='?' (DbType = Int64), @p307='?' (DbType = Double), @p308='?' (DbType = DateTime2), @p309='?' (DbType = Double), @p310='?' (DbType = Double), @p311='?' (DbType = Int64), @p312='?' (DbType = Int64), @p313='?' (DbType = Double), @p314='?' (DbType = Int64), @p315='?' (DbType = Int64), @p316='?' (DbType = Double), @p317='?' (DbType = Double), @p318='?' (DbType = Double), @p319='?' (DbType = Int64), @p320='?' (DbType = Double), @p321='?' (DbType = Double), @p322='?' (DbType = Int64), @p323='?' (Size = 4000), @p324='?' (DbType = Int64), @p325='?' (DbType = Double), @p326='?' (Size = 450), @p327='?' (DbType = Int64), @p328='?' (DbType = Int64), @p329='?' (DbType = Double), @p330='?' (DbType = Double), @p331='?' (DbType = Int64), @p332='?' (DbType = Int64), @p333='?' (DbType = Int64), @p334='?' (DbType = Double), @p335='?' (DbType = DateTime2), @p336='?' (DbType = Double), @p337='?' (DbType = Double), @p338='?' (DbType = Int64), @p339='?' (DbType = Int64), @p340='?' (DbType = Double), @p341='?' (DbType = Int64), @p342='?' (DbType = Int64), @p343='?' (DbType = Double), @p344='?' (DbType = Double), @p345='?' (DbType = Double), @p346='?' (DbType = Int64), @p347='?' (DbType = Double), @p348='?' (DbType = Double), @p349='?' (DbType = Int64), @p350='?' (Size = 4000), @p351='?' (DbType = Int64), @p352='?' (DbType = Double), @p353='?' (Size = 450), @p354='?' (DbType = Int64), @p355='?' (DbType = Int64), @p356='?' (DbType = Double), @p357='?' (DbType = Double), @p358='?' (DbType = Int64), @p359='?' (DbType = Int64), @p360='?' (DbType = Int64), @p361='?' (DbType = Double), @p362='?' (DbType = DateTime2), @p363='?' (DbType = Double), @p364='?' (DbType = Double), @p365='?' (DbType = Int64), @p366='?' (DbType = Int64), @p367='?' (DbType = Double), @p368='?' (DbType = Int64), @p369='?' (DbType = Int64), @p370='?' (DbType = Double), @p371='?' (DbType = Double), @p372='?' (DbType = Double), @p373='?' (DbType = Int64), @p374='?' (DbType = Double), @p375='?' (DbType = Double), @p376='?' (DbType = Int64), @p377='?' (Size = 4000), @p378='?' (DbType = Int64), @p379='?' (DbType = Double), @p380='?' (Size = 450), @p381='?' (DbType = Int64), @p382='?' (DbType = Int64), @p383='?' (DbType = Double), @p384='?' (DbType = Double), @p385='?' (DbType = Int64), @p386='?' (DbType = Int64), @p387='?' (DbType = Int64), @p388='?' (DbType = Double), @p389='?' (DbType = DateTime2), @p390='?' (DbType = Double), @p391='?' (DbType = Double), @p392='?' (DbType = Int64), @p393='?' (DbType = Int64), @p394='?' (DbType = Double), @p395='?' (DbType = Int64), @p396='?' (DbType = Int64), @p397='?' (DbType = Double), @p398='?' (DbType = Double), @p399='?' (DbType = Double), @p400='?' (DbType = Int64), @p401='?' (DbType = Double), @p402='?' (DbType = Double), @p403='?' (DbType = Int64), @p404='?' (Size = 4000), @p405='?' (DbType = Int64), @p406='?' (DbType = Double), @p407='?' (Size = 450), @p408='?' (DbType = Int64), @p409='?' (DbType = Int64), @p410='?' (DbType = Double), @p411='?' (DbType = Double), @p412='?' (DbType = Int64), @p413='?' (DbType = Int64), @p414='?' (DbType = Int64), @p415='?' (DbType = Double), @p416='?' (DbType = DateTime2), @p417='?' (DbType = Double), @p418='?' (DbType = Double), @p419='?' (DbType = Int64), @p420='?' (DbType = Int64), @p421='?' (DbType = Double), @p422='?' (DbType = Int64), @p423='?' (DbType = Int64), @p424='?' (DbType = Double), @p425='?' (DbType = Double), @p426='?' (DbType = Double), @p427='?' (DbType = Int64), @p428='?' (DbType = Double), @p429='?' (DbType = Double), @p430='?' (DbType = Int64), @p431='?' (Size = 4000), @p432='?' (DbType = Int64), @p433='?' (DbType = Double), @p434='?' (Size = 450), @p435='?' (DbType = Int64), @p436='?' (DbType = Int64), @p437='?' (DbType = Double), @p438='?' (DbType = Double), @p439='?' (DbType = Int64), @p440='?' (DbType = Int64), @p441='?' (DbType = Int64), @p442='?' (DbType = Double), @p443='?' (DbType = DateTime2), @p444='?' (DbType = Double), @p445='?' (DbType = Double), @p446='?' (DbType = Int64), @p447='?' (DbType = Int64), @p448='?' (DbType = Double), @p449='?' (DbType = Int64), @p450='?' (DbType = Int64), @p451='?' (DbType = Double), @p452='?' (DbType = Double), @p453='?' (DbType = Double), @p454='?' (DbType = Int64), @p455='?' (DbType = Double), @p456='?' (DbType = Double), @p457='?' (DbType = Int64), @p458='?' (Size = 4000), @p459='?' (DbType = Int64), @p460='?' (DbType = Double), @p461='?' (Size = 450), @p462='?' (DbType = Int64), @p463='?' (DbType = Int64), @p464='?' (DbType = Double), @p465='?' (DbType = Double), @p466='?' (DbType = Int64), @p467='?' (DbType = Int64), @p468='?' (DbType = Int64), @p469='?' (DbType = Double), @p470='?' (DbType = DateTime2), @p471='?' (DbType = Double), @p472='?' (DbType = Double), @p473='?' (DbType = Int64), @p474='?' (DbType = Int64), @p475='?' (DbType = Double), @p476='?' (DbType = Int64), @p477='?' (DbType = Int64), @p478='?' (DbType = Double), @p479='?' (DbType = Double), @p480='?' (DbType = Double), @p481='?' (DbType = Int64), @p482='?' (DbType = Double), @p483='?' (DbType = Double), @p484='?' (DbType = Int64), @p485='?' (Size = 4000), @p486='?' (DbType = Int64), @p487='?' (DbType = Double), @p488='?' (Size = 450), @p489='?' (DbType = Int64), @p490='?' (DbType = Int64), @p491='?' (DbType = Double), @p492='?' (DbType = Double), @p493='?' (DbType = Int64), @p494='?' (DbType = Int64), @p495='?' (DbType = Int64), @p496='?' (DbType = Double), @p497='?' (DbType = DateTime2), @p498='?' (DbType = Double), @p499='?' (DbType = Double), @p500='?' (DbType = Int64), @p501='?' (DbType = Int64), @p502='?' (DbType = Double), @p503='?' (DbType = Int64), @p504='?' (DbType = Int64), @p505='?' (DbType = Double), @p506='?' (DbType = Double), @p507='?' (DbType = Double), @p508='?' (DbType = Int64), @p509='?' (DbType = Double), @p510='?' (DbType = Double), @p511='?' (DbType = Int64), @p512='?' (Size = 4000), @p513='?' (DbType = Int64), @p514='?' (DbType = Double), @p515='?' (Size = 450), @p516='?' (DbType = Int64), @p517='?' (DbType = Int64), @p518='?' (DbType = Double), @p519='?' (DbType = Double), @p520='?' (DbType = Int64), @p521='?' (DbType = Int64), @p522='?' (DbType = Int64), @p523='?' (DbType = Double), @p524='?' (DbType = DateTime2), @p525='?' (DbType = Double), @p526='?' (DbType = Double), @p527='?' (DbType = Int64), @p528='?' (DbType = Int64), @p529='?' (DbType = Double), @p530='?' (DbType = Int64), @p531='?' (DbType = Int64), @p532='?' (DbType = Double), @p533='?' (DbType = Double), @p534='?' (DbType = Double), @p535='?' (DbType = Int64), @p536='?' (DbType = Double), @p537='?' (DbType = Double), @p538='?' (DbType = Int64), @p539='?' (Size = 4000), @p540='?' (DbType = Int64), @p541='?' (DbType = Double), @p542='?' (Size = 450), @p543='?' (DbType = Int64), @p544='?' (DbType = Int64), @p545='?' (DbType = Double), @p546='?' (DbType = Double), @p547='?' (DbType = Int64), @p548='?' (DbType = Int64), @p549='?' (DbType = Int64), @p550='?' (DbType = Double), @p551='?' (DbType = DateTime2), @p552='?' (DbType = Double), @p553='?' (DbType = Double), @p554='?' (DbType = Int64), @p555='?' (DbType = Int64), @p556='?' (DbType = Double), @p557='?' (DbType = Int64), @p558='?' (DbType = Int64), @p559='?' (DbType = Double), @p560='?' (DbType = Double), @p561='?' (DbType = Double), @p562='?' (DbType = Int64), @p563='?' (DbType = Double), @p564='?' (DbType = Double), @p565='?' (DbType = Int64), @p566='?' (Size = 4000), @p567='?' (DbType = Int64), @p568='?' (DbType = Double), @p569='?' (Size = 450), @p570='?' (DbType = Int64), @p571='?' (DbType = Int64), @p572='?' (DbType = Double), @p573='?' (DbType = Double), @p574='?' (DbType = Int64), @p575='?' (DbType = Int64), @p576='?' (DbType = Int64), @p577='?' (DbType = Double), @p578='?' (DbType = DateTime2), @p579='?' (DbType = Double), @p580='?' (DbType = Double), @p581='?' (DbType = Int64), @p582='?' (DbType = Int64), @p583='?' (DbType = Double), @p584='?' (DbType = Int64), @p585='?' (DbType = Int64), @p586='?' (DbType = Double), @p587='?' (DbType = Double), @p588='?' (DbType = Double), @p589='?' (DbType = Int64), @p590='?' (DbType = Double), @p591='?' (DbType = Double), @p592='?' (DbType = Int64), @p593='?' (Size = 4000), @p594='?' (DbType = Int64), @p595='?' (DbType = Double), @p596='?' (Size = 450), @p597='?' (DbType = Int64), @p598='?' (DbType = Int64), @p599='?' (DbType = Double), @p600='?' (DbType = Double), @p601='?' (DbType = Int64), @p602='?' (DbType = Int64), @p603='?' (DbType = Int64), @p604='?' (DbType = Double), @p605='?' (DbType = DateTime2), @p606='?' (DbType = Double), @p607='?' (DbType = Double), @p608='?' (DbType = Int64), @p609='?' (DbType = Int64), @p610='?' (DbType = Double), @p611='?' (DbType = Int64), @p612='?' (DbType = Int64), @p613='?' (DbType = Double), @p614='?' (DbType = Double), @p615='?' (DbType = Double), @p616='?' (DbType = Int64), @p617='?' (DbType = Double), @p618='?' (DbType = Double), @p619='?' (DbType = Int64), @p620='?' (Size = 4000), @p621='?' (DbType = Int64), @p622='?' (DbType = Double), @p623='?' (Size = 450), @p624='?' (DbType = Int64), @p625='?' (DbType = Int64), @p626='?' (DbType = Double), @p627='?' (DbType = Double), @p628='?' (DbType = Int64), @p629='?' (DbType = Int64), @p630='?' (DbType = Int64), @p631='?' (DbType = Double), @p632='?' (DbType = DateTime2), @p633='?' (DbType = Double), @p634='?' (DbType = Double), @p635='?' (DbType = Int64), @p636='?' (DbType = Int64), @p637='?' (DbType = Double), @p638='?' (DbType = Int64), @p639='?' (DbType = Int64), @p640='?' (DbType = Double), @p641='?' (DbType = Double), @p642='?' (DbType = Double), @p643='?' (DbType = Int64), @p644='?' (DbType = Double), @p645='?' (DbType = Double), @p646='?' (DbType = Int64), @p647='?' (Size = 4000), @p648='?' (DbType = Int64), @p649='?' (DbType = Double), @p650='?' (Size = 450), @p651='?' (DbType = Int64), @p652='?' (DbType = Int64), @p653='?' (DbType = Double), @p654='?' (DbType = Double), @p655='?' (DbType = Int64), @p656='?' (DbType = Int64), @p657='?' (DbType = Int64), @p658='?' (DbType = Double), @p659='?' (DbType = DateTime2), @p660='?' (DbType = Double), @p661='?' (DbType = Double), @p662='?' (DbType = Int64), @p663='?' (DbType = Int64), @p664='?' (DbType = Double), @p665='?' (DbType = Int64), @p666='?' (DbType = Int64), @p667='?' (DbType = Double), @p668='?' (DbType = Double), @p669='?' (DbType = Double), @p670='?' (DbType = Int64), @p671='?' (DbType = Double), @p672='?' (DbType = Double), @p673='?' (DbType = Int64), @p674='?' (Size = 4000), @p675='?' (DbType = Int64), @p676='?' (DbType = Double), @p677='?' (Size = 450), @p678='?' (DbType = Int64), @p679='?' (DbType = Int64), @p680='?' (DbType = Double), @p681='?' (DbType = Double), @p682='?' (DbType = Int64), @p683='?' (DbType = Int64), @p684='?' (DbType = Int64), @p685='?' (DbType = Double), @p686='?' (DbType = DateTime2), @p687='?' (DbType = Double), @p688='?' (DbType = Double), @p689='?' (DbType = Int64), @p690='?' (DbType = Int64), @p691='?' (DbType = Double), @p692='?' (DbType = Int64), @p693='?' (DbType = Int64), @p694='?' (DbType = Double), @p695='?' (DbType = Double), @p696='?' (DbType = Double), @p697='?' (DbType = Int64), @p698='?' (DbType = Double), @p699='?' (DbType = Double), @p700='?' (DbType = Int64), @p701='?' (Size = 4000), @p702='?' (DbType = Int64), @p703='?' (DbType = Double), @p704='?' (Size = 450), @p705='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
DECLARE @inserted0 TABLE ([Id] int, [_Position] [int]);
MERGE [IncomeStatementAnnualReport] USING (
VALUES (@p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21, @p22, @p23, @p24, @p25, @p26, @p27, @p28, @p29, @p30, 0),
(@p31, @p32, @p33, @p34, @p35, @p36, @p37, @p38, @p39, @p40, @p41, @p42, @p43, @p44, @p45, @p46, @p47, @p48, @p49, @p50, @p51, @p52, @p53, @p54, @p55, @p56, @p57, 1),
(@p58, @p59, @p60, @p61, @p62, @p63, @p64, @p65, @p66, @p67, @p68, @p69, @p70, @p71, @p72, @p73, @p74, @p75, @p76, @p77, @p78, @p79, @p80, @p81, @p82, @p83, @p84, 2),
(@p85, @p86, @p87, @p88, @p89, @p90, @p91, @p92, @p93, @p94, @p95, @p96, @p97, @p98, @p99, @p100, @p101, @p102, @p103, @p104, @p105, @p106, @p107, @p108, @p109, @p110, @p111, 3),
(@p112, @p113, @p114, @p115, @p116, @p117, @p118, @p119, @p120, @p121, @p122, @p123, @p124, @p125, @p126, @p127, @p128, @p129, @p130, @p131, @p132, @p133, @p134, @p135, @p136, @p137, @p138, 4)) AS i ([ComprehensiveIncomeNetOfTax], [CostOfRevenue], [CostofGoodsAndServicesSold], [Depreciation], [DepreciationAndAmortization], [Ebit], [Ebitda], [FiscalDateEnding], [GrossProfit], [IncomeBeforeTax], [IncomeTaxExpense], [InterestAndDebtExpense], [InterestExpense], [InterestIncome], [InvestmentIncomeNet], [NetIncome], [NetIncomeFromContinuingOperations], [NetInterestIncome], [NonInterestIncome], [OperatingExpenses], [OperatingIncome], [OtherNonOperatingIncome], [ReportedCurrency], [ResearchAndDevelopment], [SellingGeneralAndAdministrative], [Symbol], [TotalRevenue], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([ComprehensiveIncomeNetOfTax], [CostOfRevenue], [CostofGoodsAndServicesSold], [Depreciation], [DepreciationAndAmortization], [Ebit], [Ebitda], [FiscalDateEnding], [GrossProfit], [IncomeBeforeTax], [IncomeTaxExpense], [InterestAndDebtExpense], [InterestExpense], [InterestIncome], [InvestmentIncomeNet], [NetIncome], [NetIncomeFromContinuingOperations], [NetInterestIncome], [NonInterestIncome], [OperatingExpenses], [OperatingIncome], [OtherNonOperatingIncome], [ReportedCurrency], [ResearchAndDevelopment], [SellingGeneralAndAdministrative], [Symbol], [TotalRevenue])
VALUES (i.[ComprehensiveIncomeNetOfTax], i.[CostOfRevenue], i.[CostofGoodsAndServicesSold], i.[Depreciation], i.[DepreciationAndAmortization], i.[Ebit], i.[Ebitda], i.[FiscalDateEnding], i.[GrossProfit], i.[IncomeBeforeTax], i.[IncomeTaxExpense], i.[InterestAndDebtExpense], i.[InterestExpense], i.[InterestIncome], i.[InvestmentIncomeNet], i.[NetIncome], i.[NetIncomeFromContinuingOperations], i.[NetInterestIncome], i.[NonInterestIncome], i.[OperatingExpenses], i.[OperatingIncome], i.[OtherNonOperatingIncome], i.[ReportedCurrency], i.[ResearchAndDevelopment], i.[SellingGeneralAndAdministrative], i.[Symbol], i.[TotalRevenue])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted0;

SELECT [i].[Id] FROM @inserted0 i
ORDER BY [i].[_Position];

DECLARE @inserted5 TABLE ([Id] int, [_Position] [int]);
MERGE [IncomeStatementQuarterlyReport] USING (
VALUES (@p139, @p140, @p141, @p142, @p143, @p144, @p145, @p146, @p147, @p148, @p149, @p150, @p151, @p152, @p153, @p154, @p155, @p156, @p157, @p158, @p159, @p160, @p161, @p162, @p163, @p164, @p165, 0),
(@p166, @p167, @p168, @p169, @p170, @p171, @p172, @p173, @p174, @p175, @p176, @p177, @p178, @p179, @p180, @p181, @p182, @p183, @p184, @p185, @p186, @p187, @p188, @p189, @p190, @p191, @p192, 1),
(@p193, @p194, @p195, @p196, @p197, @p198, @p199, @p200, @p201, @p202, @p203, @p204, @p205, @p206, @p207, @p208, @p209, @p210, @p211, @p212, @p213, @p214, @p215, @p216, @p217, @p218, @p219, 2),
(@p220, @p221, @p222, @p223, @p224, @p225, @p226, @p227, @p228, @p229, @p230, @p231, @p232, @p233, @p234, @p235, @p236, @p237, @p238, @p239, @p240, @p241, @p242, @p243, @p244, @p245, @p246, 3),
(@p247, @p248, @p249, @p250, @p251, @p252, @p253, @p254, @p255, @p256, @p257, @p258, @p259, @p260, @p261, @p262, @p263, @p264, @p265, @p266, @p267, @p268, @p269, @p270, @p271, @p272, @p273, 4),
(@p274, @p275, @p276, @p277, @p278, @p279, @p280, @p281, @p282, @p283, @p284, @p285, @p286, @p287, @p288, @p289, @p290, @p291, @p292, @p293, @p294, @p295, @p296, @p297, @p298, @p299, @p300, 5),
(@p301, @p302, @p303, @p304, @p305, @p306, @p307, @p308, @p309, @p310, @p311, @p312, @p313, @p314, @p315, @p316, @p317, @p318, @p319, @p320, @p321, @p322, @p323, @p324, @p325, @p326, @p327, 6),
(@p328, @p329, @p330, @p331, @p332, @p333, @p334, @p335, @p336, @p337, @p338, @p339, @p340, @p341, @p342, @p343, @p344, @p345, @p346, @p347, @p348, @p349, @p350, @p351, @p352, @p353, @p354, 7),
(@p355, @p356, @p357, @p358, @p359, @p360, @p361, @p362, @p363, @p364, @p365, @p366, @p367, @p368, @p369, @p370, @p371, @p372, @p373, @p374, @p375, @p376, @p377, @p378, @p379, @p380, @p381, 8),
(@p382, @p383, @p384, @p385, @p386, @p387, @p388, @p389, @p390, @p391, @p392, @p393, @p394, @p395, @p396, @p397, @p398, @p399, @p400, @p401, @p402, @p403, @p404, @p405, @p406, @p407, @p408, 9),
(@p409, @p410, @p411, @p412, @p413, @p414, @p415, @p416, @p417, @p418, @p419, @p420, @p421, @p422, @p423, @p424, @p425, @p426, @p427, @p428, @p429, @p430, @p431, @p432, @p433, @p434, @p435, 10),
(@p436, @p437, @p438, @p439, @p440, @p441, @p442, @p443, @p444, @p445, @p446, @p447, @p448, @p449, @p450, @p451, @p452, @p453, @p454, @p455, @p456, @p457, @p458, @p459, @p460, @p461, @p462, 11),
(@p463, @p464, @p465, @p466, @p467, @p468, @p469, @p470, @p471, @p472, @p473, @p474, @p475, @p476, @p477, @p478, @p479, @p480, @p481, @p482, @p483, @p484, @p485, @p486, @p487, @p488, @p489, 12),
(@p490, @p491, @p492, @p493, @p494, @p495, @p496, @p497, @p498, @p499, @p500, @p501, @p502, @p503, @p504, @p505, @p506, @p507, @p508, @p509, @p510, @p511, @p512, @p513, @p514, @p515, @p516, 13),
(@p517, @p518, @p519, @p520, @p521, @p522, @p523, @p524, @p525, @p526, @p527, @p528, @p529, @p530, @p531, @p532, @p533, @p534, @p535, @p536, @p537, @p538, @p539, @p540, @p541, @p542, @p543, 14),
(@p544, @p545, @p546, @p547, @p548, @p549, @p550, @p551, @p552, @p553, @p554, @p555, @p556, @p557, @p558, @p559, @p560, @p561, @p562, @p563, @p564, @p565, @p566, @p567, @p568, @p569, @p570, 15),
(@p571, @p572, @p573, @p574, @p575, @p576, @p577, @p578, @p579, @p580, @p581, @p582, @p583, @p584, @p585, @p586, @p587, @p588, @p589, @p590, @p591, @p592, @p593, @p594, @p595, @p596, @p597, 16),
(@p598, @p599, @p600, @p601, @p602, @p603, @p604, @p605, @p606, @p607, @p608, @p609, @p610, @p611, @p612, @p613, @p614, @p615, @p616, @p617, @p618, @p619, @p620, @p621, @p622, @p623, @p624, 17),
(@p625, @p626, @p627, @p628, @p629, @p630, @p631, @p632, @p633, @p634, @p635, @p636, @p637, @p638, @p639, @p640, @p641, @p642, @p643, @p644, @p645, @p646, @p647, @p648, @p649, @p650, @p651, 18),
(@p652, @p653, @p654, @p655, @p656, @p657, @p658, @p659, @p660, @p661, @p662, @p663, @p664, @p665, @p666, @p667, @p668, @p669, @p670, @p671, @p672, @p673, @p674, @p675, @p676, @p677, @p678, 19),
(@p679, @p680, @p681, @p682, @p683, @p684, @p685, @p686, @p687, @p688, @p689, @p690, @p691, @p692, @p693, @p694, @p695, @p696, @p697, @p698, @p699, @p700, @p701, @p702, @p703, @p704, @p705, 20)) AS i ([ComprehensiveIncomeNetOfTax], [CostOfRevenue], [CostofGoodsAndServicesSold], [Depreciation], [DepreciationAndAmortization], [Ebit], [Ebitda], [FiscalDateEnding], [GrossProfit], [IncomeBeforeTax], [IncomeTaxExpense], [InterestAndDebtExpense], [InterestExpense], [InterestIncome], [InvestmentIncomeNet], [NetIncome], [NetIncomeFromContinuingOperations], [NetInterestIncome], [NonInterestIncome], [OperatingExpenses], [OperatingIncome], [OtherNonOperatingIncome], [ReportedCurrency], [ResearchAndDevelopment], [SellingGeneralAndAdministrative], [Symbol], [TotalRevenue], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([ComprehensiveIncomeNetOfTax], [CostOfRevenue], [CostofGoodsAndServicesSold], [Depreciation], [DepreciationAndAmortization], [Ebit], [Ebitda], [FiscalDateEnding], [GrossProfit], [IncomeBeforeTax], [IncomeTaxExpense], [InterestAndDebtExpense], [InterestExpense], [InterestIncome], [InvestmentIncomeNet], [NetIncome], [NetIncomeFromContinuingOperations], [NetInterestIncome], [NonInterestIncome], [OperatingExpenses], [OperatingIncome], [OtherNonOperatingIncome], [ReportedCurrency], [ResearchAndDevelopment], [SellingGeneralAndAdministrative], [Symbol], [TotalRevenue])
VALUES (i.[ComprehensiveIncomeNetOfTax], i.[CostOfRevenue], i.[CostofGoodsAndServicesSold], i.[Depreciation], i.[DepreciationAndAmortization], i.[Ebit], i.[Ebitda], i.[FiscalDateEnding], i.[GrossProfit], i.[IncomeBeforeTax], i.[IncomeTaxExpense], i.[InterestAndDebtExpense], i.[InterestExpense], i.[InterestIncome], i.[InvestmentIncomeNet], i.[NetIncome], i.[NetIncomeFromContinuingOperations], i.[NetInterestIncome], i.[NonInterestIncome], i.[OperatingExpenses], i.[OperatingIncome], i.[OtherNonOperatingIncome], i.[ReportedCurrency], i.[ResearchAndDevelopment], i.[SellingGeneralAndAdministrative], i.[Symbol], i.[TotalRevenue])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted5;

SELECT [i].[Id] FROM @inserted5 i
ORDER BY [i].[_Position];
2022-05-12 01:09:00.318 +03:00 [INF] AddOrUpdate run successful.
2022-05-12 01:09:02.677 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.BalanceSheet with Symbol BERZ
2022-05-12 01:09:02.680 +03:00 [INF] Generating URI for BALANCE_SHEET with params: symbol: BERZ
2022-05-12 01:09:02.680 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BERZ
2022-05-12 01:09:02.681 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BERZ".
2022-05-12 01:09:04.234 +03:00 [INF] Response has success status code
2022-05-12 01:09:04.235 +03:00 [INF] Trying to deserialize response.
2022-05-12 01:09:04.236 +03:00 [WRN] Bad response: {
    "Error Message": "Invalid API call. Please retry or visit the documentation (https://www.alphavantage.co/documentation/) for BALANCE_SHEET."
}
2022-05-12 01:09:04.237 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 01:09:04.297 +03:00 [INF] Executed DbCommand (59ms) [Parameters=[@__symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__symbol_0
2022-05-12 01:09:04.299 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.BalanceSheet.
2022-05-12 01:09:04.307 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [b].[Symbol], [b].[ExistInApi], [b].[LastApiRefresh], [b].[LastLocalRefresh]
FROM [BalanceSheets] AS [b]
WHERE [b].[Symbol] = @__entity_Symbol_0
2022-05-12 01:09:04.308 +03:00 [INF] Entity does not exist. Adding to DB.
2022-05-12 01:09:04.321 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = Boolean), @p2='?' (DbType = DateTime2), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [BalanceSheets] ([Symbol], [ExistInApi], [LastApiRefresh], [LastLocalRefresh])
VALUES (@p0, @p1, @p2, @p3);
2022-05-12 01:09:04.328 +03:00 [INF] AddOrUpdate run successful.
2022-05-12 01:09:04.328 +03:00 [WRN] Alpha Vantage has no SaluteStocksAPI.Models.FundamentalData.BalanceSheet for symbol BERZ
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageEmptyResponse: {
    "Error Message": "Invalid API call. Please retry or visit the documentation (https://www.alphavantage.co/documentation/) for BALANCE_SHEET."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetBalanceSheet(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 82
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:09:09.997 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CashFlow with Symbol AUTL
2022-05-12 01:09:09.999 +03:00 [INF] Generating URI for CASH_FLOW with params: symbol: AUTL
2022-05-12 01:09:10.000 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=CASH_FLOW&symbol=AUTL
2022-05-12 01:09:10.000 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=CASH_FLOW&symbol=AUTL".
2022-05-12 01:09:10.498 +03:00 [INF] Response has success status code
2022-05-12 01:09:10.499 +03:00 [INF] Trying to deserialize response.
2022-05-12 01:09:10.500 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 01:09:10.566 +03:00 [INF] Executed DbCommand (64ms) [Parameters=[@__symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__symbol_0
2022-05-12 01:09:10.568 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.CashFlow.
2022-05-12 01:09:10.576 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[ExistInApi], [c].[LastApiRefresh], [c].[LastLocalRefresh]
FROM [CashFlows] AS [c]
WHERE [c].[Symbol] = @__entity_Symbol_0
2022-05-12 01:09:10.577 +03:00 [INF] Entity does not exist. Adding to DB.
2022-05-12 01:09:10.592 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = Boolean), @p2='?' (DbType = DateTime2), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [CashFlows] ([Symbol], [ExistInApi], [LastApiRefresh], [LastLocalRefresh])
VALUES (@p0, @p1, @p2, @p3);
2022-05-12 01:09:10.638 +03:00 [INF] Executed DbCommand (43ms) [Parameters=[@p4='?' (DbType = Double), @p5='?' (DbType = Double), @p6='?' (DbType = Int64), @p7='?' (DbType = Int64), @p8='?' (DbType = Int64), @p9='?' (DbType = Int64), @p10='?' (DbType = Int64), @p11='?' (DbType = Int64), @p12='?' (DbType = Int64), @p13='?' (DbType = Double), @p14='?' (DbType = Int64), @p15='?' (DbType = Double), @p16='?' (DbType = Int64), @p17='?' (Size = 4000), @p18='?' (DbType = Double), @p19='?' (DbType = Double), @p20='?' (DbType = Int64), @p21='?' (DbType = Int64), @p22='?' (DbType = Int64), @p23='?' (DbType = Int64), @p24='?' (DbType = Int64), @p25='?' (DbType = Int64), @p26='?' (DbType = Int64), @p27='?' (DbType = Int64), @p28='?' (DbType = Int64), @p29='?' (DbType = Double), @p30='?' (DbType = Int64), @p31='?' (DbType = Int64), @p32='?' (Size = 4000), @p33='?' (Size = 450), @p34='?' (DbType = Double), @p35='?' (DbType = Double), @p36='?' (DbType = Int64), @p37='?' (DbType = Int64), @p38='?' (DbType = Int64), @p39='?' (DbType = Int64), @p40='?' (DbType = Int64), @p41='?' (DbType = Int64), @p42='?' (DbType = Int64), @p43='?' (DbType = Double), @p44='?' (DbType = Int64), @p45='?' (DbType = Double), @p46='?' (DbType = Int64), @p47='?' (Size = 4000), @p48='?' (DbType = Double), @p49='?' (DbType = Double), @p50='?' (DbType = Int64), @p51='?' (DbType = Int64), @p52='?' (DbType = Int64), @p53='?' (DbType = Int64), @p54='?' (DbType = Int64), @p55='?' (DbType = Int64), @p56='?' (DbType = Int64), @p57='?' (DbType = Int64), @p58='?' (DbType = Int64), @p59='?' (DbType = Double), @p60='?' (DbType = Int64), @p61='?' (DbType = Int64), @p62='?' (Size = 4000), @p63='?' (Size = 450), @p64='?' (DbType = Double), @p65='?' (DbType = Double), @p66='?' (DbType = Int64), @p67='?' (DbType = Int64), @p68='?' (DbType = Int64), @p69='?' (DbType = Int64), @p70='?' (DbType = Int64), @p71='?' (DbType = Int64), @p72='?' (DbType = Int64), @p73='?' (DbType = Double), @p74='?' (DbType = Int64), @p75='?' (DbType = Double), @p76='?' (DbType = Int64), @p77='?' (Size = 4000), @p78='?' (DbType = Double), @p79='?' (DbType = Double), @p80='?' (DbType = Int64), @p81='?' (DbType = Int64), @p82='?' (DbType = Int64), @p83='?' (DbType = Int64), @p84='?' (DbType = Int64), @p85='?' (DbType = Int64), @p86='?' (DbType = Int64), @p87='?' (DbType = Int64), @p88='?' (DbType = Int64), @p89='?' (DbType = Double), @p90='?' (DbType = Int64), @p91='?' (DbType = Int64), @p92='?' (Size = 4000), @p93='?' (Size = 450), @p94='?' (DbType = Double), @p95='?' (DbType = Double), @p96='?' (DbType = Int64), @p97='?' (DbType = Int64), @p98='?' (DbType = Int64), @p99='?' (DbType = Int64), @p100='?' (DbType = Int64), @p101='?' (DbType = Int64), @p102='?' (DbType = Int64), @p103='?' (DbType = Double), @p104='?' (DbType = Int64), @p105='?' (DbType = Double), @p106='?' (DbType = Int64), @p107='?' (Size = 4000), @p108='?' (DbType = Double), @p109='?' (DbType = Double), @p110='?' (DbType = Int64), @p111='?' (DbType = Int64), @p112='?' (DbType = Int64), @p113='?' (DbType = Int64), @p114='?' (DbType = Int64), @p115='?' (DbType = Int64), @p116='?' (DbType = Int64), @p117='?' (DbType = Int64), @p118='?' (DbType = Int64), @p119='?' (DbType = Double), @p120='?' (DbType = Int64), @p121='?' (DbType = Int64), @p122='?' (Size = 4000), @p123='?' (Size = 450), @p124='?' (DbType = Double), @p125='?' (DbType = Double), @p126='?' (DbType = Int64), @p127='?' (DbType = Int64), @p128='?' (DbType = Int64), @p129='?' (DbType = Int64), @p130='?' (DbType = Int64), @p131='?' (DbType = Int64), @p132='?' (DbType = Int64), @p133='?' (DbType = Double), @p134='?' (DbType = Int64), @p135='?' (DbType = Double), @p136='?' (DbType = Int64), @p137='?' (Size = 4000), @p138='?' (DbType = Double), @p139='?' (DbType = Double), @p140='?' (DbType = Int64), @p141='?' (DbType = Int64), @p142='?' (DbType = Int64), @p143='?' (DbType = Int64), @p144='?' (DbType = Int64), @p145='?' (DbType = Int64), @p146='?' (DbType = Int64), @p147='?' (DbType = Int64), @p148='?' (DbType = Int64), @p149='?' (DbType = Double), @p150='?' (DbType = Int64), @p151='?' (DbType = Int64), @p152='?' (Size = 4000), @p153='?' (Size = 450), @p154='?' (DbType = Double), @p155='?' (DbType = Double), @p156='?' (DbType = Int64), @p157='?' (DbType = Int64), @p158='?' (DbType = Int64), @p159='?' (DbType = Int64), @p160='?' (DbType = Int64), @p161='?' (DbType = Int64), @p162='?' (DbType = Int64), @p163='?' (DbType = Double), @p164='?' (DbType = Int64), @p165='?' (DbType = Double), @p166='?' (DbType = Int64), @p167='?' (Size = 4000), @p168='?' (DbType = Double), @p169='?' (DbType = Double), @p170='?' (DbType = Int64), @p171='?' (DbType = Int64), @p172='?' (DbType = Int64), @p173='?' (DbType = Int64), @p174='?' (DbType = Int64), @p175='?' (DbType = Int64), @p176='?' (DbType = Int64), @p177='?' (DbType = Int64), @p178='?' (DbType = Int64), @p179='?' (DbType = Double), @p180='?' (DbType = Int64), @p181='?' (DbType = Int64), @p182='?' (Size = 4000), @p183='?' (Size = 450), @p184='?' (DbType = Double), @p185='?' (DbType = Double), @p186='?' (DbType = Int64), @p187='?' (DbType = Int64), @p188='?' (DbType = Int64), @p189='?' (DbType = Int64), @p190='?' (DbType = Int64), @p191='?' (DbType = Int64), @p192='?' (DbType = Int64), @p193='?' (DbType = Double), @p194='?' (DbType = Int64), @p195='?' (DbType = Double), @p196='?' (DbType = Int64), @p197='?' (Size = 4000), @p198='?' (DbType = Double), @p199='?' (DbType = Double), @p200='?' (DbType = Int64), @p201='?' (DbType = Int64), @p202='?' (DbType = Int64), @p203='?' (DbType = Int64), @p204='?' (DbType = Int64), @p205='?' (DbType = Int64), @p206='?' (DbType = Int64), @p207='?' (DbType = Int64), @p208='?' (DbType = Int64), @p209='?' (DbType = Double), @p210='?' (DbType = Int64), @p211='?' (DbType = Int64), @p212='?' (Size = 4000), @p213='?' (Size = 450), @p214='?' (DbType = Double), @p215='?' (DbType = Double), @p216='?' (DbType = Int64), @p217='?' (DbType = Int64), @p218='?' (DbType = Int64), @p219='?' (DbType = Int64), @p220='?' (DbType = Int64), @p221='?' (DbType = Int64), @p222='?' (DbType = Int64), @p223='?' (DbType = Double), @p224='?' (DbType = Int64), @p225='?' (DbType = Double), @p226='?' (DbType = Int64), @p227='?' (Size = 4000), @p228='?' (DbType = Double), @p229='?' (DbType = Double), @p230='?' (DbType = Int64), @p231='?' (DbType = Int64), @p232='?' (DbType = Int64), @p233='?' (DbType = Int64), @p234='?' (DbType = Int64), @p235='?' (DbType = Int64), @p236='?' (DbType = Int64), @p237='?' (DbType = Int64), @p238='?' (DbType = Int64), @p239='?' (DbType = Double), @p240='?' (DbType = Int64), @p241='?' (DbType = Int64), @p242='?' (Size = 4000), @p243='?' (Size = 450), @p244='?' (DbType = Double), @p245='?' (DbType = Double), @p246='?' (DbType = Int64), @p247='?' (DbType = Int64), @p248='?' (DbType = Int64), @p249='?' (DbType = Int64), @p250='?' (DbType = Int64), @p251='?' (DbType = Int64), @p252='?' (DbType = Int64), @p253='?' (DbType = Double), @p254='?' (DbType = Int64), @p255='?' (DbType = Double), @p256='?' (DbType = Int64), @p257='?' (Size = 4000), @p258='?' (DbType = Double), @p259='?' (DbType = Double), @p260='?' (DbType = Int64), @p261='?' (DbType = Int64), @p262='?' (DbType = Int64), @p263='?' (DbType = Int64), @p264='?' (DbType = Int64), @p265='?' (DbType = Int64), @p266='?' (DbType = Int64), @p267='?' (DbType = Int64), @p268='?' (DbType = Int64), @p269='?' (DbType = Double), @p270='?' (DbType = Int64), @p271='?' (DbType = Int64), @p272='?' (Size = 4000), @p273='?' (Size = 450), @p274='?' (DbType = Double), @p275='?' (DbType = Double), @p276='?' (DbType = Int64), @p277='?' (DbType = Int64), @p278='?' (DbType = Int64), @p279='?' (DbType = Int64), @p280='?' (DbType = Int64), @p281='?' (DbType = Int64), @p282='?' (DbType = Int64), @p283='?' (DbType = Double), @p284='?' (DbType = Int64), @p285='?' (DbType = Double), @p286='?' (DbType = Int64), @p287='?' (Size = 4000), @p288='?' (DbType = Double), @p289='?' (DbType = Double), @p290='?' (DbType = Int64), @p291='?' (DbType = Int64), @p292='?' (DbType = Int64), @p293='?' (DbType = Int64), @p294='?' (DbType = Int64), @p295='?' (DbType = Int64), @p296='?' (DbType = Int64), @p297='?' (DbType = Int64), @p298='?' (DbType = Int64), @p299='?' (DbType = Double), @p300='?' (DbType = Int64), @p301='?' (DbType = Int64), @p302='?' (Size = 4000), @p303='?' (Size = 450), @p304='?' (DbType = Double), @p305='?' (DbType = Double), @p306='?' (DbType = Int64), @p307='?' (DbType = Int64), @p308='?' (DbType = Int64), @p309='?' (DbType = Int64), @p310='?' (DbType = Int64), @p311='?' (DbType = Int64), @p312='?' (DbType = Int64), @p313='?' (DbType = Double), @p314='?' (DbType = Int64), @p315='?' (DbType = Double), @p316='?' (DbType = Int64), @p317='?' (Size = 4000), @p318='?' (DbType = Double), @p319='?' (DbType = Double), @p320='?' (DbType = Int64), @p321='?' (DbType = Int64), @p322='?' (DbType = Int64), @p323='?' (DbType = Int64), @p324='?' (DbType = Int64), @p325='?' (DbType = Int64), @p326='?' (DbType = Int64), @p327='?' (DbType = Int64), @p328='?' (DbType = Int64), @p329='?' (DbType = Double), @p330='?' (DbType = Int64), @p331='?' (DbType = Int64), @p332='?' (Size = 4000), @p333='?' (Size = 450), @p334='?' (DbType = Double), @p335='?' (DbType = Double), @p336='?' (DbType = Int64), @p337='?' (DbType = Int64), @p338='?' (DbType = Int64), @p339='?' (DbType = Int64), @p340='?' (DbType = Int64), @p341='?' (DbType = Int64), @p342='?' (DbType = Int64), @p343='?' (DbType = Double), @p344='?' (DbType = Int64), @p345='?' (DbType = Double), @p346='?' (DbType = Int64), @p347='?' (Size = 4000), @p348='?' (DbType = Double), @p349='?' (DbType = Double), @p350='?' (DbType = Int64), @p351='?' (DbType = Int64), @p352='?' (DbType = Int64), @p353='?' (DbType = Int64), @p354='?' (DbType = Int64), @p355='?' (DbType = Int64), @p356='?' (DbType = Int64), @p357='?' (DbType = Int64), @p358='?' (DbType = Int64), @p359='?' (DbType = Double), @p360='?' (DbType = Int64), @p361='?' (DbType = Int64), @p362='?' (Size = 4000), @p363='?' (Size = 450), @p364='?' (DbType = Double), @p365='?' (DbType = Double), @p366='?' (DbType = Int64), @p367='?' (DbType = Int64), @p368='?' (DbType = Int64), @p369='?' (DbType = Int64), @p370='?' (DbType = Int64), @p371='?' (DbType = Int64), @p372='?' (DbType = Int64), @p373='?' (DbType = Double), @p374='?' (DbType = Int64), @p375='?' (DbType = Double), @p376='?' (DbType = Int64), @p377='?' (Size = 4000), @p378='?' (DbType = Double), @p379='?' (DbType = Double), @p380='?' (DbType = Int64), @p381='?' (DbType = Int64), @p382='?' (DbType = Int64), @p383='?' (DbType = Int64), @p384='?' (DbType = Int64), @p385='?' (DbType = Int64), @p386='?' (DbType = Int64), @p387='?' (DbType = Int64), @p388='?' (DbType = Int64), @p389='?' (DbType = Double), @p390='?' (DbType = Int64), @p391='?' (DbType = Int64), @p392='?' (Size = 4000), @p393='?' (Size = 450), @p394='?' (DbType = Double), @p395='?' (DbType = Double), @p396='?' (DbType = Int64), @p397='?' (DbType = Int64), @p398='?' (DbType = Int64), @p399='?' (DbType = Int64), @p400='?' (DbType = Int64), @p401='?' (DbType = Int64), @p402='?' (DbType = Int64), @p403='?' (DbType = Double), @p404='?' (DbType = Int64), @p405='?' (DbType = Double), @p406='?' (DbType = Int64), @p407='?' (Size = 4000), @p408='?' (DbType = Double), @p409='?' (DbType = Double), @p410='?' (DbType = Int64), @p411='?' (DbType = Int64), @p412='?' (DbType = Int64), @p413='?' (DbType = Int64), @p414='?' (DbType = Int64), @p415='?' (DbType = Int64), @p416='?' (DbType = Int64), @p417='?' (DbType = Int64), @p418='?' (DbType = Int64), @p419='?' (DbType = Double), @p420='?' (DbType = Int64), @p421='?' (DbType = Int64), @p422='?' (Size = 4000), @p423='?' (Size = 450), @p424='?' (DbType = Double), @p425='?' (DbType = Double), @p426='?' (DbType = Int64), @p427='?' (DbType = Int64), @p428='?' (DbType = Int64), @p429='?' (DbType = Int64), @p430='?' (DbType = Int64), @p431='?' (DbType = Int64), @p432='?' (DbType = Int64), @p433='?' (DbType = Double), @p434='?' (DbType = Int64), @p435='?' (DbType = Double), @p436='?' (DbType = Int64), @p437='?' (Size = 4000), @p438='?' (DbType = Double), @p439='?' (DbType = Double), @p440='?' (DbType = Int64), @p441='?' (DbType = Int64), @p442='?' (DbType = Int64), @p443='?' (DbType = Int64), @p444='?' (DbType = Int64), @p445='?' (DbType = Int64), @p446='?' (DbType = Int64), @p447='?' (DbType = Int64), @p448='?' (DbType = Int64), @p449='?' (DbType = Double), @p450='?' (DbType = Int64), @p451='?' (DbType = Int64), @p452='?' (Size = 4000), @p453='?' (Size = 450), @p454='?' (DbType = Double), @p455='?' (DbType = Double), @p456='?' (DbType = Int64), @p457='?' (DbType = Int64), @p458='?' (DbType = Int64), @p459='?' (DbType = Int64), @p460='?' (DbType = Int64), @p461='?' (DbType = Int64), @p462='?' (DbType = Int64), @p463='?' (DbType = Double), @p464='?' (DbType = Int64), @p465='?' (DbType = Double), @p466='?' (DbType = Int64), @p467='?' (Size = 4000), @p468='?' (DbType = Double), @p469='?' (DbType = Double), @p470='?' (DbType = Int64), @p471='?' (DbType = Int64), @p472='?' (DbType = Int64), @p473='?' (DbType = Int64), @p474='?' (DbType = Int64), @p475='?' (DbType = Int64), @p476='?' (DbType = Int64), @p477='?' (DbType = Int64), @p478='?' (DbType = Int64), @p479='?' (DbType = Double), @p480='?' (DbType = Int64), @p481='?' (DbType = Int64), @p482='?' (Size = 4000), @p483='?' (Size = 450), @p484='?' (DbType = Double), @p485='?' (DbType = Double), @p486='?' (DbType = Int64), @p487='?' (DbType = Int64), @p488='?' (DbType = Int64), @p489='?' (DbType = Int64), @p490='?' (DbType = Int64), @p491='?' (DbType = Int64), @p492='?' (DbType = Int64), @p493='?' (DbType = Double), @p494='?' (DbType = Int64), @p495='?' (DbType = Double), @p496='?' (DbType = Int64), @p497='?' (Size = 4000), @p498='?' (DbType = Double), @p499='?' (DbType = Double), @p500='?' (DbType = Int64), @p501='?' (DbType = Int64), @p502='?' (DbType = Int64), @p503='?' (DbType = Int64), @p504='?' (DbType = Int64), @p505='?' (DbType = Int64), @p506='?' (DbType = Int64), @p507='?' (DbType = Int64), @p508='?' (DbType = Int64), @p509='?' (DbType = Double), @p510='?' (DbType = Int64), @p511='?' (DbType = Int64), @p512='?' (Size = 4000), @p513='?' (Size = 450), @p514='?' (DbType = Double), @p515='?' (DbType = Double), @p516='?' (DbType = Int64), @p517='?' (DbType = Int64), @p518='?' (DbType = Int64), @p519='?' (DbType = Int64), @p520='?' (DbType = Int64), @p521='?' (DbType = Int64), @p522='?' (DbType = Int64), @p523='?' (DbType = Double), @p524='?' (DbType = Int64), @p525='?' (DbType = Double), @p526='?' (DbType = Int64), @p527='?' (Size = 4000), @p528='?' (DbType = Double), @p529='?' (DbType = Double), @p530='?' (DbType = Int64), @p531='?' (DbType = Int64), @p532='?' (DbType = Int64), @p533='?' (DbType = Int64), @p534='?' (DbType = Int64), @p535='?' (DbType = Int64), @p536='?' (DbType = Int64), @p537='?' (DbType = Int64), @p538='?' (DbType = Int64), @p539='?' (DbType = Double), @p540='?' (DbType = Int64), @p541='?' (DbType = Int64), @p542='?' (Size = 4000), @p543='?' (Size = 450), @p544='?' (DbType = Double), @p545='?' (DbType = Double), @p546='?' (DbType = Int64), @p547='?' (DbType = Int64), @p548='?' (DbType = Int64), @p549='?' (DbType = Int64), @p550='?' (DbType = Int64), @p551='?' (DbType = Int64), @p552='?' (DbType = Int64), @p553='?' (DbType = Double), @p554='?' (DbType = Int64), @p555='?' (DbType = Double), @p556='?' (DbType = Int64), @p557='?' (Size = 4000), @p558='?' (DbType = Double), @p559='?' (DbType = Double), @p560='?' (DbType = Int64), @p561='?' (DbType = Int64), @p562='?' (DbType = Int64), @p563='?' (DbType = Int64), @p564='?' (DbType = Int64), @p565='?' (DbType = Int64), @p566='?' (DbType = Int64), @p567='?' (DbType = Int64), @p568='?' (DbType = Int64), @p569='?' (DbType = Double), @p570='?' (DbType = Int64), @p571='?' (DbType = Int64), @p572='?' (Size = 4000), @p573='?' (Size = 450), @p574='?' (DbType = Double), @p575='?' (DbType = Double), @p576='?' (DbType = Int64), @p577='?' (DbType = Int64), @p578='?' (DbType = Int64), @p579='?' (DbType = Int64), @p580='?' (DbType = Int64), @p581='?' (DbType = Int64), @p582='?' (DbType = Int64), @p583='?' (DbType = Double), @p584='?' (DbType = Int64), @p585='?' (DbType = Double), @p586='?' (DbType = Int64), @p587='?' (Size = 4000), @p588='?' (DbType = Double), @p589='?' (DbType = Double), @p590='?' (DbType = Int64), @p591='?' (DbType = Int64), @p592='?' (DbType = Int64), @p593='?' (DbType = Int64), @p594='?' (DbType = Int64), @p595='?' (DbType = Int64), @p596='?' (DbType = Int64), @p597='?' (DbType = Int64), @p598='?' (DbType = Int64), @p599='?' (DbType = Double), @p600='?' (DbType = Int64), @p601='?' (DbType = Int64), @p602='?' (Size = 4000), @p603='?' (Size = 450), @p604='?' (DbType = Double), @p605='?' (DbType = Double), @p606='?' (DbType = Int64), @p607='?' (DbType = Int64), @p608='?' (DbType = Int64), @p609='?' (DbType = Int64), @p610='?' (DbType = Int64), @p611='?' (DbType = Int64), @p612='?' (DbType = Int64), @p613='?' (DbType = Double), @p614='?' (DbType = Int64), @p615='?' (DbType = Double), @p616='?' (DbType = Int64), @p617='?' (Size = 4000), @p618='?' (DbType = Double), @p619='?' (DbType = Double), @p620='?' (DbType = Int64), @p621='?' (DbType = Int64), @p622='?' (DbType = Int64), @p623='?' (DbType = Int64), @p624='?' (DbType = Int64), @p625='?' (DbType = Int64), @p626='?' (DbType = Int64), @p627='?' (DbType = Int64), @p628='?' (DbType = Int64), @p629='?' (DbType = Double), @p630='?' (DbType = Int64), @p631='?' (DbType = Int64), @p632='?' (Size = 4000), @p633='?' (Size = 450), @p634='?' (DbType = Double), @p635='?' (DbType = Double), @p636='?' (DbType = Int64), @p637='?' (DbType = Int64), @p638='?' (DbType = Int64), @p639='?' (DbType = Int64), @p640='?' (DbType = Int64), @p641='?' (DbType = Int64), @p642='?' (DbType = Int64), @p643='?' (DbType = Double), @p644='?' (DbType = Int64), @p645='?' (DbType = Double), @p646='?' (DbType = Int64), @p647='?' (Size = 4000), @p648='?' (DbType = Double), @p649='?' (DbType = Double), @p650='?' (DbType = Int64), @p651='?' (DbType = Int64), @p652='?' (DbType = Int64), @p653='?' (DbType = Int64), @p654='?' (DbType = Int64), @p655='?' (DbType = Int64), @p656='?' (DbType = Int64), @p657='?' (DbType = Int64), @p658='?' (DbType = Int64), @p659='?' (DbType = Double), @p660='?' (DbType = Int64), @p661='?' (DbType = Int64), @p662='?' (Size = 4000), @p663='?' (Size = 450), @p664='?' (DbType = Double), @p665='?' (DbType = Double), @p666='?' (DbType = Int64), @p667='?' (DbType = Int64), @p668='?' (DbType = Int64), @p669='?' (DbType = Int64), @p670='?' (DbType = Int64), @p671='?' (DbType = Int64), @p672='?' (DbType = Int64), @p673='?' (DbType = Double), @p674='?' (DbType = Int64), @p675='?' (DbType = Double), @p676='?' (DbType = Int64), @p677='?' (Size = 4000), @p678='?' (DbType = Double), @p679='?' (DbType = Double), @p680='?' (DbType = Int64), @p681='?' (DbType = Int64), @p682='?' (DbType = Int64), @p683='?' (DbType = Int64), @p684='?' (DbType = Int64), @p685='?' (DbType = Int64), @p686='?' (DbType = Int64), @p687='?' (DbType = Int64), @p688='?' (DbType = Int64), @p689='?' (DbType = Double), @p690='?' (DbType = Int64), @p691='?' (DbType = Int64), @p692='?' (Size = 4000), @p693='?' (Size = 450), @p694='?' (DbType = Double), @p695='?' (DbType = Double), @p696='?' (DbType = Int64), @p697='?' (DbType = Int64), @p698='?' (DbType = Int64), @p699='?' (DbType = Int64), @p700='?' (DbType = Int64), @p701='?' (DbType = Int64), @p702='?' (DbType = Int64), @p703='?' (DbType = Double), @p704='?' (DbType = Int64), @p705='?' (DbType = Double), @p706='?' (DbType = Int64), @p707='?' (Size = 4000), @p708='?' (DbType = Double), @p709='?' (DbType = Double), @p710='?' (DbType = Int64), @p711='?' (DbType = Int64), @p712='?' (DbType = Int64), @p713='?' (DbType = Int64), @p714='?' (DbType = Int64), @p715='?' (DbType = Int64), @p716='?' (DbType = Int64), @p717='?' (DbType = Int64), @p718='?' (DbType = Int64), @p719='?' (DbType = Double), @p720='?' (DbType = Int64), @p721='?' (DbType = Int64), @p722='?' (Size = 4000), @p723='?' (Size = 450), @p724='?' (DbType = Double), @p725='?' (DbType = Double), @p726='?' (DbType = Int64), @p727='?' (DbType = Int64), @p728='?' (DbType = Int64), @p729='?' (DbType = Int64), @p730='?' (DbType = Int64), @p731='?' (DbType = Int64), @p732='?' (DbType = Int64), @p733='?' (DbType = Double), @p734='?' (DbType = Int64), @p735='?' (DbType = Double), @p736='?' (DbType = Int64), @p737='?' (Size = 4000), @p738='?' (DbType = Double), @p739='?' (DbType = Double), @p740='?' (DbType = Int64), @p741='?' (DbType = Int64), @p742='?' (DbType = Int64), @p743='?' (DbType = Int64), @p744='?' (DbType = Int64), @p745='?' (DbType = Int64), @p746='?' (DbType = Int64), @p747='?' (DbType = Int64), @p748='?' (DbType = Int64), @p749='?' (DbType = Double), @p750='?' (DbType = Int64), @p751='?' (DbType = Int64), @p752='?' (Size = 4000), @p753='?' (Size = 450), @p754='?' (DbType = Double), @p755='?' (DbType = Double), @p756='?' (DbType = Int64), @p757='?' (DbType = Int64), @p758='?' (DbType = Int64), @p759='?' (DbType = Int64), @p760='?' (DbType = Int64), @p761='?' (DbType = Int64), @p762='?' (DbType = Int64), @p763='?' (DbType = Double), @p764='?' (DbType = Int64), @p765='?' (DbType = Double), @p766='?' (DbType = Int64), @p767='?' (Size = 4000), @p768='?' (DbType = Double), @p769='?' (DbType = Double), @p770='?' (DbType = Int64), @p771='?' (DbType = Int64), @p772='?' (DbType = Int64), @p773='?' (DbType = Int64), @p774='?' (DbType = Int64), @p775='?' (DbType = Int64), @p776='?' (DbType = Int64), @p777='?' (DbType = Int64), @p778='?' (DbType = Int64), @p779='?' (DbType = Double), @p780='?' (DbType = Int64), @p781='?' (DbType = Int64), @p782='?' (Size = 4000), @p783='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
DECLARE @inserted0 TABLE ([Id] int, [_Position] [int]);
MERGE [CashFlowAnnualReport] USING (
VALUES (@p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21, @p22, @p23, @p24, @p25, @p26, @p27, @p28, @p29, @p30, @p31, @p32, @p33, 0),
(@p34, @p35, @p36, @p37, @p38, @p39, @p40, @p41, @p42, @p43, @p44, @p45, @p46, @p47, @p48, @p49, @p50, @p51, @p52, @p53, @p54, @p55, @p56, @p57, @p58, @p59, @p60, @p61, @p62, @p63, 1),
(@p64, @p65, @p66, @p67, @p68, @p69, @p70, @p71, @p72, @p73, @p74, @p75, @p76, @p77, @p78, @p79, @p80, @p81, @p82, @p83, @p84, @p85, @p86, @p87, @p88, @p89, @p90, @p91, @p92, @p93, 2),
(@p94, @p95, @p96, @p97, @p98, @p99, @p100, @p101, @p102, @p103, @p104, @p105, @p106, @p107, @p108, @p109, @p110, @p111, @p112, @p113, @p114, @p115, @p116, @p117, @p118, @p119, @p120, @p121, @p122, @p123, 3),
(@p124, @p125, @p126, @p127, @p128, @p129, @p130, @p131, @p132, @p133, @p134, @p135, @p136, @p137, @p138, @p139, @p140, @p141, @p142, @p143, @p144, @p145, @p146, @p147, @p148, @p149, @p150, @p151, @p152, @p153, 4)) AS i ([CapitalExpenditures], [CashflowFromFinancing], [CashflowFromInvestment], [ChangeInCashAndCashEquivalents], [ChangeInExchangeRate], [ChangeInInventory], [ChangeInOperatingAssets], [ChangeInOperatingLiabilities], [ChangeInReceivables], [DepreciationDepletionAndAmortization], [DividendPayout], [DividendPayoutCommonStock], [DividendPayoutPreferredStock], [FiscalDateEnding], [NetIncome], [OperatingCashFlow], [PaymentsForOperatingActivities], [PaymentsForRepurchaseOfCommonStock], [PaymentsForRepurchaseOfEquity], [PaymentsForRepurchaseOfPreferredStock], [ProceedsFromIssuanceOfCommonStock], [ProceedsFromIssuanceOfLongTermDebtAndCapitalSecuritiesNet], [ProceedsFromIssuanceOfPreferredStock], [ProceedsFromOperatingActivities], [ProceedsFromRepaymentsOfShortTermDebt], [ProceedsFromRepurchaseOfEquity], [ProceedsFromSaleOfTreasuryStock], [ProfitLoss], [ReportedCurrency], [Symbol], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([CapitalExpenditures], [CashflowFromFinancing], [CashflowFromInvestment], [ChangeInCashAndCashEquivalents], [ChangeInExchangeRate], [ChangeInInventory], [ChangeInOperatingAssets], [ChangeInOperatingLiabilities], [ChangeInReceivables], [DepreciationDepletionAndAmortization], [DividendPayout], [DividendPayoutCommonStock], [DividendPayoutPreferredStock], [FiscalDateEnding], [NetIncome], [OperatingCashFlow], [PaymentsForOperatingActivities], [PaymentsForRepurchaseOfCommonStock], [PaymentsForRepurchaseOfEquity], [PaymentsForRepurchaseOfPreferredStock], [ProceedsFromIssuanceOfCommonStock], [ProceedsFromIssuanceOfLongTermDebtAndCapitalSecuritiesNet], [ProceedsFromIssuanceOfPreferredStock], [ProceedsFromOperatingActivities], [ProceedsFromRepaymentsOfShortTermDebt], [ProceedsFromRepurchaseOfEquity], [ProceedsFromSaleOfTreasuryStock], [ProfitLoss], [ReportedCurrency], [Symbol])
VALUES (i.[CapitalExpenditures], i.[CashflowFromFinancing], i.[CashflowFromInvestment], i.[ChangeInCashAndCashEquivalents], i.[ChangeInExchangeRate], i.[ChangeInInventory], i.[ChangeInOperatingAssets], i.[ChangeInOperatingLiabilities], i.[ChangeInReceivables], i.[DepreciationDepletionAndAmortization], i.[DividendPayout], i.[DividendPayoutCommonStock], i.[DividendPayoutPreferredStock], i.[FiscalDateEnding], i.[NetIncome], i.[OperatingCashFlow], i.[PaymentsForOperatingActivities], i.[PaymentsForRepurchaseOfCommonStock], i.[PaymentsForRepurchaseOfEquity], i.[PaymentsForRepurchaseOfPreferredStock], i.[ProceedsFromIssuanceOfCommonStock], i.[ProceedsFromIssuanceOfLongTermDebtAndCapitalSecuritiesNet], i.[ProceedsFromIssuanceOfPreferredStock], i.[ProceedsFromOperatingActivities], i.[ProceedsFromRepaymentsOfShortTermDebt], i.[ProceedsFromRepurchaseOfEquity], i.[ProceedsFromSaleOfTreasuryStock], i.[ProfitLoss], i.[ReportedCurrency], i.[Symbol])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted0;

SELECT [i].[Id] FROM @inserted0 i
ORDER BY [i].[_Position];

DECLARE @inserted5 TABLE ([Id] int, [_Position] [int]);
MERGE [CashFlowQuarterlyReport] USING (
VALUES (@p154, @p155, @p156, @p157, @p158, @p159, @p160, @p161, @p162, @p163, @p164, @p165, @p166, @p167, @p168, @p169, @p170, @p171, @p172, @p173, @p174, @p175, @p176, @p177, @p178, @p179, @p180, @p181, @p182, @p183, 0),
(@p184, @p185, @p186, @p187, @p188, @p189, @p190, @p191, @p192, @p193, @p194, @p195, @p196, @p197, @p198, @p199, @p200, @p201, @p202, @p203, @p204, @p205, @p206, @p207, @p208, @p209, @p210, @p211, @p212, @p213, 1),
(@p214, @p215, @p216, @p217, @p218, @p219, @p220, @p221, @p222, @p223, @p224, @p225, @p226, @p227, @p228, @p229, @p230, @p231, @p232, @p233, @p234, @p235, @p236, @p237, @p238, @p239, @p240, @p241, @p242, @p243, 2),
(@p244, @p245, @p246, @p247, @p248, @p249, @p250, @p251, @p252, @p253, @p254, @p255, @p256, @p257, @p258, @p259, @p260, @p261, @p262, @p263, @p264, @p265, @p266, @p267, @p268, @p269, @p270, @p271, @p272, @p273, 3),
(@p274, @p275, @p276, @p277, @p278, @p279, @p280, @p281, @p282, @p283, @p284, @p285, @p286, @p287, @p288, @p289, @p290, @p291, @p292, @p293, @p294, @p295, @p296, @p297, @p298, @p299, @p300, @p301, @p302, @p303, 4),
(@p304, @p305, @p306, @p307, @p308, @p309, @p310, @p311, @p312, @p313, @p314, @p315, @p316, @p317, @p318, @p319, @p320, @p321, @p322, @p323, @p324, @p325, @p326, @p327, @p328, @p329, @p330, @p331, @p332, @p333, 5),
(@p334, @p335, @p336, @p337, @p338, @p339, @p340, @p341, @p342, @p343, @p344, @p345, @p346, @p347, @p348, @p349, @p350, @p351, @p352, @p353, @p354, @p355, @p356, @p357, @p358, @p359, @p360, @p361, @p362, @p363, 6),
(@p364, @p365, @p366, @p367, @p368, @p369, @p370, @p371, @p372, @p373, @p374, @p375, @p376, @p377, @p378, @p379, @p380, @p381, @p382, @p383, @p384, @p385, @p386, @p387, @p388, @p389, @p390, @p391, @p392, @p393, 7),
(@p394, @p395, @p396, @p397, @p398, @p399, @p400, @p401, @p402, @p403, @p404, @p405, @p406, @p407, @p408, @p409, @p410, @p411, @p412, @p413, @p414, @p415, @p416, @p417, @p418, @p419, @p420, @p421, @p422, @p423, 8),
(@p424, @p425, @p426, @p427, @p428, @p429, @p430, @p431, @p432, @p433, @p434, @p435, @p436, @p437, @p438, @p439, @p440, @p441, @p442, @p443, @p444, @p445, @p446, @p447, @p448, @p449, @p450, @p451, @p452, @p453, 9),
(@p454, @p455, @p456, @p457, @p458, @p459, @p460, @p461, @p462, @p463, @p464, @p465, @p466, @p467, @p468, @p469, @p470, @p471, @p472, @p473, @p474, @p475, @p476, @p477, @p478, @p479, @p480, @p481, @p482, @p483, 10),
(@p484, @p485, @p486, @p487, @p488, @p489, @p490, @p491, @p492, @p493, @p494, @p495, @p496, @p497, @p498, @p499, @p500, @p501, @p502, @p503, @p504, @p505, @p506, @p507, @p508, @p509, @p510, @p511, @p512, @p513, 11),
(@p514, @p515, @p516, @p517, @p518, @p519, @p520, @p521, @p522, @p523, @p524, @p525, @p526, @p527, @p528, @p529, @p530, @p531, @p532, @p533, @p534, @p535, @p536, @p537, @p538, @p539, @p540, @p541, @p542, @p543, 12),
(@p544, @p545, @p546, @p547, @p548, @p549, @p550, @p551, @p552, @p553, @p554, @p555, @p556, @p557, @p558, @p559, @p560, @p561, @p562, @p563, @p564, @p565, @p566, @p567, @p568, @p569, @p570, @p571, @p572, @p573, 13),
(@p574, @p575, @p576, @p577, @p578, @p579, @p580, @p581, @p582, @p583, @p584, @p585, @p586, @p587, @p588, @p589, @p590, @p591, @p592, @p593, @p594, @p595, @p596, @p597, @p598, @p599, @p600, @p601, @p602, @p603, 14),
(@p604, @p605, @p606, @p607, @p608, @p609, @p610, @p611, @p612, @p613, @p614, @p615, @p616, @p617, @p618, @p619, @p620, @p621, @p622, @p623, @p624, @p625, @p626, @p627, @p628, @p629, @p630, @p631, @p632, @p633, 15),
(@p634, @p635, @p636, @p637, @p638, @p639, @p640, @p641, @p642, @p643, @p644, @p645, @p646, @p647, @p648, @p649, @p650, @p651, @p652, @p653, @p654, @p655, @p656, @p657, @p658, @p659, @p660, @p661, @p662, @p663, 16),
(@p664, @p665, @p666, @p667, @p668, @p669, @p670, @p671, @p672, @p673, @p674, @p675, @p676, @p677, @p678, @p679, @p680, @p681, @p682, @p683, @p684, @p685, @p686, @p687, @p688, @p689, @p690, @p691, @p692, @p693, 17),
(@p694, @p695, @p696, @p697, @p698, @p699, @p700, @p701, @p702, @p703, @p704, @p705, @p706, @p707, @p708, @p709, @p710, @p711, @p712, @p713, @p714, @p715, @p716, @p717, @p718, @p719, @p720, @p721, @p722, @p723, 18),
(@p724, @p725, @p726, @p727, @p728, @p729, @p730, @p731, @p732, @p733, @p734, @p735, @p736, @p737, @p738, @p739, @p740, @p741, @p742, @p743, @p744, @p745, @p746, @p747, @p748, @p749, @p750, @p751, @p752, @p753, 19),
(@p754, @p755, @p756, @p757, @p758, @p759, @p760, @p761, @p762, @p763, @p764, @p765, @p766, @p767, @p768, @p769, @p770, @p771, @p772, @p773, @p774, @p775, @p776, @p777, @p778, @p779, @p780, @p781, @p782, @p783, 20)) AS i ([CapitalExpenditures], [CashflowFromFinancing], [CashflowFromInvestment], [ChangeInCashAndCashEquivalents], [ChangeInExchangeRate], [ChangeInInventory], [ChangeInOperatingAssets], [ChangeInOperatingLiabilities], [ChangeInReceivables], [DepreciationDepletionAndAmortization], [DividendPayout], [DividendPayoutCommonStock], [DividendPayoutPreferredStock], [FiscalDateEnding], [NetIncome], [OperatingCashFlow], [PaymentsForOperatingActivities], [PaymentsForRepurchaseOfCommonStock], [PaymentsForRepurchaseOfEquity], [PaymentsForRepurchaseOfPreferredStock], [ProceedsFromIssuanceOfCommonStock], [ProceedsFromIssuanceOfLongTermDebtAndCapitalSecuritiesNet], [ProceedsFromIssuanceOfPreferredStock], [ProceedsFromOperatingActivities], [ProceedsFromRepaymentsOfShortTermDebt], [ProceedsFromRepurchaseOfEquity], [ProceedsFromSaleOfTreasuryStock], [ProfitLoss], [ReportedCurrency], [Symbol], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([CapitalExpenditures], [CashflowFromFinancing], [CashflowFromInvestment], [ChangeInCashAndCashEquivalents], [ChangeInExchangeRate], [ChangeInInventory], [ChangeInOperatingAssets], [ChangeInOperatingLiabilities], [ChangeInReceivables], [DepreciationDepletionAndAmortization], [DividendPayout], [DividendPayoutCommonStock], [DividendPayoutPreferredStock], [FiscalDateEnding], [NetIncome], [OperatingCashFlow], [PaymentsForOperatingActivities], [PaymentsForRepurchaseOfCommonStock], [PaymentsForRepurchaseOfEquity], [PaymentsForRepurchaseOfPreferredStock], [ProceedsFromIssuanceOfCommonStock], [ProceedsFromIssuanceOfLongTermDebtAndCapitalSecuritiesNet], [ProceedsFromIssuanceOfPreferredStock], [ProceedsFromOperatingActivities], [ProceedsFromRepaymentsOfShortTermDebt], [ProceedsFromRepurchaseOfEquity], [ProceedsFromSaleOfTreasuryStock], [ProfitLoss], [ReportedCurrency], [Symbol])
VALUES (i.[CapitalExpenditures], i.[CashflowFromFinancing], i.[CashflowFromInvestment], i.[ChangeInCashAndCashEquivalents], i.[ChangeInExchangeRate], i.[ChangeInInventory], i.[ChangeInOperatingAssets], i.[ChangeInOperatingLiabilities], i.[ChangeInReceivables], i.[DepreciationDepletionAndAmortization], i.[DividendPayout], i.[DividendPayoutCommonStock], i.[DividendPayoutPreferredStock], i.[FiscalDateEnding], i.[NetIncome], i.[OperatingCashFlow], i.[PaymentsForOperatingActivities], i.[PaymentsForRepurchaseOfCommonStock], i.[PaymentsForRepurchaseOfEquity], i.[PaymentsForRepurchaseOfPreferredStock], i.[ProceedsFromIssuanceOfCommonStock], i.[ProceedsFromIssuanceOfLongTermDebtAndCapitalSecuritiesNet], i.[ProceedsFromIssuanceOfPreferredStock], i.[ProceedsFromOperatingActivities], i.[ProceedsFromRepaymentsOfShortTermDebt], i.[ProceedsFromRepurchaseOfEquity], i.[ProceedsFromSaleOfTreasuryStock], i.[ProfitLoss], i.[ReportedCurrency], i.[Symbol])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted5;

SELECT [i].[Id] FROM @inserted5 i
ORDER BY [i].[_Position];
2022-05-12 01:09:10.659 +03:00 [INF] AddOrUpdate run successful.
2022-05-12 01:09:27.056 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CompanyOverview with Symbol BKR
2022-05-12 01:09:27.057 +03:00 [INF] Generating URI for OVERVIEW with params: symbol: BKR
2022-05-12 01:09:27.058 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=OVERVIEW&symbol=BKR
2022-05-12 01:09:27.058 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=OVERVIEW&symbol=BKR".
2022-05-12 01:09:27.306 +03:00 [INF] Response has success status code
2022-05-12 01:09:27.307 +03:00 [INF] Trying to deserialize response.
2022-05-12 01:09:27.308 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.CompanyOverview.
2022-05-12 01:09:27.308 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 01:09:27.368 +03:00 [INF] Executed DbCommand (58ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__entity_Symbol_0
2022-05-12 01:09:27.369 +03:00 [INF] Entity does not exist. Adding to DB.
2022-05-12 01:09:27.387 +03:00 [INF] Executed DbCommand (12ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (Size = 4000), @p2='?' (DbType = Double), @p3='?' (Size = 4000), @p4='?' (DbType = Double), @p5='?' (DbType = Double), @p6='?' (DbType = Int64), @p7='?' (Size = 4000), @p8='?' (Size = 4000), @p9='?' (Size = 4000), @p10='?' (DbType = Double), @p11='?' (DbType = DateTime2), @p12='?' (DbType = Double), @p13='?' (DbType = Double), @p14='?' (DbType = Int64), @p15='?' (DbType = Double), @p16='?' (DbType = Double), @p17='?' (DbType = Double), @p18='?' (DbType = DateTime2), @p19='?' (Size = 4000), @p20='?' (DbType = Boolean), @p21='?' (Size = 4000), @p22='?' (DbType = Double), @p23='?' (DbType = Int64), @p24='?' (Size = 4000), @p25='?' (DbType = DateTime2), @p26='?' (DbType = DateTime2), @p27='?' (DbType = DateTime2), @p28='?' (DbType = Int64), @p29='?' (Size = 4000), @p30='?' (DbType = Double), @p31='?' (DbType = Double), @p32='?' (DbType = Double), @p33='?' (DbType = Double), @p34='?' (DbType = Double), @p35='?' (DbType = Double), @p36='?' (DbType = Double), @p37='?' (DbType = Double), @p38='?' (DbType = Double), @p39='?' (DbType = Double), @p40='?' (DbType = Double), @p41='?' (DbType = Int64), @p42='?' (Size = 4000), @p43='?' (DbType = Int64), @p44='?' (DbType = Double), @p45='?' (DbType = Double), @p46='?' (DbType = Double), @p47='?' (DbType = Double), @p48='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [CompanyOverviews] ([Symbol], [Address], [AnalystTargetPrice], [AssetType], [Beta], [BookValue], [CIK], [Country], [Currency], [Description], [DilutedEPSTTM], [DividendDate], [DividendPerShare], [DividendYield], [EBITDA], [EPS], [EVToEBITDA], [EVToRevenue], [ExDividendDate], [Exchange], [ExistInApi], [FiscalYearEnd], [ForwardPE], [GrossProfitTTM], [Industry], [LastApiRefresh], [LastLocalRefresh], [LatestQuarter], [MarketCapitalization], [Name], [OperatingMarginTTM], [PEGRatio], [PERatio], [PriceToBookRatio], [PriceToSalesRatioTTM], [ProfitMargin], [QuarterlyEarningsGrowthYOY], [QuarterlyRevenueGrowthYOY], [ReturnOnAssetsTTM], [ReturnOnEquityTTM], [RevenuePerShareTTM], [RevenueTTM], [Sector], [SharesOutstanding], [TrailingPE], [_200DayMovingAverage], [_50DayMovingAverage], [_52WeekHigh], [_52WeekLow])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21, @p22, @p23, @p24, @p25, @p26, @p27, @p28, @p29, @p30, @p31, @p32, @p33, @p34, @p35, @p36, @p37, @p38, @p39, @p40, @p41, @p42, @p43, @p44, @p45, @p46, @p47, @p48);
2022-05-12 01:09:27.396 +03:00 [INF] AddOrUpdate run successful.
2022-05-12 01:09:29.303 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.Earnings with Symbol AXH-WS
2022-05-12 01:09:29.306 +03:00 [INF] Generating URI for EARNINGS with params: symbol: AXH-WS
2022-05-12 01:09:29.307 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=EARNINGS&symbol=AXH-WS
2022-05-12 01:09:29.307 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=EARNINGS&symbol=AXH-WS".
2022-05-12 01:09:29.547 +03:00 [INF] Response has success status code
2022-05-12 01:09:29.547 +03:00 [INF] Trying to deserialize response.
2022-05-12 01:09:29.548 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 01:09:29.602 +03:00 [INF] Executed DbCommand (53ms) [Parameters=[@__symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__symbol_0
2022-05-12 01:09:29.603 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.Earnings.
2022-05-12 01:09:29.613 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [e].[Symbol], [e].[ExistInApi], [e].[LastApiRefresh], [e].[LastLocalRefresh]
FROM [Earnings] AS [e]
WHERE [e].[Symbol] = @__entity_Symbol_0
2022-05-12 01:09:29.615 +03:00 [INF] Entity does not exist. Adding to DB.
2022-05-12 01:09:29.630 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = Boolean), @p2='?' (DbType = DateTime2), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Earnings] ([Symbol], [ExistInApi], [LastApiRefresh], [LastLocalRefresh])
VALUES (@p0, @p1, @p2, @p3);
2022-05-12 01:09:29.637 +03:00 [INF] AddOrUpdate run successful.
2022-05-12 01:09:30.332 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.IncomeStatement with Symbol AVAN-U
2022-05-12 01:09:30.335 +03:00 [INF] Generating URI for INCOME_STATEMENT with params: symbol: AVAN-U
2022-05-12 01:09:30.336 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=INCOME_STATEMENT&symbol=AVAN-U
2022-05-12 01:09:30.336 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=INCOME_STATEMENT&symbol=AVAN-U".
2022-05-12 01:09:30.567 +03:00 [INF] Response has success status code
2022-05-12 01:09:30.568 +03:00 [INF] Trying to deserialize response.
2022-05-12 01:09:30.569 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 01:09:30.632 +03:00 [INF] Executed DbCommand (62ms) [Parameters=[@__symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__symbol_0
2022-05-12 01:09:30.634 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.IncomeStatement.
2022-05-12 01:09:30.642 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [i].[Symbol], [i].[ExistInApi], [i].[LastApiRefresh], [i].[LastLocalRefresh]
FROM [IncomeStatements] AS [i]
WHERE [i].[Symbol] = @__entity_Symbol_0
2022-05-12 01:09:30.643 +03:00 [INF] Entity does not exist. Adding to DB.
2022-05-12 01:09:30.657 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = Boolean), @p2='?' (DbType = DateTime2), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [IncomeStatements] ([Symbol], [ExistInApi], [LastApiRefresh], [LastLocalRefresh])
VALUES (@p0, @p1, @p2, @p3);
2022-05-12 01:09:30.677 +03:00 [INF] Executed DbCommand (19ms) [Parameters=[@p4='?' (DbType = Int64), @p5='?' (DbType = Double), @p6='?' (DbType = Double), @p7='?' (DbType = Int64), @p8='?' (DbType = Int64), @p9='?' (DbType = Int64), @p10='?' (DbType = Double), @p11='?' (DbType = DateTime2), @p12='?' (DbType = Double), @p13='?' (DbType = Double), @p14='?' (DbType = Int64), @p15='?' (DbType = Int64), @p16='?' (DbType = Double), @p17='?' (DbType = Int64), @p18='?' (DbType = Int64), @p19='?' (DbType = Double), @p20='?' (DbType = Double), @p21='?' (DbType = Double), @p22='?' (DbType = Int64), @p23='?' (DbType = Double), @p24='?' (DbType = Double), @p25='?' (DbType = Int64), @p26='?' (Size = 4000), @p27='?' (DbType = Int64), @p28='?' (DbType = Double), @p29='?' (Size = 450), @p30='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [IncomeStatementQuarterlyReport] ([ComprehensiveIncomeNetOfTax], [CostOfRevenue], [CostofGoodsAndServicesSold], [Depreciation], [DepreciationAndAmortization], [Ebit], [Ebitda], [FiscalDateEnding], [GrossProfit], [IncomeBeforeTax], [IncomeTaxExpense], [InterestAndDebtExpense], [InterestExpense], [InterestIncome], [InvestmentIncomeNet], [NetIncome], [NetIncomeFromContinuingOperations], [NetInterestIncome], [NonInterestIncome], [OperatingExpenses], [OperatingIncome], [OtherNonOperatingIncome], [ReportedCurrency], [ResearchAndDevelopment], [SellingGeneralAndAdministrative], [Symbol], [TotalRevenue])
VALUES (@p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21, @p22, @p23, @p24, @p25, @p26, @p27, @p28, @p29, @p30);
SELECT [Id]
FROM [IncomeStatementQuarterlyReport]
WHERE @@ROWCOUNT = 1 AND [Id] = scope_identity();
2022-05-12 01:09:30.687 +03:00 [INF] AddOrUpdate run successful.
2022-05-12 01:09:34.332 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.BalanceSheet with Symbol BEST
2022-05-12 01:09:34.333 +03:00 [INF] Generating URI for BALANCE_SHEET with params: symbol: BEST
2022-05-12 01:09:34.333 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BEST
2022-05-12 01:09:34.334 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BEST".
2022-05-12 01:09:39.550 +03:00 [INF] Response has success status code
2022-05-12 01:09:39.550 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.BalanceSheet for symbol BEST
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetBalanceSheet(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 82
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:09:40.664 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CashFlow with Symbol AUVI
2022-05-12 01:09:40.668 +03:00 [INF] Generating URI for CASH_FLOW with params: symbol: AUVI
2022-05-12 01:09:40.668 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=CASH_FLOW&symbol=AUVI
2022-05-12 01:09:40.669 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=CASH_FLOW&symbol=AUVI".
2022-05-12 01:09:40.904 +03:00 [INF] Response has success status code
2022-05-12 01:09:40.904 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.CashFlow for symbol AUVI
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCashFlow(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 96
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:09:57.399 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CompanyOverview with Symbol BKSB
2022-05-12 01:09:57.402 +03:00 [INF] Generating URI for OVERVIEW with params: symbol: BKSB
2022-05-12 01:09:57.403 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=OVERVIEW&symbol=BKSB
2022-05-12 01:09:57.403 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=OVERVIEW&symbol=BKSB".
2022-05-12 01:09:57.624 +03:00 [INF] Response has success status code
2022-05-12 01:09:57.624 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.CompanyOverview for symbol BKSB
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyOverview(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 116
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:09:59.648 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.Earnings with Symbol AXL
2022-05-12 01:09:59.652 +03:00 [INF] Generating URI for EARNINGS with params: symbol: AXL
2022-05-12 01:09:59.652 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=EARNINGS&symbol=AXL
2022-05-12 01:09:59.652 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=EARNINGS&symbol=AXL".
2022-05-12 01:10:00.032 +03:00 [INF] Response has success status code
2022-05-12 01:10:00.032 +03:00 [INF] Trying to deserialize response.
2022-05-12 01:10:00.033 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 01:10:00.093 +03:00 [INF] Executed DbCommand (58ms) [Parameters=[@__symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__symbol_0
2022-05-12 01:10:00.095 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.Earnings.
2022-05-12 01:10:00.105 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [e].[Symbol], [e].[ExistInApi], [e].[LastApiRefresh], [e].[LastLocalRefresh]
FROM [Earnings] AS [e]
WHERE [e].[Symbol] = @__entity_Symbol_0
2022-05-12 01:10:00.106 +03:00 [INF] Entity does not exist. Adding to DB.
2022-05-12 01:10:00.120 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = Boolean), @p2='?' (DbType = DateTime2), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Earnings] ([Symbol], [ExistInApi], [LastApiRefresh], [LastLocalRefresh])
VALUES (@p0, @p1, @p2, @p3);
2022-05-12 01:10:00.139 +03:00 [INF] Executed DbCommand (17ms) [Parameters=[@p4='?' (DbType = DateTime2), @p5='?' (DbType = Double), @p6='?' (Size = 450), @p7='?' (DbType = DateTime2), @p8='?' (DbType = Double), @p9='?' (Size = 450), @p10='?' (DbType = DateTime2), @p11='?' (DbType = Double), @p12='?' (Size = 450), @p13='?' (DbType = DateTime2), @p14='?' (DbType = Double), @p15='?' (Size = 450), @p16='?' (DbType = DateTime2), @p17='?' (DbType = Double), @p18='?' (Size = 450), @p19='?' (DbType = DateTime2), @p20='?' (DbType = Double), @p21='?' (Size = 450), @p22='?' (DbType = DateTime2), @p23='?' (DbType = Double), @p24='?' (Size = 450), @p25='?' (DbType = DateTime2), @p26='?' (DbType = Double), @p27='?' (Size = 450), @p28='?' (DbType = DateTime2), @p29='?' (DbType = Double), @p30='?' (Size = 450), @p31='?' (DbType = DateTime2), @p32='?' (DbType = Double), @p33='?' (Size = 450), @p34='?' (DbType = DateTime2), @p35='?' (DbType = Double), @p36='?' (Size = 450), @p37='?' (DbType = DateTime2), @p38='?' (DbType = Double), @p39='?' (Size = 450), @p40='?' (DbType = DateTime2), @p41='?' (DbType = Double), @p42='?' (Size = 450), @p43='?' (DbType = DateTime2), @p44='?' (DbType = Double), @p45='?' (Size = 450), @p46='?' (DbType = DateTime2), @p47='?' (DbType = Double), @p48='?' (Size = 450), @p49='?' (DbType = DateTime2), @p50='?' (DbType = Double), @p51='?' (Size = 450), @p52='?' (DbType = DateTime2), @p53='?' (DbType = Double), @p54='?' (Size = 450), @p55='?' (DbType = DateTime2), @p56='?' (DbType = Double), @p57='?' (Size = 450), @p58='?' (DbType = DateTime2), @p59='?' (DbType = Double), @p60='?' (Size = 450), @p61='?' (DbType = DateTime2), @p62='?' (DbType = Double), @p63='?' (Size = 450), @p64='?' (DbType = DateTime2), @p65='?' (DbType = Double), @p66='?' (Size = 450), @p67='?' (DbType = DateTime2), @p68='?' (DbType = Double), @p69='?' (Size = 450), @p70='?' (DbType = DateTime2), @p71='?' (DbType = Double), @p72='?' (Size = 450), @p73='?' (DbType = DateTime2), @p74='?' (DbType = Double), @p75='?' (Size = 450), @p76='?' (DbType = Double), @p77='?' (DbType = DateTime2), @p78='?' (DbType = DateTime2), @p79='?' (DbType = Double), @p80='?' (DbType = Double), @p81='?' (DbType = Double), @p82='?' (Size = 450), @p83='?' (DbType = Double), @p84='?' (DbType = DateTime2), @p85='?' (DbType = DateTime2), @p86='?' (DbType = Double), @p87='?' (DbType = Double), @p88='?' (DbType = Double), @p89='?' (Size = 450), @p90='?' (DbType = Double), @p91='?' (DbType = DateTime2), @p92='?' (DbType = DateTime2), @p93='?' (DbType = Double), @p94='?' (DbType = Double), @p95='?' (DbType = Double), @p96='?' (Size = 450), @p97='?' (DbType = Double), @p98='?' (DbType = DateTime2), @p99='?' (DbType = DateTime2), @p100='?' (DbType = Double), @p101='?' (DbType = Double), @p102='?' (DbType = Double), @p103='?' (Size = 450), @p104='?' (DbType = Double), @p105='?' (DbType = DateTime2), @p106='?' (DbType = DateTime2), @p107='?' (DbType = Double), @p108='?' (DbType = Double), @p109='?' (DbType = Double), @p110='?' (Size = 450), @p111='?' (DbType = Double), @p112='?' (DbType = DateTime2), @p113='?' (DbType = DateTime2), @p114='?' (DbType = Double), @p115='?' (DbType = Double), @p116='?' (DbType = Double), @p117='?' (Size = 450), @p118='?' (DbType = Double), @p119='?' (DbType = DateTime2), @p120='?' (DbType = DateTime2), @p121='?' (DbType = Double), @p122='?' (DbType = Double), @p123='?' (DbType = Double), @p124='?' (Size = 450), @p125='?' (DbType = Double), @p126='?' (DbType = DateTime2), @p127='?' (DbType = DateTime2), @p128='?' (DbType = Double), @p129='?' (DbType = Double), @p130='?' (DbType = Double), @p131='?' (Size = 450), @p132='?' (DbType = Double), @p133='?' (DbType = DateTime2), @p134='?' (DbType = DateTime2), @p135='?' (DbType = Double), @p136='?' (DbType = Double), @p137='?' (DbType = Double), @p138='?' (Size = 450), @p139='?' (DbType = Double), @p140='?' (DbType = DateTime2), @p141='?' (DbType = DateTime2), @p142='?' (DbType = Double), @p143='?' (DbType = Double), @p144='?' (DbType = Double), @p145='?' (Size = 450), @p146='?' (DbType = Double), @p147='?' (DbType = DateTime2), @p148='?' (DbType = DateTime2), @p149='?' (DbType = Double), @p150='?' (DbType = Double), @p151='?' (DbType = Double), @p152='?' (Size = 450), @p153='?' (DbType = Double), @p154='?' (DbType = DateTime2), @p155='?' (DbType = DateTime2), @p156='?' (DbType = Double), @p157='?' (DbType = Double), @p158='?' (DbType = Double), @p159='?' (Size = 450), @p160='?' (DbType = Double), @p161='?' (DbType = DateTime2), @p162='?' (DbType = DateTime2), @p163='?' (DbType = Double), @p164='?' (DbType = Double), @p165='?' (DbType = Double), @p166='?' (Size = 450), @p167='?' (DbType = Double), @p168='?' (DbType = DateTime2), @p169='?' (DbType = DateTime2), @p170='?' (DbType = Double), @p171='?' (DbType = Double), @p172='?' (DbType = Double), @p173='?' (Size = 450), @p174='?' (DbType = Double), @p175='?' (DbType = DateTime2), @p176='?' (DbType = DateTime2), @p177='?' (DbType = Double), @p178='?' (DbType = Double), @p179='?' (DbType = Double), @p180='?' (Size = 450), @p181='?' (DbType = Double), @p182='?' (DbType = DateTime2), @p183='?' (DbType = DateTime2), @p184='?' (DbType = Double), @p185='?' (DbType = Double), @p186='?' (DbType = Double), @p187='?' (Size = 450), @p188='?' (DbType = Double), @p189='?' (DbType = DateTime2), @p190='?' (DbType = DateTime2), @p191='?' (DbType = Double), @p192='?' (DbType = Double), @p193='?' (DbType = Double), @p194='?' (Size = 450), @p195='?' (DbType = Double), @p196='?' (DbType = DateTime2), @p197='?' (DbType = DateTime2), @p198='?' (DbType = Double), @p199='?' (DbType = Double), @p200='?' (DbType = Double), @p201='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
DECLARE @inserted0 TABLE ([Id] int, [_Position] [int]);
MERGE [AnnualEarning] USING (
VALUES (@p4, @p5, @p6, 0),
(@p7, @p8, @p9, 1),
(@p10, @p11, @p12, 2),
(@p13, @p14, @p15, 3),
(@p16, @p17, @p18, 4),
(@p19, @p20, @p21, 5),
(@p22, @p23, @p24, 6),
(@p25, @p26, @p27, 7),
(@p28, @p29, @p30, 8),
(@p31, @p32, @p33, 9),
(@p34, @p35, @p36, 10),
(@p37, @p38, @p39, 11),
(@p40, @p41, @p42, 12),
(@p43, @p44, @p45, 13),
(@p46, @p47, @p48, 14),
(@p49, @p50, @p51, 15),
(@p52, @p53, @p54, 16),
(@p55, @p56, @p57, 17),
(@p58, @p59, @p60, 18),
(@p61, @p62, @p63, 19),
(@p64, @p65, @p66, 20),
(@p67, @p68, @p69, 21),
(@p70, @p71, @p72, 22),
(@p73, @p74, @p75, 23)) AS i ([FiscalDateEnding], [ReportedEPS], [Symbol], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([FiscalDateEnding], [ReportedEPS], [Symbol])
VALUES (i.[FiscalDateEnding], i.[ReportedEPS], i.[Symbol])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted0;

SELECT [i].[Id] FROM @inserted0 i
ORDER BY [i].[_Position];

DECLARE @inserted24 TABLE ([Id] int, [_Position] [int]);
MERGE [QuarterlyEarning] USING (
VALUES (@p76, @p77, @p78, @p79, @p80, @p81, @p82, 0),
(@p83, @p84, @p85, @p86, @p87, @p88, @p89, 1),
(@p90, @p91, @p92, @p93, @p94, @p95, @p96, 2),
(@p97, @p98, @p99, @p100, @p101, @p102, @p103, 3),
(@p104, @p105, @p106, @p107, @p108, @p109, @p110, 4),
(@p111, @p112, @p113, @p114, @p115, @p116, @p117, 5),
(@p118, @p119, @p120, @p121, @p122, @p123, @p124, 6),
(@p125, @p126, @p127, @p128, @p129, @p130, @p131, 7),
(@p132, @p133, @p134, @p135, @p136, @p137, @p138, 8),
(@p139, @p140, @p141, @p142, @p143, @p144, @p145, 9),
(@p146, @p147, @p148, @p149, @p150, @p151, @p152, 10),
(@p153, @p154, @p155, @p156, @p157, @p158, @p159, 11),
(@p160, @p161, @p162, @p163, @p164, @p165, @p166, 12),
(@p167, @p168, @p169, @p170, @p171, @p172, @p173, 13),
(@p174, @p175, @p176, @p177, @p178, @p179, @p180, 14),
(@p181, @p182, @p183, @p184, @p185, @p186, @p187, 15),
(@p188, @p189, @p190, @p191, @p192, @p193, @p194, 16),
(@p195, @p196, @p197, @p198, @p199, @p200, @p201, 17)) AS i ([EstimatedEPS], [FiscalDateEnding], [ReportedDate], [ReportedEPS], [Surprise], [SurprisePercentage], [Symbol], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([EstimatedEPS], [FiscalDateEnding], [ReportedDate], [ReportedEPS], [Surprise], [SurprisePercentage], [Symbol])
VALUES (i.[EstimatedEPS], i.[FiscalDateEnding], i.[ReportedDate], i.[ReportedEPS], i.[Surprise], i.[SurprisePercentage], i.[Symbol])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted24;

SELECT [i].[Id] FROM @inserted24 i
ORDER BY [i].[_Position];
2022-05-12 01:10:00.162 +03:00 [INF] Executed DbCommand (18ms) [Parameters=[@p0='?' (DbType = Double), @p1='?' (DbType = DateTime2), @p2='?' (DbType = DateTime2), @p3='?' (DbType = Double), @p4='?' (DbType = Double), @p5='?' (DbType = Double), @p6='?' (Size = 450), @p7='?' (DbType = Double), @p8='?' (DbType = DateTime2), @p9='?' (DbType = DateTime2), @p10='?' (DbType = Double), @p11='?' (DbType = Double), @p12='?' (DbType = Double), @p13='?' (Size = 450), @p14='?' (DbType = Double), @p15='?' (DbType = DateTime2), @p16='?' (DbType = DateTime2), @p17='?' (DbType = Double), @p18='?' (DbType = Double), @p19='?' (DbType = Double), @p20='?' (Size = 450), @p21='?' (DbType = Double), @p22='?' (DbType = DateTime2), @p23='?' (DbType = DateTime2), @p24='?' (DbType = Double), @p25='?' (DbType = Double), @p26='?' (DbType = Double), @p27='?' (Size = 450), @p28='?' (DbType = Double), @p29='?' (DbType = DateTime2), @p30='?' (DbType = DateTime2), @p31='?' (DbType = Double), @p32='?' (DbType = Double), @p33='?' (DbType = Double), @p34='?' (Size = 450), @p35='?' (DbType = Double), @p36='?' (DbType = DateTime2), @p37='?' (DbType = DateTime2), @p38='?' (DbType = Double), @p39='?' (DbType = Double), @p40='?' (DbType = Double), @p41='?' (Size = 450), @p42='?' (DbType = Double), @p43='?' (DbType = DateTime2), @p44='?' (DbType = DateTime2), @p45='?' (DbType = Double), @p46='?' (DbType = Double), @p47='?' (DbType = Double), @p48='?' (Size = 450), @p49='?' (DbType = Double), @p50='?' (DbType = DateTime2), @p51='?' (DbType = DateTime2), @p52='?' (DbType = Double), @p53='?' (DbType = Double), @p54='?' (DbType = Double), @p55='?' (Size = 450), @p56='?' (DbType = Double), @p57='?' (DbType = DateTime2), @p58='?' (DbType = DateTime2), @p59='?' (DbType = Double), @p60='?' (DbType = Double), @p61='?' (DbType = Double), @p62='?' (Size = 450), @p63='?' (DbType = Double), @p64='?' (DbType = DateTime2), @p65='?' (DbType = DateTime2), @p66='?' (DbType = Double), @p67='?' (DbType = Double), @p68='?' (DbType = Double), @p69='?' (Size = 450), @p70='?' (DbType = Double), @p71='?' (DbType = DateTime2), @p72='?' (DbType = DateTime2), @p73='?' (DbType = Double), @p74='?' (DbType = Double), @p75='?' (DbType = Double), @p76='?' (Size = 450), @p77='?' (DbType = Double), @p78='?' (DbType = DateTime2), @p79='?' (DbType = DateTime2), @p80='?' (DbType = Double), @p81='?' (DbType = Double), @p82='?' (DbType = Double), @p83='?' (Size = 450), @p84='?' (DbType = Double), @p85='?' (DbType = DateTime2), @p86='?' (DbType = DateTime2), @p87='?' (DbType = Double), @p88='?' (DbType = Double), @p89='?' (DbType = Double), @p90='?' (Size = 450), @p91='?' (DbType = Double), @p92='?' (DbType = DateTime2), @p93='?' (DbType = DateTime2), @p94='?' (DbType = Double), @p95='?' (DbType = Double), @p96='?' (DbType = Double), @p97='?' (Size = 450), @p98='?' (DbType = Double), @p99='?' (DbType = DateTime2), @p100='?' (DbType = DateTime2), @p101='?' (DbType = Double), @p102='?' (DbType = Double), @p103='?' (DbType = Double), @p104='?' (Size = 450), @p105='?' (DbType = Double), @p106='?' (DbType = DateTime2), @p107='?' (DbType = DateTime2), @p108='?' (DbType = Double), @p109='?' (DbType = Double), @p110='?' (DbType = Double), @p111='?' (Size = 450), @p112='?' (DbType = Double), @p113='?' (DbType = DateTime2), @p114='?' (DbType = DateTime2), @p115='?' (DbType = Double), @p116='?' (DbType = Double), @p117='?' (DbType = Double), @p118='?' (Size = 450), @p119='?' (DbType = Double), @p120='?' (DbType = DateTime2), @p121='?' (DbType = DateTime2), @p122='?' (DbType = Double), @p123='?' (DbType = Double), @p124='?' (DbType = Double), @p125='?' (Size = 450), @p126='?' (DbType = Double), @p127='?' (DbType = DateTime2), @p128='?' (DbType = DateTime2), @p129='?' (DbType = Double), @p130='?' (DbType = Double), @p131='?' (DbType = Double), @p132='?' (Size = 450), @p133='?' (DbType = Double), @p134='?' (DbType = DateTime2), @p135='?' (DbType = DateTime2), @p136='?' (DbType = Double), @p137='?' (DbType = Double), @p138='?' (DbType = Double), @p139='?' (Size = 450), @p140='?' (DbType = Double), @p141='?' (DbType = DateTime2), @p142='?' (DbType = DateTime2), @p143='?' (DbType = Double), @p144='?' (DbType = Double), @p145='?' (DbType = Double), @p146='?' (Size = 450), @p147='?' (DbType = Double), @p148='?' (DbType = DateTime2), @p149='?' (DbType = DateTime2), @p150='?' (DbType = Double), @p151='?' (DbType = Double), @p152='?' (DbType = Double), @p153='?' (Size = 450), @p154='?' (DbType = Double), @p155='?' (DbType = DateTime2), @p156='?' (DbType = DateTime2), @p157='?' (DbType = Double), @p158='?' (DbType = Double), @p159='?' (DbType = Double), @p160='?' (Size = 450), @p161='?' (DbType = Double), @p162='?' (DbType = DateTime2), @p163='?' (DbType = DateTime2), @p164='?' (DbType = Double), @p165='?' (DbType = Double), @p166='?' (DbType = Double), @p167='?' (Size = 450), @p168='?' (DbType = Double), @p169='?' (DbType = DateTime2), @p170='?' (DbType = DateTime2), @p171='?' (DbType = Double), @p172='?' (DbType = Double), @p173='?' (DbType = Double), @p174='?' (Size = 450), @p175='?' (DbType = Double), @p176='?' (DbType = DateTime2), @p177='?' (DbType = DateTime2), @p178='?' (DbType = Double), @p179='?' (DbType = Double), @p180='?' (DbType = Double), @p181='?' (Size = 450), @p182='?' (DbType = Double), @p183='?' (DbType = DateTime2), @p184='?' (DbType = DateTime2), @p185='?' (DbType = Double), @p186='?' (DbType = Double), @p187='?' (DbType = Double), @p188='?' (Size = 450), @p189='?' (DbType = Double), @p190='?' (DbType = DateTime2), @p191='?' (DbType = DateTime2), @p192='?' (DbType = Double), @p193='?' (DbType = Double), @p194='?' (DbType = Double), @p195='?' (Size = 450), @p196='?' (DbType = Double), @p197='?' (DbType = DateTime2), @p198='?' (DbType = DateTime2), @p199='?' (DbType = Double), @p200='?' (DbType = Double), @p201='?' (DbType = Double), @p202='?' (Size = 450), @p203='?' (DbType = Double), @p204='?' (DbType = DateTime2), @p205='?' (DbType = DateTime2), @p206='?' (DbType = Double), @p207='?' (DbType = Double), @p208='?' (DbType = Double), @p209='?' (Size = 450), @p210='?' (DbType = Double), @p211='?' (DbType = DateTime2), @p212='?' (DbType = DateTime2), @p213='?' (DbType = Double), @p214='?' (DbType = Double), @p215='?' (DbType = Double), @p216='?' (Size = 450), @p217='?' (DbType = Double), @p218='?' (DbType = DateTime2), @p219='?' (DbType = DateTime2), @p220='?' (DbType = Double), @p221='?' (DbType = Double), @p222='?' (DbType = Double), @p223='?' (Size = 450), @p224='?' (DbType = Double), @p225='?' (DbType = DateTime2), @p226='?' (DbType = DateTime2), @p227='?' (DbType = Double), @p228='?' (DbType = Double), @p229='?' (DbType = Double), @p230='?' (Size = 450), @p231='?' (DbType = Double), @p232='?' (DbType = DateTime2), @p233='?' (DbType = DateTime2), @p234='?' (DbType = Double), @p235='?' (DbType = Double), @p236='?' (DbType = Double), @p237='?' (Size = 450), @p238='?' (DbType = Double), @p239='?' (DbType = DateTime2), @p240='?' (DbType = DateTime2), @p241='?' (DbType = Double), @p242='?' (DbType = Double), @p243='?' (DbType = Double), @p244='?' (Size = 450), @p245='?' (DbType = Double), @p246='?' (DbType = DateTime2), @p247='?' (DbType = DateTime2), @p248='?' (DbType = Double), @p249='?' (DbType = Double), @p250='?' (DbType = Double), @p251='?' (Size = 450), @p252='?' (DbType = Double), @p253='?' (DbType = DateTime2), @p254='?' (DbType = DateTime2), @p255='?' (DbType = Double), @p256='?' (DbType = Double), @p257='?' (DbType = Double), @p258='?' (Size = 450), @p259='?' (DbType = Double), @p260='?' (DbType = DateTime2), @p261='?' (DbType = DateTime2), @p262='?' (DbType = Double), @p263='?' (DbType = Double), @p264='?' (DbType = Double), @p265='?' (Size = 450), @p266='?' (DbType = Double), @p267='?' (DbType = DateTime2), @p268='?' (DbType = DateTime2), @p269='?' (DbType = Double), @p270='?' (DbType = Double), @p271='?' (DbType = Double), @p272='?' (Size = 450), @p273='?' (DbType = Double), @p274='?' (DbType = DateTime2), @p275='?' (DbType = DateTime2), @p276='?' (DbType = Double), @p277='?' (DbType = Double), @p278='?' (DbType = Double), @p279='?' (Size = 450), @p280='?' (DbType = Double), @p281='?' (DbType = DateTime2), @p282='?' (DbType = DateTime2), @p283='?' (DbType = Double), @p284='?' (DbType = Double), @p285='?' (DbType = Double), @p286='?' (Size = 450), @p287='?' (DbType = Double), @p288='?' (DbType = DateTime2), @p289='?' (DbType = DateTime2), @p290='?' (DbType = Double), @p291='?' (DbType = Double), @p292='?' (DbType = Double), @p293='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
DECLARE @inserted0 TABLE ([Id] int, [_Position] [int]);
MERGE [QuarterlyEarning] USING (
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, 0),
(@p7, @p8, @p9, @p10, @p11, @p12, @p13, 1),
(@p14, @p15, @p16, @p17, @p18, @p19, @p20, 2),
(@p21, @p22, @p23, @p24, @p25, @p26, @p27, 3),
(@p28, @p29, @p30, @p31, @p32, @p33, @p34, 4),
(@p35, @p36, @p37, @p38, @p39, @p40, @p41, 5),
(@p42, @p43, @p44, @p45, @p46, @p47, @p48, 6),
(@p49, @p50, @p51, @p52, @p53, @p54, @p55, 7),
(@p56, @p57, @p58, @p59, @p60, @p61, @p62, 8),
(@p63, @p64, @p65, @p66, @p67, @p68, @p69, 9),
(@p70, @p71, @p72, @p73, @p74, @p75, @p76, 10),
(@p77, @p78, @p79, @p80, @p81, @p82, @p83, 11),
(@p84, @p85, @p86, @p87, @p88, @p89, @p90, 12),
(@p91, @p92, @p93, @p94, @p95, @p96, @p97, 13),
(@p98, @p99, @p100, @p101, @p102, @p103, @p104, 14),
(@p105, @p106, @p107, @p108, @p109, @p110, @p111, 15),
(@p112, @p113, @p114, @p115, @p116, @p117, @p118, 16),
(@p119, @p120, @p121, @p122, @p123, @p124, @p125, 17),
(@p126, @p127, @p128, @p129, @p130, @p131, @p132, 18),
(@p133, @p134, @p135, @p136, @p137, @p138, @p139, 19),
(@p140, @p141, @p142, @p143, @p144, @p145, @p146, 20),
(@p147, @p148, @p149, @p150, @p151, @p152, @p153, 21),
(@p154, @p155, @p156, @p157, @p158, @p159, @p160, 22),
(@p161, @p162, @p163, @p164, @p165, @p166, @p167, 23),
(@p168, @p169, @p170, @p171, @p172, @p173, @p174, 24),
(@p175, @p176, @p177, @p178, @p179, @p180, @p181, 25),
(@p182, @p183, @p184, @p185, @p186, @p187, @p188, 26),
(@p189, @p190, @p191, @p192, @p193, @p194, @p195, 27),
(@p196, @p197, @p198, @p199, @p200, @p201, @p202, 28),
(@p203, @p204, @p205, @p206, @p207, @p208, @p209, 29),
(@p210, @p211, @p212, @p213, @p214, @p215, @p216, 30),
(@p217, @p218, @p219, @p220, @p221, @p222, @p223, 31),
(@p224, @p225, @p226, @p227, @p228, @p229, @p230, 32),
(@p231, @p232, @p233, @p234, @p235, @p236, @p237, 33),
(@p238, @p239, @p240, @p241, @p242, @p243, @p244, 34),
(@p245, @p246, @p247, @p248, @p249, @p250, @p251, 35),
(@p252, @p253, @p254, @p255, @p256, @p257, @p258, 36),
(@p259, @p260, @p261, @p262, @p263, @p264, @p265, 37),
(@p266, @p267, @p268, @p269, @p270, @p271, @p272, 38),
(@p273, @p274, @p275, @p276, @p277, @p278, @p279, 39),
(@p280, @p281, @p282, @p283, @p284, @p285, @p286, 40),
(@p287, @p288, @p289, @p290, @p291, @p292, @p293, 41)) AS i ([EstimatedEPS], [FiscalDateEnding], [ReportedDate], [ReportedEPS], [Surprise], [SurprisePercentage], [Symbol], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([EstimatedEPS], [FiscalDateEnding], [ReportedDate], [ReportedEPS], [Surprise], [SurprisePercentage], [Symbol])
VALUES (i.[EstimatedEPS], i.[FiscalDateEnding], i.[ReportedDate], i.[ReportedEPS], i.[Surprise], i.[SurprisePercentage], i.[Symbol])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted0;

SELECT [i].[Id] FROM @inserted0 i
ORDER BY [i].[_Position];
2022-05-12 01:10:00.181 +03:00 [INF] Executed DbCommand (15ms) [Parameters=[@p0='?' (DbType = Double), @p1='?' (DbType = DateTime2), @p2='?' (DbType = DateTime2), @p3='?' (DbType = Double), @p4='?' (DbType = Double), @p5='?' (DbType = Double), @p6='?' (Size = 450), @p7='?' (DbType = Double), @p8='?' (DbType = DateTime2), @p9='?' (DbType = DateTime2), @p10='?' (DbType = Double), @p11='?' (DbType = Double), @p12='?' (DbType = Double), @p13='?' (Size = 450), @p14='?' (DbType = Double), @p15='?' (DbType = DateTime2), @p16='?' (DbType = DateTime2), @p17='?' (DbType = Double), @p18='?' (DbType = Double), @p19='?' (DbType = Double), @p20='?' (Size = 450), @p21='?' (DbType = Double), @p22='?' (DbType = DateTime2), @p23='?' (DbType = DateTime2), @p24='?' (DbType = Double), @p25='?' (DbType = Double), @p26='?' (DbType = Double), @p27='?' (Size = 450), @p28='?' (DbType = Double), @p29='?' (DbType = DateTime2), @p30='?' (DbType = DateTime2), @p31='?' (DbType = Double), @p32='?' (DbType = Double), @p33='?' (DbType = Double), @p34='?' (Size = 450), @p35='?' (DbType = Double), @p36='?' (DbType = DateTime2), @p37='?' (DbType = DateTime2), @p38='?' (DbType = Double), @p39='?' (DbType = Double), @p40='?' (DbType = Double), @p41='?' (Size = 450), @p42='?' (DbType = Double), @p43='?' (DbType = DateTime2), @p44='?' (DbType = DateTime2), @p45='?' (DbType = Double), @p46='?' (DbType = Double), @p47='?' (DbType = Double), @p48='?' (Size = 450), @p49='?' (DbType = Double), @p50='?' (DbType = DateTime2), @p51='?' (DbType = DateTime2), @p52='?' (DbType = Double), @p53='?' (DbType = Double), @p54='?' (DbType = Double), @p55='?' (Size = 450), @p56='?' (DbType = Double), @p57='?' (DbType = DateTime2), @p58='?' (DbType = DateTime2), @p59='?' (DbType = Double), @p60='?' (DbType = Double), @p61='?' (DbType = Double), @p62='?' (Size = 450), @p63='?' (DbType = Double), @p64='?' (DbType = DateTime2), @p65='?' (DbType = DateTime2), @p66='?' (DbType = Double), @p67='?' (DbType = Double), @p68='?' (DbType = Double), @p69='?' (Size = 450), @p70='?' (DbType = Double), @p71='?' (DbType = DateTime2), @p72='?' (DbType = DateTime2), @p73='?' (DbType = Double), @p74='?' (DbType = Double), @p75='?' (DbType = Double), @p76='?' (Size = 450), @p77='?' (DbType = Double), @p78='?' (DbType = DateTime2), @p79='?' (DbType = DateTime2), @p80='?' (DbType = Double), @p81='?' (DbType = Double), @p82='?' (DbType = Double), @p83='?' (Size = 450), @p84='?' (DbType = Double), @p85='?' (DbType = DateTime2), @p86='?' (DbType = DateTime2), @p87='?' (DbType = Double), @p88='?' (DbType = Double), @p89='?' (DbType = Double), @p90='?' (Size = 450), @p91='?' (DbType = Double), @p92='?' (DbType = DateTime2), @p93='?' (DbType = DateTime2), @p94='?' (DbType = Double), @p95='?' (DbType = Double), @p96='?' (DbType = Double), @p97='?' (Size = 450), @p98='?' (DbType = Double), @p99='?' (DbType = DateTime2), @p100='?' (DbType = DateTime2), @p101='?' (DbType = Double), @p102='?' (DbType = Double), @p103='?' (DbType = Double), @p104='?' (Size = 450), @p105='?' (DbType = Double), @p106='?' (DbType = DateTime2), @p107='?' (DbType = DateTime2), @p108='?' (DbType = Double), @p109='?' (DbType = Double), @p110='?' (DbType = Double), @p111='?' (Size = 450), @p112='?' (DbType = Double), @p113='?' (DbType = DateTime2), @p114='?' (DbType = DateTime2), @p115='?' (DbType = Double), @p116='?' (DbType = Double), @p117='?' (DbType = Double), @p118='?' (Size = 450), @p119='?' (DbType = Double), @p120='?' (DbType = DateTime2), @p121='?' (DbType = DateTime2), @p122='?' (DbType = Double), @p123='?' (DbType = Double), @p124='?' (DbType = Double), @p125='?' (Size = 450), @p126='?' (DbType = Double), @p127='?' (DbType = DateTime2), @p128='?' (DbType = DateTime2), @p129='?' (DbType = Double), @p130='?' (DbType = Double), @p131='?' (DbType = Double), @p132='?' (Size = 450), @p133='?' (DbType = Double), @p134='?' (DbType = DateTime2), @p135='?' (DbType = DateTime2), @p136='?' (DbType = Double), @p137='?' (DbType = Double), @p138='?' (DbType = Double), @p139='?' (Size = 450), @p140='?' (DbType = Double), @p141='?' (DbType = DateTime2), @p142='?' (DbType = DateTime2), @p143='?' (DbType = Double), @p144='?' (DbType = Double), @p145='?' (DbType = Double), @p146='?' (Size = 450), @p147='?' (DbType = Double), @p148='?' (DbType = DateTime2), @p149='?' (DbType = DateTime2), @p150='?' (DbType = Double), @p151='?' (DbType = Double), @p152='?' (DbType = Double), @p153='?' (Size = 450), @p154='?' (DbType = Double), @p155='?' (DbType = DateTime2), @p156='?' (DbType = DateTime2), @p157='?' (DbType = Double), @p158='?' (DbType = Double), @p159='?' (DbType = Double), @p160='?' (Size = 450), @p161='?' (DbType = Double), @p162='?' (DbType = DateTime2), @p163='?' (DbType = DateTime2), @p164='?' (DbType = Double), @p165='?' (DbType = Double), @p166='?' (DbType = Double), @p167='?' (Size = 450), @p168='?' (DbType = Double), @p169='?' (DbType = DateTime2), @p170='?' (DbType = DateTime2), @p171='?' (DbType = Double), @p172='?' (DbType = Double), @p173='?' (DbType = Double), @p174='?' (Size = 450), @p175='?' (DbType = Double), @p176='?' (DbType = DateTime2), @p177='?' (DbType = DateTime2), @p178='?' (DbType = Double), @p179='?' (DbType = Double), @p180='?' (DbType = Double), @p181='?' (Size = 450), @p182='?' (DbType = Double), @p183='?' (DbType = DateTime2), @p184='?' (DbType = DateTime2), @p185='?' (DbType = Double), @p186='?' (DbType = Double), @p187='?' (DbType = Double), @p188='?' (Size = 450), @p189='?' (DbType = Double), @p190='?' (DbType = DateTime2), @p191='?' (DbType = DateTime2), @p192='?' (DbType = Double), @p193='?' (DbType = Double), @p194='?' (DbType = Double), @p195='?' (Size = 450), @p196='?' (DbType = Double), @p197='?' (DbType = DateTime2), @p198='?' (DbType = DateTime2), @p199='?' (DbType = Double), @p200='?' (DbType = Double), @p201='?' (DbType = Double), @p202='?' (Size = 450), @p203='?' (DbType = Double), @p204='?' (DbType = DateTime2), @p205='?' (DbType = DateTime2), @p206='?' (DbType = Double), @p207='?' (DbType = Double), @p208='?' (DbType = Double), @p209='?' (Size = 450), @p210='?' (DbType = Double), @p211='?' (DbType = DateTime2), @p212='?' (DbType = DateTime2), @p213='?' (DbType = Double), @p214='?' (DbType = Double), @p215='?' (DbType = Double), @p216='?' (Size = 450), @p217='?' (DbType = Double), @p218='?' (DbType = DateTime2), @p219='?' (DbType = DateTime2), @p220='?' (DbType = Double), @p221='?' (DbType = Double), @p222='?' (DbType = Double), @p223='?' (Size = 450), @p224='?' (DbType = Double), @p225='?' (DbType = DateTime2), @p226='?' (DbType = DateTime2), @p227='?' (DbType = Double), @p228='?' (DbType = Double), @p229='?' (DbType = Double), @p230='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
DECLARE @inserted0 TABLE ([Id] int, [_Position] [int]);
MERGE [QuarterlyEarning] USING (
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, 0),
(@p7, @p8, @p9, @p10, @p11, @p12, @p13, 1),
(@p14, @p15, @p16, @p17, @p18, @p19, @p20, 2),
(@p21, @p22, @p23, @p24, @p25, @p26, @p27, 3),
(@p28, @p29, @p30, @p31, @p32, @p33, @p34, 4),
(@p35, @p36, @p37, @p38, @p39, @p40, @p41, 5),
(@p42, @p43, @p44, @p45, @p46, @p47, @p48, 6),
(@p49, @p50, @p51, @p52, @p53, @p54, @p55, 7),
(@p56, @p57, @p58, @p59, @p60, @p61, @p62, 8),
(@p63, @p64, @p65, @p66, @p67, @p68, @p69, 9),
(@p70, @p71, @p72, @p73, @p74, @p75, @p76, 10),
(@p77, @p78, @p79, @p80, @p81, @p82, @p83, 11),
(@p84, @p85, @p86, @p87, @p88, @p89, @p90, 12),
(@p91, @p92, @p93, @p94, @p95, @p96, @p97, 13),
(@p98, @p99, @p100, @p101, @p102, @p103, @p104, 14),
(@p105, @p106, @p107, @p108, @p109, @p110, @p111, 15),
(@p112, @p113, @p114, @p115, @p116, @p117, @p118, 16),
(@p119, @p120, @p121, @p122, @p123, @p124, @p125, 17),
(@p126, @p127, @p128, @p129, @p130, @p131, @p132, 18),
(@p133, @p134, @p135, @p136, @p137, @p138, @p139, 19),
(@p140, @p141, @p142, @p143, @p144, @p145, @p146, 20),
(@p147, @p148, @p149, @p150, @p151, @p152, @p153, 21),
(@p154, @p155, @p156, @p157, @p158, @p159, @p160, 22),
(@p161, @p162, @p163, @p164, @p165, @p166, @p167, 23),
(@p168, @p169, @p170, @p171, @p172, @p173, @p174, 24),
(@p175, @p176, @p177, @p178, @p179, @p180, @p181, 25),
(@p182, @p183, @p184, @p185, @p186, @p187, @p188, 26),
(@p189, @p190, @p191, @p192, @p193, @p194, @p195, 27),
(@p196, @p197, @p198, @p199, @p200, @p201, @p202, 28),
(@p203, @p204, @p205, @p206, @p207, @p208, @p209, 29),
(@p210, @p211, @p212, @p213, @p214, @p215, @p216, 30),
(@p217, @p218, @p219, @p220, @p221, @p222, @p223, 31),
(@p224, @p225, @p226, @p227, @p228, @p229, @p230, 32)) AS i ([EstimatedEPS], [FiscalDateEnding], [ReportedDate], [ReportedEPS], [Surprise], [SurprisePercentage], [Symbol], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([EstimatedEPS], [FiscalDateEnding], [ReportedDate], [ReportedEPS], [Surprise], [SurprisePercentage], [Symbol])
VALUES (i.[EstimatedEPS], i.[FiscalDateEnding], i.[ReportedDate], i.[ReportedEPS], i.[Surprise], i.[SurprisePercentage], i.[Symbol])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted0;

SELECT [i].[Id] FROM @inserted0 i
ORDER BY [i].[_Position];
2022-05-12 01:10:00.191 +03:00 [INF] AddOrUpdate run successful.
2022-05-12 01:10:00.704 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.IncomeStatement with Symbol AVAV
2022-05-12 01:10:00.706 +03:00 [INF] Generating URI for INCOME_STATEMENT with params: symbol: AVAV
2022-05-12 01:10:00.706 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=INCOME_STATEMENT&symbol=AVAV
2022-05-12 01:10:00.707 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=INCOME_STATEMENT&symbol=AVAV".
2022-05-12 01:10:02.129 +03:00 [INF] Response has success status code
2022-05-12 01:10:02.129 +03:00 [INF] Trying to deserialize response.
2022-05-12 01:10:02.131 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 01:10:02.143 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__symbol_0
2022-05-12 01:10:02.144 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.IncomeStatement.
2022-05-12 01:10:02.151 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [i].[Symbol], [i].[ExistInApi], [i].[LastApiRefresh], [i].[LastLocalRefresh]
FROM [IncomeStatements] AS [i]
WHERE [i].[Symbol] = @__entity_Symbol_0
2022-05-12 01:10:02.153 +03:00 [INF] Entity does not exist. Adding to DB.
2022-05-12 01:10:02.168 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = Boolean), @p2='?' (DbType = DateTime2), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [IncomeStatements] ([Symbol], [ExistInApi], [LastApiRefresh], [LastLocalRefresh])
VALUES (@p0, @p1, @p2, @p3);
2022-05-12 01:10:02.206 +03:00 [INF] Executed DbCommand (36ms) [Parameters=[@p4='?' (DbType = Int64), @p5='?' (DbType = Double), @p6='?' (DbType = Double), @p7='?' (DbType = Int64), @p8='?' (DbType = Int64), @p9='?' (DbType = Int64), @p10='?' (DbType = Double), @p11='?' (DbType = DateTime2), @p12='?' (DbType = Double), @p13='?' (DbType = Double), @p14='?' (DbType = Int64), @p15='?' (DbType = Int64), @p16='?' (DbType = Double), @p17='?' (DbType = Int64), @p18='?' (DbType = Int64), @p19='?' (DbType = Double), @p20='?' (DbType = Double), @p21='?' (DbType = Double), @p22='?' (DbType = Int64), @p23='?' (DbType = Double), @p24='?' (DbType = Double), @p25='?' (DbType = Int64), @p26='?' (Size = 4000), @p27='?' (DbType = Int64), @p28='?' (DbType = Double), @p29='?' (Size = 450), @p30='?' (DbType = Int64), @p31='?' (DbType = Int64), @p32='?' (DbType = Double), @p33='?' (DbType = Double), @p34='?' (DbType = Int64), @p35='?' (DbType = Int64), @p36='?' (DbType = Int64), @p37='?' (DbType = Double), @p38='?' (DbType = DateTime2), @p39='?' (DbType = Double), @p40='?' (DbType = Double), @p41='?' (DbType = Int64), @p42='?' (DbType = Int64), @p43='?' (DbType = Double), @p44='?' (DbType = Int64), @p45='?' (DbType = Int64), @p46='?' (DbType = Double), @p47='?' (DbType = Double), @p48='?' (DbType = Double), @p49='?' (DbType = Int64), @p50='?' (DbType = Double), @p51='?' (DbType = Double), @p52='?' (DbType = Int64), @p53='?' (Size = 4000), @p54='?' (DbType = Int64), @p55='?' (DbType = Double), @p56='?' (Size = 450), @p57='?' (DbType = Int64), @p58='?' (DbType = Int64), @p59='?' (DbType = Double), @p60='?' (DbType = Double), @p61='?' (DbType = Int64), @p62='?' (DbType = Int64), @p63='?' (DbType = Int64), @p64='?' (DbType = Double), @p65='?' (DbType = DateTime2), @p66='?' (DbType = Double), @p67='?' (DbType = Double), @p68='?' (DbType = Int64), @p69='?' (DbType = Int64), @p70='?' (DbType = Double), @p71='?' (DbType = Int64), @p72='?' (DbType = Int64), @p73='?' (DbType = Double), @p74='?' (DbType = Double), @p75='?' (DbType = Double), @p76='?' (DbType = Int64), @p77='?' (DbType = Double), @p78='?' (DbType = Double), @p79='?' (DbType = Int64), @p80='?' (Size = 4000), @p81='?' (DbType = Int64), @p82='?' (DbType = Double), @p83='?' (Size = 450), @p84='?' (DbType = Int64), @p85='?' (DbType = Int64), @p86='?' (DbType = Double), @p87='?' (DbType = Double), @p88='?' (DbType = Int64), @p89='?' (DbType = Int64), @p90='?' (DbType = Int64), @p91='?' (DbType = Double), @p92='?' (DbType = DateTime2), @p93='?' (DbType = Double), @p94='?' (DbType = Double), @p95='?' (DbType = Int64), @p96='?' (DbType = Int64), @p97='?' (DbType = Double), @p98='?' (DbType = Int64), @p99='?' (DbType = Int64), @p100='?' (DbType = Double), @p101='?' (DbType = Double), @p102='?' (DbType = Double), @p103='?' (DbType = Int64), @p104='?' (DbType = Double), @p105='?' (DbType = Double), @p106='?' (DbType = Int64), @p107='?' (Size = 4000), @p108='?' (DbType = Int64), @p109='?' (DbType = Double), @p110='?' (Size = 450), @p111='?' (DbType = Int64), @p112='?' (DbType = Int64), @p113='?' (DbType = Double), @p114='?' (DbType = Double), @p115='?' (DbType = Int64), @p116='?' (DbType = Int64), @p117='?' (DbType = Int64), @p118='?' (DbType = Double), @p119='?' (DbType = DateTime2), @p120='?' (DbType = Double), @p121='?' (DbType = Double), @p122='?' (DbType = Int64), @p123='?' (DbType = Int64), @p124='?' (DbType = Double), @p125='?' (DbType = Int64), @p126='?' (DbType = Int64), @p127='?' (DbType = Double), @p128='?' (DbType = Double), @p129='?' (DbType = Double), @p130='?' (DbType = Int64), @p131='?' (DbType = Double), @p132='?' (DbType = Double), @p133='?' (DbType = Int64), @p134='?' (Size = 4000), @p135='?' (DbType = Int64), @p136='?' (DbType = Double), @p137='?' (Size = 450), @p138='?' (DbType = Int64), @p139='?' (DbType = Int64), @p140='?' (DbType = Double), @p141='?' (DbType = Double), @p142='?' (DbType = Int64), @p143='?' (DbType = Int64), @p144='?' (DbType = Int64), @p145='?' (DbType = Double), @p146='?' (DbType = DateTime2), @p147='?' (DbType = Double), @p148='?' (DbType = Double), @p149='?' (DbType = Int64), @p150='?' (DbType = Int64), @p151='?' (DbType = Double), @p152='?' (DbType = Int64), @p153='?' (DbType = Int64), @p154='?' (DbType = Double), @p155='?' (DbType = Double), @p156='?' (DbType = Double), @p157='?' (DbType = Int64), @p158='?' (DbType = Double), @p159='?' (DbType = Double), @p160='?' (DbType = Int64), @p161='?' (Size = 4000), @p162='?' (DbType = Int64), @p163='?' (DbType = Double), @p164='?' (Size = 450), @p165='?' (DbType = Int64), @p166='?' (DbType = Int64), @p167='?' (DbType = Double), @p168='?' (DbType = Double), @p169='?' (DbType = Int64), @p170='?' (DbType = Int64), @p171='?' (DbType = Int64), @p172='?' (DbType = Double), @p173='?' (DbType = DateTime2), @p174='?' (DbType = Double), @p175='?' (DbType = Double), @p176='?' (DbType = Int64), @p177='?' (DbType = Int64), @p178='?' (DbType = Double), @p179='?' (DbType = Int64), @p180='?' (DbType = Int64), @p181='?' (DbType = Double), @p182='?' (DbType = Double), @p183='?' (DbType = Double), @p184='?' (DbType = Int64), @p185='?' (DbType = Double), @p186='?' (DbType = Double), @p187='?' (DbType = Int64), @p188='?' (Size = 4000), @p189='?' (DbType = Int64), @p190='?' (DbType = Double), @p191='?' (Size = 450), @p192='?' (DbType = Int64), @p193='?' (DbType = Int64), @p194='?' (DbType = Double), @p195='?' (DbType = Double), @p196='?' (DbType = Int64), @p197='?' (DbType = Int64), @p198='?' (DbType = Int64), @p199='?' (DbType = Double), @p200='?' (DbType = DateTime2), @p201='?' (DbType = Double), @p202='?' (DbType = Double), @p203='?' (DbType = Int64), @p204='?' (DbType = Int64), @p205='?' (DbType = Double), @p206='?' (DbType = Int64), @p207='?' (DbType = Int64), @p208='?' (DbType = Double), @p209='?' (DbType = Double), @p210='?' (DbType = Double), @p211='?' (DbType = Int64), @p212='?' (DbType = Double), @p213='?' (DbType = Double), @p214='?' (DbType = Int64), @p215='?' (Size = 4000), @p216='?' (DbType = Int64), @p217='?' (DbType = Double), @p218='?' (Size = 450), @p219='?' (DbType = Int64), @p220='?' (DbType = Int64), @p221='?' (DbType = Double), @p222='?' (DbType = Double), @p223='?' (DbType = Int64), @p224='?' (DbType = Int64), @p225='?' (DbType = Int64), @p226='?' (DbType = Double), @p227='?' (DbType = DateTime2), @p228='?' (DbType = Double), @p229='?' (DbType = Double), @p230='?' (DbType = Int64), @p231='?' (DbType = Int64), @p232='?' (DbType = Double), @p233='?' (DbType = Int64), @p234='?' (DbType = Int64), @p235='?' (DbType = Double), @p236='?' (DbType = Double), @p237='?' (DbType = Double), @p238='?' (DbType = Int64), @p239='?' (DbType = Double), @p240='?' (DbType = Double), @p241='?' (DbType = Int64), @p242='?' (Size = 4000), @p243='?' (DbType = Int64), @p244='?' (DbType = Double), @p245='?' (Size = 450), @p246='?' (DbType = Int64), @p247='?' (DbType = Int64), @p248='?' (DbType = Double), @p249='?' (DbType = Double), @p250='?' (DbType = Int64), @p251='?' (DbType = Int64), @p252='?' (DbType = Int64), @p253='?' (DbType = Double), @p254='?' (DbType = DateTime2), @p255='?' (DbType = Double), @p256='?' (DbType = Double), @p257='?' (DbType = Int64), @p258='?' (DbType = Int64), @p259='?' (DbType = Double), @p260='?' (DbType = Int64), @p261='?' (DbType = Int64), @p262='?' (DbType = Double), @p263='?' (DbType = Double), @p264='?' (DbType = Double), @p265='?' (DbType = Int64), @p266='?' (DbType = Double), @p267='?' (DbType = Double), @p268='?' (DbType = Int64), @p269='?' (Size = 4000), @p270='?' (DbType = Int64), @p271='?' (DbType = Double), @p272='?' (Size = 450), @p273='?' (DbType = Int64), @p274='?' (DbType = Int64), @p275='?' (DbType = Double), @p276='?' (DbType = Double), @p277='?' (DbType = Int64), @p278='?' (DbType = Int64), @p279='?' (DbType = Int64), @p280='?' (DbType = Double), @p281='?' (DbType = DateTime2), @p282='?' (DbType = Double), @p283='?' (DbType = Double), @p284='?' (DbType = Int64), @p285='?' (DbType = Int64), @p286='?' (DbType = Double), @p287='?' (DbType = Int64), @p288='?' (DbType = Int64), @p289='?' (DbType = Double), @p290='?' (DbType = Double), @p291='?' (DbType = Double), @p292='?' (DbType = Int64), @p293='?' (DbType = Double), @p294='?' (DbType = Double), @p295='?' (DbType = Int64), @p296='?' (Size = 4000), @p297='?' (DbType = Int64), @p298='?' (DbType = Double), @p299='?' (Size = 450), @p300='?' (DbType = Int64), @p301='?' (DbType = Int64), @p302='?' (DbType = Double), @p303='?' (DbType = Double), @p304='?' (DbType = Int64), @p305='?' (DbType = Int64), @p306='?' (DbType = Int64), @p307='?' (DbType = Double), @p308='?' (DbType = DateTime2), @p309='?' (DbType = Double), @p310='?' (DbType = Double), @p311='?' (DbType = Int64), @p312='?' (DbType = Int64), @p313='?' (DbType = Double), @p314='?' (DbType = Int64), @p315='?' (DbType = Int64), @p316='?' (DbType = Double), @p317='?' (DbType = Double), @p318='?' (DbType = Double), @p319='?' (DbType = Int64), @p320='?' (DbType = Double), @p321='?' (DbType = Double), @p322='?' (DbType = Int64), @p323='?' (Size = 4000), @p324='?' (DbType = Int64), @p325='?' (DbType = Double), @p326='?' (Size = 450), @p327='?' (DbType = Int64), @p328='?' (DbType = Int64), @p329='?' (DbType = Double), @p330='?' (DbType = Double), @p331='?' (DbType = Int64), @p332='?' (DbType = Int64), @p333='?' (DbType = Int64), @p334='?' (DbType = Double), @p335='?' (DbType = DateTime2), @p336='?' (DbType = Double), @p337='?' (DbType = Double), @p338='?' (DbType = Int64), @p339='?' (DbType = Int64), @p340='?' (DbType = Double), @p341='?' (DbType = Int64), @p342='?' (DbType = Int64), @p343='?' (DbType = Double), @p344='?' (DbType = Double), @p345='?' (DbType = Double), @p346='?' (DbType = Int64), @p347='?' (DbType = Double), @p348='?' (DbType = Double), @p349='?' (DbType = Int64), @p350='?' (Size = 4000), @p351='?' (DbType = Int64), @p352='?' (DbType = Double), @p353='?' (Size = 450), @p354='?' (DbType = Int64), @p355='?' (DbType = Int64), @p356='?' (DbType = Double), @p357='?' (DbType = Double), @p358='?' (DbType = Int64), @p359='?' (DbType = Int64), @p360='?' (DbType = Int64), @p361='?' (DbType = Double), @p362='?' (DbType = DateTime2), @p363='?' (DbType = Double), @p364='?' (DbType = Double), @p365='?' (DbType = Int64), @p366='?' (DbType = Int64), @p367='?' (DbType = Double), @p368='?' (DbType = Int64), @p369='?' (DbType = Int64), @p370='?' (DbType = Double), @p371='?' (DbType = Double), @p372='?' (DbType = Double), @p373='?' (DbType = Int64), @p374='?' (DbType = Double), @p375='?' (DbType = Double), @p376='?' (DbType = Int64), @p377='?' (Size = 4000), @p378='?' (DbType = Int64), @p379='?' (DbType = Double), @p380='?' (Size = 450), @p381='?' (DbType = Int64), @p382='?' (DbType = Int64), @p383='?' (DbType = Double), @p384='?' (DbType = Double), @p385='?' (DbType = Int64), @p386='?' (DbType = Int64), @p387='?' (DbType = Int64), @p388='?' (DbType = Double), @p389='?' (DbType = DateTime2), @p390='?' (DbType = Double), @p391='?' (DbType = Double), @p392='?' (DbType = Int64), @p393='?' (DbType = Int64), @p394='?' (DbType = Double), @p395='?' (DbType = Int64), @p396='?' (DbType = Int64), @p397='?' (DbType = Double), @p398='?' (DbType = Double), @p399='?' (DbType = Double), @p400='?' (DbType = Int64), @p401='?' (DbType = Double), @p402='?' (DbType = Double), @p403='?' (DbType = Int64), @p404='?' (Size = 4000), @p405='?' (DbType = Int64), @p406='?' (DbType = Double), @p407='?' (Size = 450), @p408='?' (DbType = Int64), @p409='?' (DbType = Int64), @p410='?' (DbType = Double), @p411='?' (DbType = Double), @p412='?' (DbType = Int64), @p413='?' (DbType = Int64), @p414='?' (DbType = Int64), @p415='?' (DbType = Double), @p416='?' (DbType = DateTime2), @p417='?' (DbType = Double), @p418='?' (DbType = Double), @p419='?' (DbType = Int64), @p420='?' (DbType = Int64), @p421='?' (DbType = Double), @p422='?' (DbType = Int64), @p423='?' (DbType = Int64), @p424='?' (DbType = Double), @p425='?' (DbType = Double), @p426='?' (DbType = Double), @p427='?' (DbType = Int64), @p428='?' (DbType = Double), @p429='?' (DbType = Double), @p430='?' (DbType = Int64), @p431='?' (Size = 4000), @p432='?' (DbType = Int64), @p433='?' (DbType = Double), @p434='?' (Size = 450), @p435='?' (DbType = Int64), @p436='?' (DbType = Int64), @p437='?' (DbType = Double), @p438='?' (DbType = Double), @p439='?' (DbType = Int64), @p440='?' (DbType = Int64), @p441='?' (DbType = Int64), @p442='?' (DbType = Double), @p443='?' (DbType = DateTime2), @p444='?' (DbType = Double), @p445='?' (DbType = Double), @p446='?' (DbType = Int64), @p447='?' (DbType = Int64), @p448='?' (DbType = Double), @p449='?' (DbType = Int64), @p450='?' (DbType = Int64), @p451='?' (DbType = Double), @p452='?' (DbType = Double), @p453='?' (DbType = Double), @p454='?' (DbType = Int64), @p455='?' (DbType = Double), @p456='?' (DbType = Double), @p457='?' (DbType = Int64), @p458='?' (Size = 4000), @p459='?' (DbType = Int64), @p460='?' (DbType = Double), @p461='?' (Size = 450), @p462='?' (DbType = Int64), @p463='?' (DbType = Int64), @p464='?' (DbType = Double), @p465='?' (DbType = Double), @p466='?' (DbType = Int64), @p467='?' (DbType = Int64), @p468='?' (DbType = Int64), @p469='?' (DbType = Double), @p470='?' (DbType = DateTime2), @p471='?' (DbType = Double), @p472='?' (DbType = Double), @p473='?' (DbType = Int64), @p474='?' (DbType = Int64), @p475='?' (DbType = Double), @p476='?' (DbType = Int64), @p477='?' (DbType = Int64), @p478='?' (DbType = Double), @p479='?' (DbType = Double), @p480='?' (DbType = Double), @p481='?' (DbType = Int64), @p482='?' (DbType = Double), @p483='?' (DbType = Double), @p484='?' (DbType = Int64), @p485='?' (Size = 4000), @p486='?' (DbType = Int64), @p487='?' (DbType = Double), @p488='?' (Size = 450), @p489='?' (DbType = Int64), @p490='?' (DbType = Int64), @p491='?' (DbType = Double), @p492='?' (DbType = Double), @p493='?' (DbType = Int64), @p494='?' (DbType = Int64), @p495='?' (DbType = Int64), @p496='?' (DbType = Double), @p497='?' (DbType = DateTime2), @p498='?' (DbType = Double), @p499='?' (DbType = Double), @p500='?' (DbType = Int64), @p501='?' (DbType = Int64), @p502='?' (DbType = Double), @p503='?' (DbType = Int64), @p504='?' (DbType = Int64), @p505='?' (DbType = Double), @p506='?' (DbType = Double), @p507='?' (DbType = Double), @p508='?' (DbType = Int64), @p509='?' (DbType = Double), @p510='?' (DbType = Double), @p511='?' (DbType = Int64), @p512='?' (Size = 4000), @p513='?' (DbType = Int64), @p514='?' (DbType = Double), @p515='?' (Size = 450), @p516='?' (DbType = Int64), @p517='?' (DbType = Int64), @p518='?' (DbType = Double), @p519='?' (DbType = Double), @p520='?' (DbType = Int64), @p521='?' (DbType = Int64), @p522='?' (DbType = Int64), @p523='?' (DbType = Double), @p524='?' (DbType = DateTime2), @p525='?' (DbType = Double), @p526='?' (DbType = Double), @p527='?' (DbType = Int64), @p528='?' (DbType = Int64), @p529='?' (DbType = Double), @p530='?' (DbType = Int64), @p531='?' (DbType = Int64), @p532='?' (DbType = Double), @p533='?' (DbType = Double), @p534='?' (DbType = Double), @p535='?' (DbType = Int64), @p536='?' (DbType = Double), @p537='?' (DbType = Double), @p538='?' (DbType = Int64), @p539='?' (Size = 4000), @p540='?' (DbType = Int64), @p541='?' (DbType = Double), @p542='?' (Size = 450), @p543='?' (DbType = Int64), @p544='?' (DbType = Int64), @p545='?' (DbType = Double), @p546='?' (DbType = Double), @p547='?' (DbType = Int64), @p548='?' (DbType = Int64), @p549='?' (DbType = Int64), @p550='?' (DbType = Double), @p551='?' (DbType = DateTime2), @p552='?' (DbType = Double), @p553='?' (DbType = Double), @p554='?' (DbType = Int64), @p555='?' (DbType = Int64), @p556='?' (DbType = Double), @p557='?' (DbType = Int64), @p558='?' (DbType = Int64), @p559='?' (DbType = Double), @p560='?' (DbType = Double), @p561='?' (DbType = Double), @p562='?' (DbType = Int64), @p563='?' (DbType = Double), @p564='?' (DbType = Double), @p565='?' (DbType = Int64), @p566='?' (Size = 4000), @p567='?' (DbType = Int64), @p568='?' (DbType = Double), @p569='?' (Size = 450), @p570='?' (DbType = Int64), @p571='?' (DbType = Int64), @p572='?' (DbType = Double), @p573='?' (DbType = Double), @p574='?' (DbType = Int64), @p575='?' (DbType = Int64), @p576='?' (DbType = Int64), @p577='?' (DbType = Double), @p578='?' (DbType = DateTime2), @p579='?' (DbType = Double), @p580='?' (DbType = Double), @p581='?' (DbType = Int64), @p582='?' (DbType = Int64), @p583='?' (DbType = Double), @p584='?' (DbType = Int64), @p585='?' (DbType = Int64), @p586='?' (DbType = Double), @p587='?' (DbType = Double), @p588='?' (DbType = Double), @p589='?' (DbType = Int64), @p590='?' (DbType = Double), @p591='?' (DbType = Double), @p592='?' (DbType = Int64), @p593='?' (Size = 4000), @p594='?' (DbType = Int64), @p595='?' (DbType = Double), @p596='?' (Size = 450), @p597='?' (DbType = Int64), @p598='?' (DbType = Int64), @p599='?' (DbType = Double), @p600='?' (DbType = Double), @p601='?' (DbType = Int64), @p602='?' (DbType = Int64), @p603='?' (DbType = Int64), @p604='?' (DbType = Double), @p605='?' (DbType = DateTime2), @p606='?' (DbType = Double), @p607='?' (DbType = Double), @p608='?' (DbType = Int64), @p609='?' (DbType = Int64), @p610='?' (DbType = Double), @p611='?' (DbType = Int64), @p612='?' (DbType = Int64), @p613='?' (DbType = Double), @p614='?' (DbType = Double), @p615='?' (DbType = Double), @p616='?' (DbType = Int64), @p617='?' (DbType = Double), @p618='?' (DbType = Double), @p619='?' (DbType = Int64), @p620='?' (Size = 4000), @p621='?' (DbType = Int64), @p622='?' (DbType = Double), @p623='?' (Size = 450), @p624='?' (DbType = Int64), @p625='?' (DbType = Int64), @p626='?' (DbType = Double), @p627='?' (DbType = Double), @p628='?' (DbType = Int64), @p629='?' (DbType = Int64), @p630='?' (DbType = Int64), @p631='?' (DbType = Double), @p632='?' (DbType = DateTime2), @p633='?' (DbType = Double), @p634='?' (DbType = Double), @p635='?' (DbType = Int64), @p636='?' (DbType = Int64), @p637='?' (DbType = Double), @p638='?' (DbType = Int64), @p639='?' (DbType = Int64), @p640='?' (DbType = Double), @p641='?' (DbType = Double), @p642='?' (DbType = Double), @p643='?' (DbType = Int64), @p644='?' (DbType = Double), @p645='?' (DbType = Double), @p646='?' (DbType = Int64), @p647='?' (Size = 4000), @p648='?' (DbType = Int64), @p649='?' (DbType = Double), @p650='?' (Size = 450), @p651='?' (DbType = Int64), @p652='?' (DbType = Int64), @p653='?' (DbType = Double), @p654='?' (DbType = Double), @p655='?' (DbType = Int64), @p656='?' (DbType = Int64), @p657='?' (DbType = Int64), @p658='?' (DbType = Double), @p659='?' (DbType = DateTime2), @p660='?' (DbType = Double), @p661='?' (DbType = Double), @p662='?' (DbType = Int64), @p663='?' (DbType = Int64), @p664='?' (DbType = Double), @p665='?' (DbType = Int64), @p666='?' (DbType = Int64), @p667='?' (DbType = Double), @p668='?' (DbType = Double), @p669='?' (DbType = Double), @p670='?' (DbType = Int64), @p671='?' (DbType = Double), @p672='?' (DbType = Double), @p673='?' (DbType = Int64), @p674='?' (Size = 4000), @p675='?' (DbType = Int64), @p676='?' (DbType = Double), @p677='?' (Size = 450), @p678='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
DECLARE @inserted0 TABLE ([Id] int, [_Position] [int]);
MERGE [IncomeStatementAnnualReport] USING (
VALUES (@p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21, @p22, @p23, @p24, @p25, @p26, @p27, @p28, @p29, @p30, 0),
(@p31, @p32, @p33, @p34, @p35, @p36, @p37, @p38, @p39, @p40, @p41, @p42, @p43, @p44, @p45, @p46, @p47, @p48, @p49, @p50, @p51, @p52, @p53, @p54, @p55, @p56, @p57, 1),
(@p58, @p59, @p60, @p61, @p62, @p63, @p64, @p65, @p66, @p67, @p68, @p69, @p70, @p71, @p72, @p73, @p74, @p75, @p76, @p77, @p78, @p79, @p80, @p81, @p82, @p83, @p84, 2),
(@p85, @p86, @p87, @p88, @p89, @p90, @p91, @p92, @p93, @p94, @p95, @p96, @p97, @p98, @p99, @p100, @p101, @p102, @p103, @p104, @p105, @p106, @p107, @p108, @p109, @p110, @p111, 3),
(@p112, @p113, @p114, @p115, @p116, @p117, @p118, @p119, @p120, @p121, @p122, @p123, @p124, @p125, @p126, @p127, @p128, @p129, @p130, @p131, @p132, @p133, @p134, @p135, @p136, @p137, @p138, 4)) AS i ([ComprehensiveIncomeNetOfTax], [CostOfRevenue], [CostofGoodsAndServicesSold], [Depreciation], [DepreciationAndAmortization], [Ebit], [Ebitda], [FiscalDateEnding], [GrossProfit], [IncomeBeforeTax], [IncomeTaxExpense], [InterestAndDebtExpense], [InterestExpense], [InterestIncome], [InvestmentIncomeNet], [NetIncome], [NetIncomeFromContinuingOperations], [NetInterestIncome], [NonInterestIncome], [OperatingExpenses], [OperatingIncome], [OtherNonOperatingIncome], [ReportedCurrency], [ResearchAndDevelopment], [SellingGeneralAndAdministrative], [Symbol], [TotalRevenue], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([ComprehensiveIncomeNetOfTax], [CostOfRevenue], [CostofGoodsAndServicesSold], [Depreciation], [DepreciationAndAmortization], [Ebit], [Ebitda], [FiscalDateEnding], [GrossProfit], [IncomeBeforeTax], [IncomeTaxExpense], [InterestAndDebtExpense], [InterestExpense], [InterestIncome], [InvestmentIncomeNet], [NetIncome], [NetIncomeFromContinuingOperations], [NetInterestIncome], [NonInterestIncome], [OperatingExpenses], [OperatingIncome], [OtherNonOperatingIncome], [ReportedCurrency], [ResearchAndDevelopment], [SellingGeneralAndAdministrative], [Symbol], [TotalRevenue])
VALUES (i.[ComprehensiveIncomeNetOfTax], i.[CostOfRevenue], i.[CostofGoodsAndServicesSold], i.[Depreciation], i.[DepreciationAndAmortization], i.[Ebit], i.[Ebitda], i.[FiscalDateEnding], i.[GrossProfit], i.[IncomeBeforeTax], i.[IncomeTaxExpense], i.[InterestAndDebtExpense], i.[InterestExpense], i.[InterestIncome], i.[InvestmentIncomeNet], i.[NetIncome], i.[NetIncomeFromContinuingOperations], i.[NetInterestIncome], i.[NonInterestIncome], i.[OperatingExpenses], i.[OperatingIncome], i.[OtherNonOperatingIncome], i.[ReportedCurrency], i.[ResearchAndDevelopment], i.[SellingGeneralAndAdministrative], i.[Symbol], i.[TotalRevenue])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted0;

SELECT [i].[Id] FROM @inserted0 i
ORDER BY [i].[_Position];

DECLARE @inserted5 TABLE ([Id] int, [_Position] [int]);
MERGE [IncomeStatementQuarterlyReport] USING (
VALUES (@p139, @p140, @p141, @p142, @p143, @p144, @p145, @p146, @p147, @p148, @p149, @p150, @p151, @p152, @p153, @p154, @p155, @p156, @p157, @p158, @p159, @p160, @p161, @p162, @p163, @p164, @p165, 0),
(@p166, @p167, @p168, @p169, @p170, @p171, @p172, @p173, @p174, @p175, @p176, @p177, @p178, @p179, @p180, @p181, @p182, @p183, @p184, @p185, @p186, @p187, @p188, @p189, @p190, @p191, @p192, 1),
(@p193, @p194, @p195, @p196, @p197, @p198, @p199, @p200, @p201, @p202, @p203, @p204, @p205, @p206, @p207, @p208, @p209, @p210, @p211, @p212, @p213, @p214, @p215, @p216, @p217, @p218, @p219, 2),
(@p220, @p221, @p222, @p223, @p224, @p225, @p226, @p227, @p228, @p229, @p230, @p231, @p232, @p233, @p234, @p235, @p236, @p237, @p238, @p239, @p240, @p241, @p242, @p243, @p244, @p245, @p246, 3),
(@p247, @p248, @p249, @p250, @p251, @p252, @p253, @p254, @p255, @p256, @p257, @p258, @p259, @p260, @p261, @p262, @p263, @p264, @p265, @p266, @p267, @p268, @p269, @p270, @p271, @p272, @p273, 4),
(@p274, @p275, @p276, @p277, @p278, @p279, @p280, @p281, @p282, @p283, @p284, @p285, @p286, @p287, @p288, @p289, @p290, @p291, @p292, @p293, @p294, @p295, @p296, @p297, @p298, @p299, @p300, 5),
(@p301, @p302, @p303, @p304, @p305, @p306, @p307, @p308, @p309, @p310, @p311, @p312, @p313, @p314, @p315, @p316, @p317, @p318, @p319, @p320, @p321, @p322, @p323, @p324, @p325, @p326, @p327, 6),
(@p328, @p329, @p330, @p331, @p332, @p333, @p334, @p335, @p336, @p337, @p338, @p339, @p340, @p341, @p342, @p343, @p344, @p345, @p346, @p347, @p348, @p349, @p350, @p351, @p352, @p353, @p354, 7),
(@p355, @p356, @p357, @p358, @p359, @p360, @p361, @p362, @p363, @p364, @p365, @p366, @p367, @p368, @p369, @p370, @p371, @p372, @p373, @p374, @p375, @p376, @p377, @p378, @p379, @p380, @p381, 8),
(@p382, @p383, @p384, @p385, @p386, @p387, @p388, @p389, @p390, @p391, @p392, @p393, @p394, @p395, @p396, @p397, @p398, @p399, @p400, @p401, @p402, @p403, @p404, @p405, @p406, @p407, @p408, 9),
(@p409, @p410, @p411, @p412, @p413, @p414, @p415, @p416, @p417, @p418, @p419, @p420, @p421, @p422, @p423, @p424, @p425, @p426, @p427, @p428, @p429, @p430, @p431, @p432, @p433, @p434, @p435, 10),
(@p436, @p437, @p438, @p439, @p440, @p441, @p442, @p443, @p444, @p445, @p446, @p447, @p448, @p449, @p450, @p451, @p452, @p453, @p454, @p455, @p456, @p457, @p458, @p459, @p460, @p461, @p462, 11),
(@p463, @p464, @p465, @p466, @p467, @p468, @p469, @p470, @p471, @p472, @p473, @p474, @p475, @p476, @p477, @p478, @p479, @p480, @p481, @p482, @p483, @p484, @p485, @p486, @p487, @p488, @p489, 12),
(@p490, @p491, @p492, @p493, @p494, @p495, @p496, @p497, @p498, @p499, @p500, @p501, @p502, @p503, @p504, @p505, @p506, @p507, @p508, @p509, @p510, @p511, @p512, @p513, @p514, @p515, @p516, 13),
(@p517, @p518, @p519, @p520, @p521, @p522, @p523, @p524, @p525, @p526, @p527, @p528, @p529, @p530, @p531, @p532, @p533, @p534, @p535, @p536, @p537, @p538, @p539, @p540, @p541, @p542, @p543, 14),
(@p544, @p545, @p546, @p547, @p548, @p549, @p550, @p551, @p552, @p553, @p554, @p555, @p556, @p557, @p558, @p559, @p560, @p561, @p562, @p563, @p564, @p565, @p566, @p567, @p568, @p569, @p570, 15),
(@p571, @p572, @p573, @p574, @p575, @p576, @p577, @p578, @p579, @p580, @p581, @p582, @p583, @p584, @p585, @p586, @p587, @p588, @p589, @p590, @p591, @p592, @p593, @p594, @p595, @p596, @p597, 16),
(@p598, @p599, @p600, @p601, @p602, @p603, @p604, @p605, @p606, @p607, @p608, @p609, @p610, @p611, @p612, @p613, @p614, @p615, @p616, @p617, @p618, @p619, @p620, @p621, @p622, @p623, @p624, 17),
(@p625, @p626, @p627, @p628, @p629, @p630, @p631, @p632, @p633, @p634, @p635, @p636, @p637, @p638, @p639, @p640, @p641, @p642, @p643, @p644, @p645, @p646, @p647, @p648, @p649, @p650, @p651, 18),
(@p652, @p653, @p654, @p655, @p656, @p657, @p658, @p659, @p660, @p661, @p662, @p663, @p664, @p665, @p666, @p667, @p668, @p669, @p670, @p671, @p672, @p673, @p674, @p675, @p676, @p677, @p678, 19)) AS i ([ComprehensiveIncomeNetOfTax], [CostOfRevenue], [CostofGoodsAndServicesSold], [Depreciation], [DepreciationAndAmortization], [Ebit], [Ebitda], [FiscalDateEnding], [GrossProfit], [IncomeBeforeTax], [IncomeTaxExpense], [InterestAndDebtExpense], [InterestExpense], [InterestIncome], [InvestmentIncomeNet], [NetIncome], [NetIncomeFromContinuingOperations], [NetInterestIncome], [NonInterestIncome], [OperatingExpenses], [OperatingIncome], [OtherNonOperatingIncome], [ReportedCurrency], [ResearchAndDevelopment], [SellingGeneralAndAdministrative], [Symbol], [TotalRevenue], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([ComprehensiveIncomeNetOfTax], [CostOfRevenue], [CostofGoodsAndServicesSold], [Depreciation], [DepreciationAndAmortization], [Ebit], [Ebitda], [FiscalDateEnding], [GrossProfit], [IncomeBeforeTax], [IncomeTaxExpense], [InterestAndDebtExpense], [InterestExpense], [InterestIncome], [InvestmentIncomeNet], [NetIncome], [NetIncomeFromContinuingOperations], [NetInterestIncome], [NonInterestIncome], [OperatingExpenses], [OperatingIncome], [OtherNonOperatingIncome], [ReportedCurrency], [ResearchAndDevelopment], [SellingGeneralAndAdministrative], [Symbol], [TotalRevenue])
VALUES (i.[ComprehensiveIncomeNetOfTax], i.[CostOfRevenue], i.[CostofGoodsAndServicesSold], i.[Depreciation], i.[DepreciationAndAmortization], i.[Ebit], i.[Ebitda], i.[FiscalDateEnding], i.[GrossProfit], i.[IncomeBeforeTax], i.[IncomeTaxExpense], i.[InterestAndDebtExpense], i.[InterestExpense], i.[InterestIncome], i.[InvestmentIncomeNet], i.[NetIncome], i.[NetIncomeFromContinuingOperations], i.[NetInterestIncome], i.[NonInterestIncome], i.[OperatingExpenses], i.[OperatingIncome], i.[OtherNonOperatingIncome], i.[ReportedCurrency], i.[ResearchAndDevelopment], i.[SellingGeneralAndAdministrative], i.[Symbol], i.[TotalRevenue])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted5;

SELECT [i].[Id] FROM @inserted5 i
ORDER BY [i].[_Position];
2022-05-12 01:10:02.218 +03:00 [INF] AddOrUpdate run successful.
2022-05-12 01:10:09.563 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.BalanceSheet with Symbol BETZ
2022-05-12 01:10:09.565 +03:00 [INF] Generating URI for BALANCE_SHEET with params: symbol: BETZ
2022-05-12 01:10:09.565 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BETZ
2022-05-12 01:10:09.565 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BETZ".
2022-05-12 01:10:09.925 +03:00 [INF] Response has success status code
2022-05-12 01:10:09.928 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 01:10:09.993 +03:00 [INF] Executed DbCommand (64ms) [Parameters=[@__symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__symbol_0
2022-05-12 01:10:09.994 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.BalanceSheet.
2022-05-12 01:10:10.004 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [b].[Symbol], [b].[ExistInApi], [b].[LastApiRefresh], [b].[LastLocalRefresh]
FROM [BalanceSheets] AS [b]
WHERE [b].[Symbol] = @__entity_Symbol_0
2022-05-12 01:10:10.006 +03:00 [INF] Entity does not exist. Adding to DB.
2022-05-12 01:10:10.018 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = Boolean), @p2='?' (DbType = DateTime2), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [BalanceSheets] ([Symbol], [ExistInApi], [LastApiRefresh], [LastLocalRefresh])
VALUES (@p0, @p1, @p2, @p3);
2022-05-12 01:10:10.025 +03:00 [INF] AddOrUpdate run successful.
2022-05-12 01:10:10.025 +03:00 [WRN] Alpha Vantage has no SaluteStocksAPI.Models.FundamentalData.BalanceSheet for symbol BETZ
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageEmptyResponse: Response was empty.
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetBalanceSheet(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 82
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:10:10.907 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CashFlow with Symbol AVAC
2022-05-12 01:10:10.911 +03:00 [INF] Generating URI for CASH_FLOW with params: symbol: AVAC
2022-05-12 01:10:10.911 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=CASH_FLOW&symbol=AVAC
2022-05-12 01:10:10.912 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=CASH_FLOW&symbol=AVAC".
2022-05-12 01:10:11.712 +03:00 [INF] Response has success status code
2022-05-12 01:10:11.713 +03:00 [INF] Trying to deserialize response.
2022-05-12 01:10:11.713 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 01:10:11.774 +03:00 [INF] Executed DbCommand (60ms) [Parameters=[@__symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__symbol_0
2022-05-12 01:10:11.775 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.CashFlow.
2022-05-12 01:10:11.782 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[ExistInApi], [c].[LastApiRefresh], [c].[LastLocalRefresh]
FROM [CashFlows] AS [c]
WHERE [c].[Symbol] = @__entity_Symbol_0
2022-05-12 01:10:11.783 +03:00 [INF] Entity does not exist. Adding to DB.
2022-05-12 01:10:11.796 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = Boolean), @p2='?' (DbType = DateTime2), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [CashFlows] ([Symbol], [ExistInApi], [LastApiRefresh], [LastLocalRefresh])
VALUES (@p0, @p1, @p2, @p3);
2022-05-12 01:10:11.807 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@p0='?' (DbType = Double), @p1='?' (DbType = Double), @p2='?' (DbType = Int64), @p3='?' (DbType = Int64), @p4='?' (DbType = Int64), @p5='?' (DbType = Int64), @p6='?' (DbType = Int64), @p7='?' (DbType = Int64), @p8='?' (DbType = Int64), @p9='?' (DbType = Double), @p10='?' (DbType = Int64), @p11='?' (DbType = Double), @p12='?' (DbType = Int64), @p13='?' (Size = 4000), @p14='?' (DbType = Double), @p15='?' (DbType = Double), @p16='?' (DbType = Int64), @p17='?' (DbType = Int64), @p18='?' (DbType = Int64), @p19='?' (DbType = Int64), @p20='?' (DbType = Int64), @p21='?' (DbType = Int64), @p22='?' (DbType = Int64), @p23='?' (DbType = Int64), @p24='?' (DbType = Int64), @p25='?' (DbType = Double), @p26='?' (DbType = Int64), @p27='?' (DbType = Int64), @p28='?' (Size = 4000), @p29='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [CashFlowAnnualReport] ([CapitalExpenditures], [CashflowFromFinancing], [CashflowFromInvestment], [ChangeInCashAndCashEquivalents], [ChangeInExchangeRate], [ChangeInInventory], [ChangeInOperatingAssets], [ChangeInOperatingLiabilities], [ChangeInReceivables], [DepreciationDepletionAndAmortization], [DividendPayout], [DividendPayoutCommonStock], [DividendPayoutPreferredStock], [FiscalDateEnding], [NetIncome], [OperatingCashFlow], [PaymentsForOperatingActivities], [PaymentsForRepurchaseOfCommonStock], [PaymentsForRepurchaseOfEquity], [PaymentsForRepurchaseOfPreferredStock], [ProceedsFromIssuanceOfCommonStock], [ProceedsFromIssuanceOfLongTermDebtAndCapitalSecuritiesNet], [ProceedsFromIssuanceOfPreferredStock], [ProceedsFromOperatingActivities], [ProceedsFromRepaymentsOfShortTermDebt], [ProceedsFromRepurchaseOfEquity], [ProceedsFromSaleOfTreasuryStock], [ProfitLoss], [ReportedCurrency], [Symbol])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21, @p22, @p23, @p24, @p25, @p26, @p27, @p28, @p29);
SELECT [Id]
FROM [CashFlowAnnualReport]
WHERE @@ROWCOUNT = 1 AND [Id] = scope_identity();
2022-05-12 01:10:11.847 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@p0='?' (DbType = Double), @p1='?' (DbType = Double), @p2='?' (DbType = Int64), @p3='?' (DbType = Int64), @p4='?' (DbType = Int64), @p5='?' (DbType = Int64), @p6='?' (DbType = Int64), @p7='?' (DbType = Int64), @p8='?' (DbType = Int64), @p9='?' (DbType = Double), @p10='?' (DbType = Int64), @p11='?' (DbType = Double), @p12='?' (DbType = Int64), @p13='?' (Size = 4000), @p14='?' (DbType = Double), @p15='?' (DbType = Double), @p16='?' (DbType = Int64), @p17='?' (DbType = Int64), @p18='?' (DbType = Int64), @p19='?' (DbType = Int64), @p20='?' (DbType = Int64), @p21='?' (DbType = Int64), @p22='?' (DbType = Int64), @p23='?' (DbType = Int64), @p24='?' (DbType = Int64), @p25='?' (DbType = Double), @p26='?' (DbType = Int64), @p27='?' (DbType = Int64), @p28='?' (Size = 4000), @p29='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [CashFlowQuarterlyReport] ([CapitalExpenditures], [CashflowFromFinancing], [CashflowFromInvestment], [ChangeInCashAndCashEquivalents], [ChangeInExchangeRate], [ChangeInInventory], [ChangeInOperatingAssets], [ChangeInOperatingLiabilities], [ChangeInReceivables], [DepreciationDepletionAndAmortization], [DividendPayout], [DividendPayoutCommonStock], [DividendPayoutPreferredStock], [FiscalDateEnding], [NetIncome], [OperatingCashFlow], [PaymentsForOperatingActivities], [PaymentsForRepurchaseOfCommonStock], [PaymentsForRepurchaseOfEquity], [PaymentsForRepurchaseOfPreferredStock], [ProceedsFromIssuanceOfCommonStock], [ProceedsFromIssuanceOfLongTermDebtAndCapitalSecuritiesNet], [ProceedsFromIssuanceOfPreferredStock], [ProceedsFromOperatingActivities], [ProceedsFromRepaymentsOfShortTermDebt], [ProceedsFromRepurchaseOfEquity], [ProceedsFromSaleOfTreasuryStock], [ProfitLoss], [ReportedCurrency], [Symbol])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21, @p22, @p23, @p24, @p25, @p26, @p27, @p28, @p29);
SELECT [Id]
FROM [CashFlowQuarterlyReport]
WHERE @@ROWCOUNT = 1 AND [Id] = scope_identity();
2022-05-12 01:10:11.858 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@p0='?' (DbType = Double), @p1='?' (DbType = Double), @p2='?' (DbType = Int64), @p3='?' (DbType = Int64), @p4='?' (DbType = Int64), @p5='?' (DbType = Int64), @p6='?' (DbType = Int64), @p7='?' (DbType = Int64), @p8='?' (DbType = Int64), @p9='?' (DbType = Double), @p10='?' (DbType = Int64), @p11='?' (DbType = Double), @p12='?' (DbType = Int64), @p13='?' (Size = 4000), @p14='?' (DbType = Double), @p15='?' (DbType = Double), @p16='?' (DbType = Int64), @p17='?' (DbType = Int64), @p18='?' (DbType = Int64), @p19='?' (DbType = Int64), @p20='?' (DbType = Int64), @p21='?' (DbType = Int64), @p22='?' (DbType = Int64), @p23='?' (DbType = Int64), @p24='?' (DbType = Int64), @p25='?' (DbType = Double), @p26='?' (DbType = Int64), @p27='?' (DbType = Int64), @p28='?' (Size = 4000), @p29='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [CashFlowQuarterlyReport] ([CapitalExpenditures], [CashflowFromFinancing], [CashflowFromInvestment], [ChangeInCashAndCashEquivalents], [ChangeInExchangeRate], [ChangeInInventory], [ChangeInOperatingAssets], [ChangeInOperatingLiabilities], [ChangeInReceivables], [DepreciationDepletionAndAmortization], [DividendPayout], [DividendPayoutCommonStock], [DividendPayoutPreferredStock], [FiscalDateEnding], [NetIncome], [OperatingCashFlow], [PaymentsForOperatingActivities], [PaymentsForRepurchaseOfCommonStock], [PaymentsForRepurchaseOfEquity], [PaymentsForRepurchaseOfPreferredStock], [ProceedsFromIssuanceOfCommonStock], [ProceedsFromIssuanceOfLongTermDebtAndCapitalSecuritiesNet], [ProceedsFromIssuanceOfPreferredStock], [ProceedsFromOperatingActivities], [ProceedsFromRepaymentsOfShortTermDebt], [ProceedsFromRepurchaseOfEquity], [ProceedsFromSaleOfTreasuryStock], [ProfitLoss], [ReportedCurrency], [Symbol])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21, @p22, @p23, @p24, @p25, @p26, @p27, @p28, @p29);
SELECT [Id]
FROM [CashFlowQuarterlyReport]
WHERE @@ROWCOUNT = 1 AND [Id] = scope_identity();
2022-05-12 01:10:11.866 +03:00 [INF] AddOrUpdate run successful.
2022-05-12 01:10:27.635 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CompanyOverview with Symbol BKSC
2022-05-12 01:10:27.639 +03:00 [INF] Generating URI for OVERVIEW with params: symbol: BKSC
2022-05-12 01:10:27.639 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=OVERVIEW&symbol=BKSC
2022-05-12 01:10:27.640 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=OVERVIEW&symbol=BKSC".
2022-05-12 01:10:28.062 +03:00 [INF] Response has success status code
2022-05-12 01:10:28.281 +03:00 [INF] Trying to deserialize response.
2022-05-12 01:10:28.282 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.CompanyOverview.
2022-05-12 01:10:28.283 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 01:10:28.294 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__entity_Symbol_0
2022-05-12 01:10:28.296 +03:00 [INF] Entity does not exist. Adding to DB.
2022-05-12 01:10:28.312 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (Size = 4000), @p2='?' (DbType = Double), @p3='?' (Size = 4000), @p4='?' (DbType = Double), @p5='?' (DbType = Double), @p6='?' (DbType = Int64), @p7='?' (Size = 4000), @p8='?' (Size = 4000), @p9='?' (Size = 4000), @p10='?' (DbType = Double), @p11='?' (DbType = DateTime2), @p12='?' (DbType = Double), @p13='?' (DbType = Double), @p14='?' (DbType = Int64), @p15='?' (DbType = Double), @p16='?' (DbType = Double), @p17='?' (DbType = Double), @p18='?' (DbType = DateTime2), @p19='?' (Size = 4000), @p20='?' (DbType = Boolean), @p21='?' (Size = 4000), @p22='?' (DbType = Double), @p23='?' (DbType = Int64), @p24='?' (Size = 4000), @p25='?' (DbType = DateTime2), @p26='?' (DbType = DateTime2), @p27='?' (DbType = DateTime2), @p28='?' (DbType = Int64), @p29='?' (Size = 4000), @p30='?' (DbType = Double), @p31='?' (DbType = Double), @p32='?' (DbType = Double), @p33='?' (DbType = Double), @p34='?' (DbType = Double), @p35='?' (DbType = Double), @p36='?' (DbType = Double), @p37='?' (DbType = Double), @p38='?' (DbType = Double), @p39='?' (DbType = Double), @p40='?' (DbType = Double), @p41='?' (DbType = Int64), @p42='?' (Size = 4000), @p43='?' (DbType = Int64), @p44='?' (DbType = Double), @p45='?' (DbType = Double), @p46='?' (DbType = Double), @p47='?' (DbType = Double), @p48='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [CompanyOverviews] ([Symbol], [Address], [AnalystTargetPrice], [AssetType], [Beta], [BookValue], [CIK], [Country], [Currency], [Description], [DilutedEPSTTM], [DividendDate], [DividendPerShare], [DividendYield], [EBITDA], [EPS], [EVToEBITDA], [EVToRevenue], [ExDividendDate], [Exchange], [ExistInApi], [FiscalYearEnd], [ForwardPE], [GrossProfitTTM], [Industry], [LastApiRefresh], [LastLocalRefresh], [LatestQuarter], [MarketCapitalization], [Name], [OperatingMarginTTM], [PEGRatio], [PERatio], [PriceToBookRatio], [PriceToSalesRatioTTM], [ProfitMargin], [QuarterlyEarningsGrowthYOY], [QuarterlyRevenueGrowthYOY], [ReturnOnAssetsTTM], [ReturnOnEquityTTM], [RevenuePerShareTTM], [RevenueTTM], [Sector], [SharesOutstanding], [TrailingPE], [_200DayMovingAverage], [_50DayMovingAverage], [_52WeekHigh], [_52WeekLow])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21, @p22, @p23, @p24, @p25, @p26, @p27, @p28, @p29, @p30, @p31, @p32, @p33, @p34, @p35, @p36, @p37, @p38, @p39, @p40, @p41, @p42, @p43, @p44, @p45, @p46, @p47, @p48);
2022-05-12 01:10:28.320 +03:00 [INF] AddOrUpdate run successful.
2022-05-12 01:10:30.193 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.Earnings with Symbol AXLA
2022-05-12 01:10:30.194 +03:00 [INF] Generating URI for EARNINGS with params: symbol: AXLA
2022-05-12 01:10:30.195 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=EARNINGS&symbol=AXLA
2022-05-12 01:10:30.195 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=EARNINGS&symbol=AXLA".
2022-05-12 01:10:32.225 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.IncomeStatement with Symbol AVB
2022-05-12 01:10:32.228 +03:00 [INF] Generating URI for INCOME_STATEMENT with params: symbol: AVB
2022-05-12 01:10:32.229 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=INCOME_STATEMENT&symbol=AVB
2022-05-12 01:10:32.229 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=INCOME_STATEMENT&symbol=AVB".
2022-05-12 01:10:34.729 +03:00 [INF] Response has success status code
2022-05-12 01:10:34.730 +03:00 [INF] Trying to deserialize response.
2022-05-12 01:10:34.731 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 01:10:34.741 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__symbol_0
2022-05-12 01:10:34.743 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.Earnings.
2022-05-12 01:10:34.750 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [e].[Symbol], [e].[ExistInApi], [e].[LastApiRefresh], [e].[LastLocalRefresh]
FROM [Earnings] AS [e]
WHERE [e].[Symbol] = @__entity_Symbol_0
2022-05-12 01:10:34.751 +03:00 [INF] Entity does not exist. Adding to DB.
2022-05-12 01:10:34.764 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = Boolean), @p2='?' (DbType = DateTime2), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Earnings] ([Symbol], [ExistInApi], [LastApiRefresh], [LastLocalRefresh])
VALUES (@p0, @p1, @p2, @p3);
2022-05-12 01:10:34.782 +03:00 [INF] Executed DbCommand (16ms) [Parameters=[@p4='?' (DbType = DateTime2), @p5='?' (DbType = Double), @p6='?' (Size = 450), @p7='?' (DbType = DateTime2), @p8='?' (DbType = Double), @p9='?' (Size = 450), @p10='?' (DbType = DateTime2), @p11='?' (DbType = Double), @p12='?' (Size = 450), @p13='?' (DbType = DateTime2), @p14='?' (DbType = Double), @p15='?' (Size = 450), @p16='?' (DbType = Double), @p17='?' (DbType = DateTime2), @p18='?' (DbType = DateTime2), @p19='?' (DbType = Double), @p20='?' (DbType = Double), @p21='?' (DbType = Double), @p22='?' (Size = 450), @p23='?' (DbType = Double), @p24='?' (DbType = DateTime2), @p25='?' (DbType = DateTime2), @p26='?' (DbType = Double), @p27='?' (DbType = Double), @p28='?' (DbType = Double), @p29='?' (Size = 450), @p30='?' (DbType = Double), @p31='?' (DbType = DateTime2), @p32='?' (DbType = DateTime2), @p33='?' (DbType = Double), @p34='?' (DbType = Double), @p35='?' (DbType = Double), @p36='?' (Size = 450), @p37='?' (DbType = Double), @p38='?' (DbType = DateTime2), @p39='?' (DbType = DateTime2), @p40='?' (DbType = Double), @p41='?' (DbType = Double), @p42='?' (DbType = Double), @p43='?' (Size = 450), @p44='?' (DbType = Double), @p45='?' (DbType = DateTime2), @p46='?' (DbType = DateTime2), @p47='?' (DbType = Double), @p48='?' (DbType = Double), @p49='?' (DbType = Double), @p50='?' (Size = 450), @p51='?' (DbType = Double), @p52='?' (DbType = DateTime2), @p53='?' (DbType = DateTime2), @p54='?' (DbType = Double), @p55='?' (DbType = Double), @p56='?' (DbType = Double), @p57='?' (Size = 450), @p58='?' (DbType = Double), @p59='?' (DbType = DateTime2), @p60='?' (DbType = DateTime2), @p61='?' (DbType = Double), @p62='?' (DbType = Double), @p63='?' (DbType = Double), @p64='?' (Size = 450), @p65='?' (DbType = Double), @p66='?' (DbType = DateTime2), @p67='?' (DbType = DateTime2), @p68='?' (DbType = Double), @p69='?' (DbType = Double), @p70='?' (DbType = Double), @p71='?' (Size = 450), @p72='?' (DbType = Double), @p73='?' (DbType = DateTime2), @p74='?' (DbType = DateTime2), @p75='?' (DbType = Double), @p76='?' (DbType = Double), @p77='?' (DbType = Double), @p78='?' (Size = 450), @p79='?' (DbType = Double), @p80='?' (DbType = DateTime2), @p81='?' (DbType = DateTime2), @p82='?' (DbType = Double), @p83='?' (DbType = Double), @p84='?' (DbType = Double), @p85='?' (Size = 450), @p86='?' (DbType = Double), @p87='?' (DbType = DateTime2), @p88='?' (DbType = DateTime2), @p89='?' (DbType = Double), @p90='?' (DbType = Double), @p91='?' (DbType = Double), @p92='?' (Size = 450), @p93='?' (DbType = Double), @p94='?' (DbType = DateTime2), @p95='?' (DbType = DateTime2), @p96='?' (DbType = Double), @p97='?' (DbType = Double), @p98='?' (DbType = Double), @p99='?' (Size = 450), @p100='?' (DbType = Double), @p101='?' (DbType = DateTime2), @p102='?' (DbType = DateTime2), @p103='?' (DbType = Double), @p104='?' (DbType = Double), @p105='?' (DbType = Double), @p106='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
DECLARE @inserted0 TABLE ([Id] int, [_Position] [int]);
MERGE [AnnualEarning] USING (
VALUES (@p4, @p5, @p6, 0),
(@p7, @p8, @p9, 1),
(@p10, @p11, @p12, 2),
(@p13, @p14, @p15, 3)) AS i ([FiscalDateEnding], [ReportedEPS], [Symbol], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([FiscalDateEnding], [ReportedEPS], [Symbol])
VALUES (i.[FiscalDateEnding], i.[ReportedEPS], i.[Symbol])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted0;

SELECT [i].[Id] FROM @inserted0 i
ORDER BY [i].[_Position];

DECLARE @inserted4 TABLE ([Id] int, [_Position] [int]);
MERGE [QuarterlyEarning] USING (
VALUES (@p16, @p17, @p18, @p19, @p20, @p21, @p22, 0),
(@p23, @p24, @p25, @p26, @p27, @p28, @p29, 1),
(@p30, @p31, @p32, @p33, @p34, @p35, @p36, 2),
(@p37, @p38, @p39, @p40, @p41, @p42, @p43, 3),
(@p44, @p45, @p46, @p47, @p48, @p49, @p50, 4),
(@p51, @p52, @p53, @p54, @p55, @p56, @p57, 5),
(@p58, @p59, @p60, @p61, @p62, @p63, @p64, 6),
(@p65, @p66, @p67, @p68, @p69, @p70, @p71, 7),
(@p72, @p73, @p74, @p75, @p76, @p77, @p78, 8),
(@p79, @p80, @p81, @p82, @p83, @p84, @p85, 9),
(@p86, @p87, @p88, @p89, @p90, @p91, @p92, 10),
(@p93, @p94, @p95, @p96, @p97, @p98, @p99, 11),
(@p100, @p101, @p102, @p103, @p104, @p105, @p106, 12)) AS i ([EstimatedEPS], [FiscalDateEnding], [ReportedDate], [ReportedEPS], [Surprise], [SurprisePercentage], [Symbol], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([EstimatedEPS], [FiscalDateEnding], [ReportedDate], [ReportedEPS], [Surprise], [SurprisePercentage], [Symbol])
VALUES (i.[EstimatedEPS], i.[FiscalDateEnding], i.[ReportedDate], i.[ReportedEPS], i.[Surprise], i.[SurprisePercentage], i.[Symbol])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted4;

SELECT [i].[Id] FROM @inserted4 i
ORDER BY [i].[_Position];
2022-05-12 01:10:34.790 +03:00 [INF] AddOrUpdate run successful.
2022-05-12 01:10:38.837 +03:00 [INF] Response has success status code
2022-05-12 01:10:38.838 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.IncomeStatement for symbol AVB
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetIncomeStatement(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 69
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:10:40.035 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.BalanceSheet with Symbol BF-A
2022-05-12 01:10:40.037 +03:00 [INF] Generating URI for BALANCE_SHEET with params: symbol: BF-A
2022-05-12 01:10:40.037 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BF-A
2022-05-12 01:10:40.038 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BF-A".
2022-05-12 01:10:41.877 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CashFlow with Symbol AVACW
2022-05-12 01:10:41.880 +03:00 [INF] Generating URI for CASH_FLOW with params: symbol: AVACW
2022-05-12 01:10:41.881 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=CASH_FLOW&symbol=AVACW
2022-05-12 01:10:41.881 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=CASH_FLOW&symbol=AVACW".
2022-05-12 01:10:43.678 +03:00 [INF] Response has success status code
2022-05-12 01:10:43.678 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.CashFlow for symbol AVACW
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCashFlow(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 96
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:10:44.200 +03:00 [INF] Response has success status code
2022-05-12 01:10:44.201 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.BalanceSheet for symbol BF-A
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetBalanceSheet(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 82
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:10:58.338 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CompanyOverview with Symbol BKSE
2022-05-12 01:10:58.342 +03:00 [INF] Generating URI for OVERVIEW with params: symbol: BKSE
2022-05-12 01:10:58.342 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=OVERVIEW&symbol=BKSE
2022-05-12 01:10:58.343 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=OVERVIEW&symbol=BKSE".
2022-05-12 01:10:58.559 +03:00 [INF] Response has success status code
2022-05-12 01:10:58.560 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.CompanyOverview for symbol BKSE
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyOverview(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 116
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:11:04.802 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.Earnings with Symbol AXNX
2022-05-12 01:11:04.803 +03:00 [INF] Generating URI for EARNINGS with params: symbol: AXNX
2022-05-12 01:11:04.804 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=EARNINGS&symbol=AXNX
2022-05-12 01:11:04.804 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=EARNINGS&symbol=AXNX".
2022-05-12 01:11:04.885 +03:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/screener-model - -
2022-05-12 01:11:04.886 +03:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/distribution/market-cap/30 - -
2022-05-12 01:11:04.886 +03:00 [INF] CORS policy execution successful.
2022-05-12 01:11:04.886 +03:00 [INF] CORS policy execution successful.
2022-05-12 01:11:04.887 +03:00 [INF] Executing endpoint 'SaluteStocksAPI.Controllers.ApiController.GetScreenerModel (SaluteStocksAPI)'
2022-05-12 01:11:04.887 +03:00 [INF] Executing endpoint 'SaluteStocksAPI.Controllers.ApiController.GetMarketCapDistribution (SaluteStocksAPI)'
2022-05-12 01:11:04.888 +03:00 [INF] Route matched with {action = "GetScreenerModel", controller = "Api"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetScreenerModel() on controller SaluteStocksAPI.Controllers.ApiController (SaluteStocksAPI).
2022-05-12 01:11:04.889 +03:00 [INF] Route matched with {action = "GetMarketCapDistribution", controller = "Api"}. Executing controller action with signature System.Threading.Tasks.Task`1[System.String] GetMarketCapDistribution(Int32) on controller SaluteStocksAPI.Controllers.ApiController (SaluteStocksAPI).
2022-05-12 01:11:04.890 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 01:11:04.892 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 01:11:04.902 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[MarketCapitalization])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 01:11:04.903 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[MarketCapitalization])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 01:11:04.913 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[MarketCapitalization])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 01:11:04.914 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[MarketCapitalization])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 01:11:04.925 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[EBITDA])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 01:11:04.925 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:11:04.936 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[EBITDA])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 01:11:04.937 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:11:04.945 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[PERatio])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 01:11:04.949 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:11:04.955 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[PERatio])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 01:11:04.956 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2022-05-12 01:11:04.957 +03:00 [INF] Executed action SaluteStocksAPI.Controllers.ApiController.GetScreenerModel (SaluteStocksAPI) in 67.4211ms
2022-05-12 01:11:04.959 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:11:04.959 +03:00 [INF] Executed endpoint 'SaluteStocksAPI.Controllers.ApiController.GetScreenerModel (SaluteStocksAPI)'
2022-05-12 01:11:04.960 +03:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/screener-model - - - 200 - text/plain;+charset=utf-8 75.1508ms
2022-05-12 01:11:04.969 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:11:04.978 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:11:04.988 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:11:04.998 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:11:05.008 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:11:05.019 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:11:05.028 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:11:05.039 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:11:05.048 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:11:05.048 +03:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/screener-model - -
2022-05-12 01:11:05.050 +03:00 [INF] CORS policy execution successful.
2022-05-12 01:11:05.051 +03:00 [INF] Executing endpoint 'SaluteStocksAPI.Controllers.ApiController.GetScreenerModel (SaluteStocksAPI)'
2022-05-12 01:11:05.051 +03:00 [INF] Route matched with {action = "GetScreenerModel", controller = "Api"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetScreenerModel() on controller SaluteStocksAPI.Controllers.ApiController (SaluteStocksAPI).
2022-05-12 01:11:05.053 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 01:11:05.060 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:11:05.061 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[MarketCapitalization])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 01:11:05.071 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[MarketCapitalization])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 01:11:05.074 +03:00 [INF] Executed DbCommand (13ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:11:05.084 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[EBITDA])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 01:11:05.085 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:11:05.094 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[EBITDA])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 01:11:05.095 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:11:05.104 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[PERatio])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 01:11:05.107 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:11:05.115 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[PERatio])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 01:11:05.116 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2022-05-12 01:11:05.116 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:11:05.118 +03:00 [INF] Executed action SaluteStocksAPI.Controllers.ApiController.GetScreenerModel (SaluteStocksAPI) in 64.8422ms
2022-05-12 01:11:05.119 +03:00 [INF] Executed endpoint 'SaluteStocksAPI.Controllers.ApiController.GetScreenerModel (SaluteStocksAPI)'
2022-05-12 01:11:05.120 +03:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/screener-model - - - 200 - text/plain;+charset=utf-8 71.3104ms
2022-05-12 01:11:05.129 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:11:05.142 +03:00 [INF] Executed DbCommand (12ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:11:05.151 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:11:05.161 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:11:05.170 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:11:05.180 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:11:05.190 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:11:05.201 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:11:05.213 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:11:05.225 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:11:05.226 +03:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2022-05-12 01:11:05.227 +03:00 [INF] Executed action SaluteStocksAPI.Controllers.ApiController.GetMarketCapDistribution (SaluteStocksAPI) in 335.2437ms
2022-05-12 01:11:05.228 +03:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/distribution/market-cap/30 - -
2022-05-12 01:11:05.231 +03:00 [INF] Executed endpoint 'SaluteStocksAPI.Controllers.ApiController.GetMarketCapDistribution (SaluteStocksAPI)'
2022-05-12 01:11:05.231 +03:00 [INF] CORS policy execution successful.
2022-05-12 01:11:05.232 +03:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/distribution/market-cap/30 - - - 200 - text/plain;+charset=utf-8 346.2087ms
2022-05-12 01:11:05.232 +03:00 [INF] Executing endpoint 'SaluteStocksAPI.Controllers.ApiController.GetMarketCapDistribution (SaluteStocksAPI)'
2022-05-12 01:11:05.233 +03:00 [INF] Route matched with {action = "GetMarketCapDistribution", controller = "Api"}. Executing controller action with signature System.Threading.Tasks.Task`1[System.String] GetMarketCapDistribution(Int32) on controller SaluteStocksAPI.Controllers.ApiController (SaluteStocksAPI).
2022-05-12 01:11:05.235 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 01:11:05.246 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[MarketCapitalization])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 01:11:05.256 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[MarketCapitalization])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 01:11:05.268 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:11:05.280 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:11:05.290 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:11:05.302 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:11:05.312 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:11:05.321 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:11:05.336 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:11:05.347 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:11:05.356 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:11:05.366 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:11:05.378 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:11:05.389 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:11:05.399 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:11:05.413 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:11:05.422 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:11:05.433 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:11:05.441 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:11:05.451 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:11:05.462 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:11:05.472 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:11:05.482 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:11:05.492 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:11:05.504 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:11:05.514 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:11:05.524 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:11:05.534 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:11:05.545 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:11:05.555 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:11:05.565 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:11:05.566 +03:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2022-05-12 01:11:05.567 +03:00 [INF] Executed action SaluteStocksAPI.Controllers.ApiController.GetMarketCapDistribution (SaluteStocksAPI) in 332.4689ms
2022-05-12 01:11:05.571 +03:00 [INF] Executed endpoint 'SaluteStocksAPI.Controllers.ApiController.GetMarketCapDistribution (SaluteStocksAPI)'
2022-05-12 01:11:05.572 +03:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/distribution/market-cap/30 - - - 200 - text/plain;+charset=utf-8 343.8880ms
2022-05-12 01:11:06.531 +03:00 [INF] Response has success status code
2022-05-12 01:11:06.532 +03:00 [INF] Trying to deserialize response.
2022-05-12 01:11:06.533 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 01:11:06.584 +03:00 [INF] Executed DbCommand (50ms) [Parameters=[@__symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__symbol_0
2022-05-12 01:11:06.586 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.Earnings.
2022-05-12 01:11:06.593 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [e].[Symbol], [e].[ExistInApi], [e].[LastApiRefresh], [e].[LastLocalRefresh]
FROM [Earnings] AS [e]
WHERE [e].[Symbol] = @__entity_Symbol_0
2022-05-12 01:11:06.594 +03:00 [INF] Entity does not exist. Adding to DB.
2022-05-12 01:11:06.607 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = Boolean), @p2='?' (DbType = DateTime2), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Earnings] ([Symbol], [ExistInApi], [LastApiRefresh], [LastLocalRefresh])
VALUES (@p0, @p1, @p2, @p3);
2022-05-12 01:11:06.657 +03:00 [INF] Executed DbCommand (48ms) [Parameters=[@p4='?' (DbType = DateTime2), @p5='?' (DbType = Double), @p6='?' (Size = 450), @p7='?' (DbType = DateTime2), @p8='?' (DbType = Double), @p9='?' (Size = 450), @p10='?' (DbType = DateTime2), @p11='?' (DbType = Double), @p12='?' (Size = 450), @p13='?' (DbType = DateTime2), @p14='?' (DbType = Double), @p15='?' (Size = 450), @p16='?' (DbType = DateTime2), @p17='?' (DbType = Double), @p18='?' (Size = 450), @p19='?' (DbType = Double), @p20='?' (DbType = DateTime2), @p21='?' (DbType = DateTime2), @p22='?' (DbType = Double), @p23='?' (DbType = Double), @p24='?' (DbType = Double), @p25='?' (Size = 450), @p26='?' (DbType = Double), @p27='?' (DbType = DateTime2), @p28='?' (DbType = DateTime2), @p29='?' (DbType = Double), @p30='?' (DbType = Double), @p31='?' (DbType = Double), @p32='?' (Size = 450), @p33='?' (DbType = Double), @p34='?' (DbType = DateTime2), @p35='?' (DbType = DateTime2), @p36='?' (DbType = Double), @p37='?' (DbType = Double), @p38='?' (DbType = Double), @p39='?' (Size = 450), @p40='?' (DbType = Double), @p41='?' (DbType = DateTime2), @p42='?' (DbType = DateTime2), @p43='?' (DbType = Double), @p44='?' (DbType = Double), @p45='?' (DbType = Double), @p46='?' (Size = 450), @p47='?' (DbType = Double), @p48='?' (DbType = DateTime2), @p49='?' (DbType = DateTime2), @p50='?' (DbType = Double), @p51='?' (DbType = Double), @p52='?' (DbType = Double), @p53='?' (Size = 450), @p54='?' (DbType = Double), @p55='?' (DbType = DateTime2), @p56='?' (DbType = DateTime2), @p57='?' (DbType = Double), @p58='?' (DbType = Double), @p59='?' (DbType = Double), @p60='?' (Size = 450), @p61='?' (DbType = Double), @p62='?' (DbType = DateTime2), @p63='?' (DbType = DateTime2), @p64='?' (DbType = Double), @p65='?' (DbType = Double), @p66='?' (DbType = Double), @p67='?' (Size = 450), @p68='?' (DbType = Double), @p69='?' (DbType = DateTime2), @p70='?' (DbType = DateTime2), @p71='?' (DbType = Double), @p72='?' (DbType = Double), @p73='?' (DbType = Double), @p74='?' (Size = 450), @p75='?' (DbType = Double), @p76='?' (DbType = DateTime2), @p77='?' (DbType = DateTime2), @p78='?' (DbType = Double), @p79='?' (DbType = Double), @p80='?' (DbType = Double), @p81='?' (Size = 450), @p82='?' (DbType = Double), @p83='?' (DbType = DateTime2), @p84='?' (DbType = DateTime2), @p85='?' (DbType = Double), @p86='?' (DbType = Double), @p87='?' (DbType = Double), @p88='?' (Size = 450), @p89='?' (DbType = Double), @p90='?' (DbType = DateTime2), @p91='?' (DbType = DateTime2), @p92='?' (DbType = Double), @p93='?' (DbType = Double), @p94='?' (DbType = Double), @p95='?' (Size = 450), @p96='?' (DbType = Double), @p97='?' (DbType = DateTime2), @p98='?' (DbType = DateTime2), @p99='?' (DbType = Double), @p100='?' (DbType = Double), @p101='?' (DbType = Double), @p102='?' (Size = 450), @p103='?' (DbType = Double), @p104='?' (DbType = DateTime2), @p105='?' (DbType = DateTime2), @p106='?' (DbType = Double), @p107='?' (DbType = Double), @p108='?' (DbType = Double), @p109='?' (Size = 450), @p110='?' (DbType = Double), @p111='?' (DbType = DateTime2), @p112='?' (DbType = DateTime2), @p113='?' (DbType = Double), @p114='?' (DbType = Double), @p115='?' (DbType = Double), @p116='?' (Size = 450), @p117='?' (DbType = Double), @p118='?' (DbType = DateTime2), @p119='?' (DbType = DateTime2), @p120='?' (DbType = Double), @p121='?' (DbType = Double), @p122='?' (DbType = Double), @p123='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
DECLARE @inserted0 TABLE ([Id] int, [_Position] [int]);
MERGE [AnnualEarning] USING (
VALUES (@p4, @p5, @p6, 0),
(@p7, @p8, @p9, 1),
(@p10, @p11, @p12, 2),
(@p13, @p14, @p15, 3),
(@p16, @p17, @p18, 4)) AS i ([FiscalDateEnding], [ReportedEPS], [Symbol], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([FiscalDateEnding], [ReportedEPS], [Symbol])
VALUES (i.[FiscalDateEnding], i.[ReportedEPS], i.[Symbol])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted0;

SELECT [i].[Id] FROM @inserted0 i
ORDER BY [i].[_Position];

DECLARE @inserted5 TABLE ([Id] int, [_Position] [int]);
MERGE [QuarterlyEarning] USING (
VALUES (@p19, @p20, @p21, @p22, @p23, @p24, @p25, 0),
(@p26, @p27, @p28, @p29, @p30, @p31, @p32, 1),
(@p33, @p34, @p35, @p36, @p37, @p38, @p39, 2),
(@p40, @p41, @p42, @p43, @p44, @p45, @p46, 3),
(@p47, @p48, @p49, @p50, @p51, @p52, @p53, 4),
(@p54, @p55, @p56, @p57, @p58, @p59, @p60, 5),
(@p61, @p62, @p63, @p64, @p65, @p66, @p67, 6),
(@p68, @p69, @p70, @p71, @p72, @p73, @p74, 7),
(@p75, @p76, @p77, @p78, @p79, @p80, @p81, 8),
(@p82, @p83, @p84, @p85, @p86, @p87, @p88, 9),
(@p89, @p90, @p91, @p92, @p93, @p94, @p95, 10),
(@p96, @p97, @p98, @p99, @p100, @p101, @p102, 11),
(@p103, @p104, @p105, @p106, @p107, @p108, @p109, 12),
(@p110, @p111, @p112, @p113, @p114, @p115, @p116, 13),
(@p117, @p118, @p119, @p120, @p121, @p122, @p123, 14)) AS i ([EstimatedEPS], [FiscalDateEnding], [ReportedDate], [ReportedEPS], [Surprise], [SurprisePercentage], [Symbol], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([EstimatedEPS], [FiscalDateEnding], [ReportedDate], [ReportedEPS], [Surprise], [SurprisePercentage], [Symbol])
VALUES (i.[EstimatedEPS], i.[FiscalDateEnding], i.[ReportedDate], i.[ReportedEPS], i.[Surprise], i.[SurprisePercentage], i.[Symbol])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted5;

SELECT [i].[Id] FROM @inserted5 i
ORDER BY [i].[_Position];
2022-05-12 01:11:06.665 +03:00 [INF] AddOrUpdate run successful.
2022-05-12 01:11:08.855 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.IncomeStatement with Symbol AVCO
2022-05-12 01:11:08.858 +03:00 [INF] Generating URI for INCOME_STATEMENT with params: symbol: AVCO
2022-05-12 01:11:08.858 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=INCOME_STATEMENT&symbol=AVCO
2022-05-12 01:11:08.859 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=INCOME_STATEMENT&symbol=AVCO".
2022-05-12 01:11:09.948 +03:00 [INF] Response has success status code
2022-05-12 01:11:09.949 +03:00 [INF] Trying to deserialize response.
2022-05-12 01:11:09.950 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 01:11:09.958 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__symbol_0
2022-05-12 01:11:09.959 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.IncomeStatement.
2022-05-12 01:11:09.967 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [i].[Symbol], [i].[ExistInApi], [i].[LastApiRefresh], [i].[LastLocalRefresh]
FROM [IncomeStatements] AS [i]
WHERE [i].[Symbol] = @__entity_Symbol_0
2022-05-12 01:11:09.969 +03:00 [INF] Entity does not exist. Adding to DB.
2022-05-12 01:11:09.983 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = Boolean), @p2='?' (DbType = DateTime2), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [IncomeStatements] ([Symbol], [ExistInApi], [LastApiRefresh], [LastLocalRefresh])
VALUES (@p0, @p1, @p2, @p3);
2022-05-12 01:11:10.021 +03:00 [INF] Executed DbCommand (36ms) [Parameters=[@p4='?' (DbType = Int64), @p5='?' (DbType = Double), @p6='?' (DbType = Double), @p7='?' (DbType = Int64), @p8='?' (DbType = Int64), @p9='?' (DbType = Int64), @p10='?' (DbType = Double), @p11='?' (DbType = DateTime2), @p12='?' (DbType = Double), @p13='?' (DbType = Double), @p14='?' (DbType = Int64), @p15='?' (DbType = Int64), @p16='?' (DbType = Double), @p17='?' (DbType = Int64), @p18='?' (DbType = Int64), @p19='?' (DbType = Double), @p20='?' (DbType = Double), @p21='?' (DbType = Double), @p22='?' (DbType = Int64), @p23='?' (DbType = Double), @p24='?' (DbType = Double), @p25='?' (DbType = Int64), @p26='?' (Size = 4000), @p27='?' (DbType = Int64), @p28='?' (DbType = Double), @p29='?' (Size = 450), @p30='?' (DbType = Int64), @p31='?' (DbType = Int64), @p32='?' (DbType = Double), @p33='?' (DbType = Double), @p34='?' (DbType = Int64), @p35='?' (DbType = Int64), @p36='?' (DbType = Int64), @p37='?' (DbType = Double), @p38='?' (DbType = DateTime2), @p39='?' (DbType = Double), @p40='?' (DbType = Double), @p41='?' (DbType = Int64), @p42='?' (DbType = Int64), @p43='?' (DbType = Double), @p44='?' (DbType = Int64), @p45='?' (DbType = Int64), @p46='?' (DbType = Double), @p47='?' (DbType = Double), @p48='?' (DbType = Double), @p49='?' (DbType = Int64), @p50='?' (DbType = Double), @p51='?' (DbType = Double), @p52='?' (DbType = Int64), @p53='?' (Size = 4000), @p54='?' (DbType = Int64), @p55='?' (DbType = Double), @p56='?' (Size = 450), @p57='?' (DbType = Int64), @p58='?' (DbType = Int64), @p59='?' (DbType = Double), @p60='?' (DbType = Double), @p61='?' (DbType = Int64), @p62='?' (DbType = Int64), @p63='?' (DbType = Int64), @p64='?' (DbType = Double), @p65='?' (DbType = DateTime2), @p66='?' (DbType = Double), @p67='?' (DbType = Double), @p68='?' (DbType = Int64), @p69='?' (DbType = Int64), @p70='?' (DbType = Double), @p71='?' (DbType = Int64), @p72='?' (DbType = Int64), @p73='?' (DbType = Double), @p74='?' (DbType = Double), @p75='?' (DbType = Double), @p76='?' (DbType = Int64), @p77='?' (DbType = Double), @p78='?' (DbType = Double), @p79='?' (DbType = Int64), @p80='?' (Size = 4000), @p81='?' (DbType = Int64), @p82='?' (DbType = Double), @p83='?' (Size = 450), @p84='?' (DbType = Int64), @p85='?' (DbType = Int64), @p86='?' (DbType = Double), @p87='?' (DbType = Double), @p88='?' (DbType = Int64), @p89='?' (DbType = Int64), @p90='?' (DbType = Int64), @p91='?' (DbType = Double), @p92='?' (DbType = DateTime2), @p93='?' (DbType = Double), @p94='?' (DbType = Double), @p95='?' (DbType = Int64), @p96='?' (DbType = Int64), @p97='?' (DbType = Double), @p98='?' (DbType = Int64), @p99='?' (DbType = Int64), @p100='?' (DbType = Double), @p101='?' (DbType = Double), @p102='?' (DbType = Double), @p103='?' (DbType = Int64), @p104='?' (DbType = Double), @p105='?' (DbType = Double), @p106='?' (DbType = Int64), @p107='?' (Size = 4000), @p108='?' (DbType = Int64), @p109='?' (DbType = Double), @p110='?' (Size = 450), @p111='?' (DbType = Int64), @p112='?' (DbType = Int64), @p113='?' (DbType = Double), @p114='?' (DbType = Double), @p115='?' (DbType = Int64), @p116='?' (DbType = Int64), @p117='?' (DbType = Int64), @p118='?' (DbType = Double), @p119='?' (DbType = DateTime2), @p120='?' (DbType = Double), @p121='?' (DbType = Double), @p122='?' (DbType = Int64), @p123='?' (DbType = Int64), @p124='?' (DbType = Double), @p125='?' (DbType = Int64), @p126='?' (DbType = Int64), @p127='?' (DbType = Double), @p128='?' (DbType = Double), @p129='?' (DbType = Double), @p130='?' (DbType = Int64), @p131='?' (DbType = Double), @p132='?' (DbType = Double), @p133='?' (DbType = Int64), @p134='?' (Size = 4000), @p135='?' (DbType = Int64), @p136='?' (DbType = Double), @p137='?' (Size = 450), @p138='?' (DbType = Int64), @p139='?' (DbType = Int64), @p140='?' (DbType = Double), @p141='?' (DbType = Double), @p142='?' (DbType = Int64), @p143='?' (DbType = Int64), @p144='?' (DbType = Int64), @p145='?' (DbType = Double), @p146='?' (DbType = DateTime2), @p147='?' (DbType = Double), @p148='?' (DbType = Double), @p149='?' (DbType = Int64), @p150='?' (DbType = Int64), @p151='?' (DbType = Double), @p152='?' (DbType = Int64), @p153='?' (DbType = Int64), @p154='?' (DbType = Double), @p155='?' (DbType = Double), @p156='?' (DbType = Double), @p157='?' (DbType = Int64), @p158='?' (DbType = Double), @p159='?' (DbType = Double), @p160='?' (DbType = Int64), @p161='?' (Size = 4000), @p162='?' (DbType = Int64), @p163='?' (DbType = Double), @p164='?' (Size = 450), @p165='?' (DbType = Int64), @p166='?' (DbType = Int64), @p167='?' (DbType = Double), @p168='?' (DbType = Double), @p169='?' (DbType = Int64), @p170='?' (DbType = Int64), @p171='?' (DbType = Int64), @p172='?' (DbType = Double), @p173='?' (DbType = DateTime2), @p174='?' (DbType = Double), @p175='?' (DbType = Double), @p176='?' (DbType = Int64), @p177='?' (DbType = Int64), @p178='?' (DbType = Double), @p179='?' (DbType = Int64), @p180='?' (DbType = Int64), @p181='?' (DbType = Double), @p182='?' (DbType = Double), @p183='?' (DbType = Double), @p184='?' (DbType = Int64), @p185='?' (DbType = Double), @p186='?' (DbType = Double), @p187='?' (DbType = Int64), @p188='?' (Size = 4000), @p189='?' (DbType = Int64), @p190='?' (DbType = Double), @p191='?' (Size = 450), @p192='?' (DbType = Int64), @p193='?' (DbType = Int64), @p194='?' (DbType = Double), @p195='?' (DbType = Double), @p196='?' (DbType = Int64), @p197='?' (DbType = Int64), @p198='?' (DbType = Int64), @p199='?' (DbType = Double), @p200='?' (DbType = DateTime2), @p201='?' (DbType = Double), @p202='?' (DbType = Double), @p203='?' (DbType = Int64), @p204='?' (DbType = Int64), @p205='?' (DbType = Double), @p206='?' (DbType = Int64), @p207='?' (DbType = Int64), @p208='?' (DbType = Double), @p209='?' (DbType = Double), @p210='?' (DbType = Double), @p211='?' (DbType = Int64), @p212='?' (DbType = Double), @p213='?' (DbType = Double), @p214='?' (DbType = Int64), @p215='?' (Size = 4000), @p216='?' (DbType = Int64), @p217='?' (DbType = Double), @p218='?' (Size = 450), @p219='?' (DbType = Int64), @p220='?' (DbType = Int64), @p221='?' (DbType = Double), @p222='?' (DbType = Double), @p223='?' (DbType = Int64), @p224='?' (DbType = Int64), @p225='?' (DbType = Int64), @p226='?' (DbType = Double), @p227='?' (DbType = DateTime2), @p228='?' (DbType = Double), @p229='?' (DbType = Double), @p230='?' (DbType = Int64), @p231='?' (DbType = Int64), @p232='?' (DbType = Double), @p233='?' (DbType = Int64), @p234='?' (DbType = Int64), @p235='?' (DbType = Double), @p236='?' (DbType = Double), @p237='?' (DbType = Double), @p238='?' (DbType = Int64), @p239='?' (DbType = Double), @p240='?' (DbType = Double), @p241='?' (DbType = Int64), @p242='?' (Size = 4000), @p243='?' (DbType = Int64), @p244='?' (DbType = Double), @p245='?' (Size = 450), @p246='?' (DbType = Int64), @p247='?' (DbType = Int64), @p248='?' (DbType = Double), @p249='?' (DbType = Double), @p250='?' (DbType = Int64), @p251='?' (DbType = Int64), @p252='?' (DbType = Int64), @p253='?' (DbType = Double), @p254='?' (DbType = DateTime2), @p255='?' (DbType = Double), @p256='?' (DbType = Double), @p257='?' (DbType = Int64), @p258='?' (DbType = Int64), @p259='?' (DbType = Double), @p260='?' (DbType = Int64), @p261='?' (DbType = Int64), @p262='?' (DbType = Double), @p263='?' (DbType = Double), @p264='?' (DbType = Double), @p265='?' (DbType = Int64), @p266='?' (DbType = Double), @p267='?' (DbType = Double), @p268='?' (DbType = Int64), @p269='?' (Size = 4000), @p270='?' (DbType = Int64), @p271='?' (DbType = Double), @p272='?' (Size = 450), @p273='?' (DbType = Int64), @p274='?' (DbType = Int64), @p275='?' (DbType = Double), @p276='?' (DbType = Double), @p277='?' (DbType = Int64), @p278='?' (DbType = Int64), @p279='?' (DbType = Int64), @p280='?' (DbType = Double), @p281='?' (DbType = DateTime2), @p282='?' (DbType = Double), @p283='?' (DbType = Double), @p284='?' (DbType = Int64), @p285='?' (DbType = Int64), @p286='?' (DbType = Double), @p287='?' (DbType = Int64), @p288='?' (DbType = Int64), @p289='?' (DbType = Double), @p290='?' (DbType = Double), @p291='?' (DbType = Double), @p292='?' (DbType = Int64), @p293='?' (DbType = Double), @p294='?' (DbType = Double), @p295='?' (DbType = Int64), @p296='?' (Size = 4000), @p297='?' (DbType = Int64), @p298='?' (DbType = Double), @p299='?' (Size = 450), @p300='?' (DbType = Int64), @p301='?' (DbType = Int64), @p302='?' (DbType = Double), @p303='?' (DbType = Double), @p304='?' (DbType = Int64), @p305='?' (DbType = Int64), @p306='?' (DbType = Int64), @p307='?' (DbType = Double), @p308='?' (DbType = DateTime2), @p309='?' (DbType = Double), @p310='?' (DbType = Double), @p311='?' (DbType = Int64), @p312='?' (DbType = Int64), @p313='?' (DbType = Double), @p314='?' (DbType = Int64), @p315='?' (DbType = Int64), @p316='?' (DbType = Double), @p317='?' (DbType = Double), @p318='?' (DbType = Double), @p319='?' (DbType = Int64), @p320='?' (DbType = Double), @p321='?' (DbType = Double), @p322='?' (DbType = Int64), @p323='?' (Size = 4000), @p324='?' (DbType = Int64), @p325='?' (DbType = Double), @p326='?' (Size = 450), @p327='?' (DbType = Int64), @p328='?' (DbType = Int64), @p329='?' (DbType = Double), @p330='?' (DbType = Double), @p331='?' (DbType = Int64), @p332='?' (DbType = Int64), @p333='?' (DbType = Int64), @p334='?' (DbType = Double), @p335='?' (DbType = DateTime2), @p336='?' (DbType = Double), @p337='?' (DbType = Double), @p338='?' (DbType = Int64), @p339='?' (DbType = Int64), @p340='?' (DbType = Double), @p341='?' (DbType = Int64), @p342='?' (DbType = Int64), @p343='?' (DbType = Double), @p344='?' (DbType = Double), @p345='?' (DbType = Double), @p346='?' (DbType = Int64), @p347='?' (DbType = Double), @p348='?' (DbType = Double), @p349='?' (DbType = Int64), @p350='?' (Size = 4000), @p351='?' (DbType = Int64), @p352='?' (DbType = Double), @p353='?' (Size = 450), @p354='?' (DbType = Int64), @p355='?' (DbType = Int64), @p356='?' (DbType = Double), @p357='?' (DbType = Double), @p358='?' (DbType = Int64), @p359='?' (DbType = Int64), @p360='?' (DbType = Int64), @p361='?' (DbType = Double), @p362='?' (DbType = DateTime2), @p363='?' (DbType = Double), @p364='?' (DbType = Double), @p365='?' (DbType = Int64), @p366='?' (DbType = Int64), @p367='?' (DbType = Double), @p368='?' (DbType = Int64), @p369='?' (DbType = Int64), @p370='?' (DbType = Double), @p371='?' (DbType = Double), @p372='?' (DbType = Double), @p373='?' (DbType = Int64), @p374='?' (DbType = Double), @p375='?' (DbType = Double), @p376='?' (DbType = Int64), @p377='?' (Size = 4000), @p378='?' (DbType = Int64), @p379='?' (DbType = Double), @p380='?' (Size = 450), @p381='?' (DbType = Int64), @p382='?' (DbType = Int64), @p383='?' (DbType = Double), @p384='?' (DbType = Double), @p385='?' (DbType = Int64), @p386='?' (DbType = Int64), @p387='?' (DbType = Int64), @p388='?' (DbType = Double), @p389='?' (DbType = DateTime2), @p390='?' (DbType = Double), @p391='?' (DbType = Double), @p392='?' (DbType = Int64), @p393='?' (DbType = Int64), @p394='?' (DbType = Double), @p395='?' (DbType = Int64), @p396='?' (DbType = Int64), @p397='?' (DbType = Double), @p398='?' (DbType = Double), @p399='?' (DbType = Double), @p400='?' (DbType = Int64), @p401='?' (DbType = Double), @p402='?' (DbType = Double), @p403='?' (DbType = Int64), @p404='?' (Size = 4000), @p405='?' (DbType = Int64), @p406='?' (DbType = Double), @p407='?' (Size = 450), @p408='?' (DbType = Int64), @p409='?' (DbType = Int64), @p410='?' (DbType = Double), @p411='?' (DbType = Double), @p412='?' (DbType = Int64), @p413='?' (DbType = Int64), @p414='?' (DbType = Int64), @p415='?' (DbType = Double), @p416='?' (DbType = DateTime2), @p417='?' (DbType = Double), @p418='?' (DbType = Double), @p419='?' (DbType = Int64), @p420='?' (DbType = Int64), @p421='?' (DbType = Double), @p422='?' (DbType = Int64), @p423='?' (DbType = Int64), @p424='?' (DbType = Double), @p425='?' (DbType = Double), @p426='?' (DbType = Double), @p427='?' (DbType = Int64), @p428='?' (DbType = Double), @p429='?' (DbType = Double), @p430='?' (DbType = Int64), @p431='?' (Size = 4000), @p432='?' (DbType = Int64), @p433='?' (DbType = Double), @p434='?' (Size = 450), @p435='?' (DbType = Int64), @p436='?' (DbType = Int64), @p437='?' (DbType = Double), @p438='?' (DbType = Double), @p439='?' (DbType = Int64), @p440='?' (DbType = Int64), @p441='?' (DbType = Int64), @p442='?' (DbType = Double), @p443='?' (DbType = DateTime2), @p444='?' (DbType = Double), @p445='?' (DbType = Double), @p446='?' (DbType = Int64), @p447='?' (DbType = Int64), @p448='?' (DbType = Double), @p449='?' (DbType = Int64), @p450='?' (DbType = Int64), @p451='?' (DbType = Double), @p452='?' (DbType = Double), @p453='?' (DbType = Double), @p454='?' (DbType = Int64), @p455='?' (DbType = Double), @p456='?' (DbType = Double), @p457='?' (DbType = Int64), @p458='?' (Size = 4000), @p459='?' (DbType = Int64), @p460='?' (DbType = Double), @p461='?' (Size = 450), @p462='?' (DbType = Int64), @p463='?' (DbType = Int64), @p464='?' (DbType = Double), @p465='?' (DbType = Double), @p466='?' (DbType = Int64), @p467='?' (DbType = Int64), @p468='?' (DbType = Int64), @p469='?' (DbType = Double), @p470='?' (DbType = DateTime2), @p471='?' (DbType = Double), @p472='?' (DbType = Double), @p473='?' (DbType = Int64), @p474='?' (DbType = Int64), @p475='?' (DbType = Double), @p476='?' (DbType = Int64), @p477='?' (DbType = Int64), @p478='?' (DbType = Double), @p479='?' (DbType = Double), @p480='?' (DbType = Double), @p481='?' (DbType = Int64), @p482='?' (DbType = Double), @p483='?' (DbType = Double), @p484='?' (DbType = Int64), @p485='?' (Size = 4000), @p486='?' (DbType = Int64), @p487='?' (DbType = Double), @p488='?' (Size = 450), @p489='?' (DbType = Int64), @p490='?' (DbType = Int64), @p491='?' (DbType = Double), @p492='?' (DbType = Double), @p493='?' (DbType = Int64), @p494='?' (DbType = Int64), @p495='?' (DbType = Int64), @p496='?' (DbType = Double), @p497='?' (DbType = DateTime2), @p498='?' (DbType = Double), @p499='?' (DbType = Double), @p500='?' (DbType = Int64), @p501='?' (DbType = Int64), @p502='?' (DbType = Double), @p503='?' (DbType = Int64), @p504='?' (DbType = Int64), @p505='?' (DbType = Double), @p506='?' (DbType = Double), @p507='?' (DbType = Double), @p508='?' (DbType = Int64), @p509='?' (DbType = Double), @p510='?' (DbType = Double), @p511='?' (DbType = Int64), @p512='?' (Size = 4000), @p513='?' (DbType = Int64), @p514='?' (DbType = Double), @p515='?' (Size = 450), @p516='?' (DbType = Int64), @p517='?' (DbType = Int64), @p518='?' (DbType = Double), @p519='?' (DbType = Double), @p520='?' (DbType = Int64), @p521='?' (DbType = Int64), @p522='?' (DbType = Int64), @p523='?' (DbType = Double), @p524='?' (DbType = DateTime2), @p525='?' (DbType = Double), @p526='?' (DbType = Double), @p527='?' (DbType = Int64), @p528='?' (DbType = Int64), @p529='?' (DbType = Double), @p530='?' (DbType = Int64), @p531='?' (DbType = Int64), @p532='?' (DbType = Double), @p533='?' (DbType = Double), @p534='?' (DbType = Double), @p535='?' (DbType = Int64), @p536='?' (DbType = Double), @p537='?' (DbType = Double), @p538='?' (DbType = Int64), @p539='?' (Size = 4000), @p540='?' (DbType = Int64), @p541='?' (DbType = Double), @p542='?' (Size = 450), @p543='?' (DbType = Int64), @p544='?' (DbType = Int64), @p545='?' (DbType = Double), @p546='?' (DbType = Double), @p547='?' (DbType = Int64), @p548='?' (DbType = Int64), @p549='?' (DbType = Int64), @p550='?' (DbType = Double), @p551='?' (DbType = DateTime2), @p552='?' (DbType = Double), @p553='?' (DbType = Double), @p554='?' (DbType = Int64), @p555='?' (DbType = Int64), @p556='?' (DbType = Double), @p557='?' (DbType = Int64), @p558='?' (DbType = Int64), @p559='?' (DbType = Double), @p560='?' (DbType = Double), @p561='?' (DbType = Double), @p562='?' (DbType = Int64), @p563='?' (DbType = Double), @p564='?' (DbType = Double), @p565='?' (DbType = Int64), @p566='?' (Size = 4000), @p567='?' (DbType = Int64), @p568='?' (DbType = Double), @p569='?' (Size = 450), @p570='?' (DbType = Int64), @p571='?' (DbType = Int64), @p572='?' (DbType = Double), @p573='?' (DbType = Double), @p574='?' (DbType = Int64), @p575='?' (DbType = Int64), @p576='?' (DbType = Int64), @p577='?' (DbType = Double), @p578='?' (DbType = DateTime2), @p579='?' (DbType = Double), @p580='?' (DbType = Double), @p581='?' (DbType = Int64), @p582='?' (DbType = Int64), @p583='?' (DbType = Double), @p584='?' (DbType = Int64), @p585='?' (DbType = Int64), @p586='?' (DbType = Double), @p587='?' (DbType = Double), @p588='?' (DbType = Double), @p589='?' (DbType = Int64), @p590='?' (DbType = Double), @p591='?' (DbType = Double), @p592='?' (DbType = Int64), @p593='?' (Size = 4000), @p594='?' (DbType = Int64), @p595='?' (DbType = Double), @p596='?' (Size = 450), @p597='?' (DbType = Int64), @p598='?' (DbType = Int64), @p599='?' (DbType = Double), @p600='?' (DbType = Double), @p601='?' (DbType = Int64), @p602='?' (DbType = Int64), @p603='?' (DbType = Int64), @p604='?' (DbType = Double), @p605='?' (DbType = DateTime2), @p606='?' (DbType = Double), @p607='?' (DbType = Double), @p608='?' (DbType = Int64), @p609='?' (DbType = Int64), @p610='?' (DbType = Double), @p611='?' (DbType = Int64), @p612='?' (DbType = Int64), @p613='?' (DbType = Double), @p614='?' (DbType = Double), @p615='?' (DbType = Double), @p616='?' (DbType = Int64), @p617='?' (DbType = Double), @p618='?' (DbType = Double), @p619='?' (DbType = Int64), @p620='?' (Size = 4000), @p621='?' (DbType = Int64), @p622='?' (DbType = Double), @p623='?' (Size = 450), @p624='?' (DbType = Int64), @p625='?' (DbType = Int64), @p626='?' (DbType = Double), @p627='?' (DbType = Double), @p628='?' (DbType = Int64), @p629='?' (DbType = Int64), @p630='?' (DbType = Int64), @p631='?' (DbType = Double), @p632='?' (DbType = DateTime2), @p633='?' (DbType = Double), @p634='?' (DbType = Double), @p635='?' (DbType = Int64), @p636='?' (DbType = Int64), @p637='?' (DbType = Double), @p638='?' (DbType = Int64), @p639='?' (DbType = Int64), @p640='?' (DbType = Double), @p641='?' (DbType = Double), @p642='?' (DbType = Double), @p643='?' (DbType = Int64), @p644='?' (DbType = Double), @p645='?' (DbType = Double), @p646='?' (DbType = Int64), @p647='?' (Size = 4000), @p648='?' (DbType = Int64), @p649='?' (DbType = Double), @p650='?' (Size = 450), @p651='?' (DbType = Int64), @p652='?' (DbType = Int64), @p653='?' (DbType = Double), @p654='?' (DbType = Double), @p655='?' (DbType = Int64), @p656='?' (DbType = Int64), @p657='?' (DbType = Int64), @p658='?' (DbType = Double), @p659='?' (DbType = DateTime2), @p660='?' (DbType = Double), @p661='?' (DbType = Double), @p662='?' (DbType = Int64), @p663='?' (DbType = Int64), @p664='?' (DbType = Double), @p665='?' (DbType = Int64), @p666='?' (DbType = Int64), @p667='?' (DbType = Double), @p668='?' (DbType = Double), @p669='?' (DbType = Double), @p670='?' (DbType = Int64), @p671='?' (DbType = Double), @p672='?' (DbType = Double), @p673='?' (DbType = Int64), @p674='?' (Size = 4000), @p675='?' (DbType = Int64), @p676='?' (DbType = Double), @p677='?' (Size = 450), @p678='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
DECLARE @inserted0 TABLE ([Id] int, [_Position] [int]);
MERGE [IncomeStatementAnnualReport] USING (
VALUES (@p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21, @p22, @p23, @p24, @p25, @p26, @p27, @p28, @p29, @p30, 0),
(@p31, @p32, @p33, @p34, @p35, @p36, @p37, @p38, @p39, @p40, @p41, @p42, @p43, @p44, @p45, @p46, @p47, @p48, @p49, @p50, @p51, @p52, @p53, @p54, @p55, @p56, @p57, 1),
(@p58, @p59, @p60, @p61, @p62, @p63, @p64, @p65, @p66, @p67, @p68, @p69, @p70, @p71, @p72, @p73, @p74, @p75, @p76, @p77, @p78, @p79, @p80, @p81, @p82, @p83, @p84, 2),
(@p85, @p86, @p87, @p88, @p89, @p90, @p91, @p92, @p93, @p94, @p95, @p96, @p97, @p98, @p99, @p100, @p101, @p102, @p103, @p104, @p105, @p106, @p107, @p108, @p109, @p110, @p111, 3),
(@p112, @p113, @p114, @p115, @p116, @p117, @p118, @p119, @p120, @p121, @p122, @p123, @p124, @p125, @p126, @p127, @p128, @p129, @p130, @p131, @p132, @p133, @p134, @p135, @p136, @p137, @p138, 4)) AS i ([ComprehensiveIncomeNetOfTax], [CostOfRevenue], [CostofGoodsAndServicesSold], [Depreciation], [DepreciationAndAmortization], [Ebit], [Ebitda], [FiscalDateEnding], [GrossProfit], [IncomeBeforeTax], [IncomeTaxExpense], [InterestAndDebtExpense], [InterestExpense], [InterestIncome], [InvestmentIncomeNet], [NetIncome], [NetIncomeFromContinuingOperations], [NetInterestIncome], [NonInterestIncome], [OperatingExpenses], [OperatingIncome], [OtherNonOperatingIncome], [ReportedCurrency], [ResearchAndDevelopment], [SellingGeneralAndAdministrative], [Symbol], [TotalRevenue], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([ComprehensiveIncomeNetOfTax], [CostOfRevenue], [CostofGoodsAndServicesSold], [Depreciation], [DepreciationAndAmortization], [Ebit], [Ebitda], [FiscalDateEnding], [GrossProfit], [IncomeBeforeTax], [IncomeTaxExpense], [InterestAndDebtExpense], [InterestExpense], [InterestIncome], [InvestmentIncomeNet], [NetIncome], [NetIncomeFromContinuingOperations], [NetInterestIncome], [NonInterestIncome], [OperatingExpenses], [OperatingIncome], [OtherNonOperatingIncome], [ReportedCurrency], [ResearchAndDevelopment], [SellingGeneralAndAdministrative], [Symbol], [TotalRevenue])
VALUES (i.[ComprehensiveIncomeNetOfTax], i.[CostOfRevenue], i.[CostofGoodsAndServicesSold], i.[Depreciation], i.[DepreciationAndAmortization], i.[Ebit], i.[Ebitda], i.[FiscalDateEnding], i.[GrossProfit], i.[IncomeBeforeTax], i.[IncomeTaxExpense], i.[InterestAndDebtExpense], i.[InterestExpense], i.[InterestIncome], i.[InvestmentIncomeNet], i.[NetIncome], i.[NetIncomeFromContinuingOperations], i.[NetInterestIncome], i.[NonInterestIncome], i.[OperatingExpenses], i.[OperatingIncome], i.[OtherNonOperatingIncome], i.[ReportedCurrency], i.[ResearchAndDevelopment], i.[SellingGeneralAndAdministrative], i.[Symbol], i.[TotalRevenue])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted0;

SELECT [i].[Id] FROM @inserted0 i
ORDER BY [i].[_Position];

DECLARE @inserted5 TABLE ([Id] int, [_Position] [int]);
MERGE [IncomeStatementQuarterlyReport] USING (
VALUES (@p139, @p140, @p141, @p142, @p143, @p144, @p145, @p146, @p147, @p148, @p149, @p150, @p151, @p152, @p153, @p154, @p155, @p156, @p157, @p158, @p159, @p160, @p161, @p162, @p163, @p164, @p165, 0),
(@p166, @p167, @p168, @p169, @p170, @p171, @p172, @p173, @p174, @p175, @p176, @p177, @p178, @p179, @p180, @p181, @p182, @p183, @p184, @p185, @p186, @p187, @p188, @p189, @p190, @p191, @p192, 1),
(@p193, @p194, @p195, @p196, @p197, @p198, @p199, @p200, @p201, @p202, @p203, @p204, @p205, @p206, @p207, @p208, @p209, @p210, @p211, @p212, @p213, @p214, @p215, @p216, @p217, @p218, @p219, 2),
(@p220, @p221, @p222, @p223, @p224, @p225, @p226, @p227, @p228, @p229, @p230, @p231, @p232, @p233, @p234, @p235, @p236, @p237, @p238, @p239, @p240, @p241, @p242, @p243, @p244, @p245, @p246, 3),
(@p247, @p248, @p249, @p250, @p251, @p252, @p253, @p254, @p255, @p256, @p257, @p258, @p259, @p260, @p261, @p262, @p263, @p264, @p265, @p266, @p267, @p268, @p269, @p270, @p271, @p272, @p273, 4),
(@p274, @p275, @p276, @p277, @p278, @p279, @p280, @p281, @p282, @p283, @p284, @p285, @p286, @p287, @p288, @p289, @p290, @p291, @p292, @p293, @p294, @p295, @p296, @p297, @p298, @p299, @p300, 5),
(@p301, @p302, @p303, @p304, @p305, @p306, @p307, @p308, @p309, @p310, @p311, @p312, @p313, @p314, @p315, @p316, @p317, @p318, @p319, @p320, @p321, @p322, @p323, @p324, @p325, @p326, @p327, 6),
(@p328, @p329, @p330, @p331, @p332, @p333, @p334, @p335, @p336, @p337, @p338, @p339, @p340, @p341, @p342, @p343, @p344, @p345, @p346, @p347, @p348, @p349, @p350, @p351, @p352, @p353, @p354, 7),
(@p355, @p356, @p357, @p358, @p359, @p360, @p361, @p362, @p363, @p364, @p365, @p366, @p367, @p368, @p369, @p370, @p371, @p372, @p373, @p374, @p375, @p376, @p377, @p378, @p379, @p380, @p381, 8),
(@p382, @p383, @p384, @p385, @p386, @p387, @p388, @p389, @p390, @p391, @p392, @p393, @p394, @p395, @p396, @p397, @p398, @p399, @p400, @p401, @p402, @p403, @p404, @p405, @p406, @p407, @p408, 9),
(@p409, @p410, @p411, @p412, @p413, @p414, @p415, @p416, @p417, @p418, @p419, @p420, @p421, @p422, @p423, @p424, @p425, @p426, @p427, @p428, @p429, @p430, @p431, @p432, @p433, @p434, @p435, 10),
(@p436, @p437, @p438, @p439, @p440, @p441, @p442, @p443, @p444, @p445, @p446, @p447, @p448, @p449, @p450, @p451, @p452, @p453, @p454, @p455, @p456, @p457, @p458, @p459, @p460, @p461, @p462, 11),
(@p463, @p464, @p465, @p466, @p467, @p468, @p469, @p470, @p471, @p472, @p473, @p474, @p475, @p476, @p477, @p478, @p479, @p480, @p481, @p482, @p483, @p484, @p485, @p486, @p487, @p488, @p489, 12),
(@p490, @p491, @p492, @p493, @p494, @p495, @p496, @p497, @p498, @p499, @p500, @p501, @p502, @p503, @p504, @p505, @p506, @p507, @p508, @p509, @p510, @p511, @p512, @p513, @p514, @p515, @p516, 13),
(@p517, @p518, @p519, @p520, @p521, @p522, @p523, @p524, @p525, @p526, @p527, @p528, @p529, @p530, @p531, @p532, @p533, @p534, @p535, @p536, @p537, @p538, @p539, @p540, @p541, @p542, @p543, 14),
(@p544, @p545, @p546, @p547, @p548, @p549, @p550, @p551, @p552, @p553, @p554, @p555, @p556, @p557, @p558, @p559, @p560, @p561, @p562, @p563, @p564, @p565, @p566, @p567, @p568, @p569, @p570, 15),
(@p571, @p572, @p573, @p574, @p575, @p576, @p577, @p578, @p579, @p580, @p581, @p582, @p583, @p584, @p585, @p586, @p587, @p588, @p589, @p590, @p591, @p592, @p593, @p594, @p595, @p596, @p597, 16),
(@p598, @p599, @p600, @p601, @p602, @p603, @p604, @p605, @p606, @p607, @p608, @p609, @p610, @p611, @p612, @p613, @p614, @p615, @p616, @p617, @p618, @p619, @p620, @p621, @p622, @p623, @p624, 17),
(@p625, @p626, @p627, @p628, @p629, @p630, @p631, @p632, @p633, @p634, @p635, @p636, @p637, @p638, @p639, @p640, @p641, @p642, @p643, @p644, @p645, @p646, @p647, @p648, @p649, @p650, @p651, 18),
(@p652, @p653, @p654, @p655, @p656, @p657, @p658, @p659, @p660, @p661, @p662, @p663, @p664, @p665, @p666, @p667, @p668, @p669, @p670, @p671, @p672, @p673, @p674, @p675, @p676, @p677, @p678, 19)) AS i ([ComprehensiveIncomeNetOfTax], [CostOfRevenue], [CostofGoodsAndServicesSold], [Depreciation], [DepreciationAndAmortization], [Ebit], [Ebitda], [FiscalDateEnding], [GrossProfit], [IncomeBeforeTax], [IncomeTaxExpense], [InterestAndDebtExpense], [InterestExpense], [InterestIncome], [InvestmentIncomeNet], [NetIncome], [NetIncomeFromContinuingOperations], [NetInterestIncome], [NonInterestIncome], [OperatingExpenses], [OperatingIncome], [OtherNonOperatingIncome], [ReportedCurrency], [ResearchAndDevelopment], [SellingGeneralAndAdministrative], [Symbol], [TotalRevenue], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([ComprehensiveIncomeNetOfTax], [CostOfRevenue], [CostofGoodsAndServicesSold], [Depreciation], [DepreciationAndAmortization], [Ebit], [Ebitda], [FiscalDateEnding], [GrossProfit], [IncomeBeforeTax], [IncomeTaxExpense], [InterestAndDebtExpense], [InterestExpense], [InterestIncome], [InvestmentIncomeNet], [NetIncome], [NetIncomeFromContinuingOperations], [NetInterestIncome], [NonInterestIncome], [OperatingExpenses], [OperatingIncome], [OtherNonOperatingIncome], [ReportedCurrency], [ResearchAndDevelopment], [SellingGeneralAndAdministrative], [Symbol], [TotalRevenue])
VALUES (i.[ComprehensiveIncomeNetOfTax], i.[CostOfRevenue], i.[CostofGoodsAndServicesSold], i.[Depreciation], i.[DepreciationAndAmortization], i.[Ebit], i.[Ebitda], i.[FiscalDateEnding], i.[GrossProfit], i.[IncomeBeforeTax], i.[IncomeTaxExpense], i.[InterestAndDebtExpense], i.[InterestExpense], i.[InterestIncome], i.[InvestmentIncomeNet], i.[NetIncome], i.[NetIncomeFromContinuingOperations], i.[NetInterestIncome], i.[NonInterestIncome], i.[OperatingExpenses], i.[OperatingIncome], i.[OtherNonOperatingIncome], i.[ReportedCurrency], i.[ResearchAndDevelopment], i.[SellingGeneralAndAdministrative], i.[Symbol], i.[TotalRevenue])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted5;

SELECT [i].[Id] FROM @inserted5 i
ORDER BY [i].[_Position];
2022-05-12 01:11:10.034 +03:00 [INF] AddOrUpdate run successful.
2022-05-12 01:11:13.687 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CashFlow with Symbol AVAL
2022-05-12 01:11:13.689 +03:00 [INF] Generating URI for CASH_FLOW with params: symbol: AVAL
2022-05-12 01:11:13.689 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=CASH_FLOW&symbol=AVAL
2022-05-12 01:11:13.690 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=CASH_FLOW&symbol=AVAL".
2022-05-12 01:11:14.044 +03:00 [INF] Response has success status code
2022-05-12 01:11:14.045 +03:00 [INF] Trying to deserialize response.
2022-05-12 01:11:14.046 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 01:11:14.054 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__symbol_0
2022-05-12 01:11:14.055 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.CashFlow.
2022-05-12 01:11:14.062 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[ExistInApi], [c].[LastApiRefresh], [c].[LastLocalRefresh]
FROM [CashFlows] AS [c]
WHERE [c].[Symbol] = @__entity_Symbol_0
2022-05-12 01:11:14.063 +03:00 [INF] Entity does not exist. Adding to DB.
2022-05-12 01:11:14.076 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = Boolean), @p2='?' (DbType = DateTime2), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [CashFlows] ([Symbol], [ExistInApi], [LastApiRefresh], [LastLocalRefresh])
VALUES (@p0, @p1, @p2, @p3);
2022-05-12 01:11:14.125 +03:00 [INF] Executed DbCommand (48ms) [Parameters=[@p4='?' (DbType = Double), @p5='?' (DbType = Double), @p6='?' (DbType = Int64), @p7='?' (DbType = Int64), @p8='?' (DbType = Int64), @p9='?' (DbType = Int64), @p10='?' (DbType = Int64), @p11='?' (DbType = Int64), @p12='?' (DbType = Int64), @p13='?' (DbType = Double), @p14='?' (DbType = Int64), @p15='?' (DbType = Double), @p16='?' (DbType = Int64), @p17='?' (Size = 4000), @p18='?' (DbType = Double), @p19='?' (DbType = Double), @p20='?' (DbType = Int64), @p21='?' (DbType = Int64), @p22='?' (DbType = Int64), @p23='?' (DbType = Int64), @p24='?' (DbType = Int64), @p25='?' (DbType = Int64), @p26='?' (DbType = Int64), @p27='?' (DbType = Int64), @p28='?' (DbType = Int64), @p29='?' (DbType = Double), @p30='?' (DbType = Int64), @p31='?' (DbType = Int64), @p32='?' (Size = 4000), @p33='?' (Size = 450), @p34='?' (DbType = Double), @p35='?' (DbType = Double), @p36='?' (DbType = Int64), @p37='?' (DbType = Int64), @p38='?' (DbType = Int64), @p39='?' (DbType = Int64), @p40='?' (DbType = Int64), @p41='?' (DbType = Int64), @p42='?' (DbType = Int64), @p43='?' (DbType = Double), @p44='?' (DbType = Int64), @p45='?' (DbType = Double), @p46='?' (DbType = Int64), @p47='?' (Size = 4000), @p48='?' (DbType = Double), @p49='?' (DbType = Double), @p50='?' (DbType = Int64), @p51='?' (DbType = Int64), @p52='?' (DbType = Int64), @p53='?' (DbType = Int64), @p54='?' (DbType = Int64), @p55='?' (DbType = Int64), @p56='?' (DbType = Int64), @p57='?' (DbType = Int64), @p58='?' (DbType = Int64), @p59='?' (DbType = Double), @p60='?' (DbType = Int64), @p61='?' (DbType = Int64), @p62='?' (Size = 4000), @p63='?' (Size = 450), @p64='?' (DbType = Double), @p65='?' (DbType = Double), @p66='?' (DbType = Int64), @p67='?' (DbType = Int64), @p68='?' (DbType = Int64), @p69='?' (DbType = Int64), @p70='?' (DbType = Int64), @p71='?' (DbType = Int64), @p72='?' (DbType = Int64), @p73='?' (DbType = Double), @p74='?' (DbType = Int64), @p75='?' (DbType = Double), @p76='?' (DbType = Int64), @p77='?' (Size = 4000), @p78='?' (DbType = Double), @p79='?' (DbType = Double), @p80='?' (DbType = Int64), @p81='?' (DbType = Int64), @p82='?' (DbType = Int64), @p83='?' (DbType = Int64), @p84='?' (DbType = Int64), @p85='?' (DbType = Int64), @p86='?' (DbType = Int64), @p87='?' (DbType = Int64), @p88='?' (DbType = Int64), @p89='?' (DbType = Double), @p90='?' (DbType = Int64), @p91='?' (DbType = Int64), @p92='?' (Size = 4000), @p93='?' (Size = 450), @p94='?' (DbType = Double), @p95='?' (DbType = Double), @p96='?' (DbType = Int64), @p97='?' (DbType = Int64), @p98='?' (DbType = Int64), @p99='?' (DbType = Int64), @p100='?' (DbType = Int64), @p101='?' (DbType = Int64), @p102='?' (DbType = Int64), @p103='?' (DbType = Double), @p104='?' (DbType = Int64), @p105='?' (DbType = Double), @p106='?' (DbType = Int64), @p107='?' (Size = 4000), @p108='?' (DbType = Double), @p109='?' (DbType = Double), @p110='?' (DbType = Int64), @p111='?' (DbType = Int64), @p112='?' (DbType = Int64), @p113='?' (DbType = Int64), @p114='?' (DbType = Int64), @p115='?' (DbType = Int64), @p116='?' (DbType = Int64), @p117='?' (DbType = Int64), @p118='?' (DbType = Int64), @p119='?' (DbType = Double), @p120='?' (DbType = Int64), @p121='?' (DbType = Int64), @p122='?' (Size = 4000), @p123='?' (Size = 450), @p124='?' (DbType = Double), @p125='?' (DbType = Double), @p126='?' (DbType = Int64), @p127='?' (DbType = Int64), @p128='?' (DbType = Int64), @p129='?' (DbType = Int64), @p130='?' (DbType = Int64), @p131='?' (DbType = Int64), @p132='?' (DbType = Int64), @p133='?' (DbType = Double), @p134='?' (DbType = Int64), @p135='?' (DbType = Double), @p136='?' (DbType = Int64), @p137='?' (Size = 4000), @p138='?' (DbType = Double), @p139='?' (DbType = Double), @p140='?' (DbType = Int64), @p141='?' (DbType = Int64), @p142='?' (DbType = Int64), @p143='?' (DbType = Int64), @p144='?' (DbType = Int64), @p145='?' (DbType = Int64), @p146='?' (DbType = Int64), @p147='?' (DbType = Int64), @p148='?' (DbType = Int64), @p149='?' (DbType = Double), @p150='?' (DbType = Int64), @p151='?' (DbType = Int64), @p152='?' (Size = 4000), @p153='?' (Size = 450), @p154='?' (DbType = Double), @p155='?' (DbType = Double), @p156='?' (DbType = Int64), @p157='?' (DbType = Int64), @p158='?' (DbType = Int64), @p159='?' (DbType = Int64), @p160='?' (DbType = Int64), @p161='?' (DbType = Int64), @p162='?' (DbType = Int64), @p163='?' (DbType = Double), @p164='?' (DbType = Int64), @p165='?' (DbType = Double), @p166='?' (DbType = Int64), @p167='?' (Size = 4000), @p168='?' (DbType = Double), @p169='?' (DbType = Double), @p170='?' (DbType = Int64), @p171='?' (DbType = Int64), @p172='?' (DbType = Int64), @p173='?' (DbType = Int64), @p174='?' (DbType = Int64), @p175='?' (DbType = Int64), @p176='?' (DbType = Int64), @p177='?' (DbType = Int64), @p178='?' (DbType = Int64), @p179='?' (DbType = Double), @p180='?' (DbType = Int64), @p181='?' (DbType = Int64), @p182='?' (Size = 4000), @p183='?' (Size = 450), @p184='?' (DbType = Double), @p185='?' (DbType = Double), @p186='?' (DbType = Int64), @p187='?' (DbType = Int64), @p188='?' (DbType = Int64), @p189='?' (DbType = Int64), @p190='?' (DbType = Int64), @p191='?' (DbType = Int64), @p192='?' (DbType = Int64), @p193='?' (DbType = Double), @p194='?' (DbType = Int64), @p195='?' (DbType = Double), @p196='?' (DbType = Int64), @p197='?' (Size = 4000), @p198='?' (DbType = Double), @p199='?' (DbType = Double), @p200='?' (DbType = Int64), @p201='?' (DbType = Int64), @p202='?' (DbType = Int64), @p203='?' (DbType = Int64), @p204='?' (DbType = Int64), @p205='?' (DbType = Int64), @p206='?' (DbType = Int64), @p207='?' (DbType = Int64), @p208='?' (DbType = Int64), @p209='?' (DbType = Double), @p210='?' (DbType = Int64), @p211='?' (DbType = Int64), @p212='?' (Size = 4000), @p213='?' (Size = 450), @p214='?' (DbType = Double), @p215='?' (DbType = Double), @p216='?' (DbType = Int64), @p217='?' (DbType = Int64), @p218='?' (DbType = Int64), @p219='?' (DbType = Int64), @p220='?' (DbType = Int64), @p221='?' (DbType = Int64), @p222='?' (DbType = Int64), @p223='?' (DbType = Double), @p224='?' (DbType = Int64), @p225='?' (DbType = Double), @p226='?' (DbType = Int64), @p227='?' (Size = 4000), @p228='?' (DbType = Double), @p229='?' (DbType = Double), @p230='?' (DbType = Int64), @p231='?' (DbType = Int64), @p232='?' (DbType = Int64), @p233='?' (DbType = Int64), @p234='?' (DbType = Int64), @p235='?' (DbType = Int64), @p236='?' (DbType = Int64), @p237='?' (DbType = Int64), @p238='?' (DbType = Int64), @p239='?' (DbType = Double), @p240='?' (DbType = Int64), @p241='?' (DbType = Int64), @p242='?' (Size = 4000), @p243='?' (Size = 450), @p244='?' (DbType = Double), @p245='?' (DbType = Double), @p246='?' (DbType = Int64), @p247='?' (DbType = Int64), @p248='?' (DbType = Int64), @p249='?' (DbType = Int64), @p250='?' (DbType = Int64), @p251='?' (DbType = Int64), @p252='?' (DbType = Int64), @p253='?' (DbType = Double), @p254='?' (DbType = Int64), @p255='?' (DbType = Double), @p256='?' (DbType = Int64), @p257='?' (Size = 4000), @p258='?' (DbType = Double), @p259='?' (DbType = Double), @p260='?' (DbType = Int64), @p261='?' (DbType = Int64), @p262='?' (DbType = Int64), @p263='?' (DbType = Int64), @p264='?' (DbType = Int64), @p265='?' (DbType = Int64), @p266='?' (DbType = Int64), @p267='?' (DbType = Int64), @p268='?' (DbType = Int64), @p269='?' (DbType = Double), @p270='?' (DbType = Int64), @p271='?' (DbType = Int64), @p272='?' (Size = 4000), @p273='?' (Size = 450), @p274='?' (DbType = Double), @p275='?' (DbType = Double), @p276='?' (DbType = Int64), @p277='?' (DbType = Int64), @p278='?' (DbType = Int64), @p279='?' (DbType = Int64), @p280='?' (DbType = Int64), @p281='?' (DbType = Int64), @p282='?' (DbType = Int64), @p283='?' (DbType = Double), @p284='?' (DbType = Int64), @p285='?' (DbType = Double), @p286='?' (DbType = Int64), @p287='?' (Size = 4000), @p288='?' (DbType = Double), @p289='?' (DbType = Double), @p290='?' (DbType = Int64), @p291='?' (DbType = Int64), @p292='?' (DbType = Int64), @p293='?' (DbType = Int64), @p294='?' (DbType = Int64), @p295='?' (DbType = Int64), @p296='?' (DbType = Int64), @p297='?' (DbType = Int64), @p298='?' (DbType = Int64), @p299='?' (DbType = Double), @p300='?' (DbType = Int64), @p301='?' (DbType = Int64), @p302='?' (Size = 4000), @p303='?' (Size = 450), @p304='?' (DbType = Double), @p305='?' (DbType = Double), @p306='?' (DbType = Int64), @p307='?' (DbType = Int64), @p308='?' (DbType = Int64), @p309='?' (DbType = Int64), @p310='?' (DbType = Int64), @p311='?' (DbType = Int64), @p312='?' (DbType = Int64), @p313='?' (DbType = Double), @p314='?' (DbType = Int64), @p315='?' (DbType = Double), @p316='?' (DbType = Int64), @p317='?' (Size = 4000), @p318='?' (DbType = Double), @p319='?' (DbType = Double), @p320='?' (DbType = Int64), @p321='?' (DbType = Int64), @p322='?' (DbType = Int64), @p323='?' (DbType = Int64), @p324='?' (DbType = Int64), @p325='?' (DbType = Int64), @p326='?' (DbType = Int64), @p327='?' (DbType = Int64), @p328='?' (DbType = Int64), @p329='?' (DbType = Double), @p330='?' (DbType = Int64), @p331='?' (DbType = Int64), @p332='?' (Size = 4000), @p333='?' (Size = 450), @p334='?' (DbType = Double), @p335='?' (DbType = Double), @p336='?' (DbType = Int64), @p337='?' (DbType = Int64), @p338='?' (DbType = Int64), @p339='?' (DbType = Int64), @p340='?' (DbType = Int64), @p341='?' (DbType = Int64), @p342='?' (DbType = Int64), @p343='?' (DbType = Double), @p344='?' (DbType = Int64), @p345='?' (DbType = Double), @p346='?' (DbType = Int64), @p347='?' (Size = 4000), @p348='?' (DbType = Double), @p349='?' (DbType = Double), @p350='?' (DbType = Int64), @p351='?' (DbType = Int64), @p352='?' (DbType = Int64), @p353='?' (DbType = Int64), @p354='?' (DbType = Int64), @p355='?' (DbType = Int64), @p356='?' (DbType = Int64), @p357='?' (DbType = Int64), @p358='?' (DbType = Int64), @p359='?' (DbType = Double), @p360='?' (DbType = Int64), @p361='?' (DbType = Int64), @p362='?' (Size = 4000), @p363='?' (Size = 450), @p364='?' (DbType = Double), @p365='?' (DbType = Double), @p366='?' (DbType = Int64), @p367='?' (DbType = Int64), @p368='?' (DbType = Int64), @p369='?' (DbType = Int64), @p370='?' (DbType = Int64), @p371='?' (DbType = Int64), @p372='?' (DbType = Int64), @p373='?' (DbType = Double), @p374='?' (DbType = Int64), @p375='?' (DbType = Double), @p376='?' (DbType = Int64), @p377='?' (Size = 4000), @p378='?' (DbType = Double), @p379='?' (DbType = Double), @p380='?' (DbType = Int64), @p381='?' (DbType = Int64), @p382='?' (DbType = Int64), @p383='?' (DbType = Int64), @p384='?' (DbType = Int64), @p385='?' (DbType = Int64), @p386='?' (DbType = Int64), @p387='?' (DbType = Int64), @p388='?' (DbType = Int64), @p389='?' (DbType = Double), @p390='?' (DbType = Int64), @p391='?' (DbType = Int64), @p392='?' (Size = 4000), @p393='?' (Size = 450), @p394='?' (DbType = Double), @p395='?' (DbType = Double), @p396='?' (DbType = Int64), @p397='?' (DbType = Int64), @p398='?' (DbType = Int64), @p399='?' (DbType = Int64), @p400='?' (DbType = Int64), @p401='?' (DbType = Int64), @p402='?' (DbType = Int64), @p403='?' (DbType = Double), @p404='?' (DbType = Int64), @p405='?' (DbType = Double), @p406='?' (DbType = Int64), @p407='?' (Size = 4000), @p408='?' (DbType = Double), @p409='?' (DbType = Double), @p410='?' (DbType = Int64), @p411='?' (DbType = Int64), @p412='?' (DbType = Int64), @p413='?' (DbType = Int64), @p414='?' (DbType = Int64), @p415='?' (DbType = Int64), @p416='?' (DbType = Int64), @p417='?' (DbType = Int64), @p418='?' (DbType = Int64), @p419='?' (DbType = Double), @p420='?' (DbType = Int64), @p421='?' (DbType = Int64), @p422='?' (Size = 4000), @p423='?' (Size = 450), @p424='?' (DbType = Double), @p425='?' (DbType = Double), @p426='?' (DbType = Int64), @p427='?' (DbType = Int64), @p428='?' (DbType = Int64), @p429='?' (DbType = Int64), @p430='?' (DbType = Int64), @p431='?' (DbType = Int64), @p432='?' (DbType = Int64), @p433='?' (DbType = Double), @p434='?' (DbType = Int64), @p435='?' (DbType = Double), @p436='?' (DbType = Int64), @p437='?' (Size = 4000), @p438='?' (DbType = Double), @p439='?' (DbType = Double), @p440='?' (DbType = Int64), @p441='?' (DbType = Int64), @p442='?' (DbType = Int64), @p443='?' (DbType = Int64), @p444='?' (DbType = Int64), @p445='?' (DbType = Int64), @p446='?' (DbType = Int64), @p447='?' (DbType = Int64), @p448='?' (DbType = Int64), @p449='?' (DbType = Double), @p450='?' (DbType = Int64), @p451='?' (DbType = Int64), @p452='?' (Size = 4000), @p453='?' (Size = 450), @p454='?' (DbType = Double), @p455='?' (DbType = Double), @p456='?' (DbType = Int64), @p457='?' (DbType = Int64), @p458='?' (DbType = Int64), @p459='?' (DbType = Int64), @p460='?' (DbType = Int64), @p461='?' (DbType = Int64), @p462='?' (DbType = Int64), @p463='?' (DbType = Double), @p464='?' (DbType = Int64), @p465='?' (DbType = Double), @p466='?' (DbType = Int64), @p467='?' (Size = 4000), @p468='?' (DbType = Double), @p469='?' (DbType = Double), @p470='?' (DbType = Int64), @p471='?' (DbType = Int64), @p472='?' (DbType = Int64), @p473='?' (DbType = Int64), @p474='?' (DbType = Int64), @p475='?' (DbType = Int64), @p476='?' (DbType = Int64), @p477='?' (DbType = Int64), @p478='?' (DbType = Int64), @p479='?' (DbType = Double), @p480='?' (DbType = Int64), @p481='?' (DbType = Int64), @p482='?' (Size = 4000), @p483='?' (Size = 450), @p484='?' (DbType = Double), @p485='?' (DbType = Double), @p486='?' (DbType = Int64), @p487='?' (DbType = Int64), @p488='?' (DbType = Int64), @p489='?' (DbType = Int64), @p490='?' (DbType = Int64), @p491='?' (DbType = Int64), @p492='?' (DbType = Int64), @p493='?' (DbType = Double), @p494='?' (DbType = Int64), @p495='?' (DbType = Double), @p496='?' (DbType = Int64), @p497='?' (Size = 4000), @p498='?' (DbType = Double), @p499='?' (DbType = Double), @p500='?' (DbType = Int64), @p501='?' (DbType = Int64), @p502='?' (DbType = Int64), @p503='?' (DbType = Int64), @p504='?' (DbType = Int64), @p505='?' (DbType = Int64), @p506='?' (DbType = Int64), @p507='?' (DbType = Int64), @p508='?' (DbType = Int64), @p509='?' (DbType = Double), @p510='?' (DbType = Int64), @p511='?' (DbType = Int64), @p512='?' (Size = 4000), @p513='?' (Size = 450), @p514='?' (DbType = Double), @p515='?' (DbType = Double), @p516='?' (DbType = Int64), @p517='?' (DbType = Int64), @p518='?' (DbType = Int64), @p519='?' (DbType = Int64), @p520='?' (DbType = Int64), @p521='?' (DbType = Int64), @p522='?' (DbType = Int64), @p523='?' (DbType = Double), @p524='?' (DbType = Int64), @p525='?' (DbType = Double), @p526='?' (DbType = Int64), @p527='?' (Size = 4000), @p528='?' (DbType = Double), @p529='?' (DbType = Double), @p530='?' (DbType = Int64), @p531='?' (DbType = Int64), @p532='?' (DbType = Int64), @p533='?' (DbType = Int64), @p534='?' (DbType = Int64), @p535='?' (DbType = Int64), @p536='?' (DbType = Int64), @p537='?' (DbType = Int64), @p538='?' (DbType = Int64), @p539='?' (DbType = Double), @p540='?' (DbType = Int64), @p541='?' (DbType = Int64), @p542='?' (Size = 4000), @p543='?' (Size = 450), @p544='?' (DbType = Double), @p545='?' (DbType = Double), @p546='?' (DbType = Int64), @p547='?' (DbType = Int64), @p548='?' (DbType = Int64), @p549='?' (DbType = Int64), @p550='?' (DbType = Int64), @p551='?' (DbType = Int64), @p552='?' (DbType = Int64), @p553='?' (DbType = Double), @p554='?' (DbType = Int64), @p555='?' (DbType = Double), @p556='?' (DbType = Int64), @p557='?' (Size = 4000), @p558='?' (DbType = Double), @p559='?' (DbType = Double), @p560='?' (DbType = Int64), @p561='?' (DbType = Int64), @p562='?' (DbType = Int64), @p563='?' (DbType = Int64), @p564='?' (DbType = Int64), @p565='?' (DbType = Int64), @p566='?' (DbType = Int64), @p567='?' (DbType = Int64), @p568='?' (DbType = Int64), @p569='?' (DbType = Double), @p570='?' (DbType = Int64), @p571='?' (DbType = Int64), @p572='?' (Size = 4000), @p573='?' (Size = 450), @p574='?' (DbType = Double), @p575='?' (DbType = Double), @p576='?' (DbType = Int64), @p577='?' (DbType = Int64), @p578='?' (DbType = Int64), @p579='?' (DbType = Int64), @p580='?' (DbType = Int64), @p581='?' (DbType = Int64), @p582='?' (DbType = Int64), @p583='?' (DbType = Double), @p584='?' (DbType = Int64), @p585='?' (DbType = Double), @p586='?' (DbType = Int64), @p587='?' (Size = 4000), @p588='?' (DbType = Double), @p589='?' (DbType = Double), @p590='?' (DbType = Int64), @p591='?' (DbType = Int64), @p592='?' (DbType = Int64), @p593='?' (DbType = Int64), @p594='?' (DbType = Int64), @p595='?' (DbType = Int64), @p596='?' (DbType = Int64), @p597='?' (DbType = Int64), @p598='?' (DbType = Int64), @p599='?' (DbType = Double), @p600='?' (DbType = Int64), @p601='?' (DbType = Int64), @p602='?' (Size = 4000), @p603='?' (Size = 450), @p604='?' (DbType = Double), @p605='?' (DbType = Double), @p606='?' (DbType = Int64), @p607='?' (DbType = Int64), @p608='?' (DbType = Int64), @p609='?' (DbType = Int64), @p610='?' (DbType = Int64), @p611='?' (DbType = Int64), @p612='?' (DbType = Int64), @p613='?' (DbType = Double), @p614='?' (DbType = Int64), @p615='?' (DbType = Double), @p616='?' (DbType = Int64), @p617='?' (Size = 4000), @p618='?' (DbType = Double), @p619='?' (DbType = Double), @p620='?' (DbType = Int64), @p621='?' (DbType = Int64), @p622='?' (DbType = Int64), @p623='?' (DbType = Int64), @p624='?' (DbType = Int64), @p625='?' (DbType = Int64), @p626='?' (DbType = Int64), @p627='?' (DbType = Int64), @p628='?' (DbType = Int64), @p629='?' (DbType = Double), @p630='?' (DbType = Int64), @p631='?' (DbType = Int64), @p632='?' (Size = 4000), @p633='?' (Size = 450), @p634='?' (DbType = Double), @p635='?' (DbType = Double), @p636='?' (DbType = Int64), @p637='?' (DbType = Int64), @p638='?' (DbType = Int64), @p639='?' (DbType = Int64), @p640='?' (DbType = Int64), @p641='?' (DbType = Int64), @p642='?' (DbType = Int64), @p643='?' (DbType = Double), @p644='?' (DbType = Int64), @p645='?' (DbType = Double), @p646='?' (DbType = Int64), @p647='?' (Size = 4000), @p648='?' (DbType = Double), @p649='?' (DbType = Double), @p650='?' (DbType = Int64), @p651='?' (DbType = Int64), @p652='?' (DbType = Int64), @p653='?' (DbType = Int64), @p654='?' (DbType = Int64), @p655='?' (DbType = Int64), @p656='?' (DbType = Int64), @p657='?' (DbType = Int64), @p658='?' (DbType = Int64), @p659='?' (DbType = Double), @p660='?' (DbType = Int64), @p661='?' (DbType = Int64), @p662='?' (Size = 4000), @p663='?' (Size = 450), @p664='?' (DbType = Double), @p665='?' (DbType = Double), @p666='?' (DbType = Int64), @p667='?' (DbType = Int64), @p668='?' (DbType = Int64), @p669='?' (DbType = Int64), @p670='?' (DbType = Int64), @p671='?' (DbType = Int64), @p672='?' (DbType = Int64), @p673='?' (DbType = Double), @p674='?' (DbType = Int64), @p675='?' (DbType = Double), @p676='?' (DbType = Int64), @p677='?' (Size = 4000), @p678='?' (DbType = Double), @p679='?' (DbType = Double), @p680='?' (DbType = Int64), @p681='?' (DbType = Int64), @p682='?' (DbType = Int64), @p683='?' (DbType = Int64), @p684='?' (DbType = Int64), @p685='?' (DbType = Int64), @p686='?' (DbType = Int64), @p687='?' (DbType = Int64), @p688='?' (DbType = Int64), @p689='?' (DbType = Double), @p690='?' (DbType = Int64), @p691='?' (DbType = Int64), @p692='?' (Size = 4000), @p693='?' (Size = 450), @p694='?' (DbType = Double), @p695='?' (DbType = Double), @p696='?' (DbType = Int64), @p697='?' (DbType = Int64), @p698='?' (DbType = Int64), @p699='?' (DbType = Int64), @p700='?' (DbType = Int64), @p701='?' (DbType = Int64), @p702='?' (DbType = Int64), @p703='?' (DbType = Double), @p704='?' (DbType = Int64), @p705='?' (DbType = Double), @p706='?' (DbType = Int64), @p707='?' (Size = 4000), @p708='?' (DbType = Double), @p709='?' (DbType = Double), @p710='?' (DbType = Int64), @p711='?' (DbType = Int64), @p712='?' (DbType = Int64), @p713='?' (DbType = Int64), @p714='?' (DbType = Int64), @p715='?' (DbType = Int64), @p716='?' (DbType = Int64), @p717='?' (DbType = Int64), @p718='?' (DbType = Int64), @p719='?' (DbType = Double), @p720='?' (DbType = Int64), @p721='?' (DbType = Int64), @p722='?' (Size = 4000), @p723='?' (Size = 450), @p724='?' (DbType = Double), @p725='?' (DbType = Double), @p726='?' (DbType = Int64), @p727='?' (DbType = Int64), @p728='?' (DbType = Int64), @p729='?' (DbType = Int64), @p730='?' (DbType = Int64), @p731='?' (DbType = Int64), @p732='?' (DbType = Int64), @p733='?' (DbType = Double), @p734='?' (DbType = Int64), @p735='?' (DbType = Double), @p736='?' (DbType = Int64), @p737='?' (Size = 4000), @p738='?' (DbType = Double), @p739='?' (DbType = Double), @p740='?' (DbType = Int64), @p741='?' (DbType = Int64), @p742='?' (DbType = Int64), @p743='?' (DbType = Int64), @p744='?' (DbType = Int64), @p745='?' (DbType = Int64), @p746='?' (DbType = Int64), @p747='?' (DbType = Int64), @p748='?' (DbType = Int64), @p749='?' (DbType = Double), @p750='?' (DbType = Int64), @p751='?' (DbType = Int64), @p752='?' (Size = 4000), @p753='?' (Size = 450), @p754='?' (DbType = Double), @p755='?' (DbType = Double), @p756='?' (DbType = Int64), @p757='?' (DbType = Int64), @p758='?' (DbType = Int64), @p759='?' (DbType = Int64), @p760='?' (DbType = Int64), @p761='?' (DbType = Int64), @p762='?' (DbType = Int64), @p763='?' (DbType = Double), @p764='?' (DbType = Int64), @p765='?' (DbType = Double), @p766='?' (DbType = Int64), @p767='?' (Size = 4000), @p768='?' (DbType = Double), @p769='?' (DbType = Double), @p770='?' (DbType = Int64), @p771='?' (DbType = Int64), @p772='?' (DbType = Int64), @p773='?' (DbType = Int64), @p774='?' (DbType = Int64), @p775='?' (DbType = Int64), @p776='?' (DbType = Int64), @p777='?' (DbType = Int64), @p778='?' (DbType = Int64), @p779='?' (DbType = Double), @p780='?' (DbType = Int64), @p781='?' (DbType = Int64), @p782='?' (Size = 4000), @p783='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
DECLARE @inserted0 TABLE ([Id] int, [_Position] [int]);
MERGE [CashFlowAnnualReport] USING (
VALUES (@p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21, @p22, @p23, @p24, @p25, @p26, @p27, @p28, @p29, @p30, @p31, @p32, @p33, 0),
(@p34, @p35, @p36, @p37, @p38, @p39, @p40, @p41, @p42, @p43, @p44, @p45, @p46, @p47, @p48, @p49, @p50, @p51, @p52, @p53, @p54, @p55, @p56, @p57, @p58, @p59, @p60, @p61, @p62, @p63, 1),
(@p64, @p65, @p66, @p67, @p68, @p69, @p70, @p71, @p72, @p73, @p74, @p75, @p76, @p77, @p78, @p79, @p80, @p81, @p82, @p83, @p84, @p85, @p86, @p87, @p88, @p89, @p90, @p91, @p92, @p93, 2),
(@p94, @p95, @p96, @p97, @p98, @p99, @p100, @p101, @p102, @p103, @p104, @p105, @p106, @p107, @p108, @p109, @p110, @p111, @p112, @p113, @p114, @p115, @p116, @p117, @p118, @p119, @p120, @p121, @p122, @p123, 3),
(@p124, @p125, @p126, @p127, @p128, @p129, @p130, @p131, @p132, @p133, @p134, @p135, @p136, @p137, @p138, @p139, @p140, @p141, @p142, @p143, @p144, @p145, @p146, @p147, @p148, @p149, @p150, @p151, @p152, @p153, 4)) AS i ([CapitalExpenditures], [CashflowFromFinancing], [CashflowFromInvestment], [ChangeInCashAndCashEquivalents], [ChangeInExchangeRate], [ChangeInInventory], [ChangeInOperatingAssets], [ChangeInOperatingLiabilities], [ChangeInReceivables], [DepreciationDepletionAndAmortization], [DividendPayout], [DividendPayoutCommonStock], [DividendPayoutPreferredStock], [FiscalDateEnding], [NetIncome], [OperatingCashFlow], [PaymentsForOperatingActivities], [PaymentsForRepurchaseOfCommonStock], [PaymentsForRepurchaseOfEquity], [PaymentsForRepurchaseOfPreferredStock], [ProceedsFromIssuanceOfCommonStock], [ProceedsFromIssuanceOfLongTermDebtAndCapitalSecuritiesNet], [ProceedsFromIssuanceOfPreferredStock], [ProceedsFromOperatingActivities], [ProceedsFromRepaymentsOfShortTermDebt], [ProceedsFromRepurchaseOfEquity], [ProceedsFromSaleOfTreasuryStock], [ProfitLoss], [ReportedCurrency], [Symbol], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([CapitalExpenditures], [CashflowFromFinancing], [CashflowFromInvestment], [ChangeInCashAndCashEquivalents], [ChangeInExchangeRate], [ChangeInInventory], [ChangeInOperatingAssets], [ChangeInOperatingLiabilities], [ChangeInReceivables], [DepreciationDepletionAndAmortization], [DividendPayout], [DividendPayoutCommonStock], [DividendPayoutPreferredStock], [FiscalDateEnding], [NetIncome], [OperatingCashFlow], [PaymentsForOperatingActivities], [PaymentsForRepurchaseOfCommonStock], [PaymentsForRepurchaseOfEquity], [PaymentsForRepurchaseOfPreferredStock], [ProceedsFromIssuanceOfCommonStock], [ProceedsFromIssuanceOfLongTermDebtAndCapitalSecuritiesNet], [ProceedsFromIssuanceOfPreferredStock], [ProceedsFromOperatingActivities], [ProceedsFromRepaymentsOfShortTermDebt], [ProceedsFromRepurchaseOfEquity], [ProceedsFromSaleOfTreasuryStock], [ProfitLoss], [ReportedCurrency], [Symbol])
VALUES (i.[CapitalExpenditures], i.[CashflowFromFinancing], i.[CashflowFromInvestment], i.[ChangeInCashAndCashEquivalents], i.[ChangeInExchangeRate], i.[ChangeInInventory], i.[ChangeInOperatingAssets], i.[ChangeInOperatingLiabilities], i.[ChangeInReceivables], i.[DepreciationDepletionAndAmortization], i.[DividendPayout], i.[DividendPayoutCommonStock], i.[DividendPayoutPreferredStock], i.[FiscalDateEnding], i.[NetIncome], i.[OperatingCashFlow], i.[PaymentsForOperatingActivities], i.[PaymentsForRepurchaseOfCommonStock], i.[PaymentsForRepurchaseOfEquity], i.[PaymentsForRepurchaseOfPreferredStock], i.[ProceedsFromIssuanceOfCommonStock], i.[ProceedsFromIssuanceOfLongTermDebtAndCapitalSecuritiesNet], i.[ProceedsFromIssuanceOfPreferredStock], i.[ProceedsFromOperatingActivities], i.[ProceedsFromRepaymentsOfShortTermDebt], i.[ProceedsFromRepurchaseOfEquity], i.[ProceedsFromSaleOfTreasuryStock], i.[ProfitLoss], i.[ReportedCurrency], i.[Symbol])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted0;

SELECT [i].[Id] FROM @inserted0 i
ORDER BY [i].[_Position];

DECLARE @inserted5 TABLE ([Id] int, [_Position] [int]);
MERGE [CashFlowQuarterlyReport] USING (
VALUES (@p154, @p155, @p156, @p157, @p158, @p159, @p160, @p161, @p162, @p163, @p164, @p165, @p166, @p167, @p168, @p169, @p170, @p171, @p172, @p173, @p174, @p175, @p176, @p177, @p178, @p179, @p180, @p181, @p182, @p183, 0),
(@p184, @p185, @p186, @p187, @p188, @p189, @p190, @p191, @p192, @p193, @p194, @p195, @p196, @p197, @p198, @p199, @p200, @p201, @p202, @p203, @p204, @p205, @p206, @p207, @p208, @p209, @p210, @p211, @p212, @p213, 1),
(@p214, @p215, @p216, @p217, @p218, @p219, @p220, @p221, @p222, @p223, @p224, @p225, @p226, @p227, @p228, @p229, @p230, @p231, @p232, @p233, @p234, @p235, @p236, @p237, @p238, @p239, @p240, @p241, @p242, @p243, 2),
(@p244, @p245, @p246, @p247, @p248, @p249, @p250, @p251, @p252, @p253, @p254, @p255, @p256, @p257, @p258, @p259, @p260, @p261, @p262, @p263, @p264, @p265, @p266, @p267, @p268, @p269, @p270, @p271, @p272, @p273, 3),
(@p274, @p275, @p276, @p277, @p278, @p279, @p280, @p281, @p282, @p283, @p284, @p285, @p286, @p287, @p288, @p289, @p290, @p291, @p292, @p293, @p294, @p295, @p296, @p297, @p298, @p299, @p300, @p301, @p302, @p303, 4),
(@p304, @p305, @p306, @p307, @p308, @p309, @p310, @p311, @p312, @p313, @p314, @p315, @p316, @p317, @p318, @p319, @p320, @p321, @p322, @p323, @p324, @p325, @p326, @p327, @p328, @p329, @p330, @p331, @p332, @p333, 5),
(@p334, @p335, @p336, @p337, @p338, @p339, @p340, @p341, @p342, @p343, @p344, @p345, @p346, @p347, @p348, @p349, @p350, @p351, @p352, @p353, @p354, @p355, @p356, @p357, @p358, @p359, @p360, @p361, @p362, @p363, 6),
(@p364, @p365, @p366, @p367, @p368, @p369, @p370, @p371, @p372, @p373, @p374, @p375, @p376, @p377, @p378, @p379, @p380, @p381, @p382, @p383, @p384, @p385, @p386, @p387, @p388, @p389, @p390, @p391, @p392, @p393, 7),
(@p394, @p395, @p396, @p397, @p398, @p399, @p400, @p401, @p402, @p403, @p404, @p405, @p406, @p407, @p408, @p409, @p410, @p411, @p412, @p413, @p414, @p415, @p416, @p417, @p418, @p419, @p420, @p421, @p422, @p423, 8),
(@p424, @p425, @p426, @p427, @p428, @p429, @p430, @p431, @p432, @p433, @p434, @p435, @p436, @p437, @p438, @p439, @p440, @p441, @p442, @p443, @p444, @p445, @p446, @p447, @p448, @p449, @p450, @p451, @p452, @p453, 9),
(@p454, @p455, @p456, @p457, @p458, @p459, @p460, @p461, @p462, @p463, @p464, @p465, @p466, @p467, @p468, @p469, @p470, @p471, @p472, @p473, @p474, @p475, @p476, @p477, @p478, @p479, @p480, @p481, @p482, @p483, 10),
(@p484, @p485, @p486, @p487, @p488, @p489, @p490, @p491, @p492, @p493, @p494, @p495, @p496, @p497, @p498, @p499, @p500, @p501, @p502, @p503, @p504, @p505, @p506, @p507, @p508, @p509, @p510, @p511, @p512, @p513, 11),
(@p514, @p515, @p516, @p517, @p518, @p519, @p520, @p521, @p522, @p523, @p524, @p525, @p526, @p527, @p528, @p529, @p530, @p531, @p532, @p533, @p534, @p535, @p536, @p537, @p538, @p539, @p540, @p541, @p542, @p543, 12),
(@p544, @p545, @p546, @p547, @p548, @p549, @p550, @p551, @p552, @p553, @p554, @p555, @p556, @p557, @p558, @p559, @p560, @p561, @p562, @p563, @p564, @p565, @p566, @p567, @p568, @p569, @p570, @p571, @p572, @p573, 13),
(@p574, @p575, @p576, @p577, @p578, @p579, @p580, @p581, @p582, @p583, @p584, @p585, @p586, @p587, @p588, @p589, @p590, @p591, @p592, @p593, @p594, @p595, @p596, @p597, @p598, @p599, @p600, @p601, @p602, @p603, 14),
(@p604, @p605, @p606, @p607, @p608, @p609, @p610, @p611, @p612, @p613, @p614, @p615, @p616, @p617, @p618, @p619, @p620, @p621, @p622, @p623, @p624, @p625, @p626, @p627, @p628, @p629, @p630, @p631, @p632, @p633, 15),
(@p634, @p635, @p636, @p637, @p638, @p639, @p640, @p641, @p642, @p643, @p644, @p645, @p646, @p647, @p648, @p649, @p650, @p651, @p652, @p653, @p654, @p655, @p656, @p657, @p658, @p659, @p660, @p661, @p662, @p663, 16),
(@p664, @p665, @p666, @p667, @p668, @p669, @p670, @p671, @p672, @p673, @p674, @p675, @p676, @p677, @p678, @p679, @p680, @p681, @p682, @p683, @p684, @p685, @p686, @p687, @p688, @p689, @p690, @p691, @p692, @p693, 17),
(@p694, @p695, @p696, @p697, @p698, @p699, @p700, @p701, @p702, @p703, @p704, @p705, @p706, @p707, @p708, @p709, @p710, @p711, @p712, @p713, @p714, @p715, @p716, @p717, @p718, @p719, @p720, @p721, @p722, @p723, 18),
(@p724, @p725, @p726, @p727, @p728, @p729, @p730, @p731, @p732, @p733, @p734, @p735, @p736, @p737, @p738, @p739, @p740, @p741, @p742, @p743, @p744, @p745, @p746, @p747, @p748, @p749, @p750, @p751, @p752, @p753, 19),
(@p754, @p755, @p756, @p757, @p758, @p759, @p760, @p761, @p762, @p763, @p764, @p765, @p766, @p767, @p768, @p769, @p770, @p771, @p772, @p773, @p774, @p775, @p776, @p777, @p778, @p779, @p780, @p781, @p782, @p783, 20)) AS i ([CapitalExpenditures], [CashflowFromFinancing], [CashflowFromInvestment], [ChangeInCashAndCashEquivalents], [ChangeInExchangeRate], [ChangeInInventory], [ChangeInOperatingAssets], [ChangeInOperatingLiabilities], [ChangeInReceivables], [DepreciationDepletionAndAmortization], [DividendPayout], [DividendPayoutCommonStock], [DividendPayoutPreferredStock], [FiscalDateEnding], [NetIncome], [OperatingCashFlow], [PaymentsForOperatingActivities], [PaymentsForRepurchaseOfCommonStock], [PaymentsForRepurchaseOfEquity], [PaymentsForRepurchaseOfPreferredStock], [ProceedsFromIssuanceOfCommonStock], [ProceedsFromIssuanceOfLongTermDebtAndCapitalSecuritiesNet], [ProceedsFromIssuanceOfPreferredStock], [ProceedsFromOperatingActivities], [ProceedsFromRepaymentsOfShortTermDebt], [ProceedsFromRepurchaseOfEquity], [ProceedsFromSaleOfTreasuryStock], [ProfitLoss], [ReportedCurrency], [Symbol], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([CapitalExpenditures], [CashflowFromFinancing], [CashflowFromInvestment], [ChangeInCashAndCashEquivalents], [ChangeInExchangeRate], [ChangeInInventory], [ChangeInOperatingAssets], [ChangeInOperatingLiabilities], [ChangeInReceivables], [DepreciationDepletionAndAmortization], [DividendPayout], [DividendPayoutCommonStock], [DividendPayoutPreferredStock], [FiscalDateEnding], [NetIncome], [OperatingCashFlow], [PaymentsForOperatingActivities], [PaymentsForRepurchaseOfCommonStock], [PaymentsForRepurchaseOfEquity], [PaymentsForRepurchaseOfPreferredStock], [ProceedsFromIssuanceOfCommonStock], [ProceedsFromIssuanceOfLongTermDebtAndCapitalSecuritiesNet], [ProceedsFromIssuanceOfPreferredStock], [ProceedsFromOperatingActivities], [ProceedsFromRepaymentsOfShortTermDebt], [ProceedsFromRepurchaseOfEquity], [ProceedsFromSaleOfTreasuryStock], [ProfitLoss], [ReportedCurrency], [Symbol])
VALUES (i.[CapitalExpenditures], i.[CashflowFromFinancing], i.[CashflowFromInvestment], i.[ChangeInCashAndCashEquivalents], i.[ChangeInExchangeRate], i.[ChangeInInventory], i.[ChangeInOperatingAssets], i.[ChangeInOperatingLiabilities], i.[ChangeInReceivables], i.[DepreciationDepletionAndAmortization], i.[DividendPayout], i.[DividendPayoutCommonStock], i.[DividendPayoutPreferredStock], i.[FiscalDateEnding], i.[NetIncome], i.[OperatingCashFlow], i.[PaymentsForOperatingActivities], i.[PaymentsForRepurchaseOfCommonStock], i.[PaymentsForRepurchaseOfEquity], i.[PaymentsForRepurchaseOfPreferredStock], i.[ProceedsFromIssuanceOfCommonStock], i.[ProceedsFromIssuanceOfLongTermDebtAndCapitalSecuritiesNet], i.[ProceedsFromIssuanceOfPreferredStock], i.[ProceedsFromOperatingActivities], i.[ProceedsFromRepaymentsOfShortTermDebt], i.[ProceedsFromRepurchaseOfEquity], i.[ProceedsFromSaleOfTreasuryStock], i.[ProfitLoss], i.[ReportedCurrency], i.[Symbol])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted5;

SELECT [i].[Id] FROM @inserted5 i
ORDER BY [i].[_Position];
2022-05-12 01:11:14.137 +03:00 [INF] AddOrUpdate run successful.
2022-05-12 01:11:14.207 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.BalanceSheet with Symbol BFAC
2022-05-12 01:11:14.210 +03:00 [INF] Generating URI for BALANCE_SHEET with params: symbol: BFAC
2022-05-12 01:11:14.211 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BFAC
2022-05-12 01:11:14.211 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BFAC".
2022-05-12 01:11:14.600 +03:00 [INF] Response has success status code
2022-05-12 01:11:14.600 +03:00 [INF] Trying to deserialize response.
2022-05-12 01:11:14.601 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 01:11:14.612 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__symbol_0
2022-05-12 01:11:14.613 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.BalanceSheet.
2022-05-12 01:11:14.622 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [b].[Symbol], [b].[ExistInApi], [b].[LastApiRefresh], [b].[LastLocalRefresh]
FROM [BalanceSheets] AS [b]
WHERE [b].[Symbol] = @__entity_Symbol_0
2022-05-12 01:11:14.624 +03:00 [INF] Entity does not exist. Adding to DB.
2022-05-12 01:11:14.636 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = Boolean), @p2='?' (DbType = DateTime2), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [BalanceSheets] ([Symbol], [ExistInApi], [LastApiRefresh], [LastLocalRefresh])
VALUES (@p0, @p1, @p2, @p3);
2022-05-12 01:11:14.652 +03:00 [INF] Executed DbCommand (15ms) [Parameters=[@p4='?' (DbType = Int64), @p5='?' (DbType = Double), @p6='?' (DbType = Double), @p7='?' (DbType = Double), @p8='?' (DbType = Double), @p9='?' (DbType = Int64), @p10='?' (DbType = Int64), @p11='?' (DbType = Int64), @p12='?' (DbType = Double), @p13='?' (DbType = Int64), @p14='?' (DbType = Int64), @p15='?' (DbType = DateTime2), @p16='?' (DbType = Double), @p17='?' (DbType = Double), @p18='?' (DbType = Double), @p19='?' (DbType = Double), @p20='?' (DbType = Int64), @p21='?' (DbType = Double), @p22='?' (DbType = Int64), @p23='?' (DbType = Double), @p24='?' (DbType = Double), @p25='?' (DbType = Double), @p26='?' (DbType = Double), @p27='?' (DbType = Double), @p28='?' (DbType = Int64), @p29='?' (Size = 4000), @p30='?' (DbType = Double), @p31='?' (DbType = Double), @p32='?' (DbType = Double), @p33='?' (DbType = Double), @p34='?' (Size = 450), @p35='?' (DbType = Double), @p36='?' (DbType = Double), @p37='?' (DbType = Double), @p38='?' (DbType = Double), @p39='?' (DbType = Double), @p40='?' (DbType = Double), @p41='?' (DbType = Double), @p42='?' (DbType = Double), @p43='?' (DbType = Int64), @p44='?' (DbType = Double), @p45='?' (DbType = Double), @p46='?' (DbType = Double), @p47='?' (DbType = Double), @p48='?' (DbType = Int64), @p49='?' (DbType = Int64), @p50='?' (DbType = Int64), @p51='?' (DbType = Double), @p52='?' (DbType = Int64), @p53='?' (DbType = Int64), @p54='?' (DbType = DateTime2), @p55='?' (DbType = Double), @p56='?' (DbType = Double), @p57='?' (DbType = Double), @p58='?' (DbType = Double), @p59='?' (DbType = Int64), @p60='?' (DbType = Double), @p61='?' (DbType = Int64), @p62='?' (DbType = Double), @p63='?' (DbType = Double), @p64='?' (DbType = Double), @p65='?' (DbType = Double), @p66='?' (DbType = Double), @p67='?' (DbType = Int64), @p68='?' (Size = 4000), @p69='?' (DbType = Double), @p70='?' (DbType = Double), @p71='?' (DbType = Double), @p72='?' (DbType = Double), @p73='?' (Size = 450), @p74='?' (DbType = Double), @p75='?' (DbType = Double), @p76='?' (DbType = Double), @p77='?' (DbType = Double), @p78='?' (DbType = Double), @p79='?' (DbType = Double), @p80='?' (DbType = Double), @p81='?' (DbType = Double), @p82='?' (DbType = Int64), @p83='?' (DbType = Double), @p84='?' (DbType = Double), @p85='?' (DbType = Double), @p86='?' (DbType = Double), @p87='?' (DbType = Int64), @p88='?' (DbType = Int64), @p89='?' (DbType = Int64), @p90='?' (DbType = Double), @p91='?' (DbType = Int64), @p92='?' (DbType = Int64), @p93='?' (DbType = DateTime2), @p94='?' (DbType = Double), @p95='?' (DbType = Double), @p96='?' (DbType = Double), @p97='?' (DbType = Double), @p98='?' (DbType = Int64), @p99='?' (DbType = Double), @p100='?' (DbType = Int64), @p101='?' (DbType = Double), @p102='?' (DbType = Double), @p103='?' (DbType = Double), @p104='?' (DbType = Double), @p105='?' (DbType = Double), @p106='?' (DbType = Int64), @p107='?' (Size = 4000), @p108='?' (DbType = Double), @p109='?' (DbType = Double), @p110='?' (DbType = Double), @p111='?' (DbType = Double), @p112='?' (Size = 450), @p113='?' (DbType = Double), @p114='?' (DbType = Double), @p115='?' (DbType = Double), @p116='?' (DbType = Double), @p117='?' (DbType = Double), @p118='?' (DbType = Double), @p119='?' (DbType = Double), @p120='?' (DbType = Double), @p121='?' (DbType = Int64), @p122='?' (DbType = Double), @p123='?' (DbType = Double), @p124='?' (DbType = Double), @p125='?' (DbType = Double), @p126='?' (DbType = Int64), @p127='?' (DbType = Int64), @p128='?' (DbType = Int64), @p129='?' (DbType = Double), @p130='?' (DbType = Int64), @p131='?' (DbType = Int64), @p132='?' (DbType = DateTime2), @p133='?' (DbType = Double), @p134='?' (DbType = Double), @p135='?' (DbType = Double), @p136='?' (DbType = Double), @p137='?' (DbType = Int64), @p138='?' (DbType = Double), @p139='?' (DbType = Int64), @p140='?' (DbType = Double), @p141='?' (DbType = Double), @p142='?' (DbType = Double), @p143='?' (DbType = Double), @p144='?' (DbType = Double), @p145='?' (DbType = Int64), @p146='?' (Size = 4000), @p147='?' (DbType = Double), @p148='?' (DbType = Double), @p149='?' (DbType = Double), @p150='?' (DbType = Double), @p151='?' (Size = 450), @p152='?' (DbType = Double), @p153='?' (DbType = Double), @p154='?' (DbType = Double), @p155='?' (DbType = Double), @p156='?' (DbType = Double), @p157='?' (DbType = Double), @p158='?' (DbType = Double), @p159='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
DECLARE @inserted0 TABLE ([Id] int, [_Position] [int]);
MERGE [BalanceSheetAnnualReport] USING (
VALUES (@p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21, @p22, @p23, @p24, @p25, @p26, @p27, @p28, @p29, @p30, @p31, @p32, @p33, @p34, @p35, @p36, @p37, @p38, @p39, @p40, @p41, @p42, 0),
(@p43, @p44, @p45, @p46, @p47, @p48, @p49, @p50, @p51, @p52, @p53, @p54, @p55, @p56, @p57, @p58, @p59, @p60, @p61, @p62, @p63, @p64, @p65, @p66, @p67, @p68, @p69, @p70, @p71, @p72, @p73, @p74, @p75, @p76, @p77, @p78, @p79, @p80, @p81, 1)) AS i ([AccumulatedDepreciationAmortizationPPE], [CapitalLeaseObligations], [CashAndCashEquivalentsAtCarryingValue], [CashAndShortTermInvestments], [CommonStock], [CommonStockSharesOutstanding], [CurrentAccountsPayable], [CurrentDebt], [CurrentLongTermDebt], [CurrentNetReceivables], [DeferredRevenue], [FiscalDateEnding], [Goodwill], [IntangibleAssets], [IntangibleAssetsExcludingGoodwill], [Inventory], [Investments], [LongTermDebt], [LongTermDebtNoncurrent], [LongTermInvestments], [OtherCurrentAssets], [OtherCurrentLiabilities], [OtherNonCurrentAssets], [OtherNonCurrentLiabilities], [PropertyPlantEquipment], [ReportedCurrency], [RetainedEarnings], [ShortLongTermDebtTotal], [ShortTermDebt], [ShortTermInvestments], [Symbol], [TotalAssets], [TotalCurrentAssets], [TotalCurrentLiabilities], [TotalLiabilities], [TotalNonCurrentAssets], [TotalNonCurrentLiabilities], [TotalShareholderEquity], [TreasuryStock], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([AccumulatedDepreciationAmortizationPPE], [CapitalLeaseObligations], [CashAndCashEquivalentsAtCarryingValue], [CashAndShortTermInvestments], [CommonStock], [CommonStockSharesOutstanding], [CurrentAccountsPayable], [CurrentDebt], [CurrentLongTermDebt], [CurrentNetReceivables], [DeferredRevenue], [FiscalDateEnding], [Goodwill], [IntangibleAssets], [IntangibleAssetsExcludingGoodwill], [Inventory], [Investments], [LongTermDebt], [LongTermDebtNoncurrent], [LongTermInvestments], [OtherCurrentAssets], [OtherCurrentLiabilities], [OtherNonCurrentAssets], [OtherNonCurrentLiabilities], [PropertyPlantEquipment], [ReportedCurrency], [RetainedEarnings], [ShortLongTermDebtTotal], [ShortTermDebt], [ShortTermInvestments], [Symbol], [TotalAssets], [TotalCurrentAssets], [TotalCurrentLiabilities], [TotalLiabilities], [TotalNonCurrentAssets], [TotalNonCurrentLiabilities], [TotalShareholderEquity], [TreasuryStock])
VALUES (i.[AccumulatedDepreciationAmortizationPPE], i.[CapitalLeaseObligations], i.[CashAndCashEquivalentsAtCarryingValue], i.[CashAndShortTermInvestments], i.[CommonStock], i.[CommonStockSharesOutstanding], i.[CurrentAccountsPayable], i.[CurrentDebt], i.[CurrentLongTermDebt], i.[CurrentNetReceivables], i.[DeferredRevenue], i.[FiscalDateEnding], i.[Goodwill], i.[IntangibleAssets], i.[IntangibleAssetsExcludingGoodwill], i.[Inventory], i.[Investments], i.[LongTermDebt], i.[LongTermDebtNoncurrent], i.[LongTermInvestments], i.[OtherCurrentAssets], i.[OtherCurrentLiabilities], i.[OtherNonCurrentAssets], i.[OtherNonCurrentLiabilities], i.[PropertyPlantEquipment], i.[ReportedCurrency], i.[RetainedEarnings], i.[ShortLongTermDebtTotal], i.[ShortTermDebt], i.[ShortTermInvestments], i.[Symbol], i.[TotalAssets], i.[TotalCurrentAssets], i.[TotalCurrentLiabilities], i.[TotalLiabilities], i.[TotalNonCurrentAssets], i.[TotalNonCurrentLiabilities], i.[TotalShareholderEquity], i.[TreasuryStock])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted0;

SELECT [i].[Id] FROM @inserted0 i
ORDER BY [i].[_Position];

DECLARE @inserted2 TABLE ([Id] int, [_Position] [int]);
MERGE [BalanceSheetQuarterlyReports] USING (
VALUES (@p82, @p83, @p84, @p85, @p86, @p87, @p88, @p89, @p90, @p91, @p92, @p93, @p94, @p95, @p96, @p97, @p98, @p99, @p100, @p101, @p102, @p103, @p104, @p105, @p106, @p107, @p108, @p109, @p110, @p111, @p112, @p113, @p114, @p115, @p116, @p117, @p118, @p119, @p120, 0),
(@p121, @p122, @p123, @p124, @p125, @p126, @p127, @p128, @p129, @p130, @p131, @p132, @p133, @p134, @p135, @p136, @p137, @p138, @p139, @p140, @p141, @p142, @p143, @p144, @p145, @p146, @p147, @p148, @p149, @p150, @p151, @p152, @p153, @p154, @p155, @p156, @p157, @p158, @p159, 1)) AS i ([AccumulatedDepreciationAmortizationPPE], [CapitalLeaseObligations], [CashAndCashEquivalentsAtCarryingValue], [CashAndShortTermInvestments], [CommonStock], [CommonStockSharesOutstanding], [CurrentAccountsPayable], [CurrentDebt], [CurrentLongTermDebt], [CurrentNetReceivables], [DeferredRevenue], [FiscalDateEnding], [Goodwill], [IntangibleAssets], [IntangibleAssetsExcludingGoodwill], [Inventory], [Investments], [LongTermDebt], [LongTermDebtNoncurrent], [LongTermInvestments], [OtherCurrentAssets], [OtherCurrentLiabilities], [OtherNonCurrentAssets], [OtherNonCurrentLiabilities], [PropertyPlantEquipment], [ReportedCurrency], [RetainedEarnings], [ShortLongTermDebtTotal], [ShortTermDebt], [ShortTermInvestments], [Symbol], [TotalAssets], [TotalCurrentAssets], [TotalCurrentLiabilities], [TotalLiabilities], [TotalNonCurrentAssets], [TotalNonCurrentLiabilities], [TotalShareholderEquity], [TreasuryStock], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([AccumulatedDepreciationAmortizationPPE], [CapitalLeaseObligations], [CashAndCashEquivalentsAtCarryingValue], [CashAndShortTermInvestments], [CommonStock], [CommonStockSharesOutstanding], [CurrentAccountsPayable], [CurrentDebt], [CurrentLongTermDebt], [CurrentNetReceivables], [DeferredRevenue], [FiscalDateEnding], [Goodwill], [IntangibleAssets], [IntangibleAssetsExcludingGoodwill], [Inventory], [Investments], [LongTermDebt], [LongTermDebtNoncurrent], [LongTermInvestments], [OtherCurrentAssets], [OtherCurrentLiabilities], [OtherNonCurrentAssets], [OtherNonCurrentLiabilities], [PropertyPlantEquipment], [ReportedCurrency], [RetainedEarnings], [ShortLongTermDebtTotal], [ShortTermDebt], [ShortTermInvestments], [Symbol], [TotalAssets], [TotalCurrentAssets], [TotalCurrentLiabilities], [TotalLiabilities], [TotalNonCurrentAssets], [TotalNonCurrentLiabilities], [TotalShareholderEquity], [TreasuryStock])
VALUES (i.[AccumulatedDepreciationAmortizationPPE], i.[CapitalLeaseObligations], i.[CashAndCashEquivalentsAtCarryingValue], i.[CashAndShortTermInvestments], i.[CommonStock], i.[CommonStockSharesOutstanding], i.[CurrentAccountsPayable], i.[CurrentDebt], i.[CurrentLongTermDebt], i.[CurrentNetReceivables], i.[DeferredRevenue], i.[FiscalDateEnding], i.[Goodwill], i.[IntangibleAssets], i.[IntangibleAssetsExcludingGoodwill], i.[Inventory], i.[Investments], i.[LongTermDebt], i.[LongTermDebtNoncurrent], i.[LongTermInvestments], i.[OtherCurrentAssets], i.[OtherCurrentLiabilities], i.[OtherNonCurrentAssets], i.[OtherNonCurrentLiabilities], i.[PropertyPlantEquipment], i.[ReportedCurrency], i.[RetainedEarnings], i.[ShortLongTermDebtTotal], i.[ShortTermDebt], i.[ShortTermInvestments], i.[Symbol], i.[TotalAssets], i.[TotalCurrentAssets], i.[TotalCurrentLiabilities], i.[TotalLiabilities], i.[TotalNonCurrentAssets], i.[TotalNonCurrentLiabilities], i.[TotalShareholderEquity], i.[TreasuryStock])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted2;

SELECT [i].[Id] FROM @inserted2 i
ORDER BY [i].[_Position];
2022-05-12 01:11:14.661 +03:00 [INF] AddOrUpdate run successful.
2022-05-12 01:11:28.569 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CompanyOverview with Symbol BKSY
2022-05-12 01:11:28.573 +03:00 [INF] Generating URI for OVERVIEW with params: symbol: BKSY
2022-05-12 01:11:28.573 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=OVERVIEW&symbol=BKSY
2022-05-12 01:11:28.574 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=OVERVIEW&symbol=BKSY".
2022-05-12 01:11:30.848 +03:00 [INF] Response has success status code
2022-05-12 01:11:30.848 +03:00 [INF] Trying to deserialize response.
2022-05-12 01:11:30.849 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.CompanyOverview.
2022-05-12 01:11:30.850 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 01:11:30.861 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__entity_Symbol_0
2022-05-12 01:11:30.862 +03:00 [INF] Entity already exist. Updating entity DB.
2022-05-12 01:11:30.906 +03:00 [INF] Executed DbCommand (17ms) [Parameters=[@p20='?' (Size = 450), @p0='?' (DbType = Double), @p1='?' (DbType = Double), @p2='?' (DbType = Double), @p3='?' (DbType = Double), @p4='?' (DbType = Double), @p5='?' (DbType = Boolean), @p6='?' (DbType = Int64), @p7='?' (DbType = DateTime2), @p8='?' (DbType = Int64), @p9='?' (DbType = Double), @p10='?' (DbType = Double), @p11='?' (DbType = Double), @p12='?' (DbType = Double), @p13='?' (DbType = Double), @p14='?' (DbType = Double), @p15='?' (DbType = Double), @p16='?' (DbType = Int64), @p17='?' (DbType = Double), @p18='?' (DbType = Double), @p19='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [CompanyOverviews] SET [Beta] = @p0, [BookValue] = @p1, [DilutedEPSTTM] = @p2, [EPS] = @p3, [EVToRevenue] = @p4, [ExistInApi] = @p5, [GrossProfitTTM] = @p6, [LastLocalRefresh] = @p7, [MarketCapitalization] = @p8, [OperatingMarginTTM] = @p9, [PriceToBookRatio] = @p10, [PriceToSalesRatioTTM] = @p11, [QuarterlyRevenueGrowthYOY] = @p12, [ReturnOnAssetsTTM] = @p13, [ReturnOnEquityTTM] = @p14, [RevenuePerShareTTM] = @p15, [RevenueTTM] = @p16, [_200DayMovingAverage] = @p17, [_50DayMovingAverage] = @p18, [_52WeekLow] = @p19
WHERE [Symbol] = @p20;
SELECT @@ROWCOUNT;
2022-05-12 01:11:30.916 +03:00 [INF] AddOrUpdate run successful.
2022-05-12 01:11:36.675 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.Earnings with Symbol AXON
2022-05-12 01:11:36.677 +03:00 [INF] Generating URI for EARNINGS with params: symbol: AXON
2022-05-12 01:11:36.677 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=EARNINGS&symbol=AXON
2022-05-12 01:11:36.678 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=EARNINGS&symbol=AXON".
2022-05-12 01:11:38.603 +03:00 [INF] Response has success status code
2022-05-12 01:11:38.604 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.Earnings for symbol AXON
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyEarnings(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 142
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:11:40.049 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.IncomeStatement with Symbol AVCTW
2022-05-12 01:11:40.050 +03:00 [INF] Generating URI for INCOME_STATEMENT with params: symbol: AVCTW
2022-05-12 01:11:40.051 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=INCOME_STATEMENT&symbol=AVCTW
2022-05-12 01:11:40.051 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=INCOME_STATEMENT&symbol=AVCTW".
2022-05-12 01:11:42.408 +03:00 [INF] Response has success status code
2022-05-12 01:11:42.408 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.IncomeStatement for symbol AVCTW
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetIncomeStatement(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 69
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:11:44.140 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CashFlow with Symbol AVAN-U
2022-05-12 01:11:44.141 +03:00 [INF] Generating URI for CASH_FLOW with params: symbol: AVAN-U
2022-05-12 01:11:44.142 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=CASH_FLOW&symbol=AVAN-U
2022-05-12 01:11:44.143 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=CASH_FLOW&symbol=AVAN-U".
2022-05-12 01:11:44.676 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.BalanceSheet with Symbol BFAC-U
2022-05-12 01:11:44.677 +03:00 [INF] Generating URI for BALANCE_SHEET with params: symbol: BFAC-U
2022-05-12 01:11:44.678 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BFAC-U
2022-05-12 01:11:44.678 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BFAC-U".
2022-05-12 01:11:46.863 +03:00 [INF] Response has success status code
2022-05-12 01:11:46.864 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.CashFlow for symbol AVAN-U
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCashFlow(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 96
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:11:47.262 +03:00 [INF] Response has success status code
2022-05-12 01:11:47.262 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.BalanceSheet for symbol BFAC-U
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetBalanceSheet(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 82
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:12:00.929 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CompanyOverview with Symbol BKSY-WS
2022-05-12 01:12:00.931 +03:00 [INF] Generating URI for OVERVIEW with params: symbol: BKSY-WS
2022-05-12 01:12:00.931 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=OVERVIEW&symbol=BKSY-WS
2022-05-12 01:12:00.932 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=OVERVIEW&symbol=BKSY-WS".
2022-05-12 01:12:07.016 +03:00 [INF] Response has success status code
2022-05-12 01:12:07.017 +03:00 [INF] Trying to deserialize response.
2022-05-12 01:12:07.017 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.CompanyOverview.
2022-05-12 01:12:07.018 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 01:12:07.028 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__entity_Symbol_0
2022-05-12 01:12:07.029 +03:00 [INF] Entity does not exist. Adding to DB.
2022-05-12 01:12:07.047 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (Size = 4000), @p2='?' (DbType = Double), @p3='?' (Size = 4000), @p4='?' (DbType = Double), @p5='?' (DbType = Double), @p6='?' (DbType = Int64), @p7='?' (Size = 4000), @p8='?' (Size = 4000), @p9='?' (Size = 4000), @p10='?' (DbType = Double), @p11='?' (DbType = DateTime2), @p12='?' (DbType = Double), @p13='?' (DbType = Double), @p14='?' (DbType = Int64), @p15='?' (DbType = Double), @p16='?' (DbType = Double), @p17='?' (DbType = Double), @p18='?' (DbType = DateTime2), @p19='?' (Size = 4000), @p20='?' (DbType = Boolean), @p21='?' (Size = 4000), @p22='?' (DbType = Double), @p23='?' (DbType = Int64), @p24='?' (Size = 4000), @p25='?' (DbType = DateTime2), @p26='?' (DbType = DateTime2), @p27='?' (DbType = DateTime2), @p28='?' (DbType = Int64), @p29='?' (Size = 4000), @p30='?' (DbType = Double), @p31='?' (DbType = Double), @p32='?' (DbType = Double), @p33='?' (DbType = Double), @p34='?' (DbType = Double), @p35='?' (DbType = Double), @p36='?' (DbType = Double), @p37='?' (DbType = Double), @p38='?' (DbType = Double), @p39='?' (DbType = Double), @p40='?' (DbType = Double), @p41='?' (DbType = Int64), @p42='?' (Size = 4000), @p43='?' (DbType = Int64), @p44='?' (DbType = Double), @p45='?' (DbType = Double), @p46='?' (DbType = Double), @p47='?' (DbType = Double), @p48='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [CompanyOverviews] ([Symbol], [Address], [AnalystTargetPrice], [AssetType], [Beta], [BookValue], [CIK], [Country], [Currency], [Description], [DilutedEPSTTM], [DividendDate], [DividendPerShare], [DividendYield], [EBITDA], [EPS], [EVToEBITDA], [EVToRevenue], [ExDividendDate], [Exchange], [ExistInApi], [FiscalYearEnd], [ForwardPE], [GrossProfitTTM], [Industry], [LastApiRefresh], [LastLocalRefresh], [LatestQuarter], [MarketCapitalization], [Name], [OperatingMarginTTM], [PEGRatio], [PERatio], [PriceToBookRatio], [PriceToSalesRatioTTM], [ProfitMargin], [QuarterlyEarningsGrowthYOY], [QuarterlyRevenueGrowthYOY], [ReturnOnAssetsTTM], [ReturnOnEquityTTM], [RevenuePerShareTTM], [RevenueTTM], [Sector], [SharesOutstanding], [TrailingPE], [_200DayMovingAverage], [_50DayMovingAverage], [_52WeekHigh], [_52WeekLow])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21, @p22, @p23, @p24, @p25, @p26, @p27, @p28, @p29, @p30, @p31, @p32, @p33, @p34, @p35, @p36, @p37, @p38, @p39, @p40, @p41, @p42, @p43, @p44, @p45, @p46, @p47, @p48);
2022-05-12 01:12:07.053 +03:00 [INF] AddOrUpdate run successful.
2022-05-12 01:12:08.612 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.Earnings with Symbol AXP
2022-05-12 01:12:08.613 +03:00 [INF] Generating URI for EARNINGS with params: symbol: AXP
2022-05-12 01:12:08.614 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=EARNINGS&symbol=AXP
2022-05-12 01:12:08.614 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=EARNINGS&symbol=AXP".
2022-05-12 01:12:12.425 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.IncomeStatement with Symbol AVD
2022-05-12 01:12:12.426 +03:00 [INF] Generating URI for INCOME_STATEMENT with params: symbol: AVD
2022-05-12 01:12:12.427 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=INCOME_STATEMENT&symbol=AVD
2022-05-12 01:12:12.427 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=INCOME_STATEMENT&symbol=AVD".
2022-05-12 01:12:16.166 +03:00 [INF] Response has success status code
2022-05-12 01:12:16.167 +03:00 [INF] Trying to deserialize response.
2022-05-12 01:12:16.168 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 01:12:16.178 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__symbol_0
2022-05-12 01:12:16.180 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.IncomeStatement.
2022-05-12 01:12:16.188 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [i].[Symbol], [i].[ExistInApi], [i].[LastApiRefresh], [i].[LastLocalRefresh]
FROM [IncomeStatements] AS [i]
WHERE [i].[Symbol] = @__entity_Symbol_0
2022-05-12 01:12:16.189 +03:00 [INF] Entity does not exist. Adding to DB.
2022-05-12 01:12:16.203 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = Boolean), @p2='?' (DbType = DateTime2), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [IncomeStatements] ([Symbol], [ExistInApi], [LastApiRefresh], [LastLocalRefresh])
VALUES (@p0, @p1, @p2, @p3);
2022-05-12 01:12:16.247 +03:00 [INF] Executed DbCommand (42ms) [Parameters=[@p4='?' (DbType = Int64), @p5='?' (DbType = Double), @p6='?' (DbType = Double), @p7='?' (DbType = Int64), @p8='?' (DbType = Int64), @p9='?' (DbType = Int64), @p10='?' (DbType = Double), @p11='?' (DbType = DateTime2), @p12='?' (DbType = Double), @p13='?' (DbType = Double), @p14='?' (DbType = Int64), @p15='?' (DbType = Int64), @p16='?' (DbType = Double), @p17='?' (DbType = Int64), @p18='?' (DbType = Int64), @p19='?' (DbType = Double), @p20='?' (DbType = Double), @p21='?' (DbType = Double), @p22='?' (DbType = Int64), @p23='?' (DbType = Double), @p24='?' (DbType = Double), @p25='?' (DbType = Int64), @p26='?' (Size = 4000), @p27='?' (DbType = Int64), @p28='?' (DbType = Double), @p29='?' (Size = 450), @p30='?' (DbType = Int64), @p31='?' (DbType = Int64), @p32='?' (DbType = Double), @p33='?' (DbType = Double), @p34='?' (DbType = Int64), @p35='?' (DbType = Int64), @p36='?' (DbType = Int64), @p37='?' (DbType = Double), @p38='?' (DbType = DateTime2), @p39='?' (DbType = Double), @p40='?' (DbType = Double), @p41='?' (DbType = Int64), @p42='?' (DbType = Int64), @p43='?' (DbType = Double), @p44='?' (DbType = Int64), @p45='?' (DbType = Int64), @p46='?' (DbType = Double), @p47='?' (DbType = Double), @p48='?' (DbType = Double), @p49='?' (DbType = Int64), @p50='?' (DbType = Double), @p51='?' (DbType = Double), @p52='?' (DbType = Int64), @p53='?' (Size = 4000), @p54='?' (DbType = Int64), @p55='?' (DbType = Double), @p56='?' (Size = 450), @p57='?' (DbType = Int64), @p58='?' (DbType = Int64), @p59='?' (DbType = Double), @p60='?' (DbType = Double), @p61='?' (DbType = Int64), @p62='?' (DbType = Int64), @p63='?' (DbType = Int64), @p64='?' (DbType = Double), @p65='?' (DbType = DateTime2), @p66='?' (DbType = Double), @p67='?' (DbType = Double), @p68='?' (DbType = Int64), @p69='?' (DbType = Int64), @p70='?' (DbType = Double), @p71='?' (DbType = Int64), @p72='?' (DbType = Int64), @p73='?' (DbType = Double), @p74='?' (DbType = Double), @p75='?' (DbType = Double), @p76='?' (DbType = Int64), @p77='?' (DbType = Double), @p78='?' (DbType = Double), @p79='?' (DbType = Int64), @p80='?' (Size = 4000), @p81='?' (DbType = Int64), @p82='?' (DbType = Double), @p83='?' (Size = 450), @p84='?' (DbType = Int64), @p85='?' (DbType = Int64), @p86='?' (DbType = Double), @p87='?' (DbType = Double), @p88='?' (DbType = Int64), @p89='?' (DbType = Int64), @p90='?' (DbType = Int64), @p91='?' (DbType = Double), @p92='?' (DbType = DateTime2), @p93='?' (DbType = Double), @p94='?' (DbType = Double), @p95='?' (DbType = Int64), @p96='?' (DbType = Int64), @p97='?' (DbType = Double), @p98='?' (DbType = Int64), @p99='?' (DbType = Int64), @p100='?' (DbType = Double), @p101='?' (DbType = Double), @p102='?' (DbType = Double), @p103='?' (DbType = Int64), @p104='?' (DbType = Double), @p105='?' (DbType = Double), @p106='?' (DbType = Int64), @p107='?' (Size = 4000), @p108='?' (DbType = Int64), @p109='?' (DbType = Double), @p110='?' (Size = 450), @p111='?' (DbType = Int64), @p112='?' (DbType = Int64), @p113='?' (DbType = Double), @p114='?' (DbType = Double), @p115='?' (DbType = Int64), @p116='?' (DbType = Int64), @p117='?' (DbType = Int64), @p118='?' (DbType = Double), @p119='?' (DbType = DateTime2), @p120='?' (DbType = Double), @p121='?' (DbType = Double), @p122='?' (DbType = Int64), @p123='?' (DbType = Int64), @p124='?' (DbType = Double), @p125='?' (DbType = Int64), @p126='?' (DbType = Int64), @p127='?' (DbType = Double), @p128='?' (DbType = Double), @p129='?' (DbType = Double), @p130='?' (DbType = Int64), @p131='?' (DbType = Double), @p132='?' (DbType = Double), @p133='?' (DbType = Int64), @p134='?' (Size = 4000), @p135='?' (DbType = Int64), @p136='?' (DbType = Double), @p137='?' (Size = 450), @p138='?' (DbType = Int64), @p139='?' (DbType = Int64), @p140='?' (DbType = Double), @p141='?' (DbType = Double), @p142='?' (DbType = Int64), @p143='?' (DbType = Int64), @p144='?' (DbType = Int64), @p145='?' (DbType = Double), @p146='?' (DbType = DateTime2), @p147='?' (DbType = Double), @p148='?' (DbType = Double), @p149='?' (DbType = Int64), @p150='?' (DbType = Int64), @p151='?' (DbType = Double), @p152='?' (DbType = Int64), @p153='?' (DbType = Int64), @p154='?' (DbType = Double), @p155='?' (DbType = Double), @p156='?' (DbType = Double), @p157='?' (DbType = Int64), @p158='?' (DbType = Double), @p159='?' (DbType = Double), @p160='?' (DbType = Int64), @p161='?' (Size = 4000), @p162='?' (DbType = Int64), @p163='?' (DbType = Double), @p164='?' (Size = 450), @p165='?' (DbType = Int64), @p166='?' (DbType = Int64), @p167='?' (DbType = Double), @p168='?' (DbType = Double), @p169='?' (DbType = Int64), @p170='?' (DbType = Int64), @p171='?' (DbType = Int64), @p172='?' (DbType = Double), @p173='?' (DbType = DateTime2), @p174='?' (DbType = Double), @p175='?' (DbType = Double), @p176='?' (DbType = Int64), @p177='?' (DbType = Int64), @p178='?' (DbType = Double), @p179='?' (DbType = Int64), @p180='?' (DbType = Int64), @p181='?' (DbType = Double), @p182='?' (DbType = Double), @p183='?' (DbType = Double), @p184='?' (DbType = Int64), @p185='?' (DbType = Double), @p186='?' (DbType = Double), @p187='?' (DbType = Int64), @p188='?' (Size = 4000), @p189='?' (DbType = Int64), @p190='?' (DbType = Double), @p191='?' (Size = 450), @p192='?' (DbType = Int64), @p193='?' (DbType = Int64), @p194='?' (DbType = Double), @p195='?' (DbType = Double), @p196='?' (DbType = Int64), @p197='?' (DbType = Int64), @p198='?' (DbType = Int64), @p199='?' (DbType = Double), @p200='?' (DbType = DateTime2), @p201='?' (DbType = Double), @p202='?' (DbType = Double), @p203='?' (DbType = Int64), @p204='?' (DbType = Int64), @p205='?' (DbType = Double), @p206='?' (DbType = Int64), @p207='?' (DbType = Int64), @p208='?' (DbType = Double), @p209='?' (DbType = Double), @p210='?' (DbType = Double), @p211='?' (DbType = Int64), @p212='?' (DbType = Double), @p213='?' (DbType = Double), @p214='?' (DbType = Int64), @p215='?' (Size = 4000), @p216='?' (DbType = Int64), @p217='?' (DbType = Double), @p218='?' (Size = 450), @p219='?' (DbType = Int64), @p220='?' (DbType = Int64), @p221='?' (DbType = Double), @p222='?' (DbType = Double), @p223='?' (DbType = Int64), @p224='?' (DbType = Int64), @p225='?' (DbType = Int64), @p226='?' (DbType = Double), @p227='?' (DbType = DateTime2), @p228='?' (DbType = Double), @p229='?' (DbType = Double), @p230='?' (DbType = Int64), @p231='?' (DbType = Int64), @p232='?' (DbType = Double), @p233='?' (DbType = Int64), @p234='?' (DbType = Int64), @p235='?' (DbType = Double), @p236='?' (DbType = Double), @p237='?' (DbType = Double), @p238='?' (DbType = Int64), @p239='?' (DbType = Double), @p240='?' (DbType = Double), @p241='?' (DbType = Int64), @p242='?' (Size = 4000), @p243='?' (DbType = Int64), @p244='?' (DbType = Double), @p245='?' (Size = 450), @p246='?' (DbType = Int64), @p247='?' (DbType = Int64), @p248='?' (DbType = Double), @p249='?' (DbType = Double), @p250='?' (DbType = Int64), @p251='?' (DbType = Int64), @p252='?' (DbType = Int64), @p253='?' (DbType = Double), @p254='?' (DbType = DateTime2), @p255='?' (DbType = Double), @p256='?' (DbType = Double), @p257='?' (DbType = Int64), @p258='?' (DbType = Int64), @p259='?' (DbType = Double), @p260='?' (DbType = Int64), @p261='?' (DbType = Int64), @p262='?' (DbType = Double), @p263='?' (DbType = Double), @p264='?' (DbType = Double), @p265='?' (DbType = Int64), @p266='?' (DbType = Double), @p267='?' (DbType = Double), @p268='?' (DbType = Int64), @p269='?' (Size = 4000), @p270='?' (DbType = Int64), @p271='?' (DbType = Double), @p272='?' (Size = 450), @p273='?' (DbType = Int64), @p274='?' (DbType = Int64), @p275='?' (DbType = Double), @p276='?' (DbType = Double), @p277='?' (DbType = Int64), @p278='?' (DbType = Int64), @p279='?' (DbType = Int64), @p280='?' (DbType = Double), @p281='?' (DbType = DateTime2), @p282='?' (DbType = Double), @p283='?' (DbType = Double), @p284='?' (DbType = Int64), @p285='?' (DbType = Int64), @p286='?' (DbType = Double), @p287='?' (DbType = Int64), @p288='?' (DbType = Int64), @p289='?' (DbType = Double), @p290='?' (DbType = Double), @p291='?' (DbType = Double), @p292='?' (DbType = Int64), @p293='?' (DbType = Double), @p294='?' (DbType = Double), @p295='?' (DbType = Int64), @p296='?' (Size = 4000), @p297='?' (DbType = Int64), @p298='?' (DbType = Double), @p299='?' (Size = 450), @p300='?' (DbType = Int64), @p301='?' (DbType = Int64), @p302='?' (DbType = Double), @p303='?' (DbType = Double), @p304='?' (DbType = Int64), @p305='?' (DbType = Int64), @p306='?' (DbType = Int64), @p307='?' (DbType = Double), @p308='?' (DbType = DateTime2), @p309='?' (DbType = Double), @p310='?' (DbType = Double), @p311='?' (DbType = Int64), @p312='?' (DbType = Int64), @p313='?' (DbType = Double), @p314='?' (DbType = Int64), @p315='?' (DbType = Int64), @p316='?' (DbType = Double), @p317='?' (DbType = Double), @p318='?' (DbType = Double), @p319='?' (DbType = Int64), @p320='?' (DbType = Double), @p321='?' (DbType = Double), @p322='?' (DbType = Int64), @p323='?' (Size = 4000), @p324='?' (DbType = Int64), @p325='?' (DbType = Double), @p326='?' (Size = 450), @p327='?' (DbType = Int64), @p328='?' (DbType = Int64), @p329='?' (DbType = Double), @p330='?' (DbType = Double), @p331='?' (DbType = Int64), @p332='?' (DbType = Int64), @p333='?' (DbType = Int64), @p334='?' (DbType = Double), @p335='?' (DbType = DateTime2), @p336='?' (DbType = Double), @p337='?' (DbType = Double), @p338='?' (DbType = Int64), @p339='?' (DbType = Int64), @p340='?' (DbType = Double), @p341='?' (DbType = Int64), @p342='?' (DbType = Int64), @p343='?' (DbType = Double), @p344='?' (DbType = Double), @p345='?' (DbType = Double), @p346='?' (DbType = Int64), @p347='?' (DbType = Double), @p348='?' (DbType = Double), @p349='?' (DbType = Int64), @p350='?' (Size = 4000), @p351='?' (DbType = Int64), @p352='?' (DbType = Double), @p353='?' (Size = 450), @p354='?' (DbType = Int64), @p355='?' (DbType = Int64), @p356='?' (DbType = Double), @p357='?' (DbType = Double), @p358='?' (DbType = Int64), @p359='?' (DbType = Int64), @p360='?' (DbType = Int64), @p361='?' (DbType = Double), @p362='?' (DbType = DateTime2), @p363='?' (DbType = Double), @p364='?' (DbType = Double), @p365='?' (DbType = Int64), @p366='?' (DbType = Int64), @p367='?' (DbType = Double), @p368='?' (DbType = Int64), @p369='?' (DbType = Int64), @p370='?' (DbType = Double), @p371='?' (DbType = Double), @p372='?' (DbType = Double), @p373='?' (DbType = Int64), @p374='?' (DbType = Double), @p375='?' (DbType = Double), @p376='?' (DbType = Int64), @p377='?' (Size = 4000), @p378='?' (DbType = Int64), @p379='?' (DbType = Double), @p380='?' (Size = 450), @p381='?' (DbType = Int64), @p382='?' (DbType = Int64), @p383='?' (DbType = Double), @p384='?' (DbType = Double), @p385='?' (DbType = Int64), @p386='?' (DbType = Int64), @p387='?' (DbType = Int64), @p388='?' (DbType = Double), @p389='?' (DbType = DateTime2), @p390='?' (DbType = Double), @p391='?' (DbType = Double), @p392='?' (DbType = Int64), @p393='?' (DbType = Int64), @p394='?' (DbType = Double), @p395='?' (DbType = Int64), @p396='?' (DbType = Int64), @p397='?' (DbType = Double), @p398='?' (DbType = Double), @p399='?' (DbType = Double), @p400='?' (DbType = Int64), @p401='?' (DbType = Double), @p402='?' (DbType = Double), @p403='?' (DbType = Int64), @p404='?' (Size = 4000), @p405='?' (DbType = Int64), @p406='?' (DbType = Double), @p407='?' (Size = 450), @p408='?' (DbType = Int64), @p409='?' (DbType = Int64), @p410='?' (DbType = Double), @p411='?' (DbType = Double), @p412='?' (DbType = Int64), @p413='?' (DbType = Int64), @p414='?' (DbType = Int64), @p415='?' (DbType = Double), @p416='?' (DbType = DateTime2), @p417='?' (DbType = Double), @p418='?' (DbType = Double), @p419='?' (DbType = Int64), @p420='?' (DbType = Int64), @p421='?' (DbType = Double), @p422='?' (DbType = Int64), @p423='?' (DbType = Int64), @p424='?' (DbType = Double), @p425='?' (DbType = Double), @p426='?' (DbType = Double), @p427='?' (DbType = Int64), @p428='?' (DbType = Double), @p429='?' (DbType = Double), @p430='?' (DbType = Int64), @p431='?' (Size = 4000), @p432='?' (DbType = Int64), @p433='?' (DbType = Double), @p434='?' (Size = 450), @p435='?' (DbType = Int64), @p436='?' (DbType = Int64), @p437='?' (DbType = Double), @p438='?' (DbType = Double), @p439='?' (DbType = Int64), @p440='?' (DbType = Int64), @p441='?' (DbType = Int64), @p442='?' (DbType = Double), @p443='?' (DbType = DateTime2), @p444='?' (DbType = Double), @p445='?' (DbType = Double), @p446='?' (DbType = Int64), @p447='?' (DbType = Int64), @p448='?' (DbType = Double), @p449='?' (DbType = Int64), @p450='?' (DbType = Int64), @p451='?' (DbType = Double), @p452='?' (DbType = Double), @p453='?' (DbType = Double), @p454='?' (DbType = Int64), @p455='?' (DbType = Double), @p456='?' (DbType = Double), @p457='?' (DbType = Int64), @p458='?' (Size = 4000), @p459='?' (DbType = Int64), @p460='?' (DbType = Double), @p461='?' (Size = 450), @p462='?' (DbType = Int64), @p463='?' (DbType = Int64), @p464='?' (DbType = Double), @p465='?' (DbType = Double), @p466='?' (DbType = Int64), @p467='?' (DbType = Int64), @p468='?' (DbType = Int64), @p469='?' (DbType = Double), @p470='?' (DbType = DateTime2), @p471='?' (DbType = Double), @p472='?' (DbType = Double), @p473='?' (DbType = Int64), @p474='?' (DbType = Int64), @p475='?' (DbType = Double), @p476='?' (DbType = Int64), @p477='?' (DbType = Int64), @p478='?' (DbType = Double), @p479='?' (DbType = Double), @p480='?' (DbType = Double), @p481='?' (DbType = Int64), @p482='?' (DbType = Double), @p483='?' (DbType = Double), @p484='?' (DbType = Int64), @p485='?' (Size = 4000), @p486='?' (DbType = Int64), @p487='?' (DbType = Double), @p488='?' (Size = 450), @p489='?' (DbType = Int64), @p490='?' (DbType = Int64), @p491='?' (DbType = Double), @p492='?' (DbType = Double), @p493='?' (DbType = Int64), @p494='?' (DbType = Int64), @p495='?' (DbType = Int64), @p496='?' (DbType = Double), @p497='?' (DbType = DateTime2), @p498='?' (DbType = Double), @p499='?' (DbType = Double), @p500='?' (DbType = Int64), @p501='?' (DbType = Int64), @p502='?' (DbType = Double), @p503='?' (DbType = Int64), @p504='?' (DbType = Int64), @p505='?' (DbType = Double), @p506='?' (DbType = Double), @p507='?' (DbType = Double), @p508='?' (DbType = Int64), @p509='?' (DbType = Double), @p510='?' (DbType = Double), @p511='?' (DbType = Int64), @p512='?' (Size = 4000), @p513='?' (DbType = Int64), @p514='?' (DbType = Double), @p515='?' (Size = 450), @p516='?' (DbType = Int64), @p517='?' (DbType = Int64), @p518='?' (DbType = Double), @p519='?' (DbType = Double), @p520='?' (DbType = Int64), @p521='?' (DbType = Int64), @p522='?' (DbType = Int64), @p523='?' (DbType = Double), @p524='?' (DbType = DateTime2), @p525='?' (DbType = Double), @p526='?' (DbType = Double), @p527='?' (DbType = Int64), @p528='?' (DbType = Int64), @p529='?' (DbType = Double), @p530='?' (DbType = Int64), @p531='?' (DbType = Int64), @p532='?' (DbType = Double), @p533='?' (DbType = Double), @p534='?' (DbType = Double), @p535='?' (DbType = Int64), @p536='?' (DbType = Double), @p537='?' (DbType = Double), @p538='?' (DbType = Int64), @p539='?' (Size = 4000), @p540='?' (DbType = Int64), @p541='?' (DbType = Double), @p542='?' (Size = 450), @p543='?' (DbType = Int64), @p544='?' (DbType = Int64), @p545='?' (DbType = Double), @p546='?' (DbType = Double), @p547='?' (DbType = Int64), @p548='?' (DbType = Int64), @p549='?' (DbType = Int64), @p550='?' (DbType = Double), @p551='?' (DbType = DateTime2), @p552='?' (DbType = Double), @p553='?' (DbType = Double), @p554='?' (DbType = Int64), @p555='?' (DbType = Int64), @p556='?' (DbType = Double), @p557='?' (DbType = Int64), @p558='?' (DbType = Int64), @p559='?' (DbType = Double), @p560='?' (DbType = Double), @p561='?' (DbType = Double), @p562='?' (DbType = Int64), @p563='?' (DbType = Double), @p564='?' (DbType = Double), @p565='?' (DbType = Int64), @p566='?' (Size = 4000), @p567='?' (DbType = Int64), @p568='?' (DbType = Double), @p569='?' (Size = 450), @p570='?' (DbType = Int64), @p571='?' (DbType = Int64), @p572='?' (DbType = Double), @p573='?' (DbType = Double), @p574='?' (DbType = Int64), @p575='?' (DbType = Int64), @p576='?' (DbType = Int64), @p577='?' (DbType = Double), @p578='?' (DbType = DateTime2), @p579='?' (DbType = Double), @p580='?' (DbType = Double), @p581='?' (DbType = Int64), @p582='?' (DbType = Int64), @p583='?' (DbType = Double), @p584='?' (DbType = Int64), @p585='?' (DbType = Int64), @p586='?' (DbType = Double), @p587='?' (DbType = Double), @p588='?' (DbType = Double), @p589='?' (DbType = Int64), @p590='?' (DbType = Double), @p591='?' (DbType = Double), @p592='?' (DbType = Int64), @p593='?' (Size = 4000), @p594='?' (DbType = Int64), @p595='?' (DbType = Double), @p596='?' (Size = 450), @p597='?' (DbType = Int64), @p598='?' (DbType = Int64), @p599='?' (DbType = Double), @p600='?' (DbType = Double), @p601='?' (DbType = Int64), @p602='?' (DbType = Int64), @p603='?' (DbType = Int64), @p604='?' (DbType = Double), @p605='?' (DbType = DateTime2), @p606='?' (DbType = Double), @p607='?' (DbType = Double), @p608='?' (DbType = Int64), @p609='?' (DbType = Int64), @p610='?' (DbType = Double), @p611='?' (DbType = Int64), @p612='?' (DbType = Int64), @p613='?' (DbType = Double), @p614='?' (DbType = Double), @p615='?' (DbType = Double), @p616='?' (DbType = Int64), @p617='?' (DbType = Double), @p618='?' (DbType = Double), @p619='?' (DbType = Int64), @p620='?' (Size = 4000), @p621='?' (DbType = Int64), @p622='?' (DbType = Double), @p623='?' (Size = 450), @p624='?' (DbType = Int64), @p625='?' (DbType = Int64), @p626='?' (DbType = Double), @p627='?' (DbType = Double), @p628='?' (DbType = Int64), @p629='?' (DbType = Int64), @p630='?' (DbType = Int64), @p631='?' (DbType = Double), @p632='?' (DbType = DateTime2), @p633='?' (DbType = Double), @p634='?' (DbType = Double), @p635='?' (DbType = Int64), @p636='?' (DbType = Int64), @p637='?' (DbType = Double), @p638='?' (DbType = Int64), @p639='?' (DbType = Int64), @p640='?' (DbType = Double), @p641='?' (DbType = Double), @p642='?' (DbType = Double), @p643='?' (DbType = Int64), @p644='?' (DbType = Double), @p645='?' (DbType = Double), @p646='?' (DbType = Int64), @p647='?' (Size = 4000), @p648='?' (DbType = Int64), @p649='?' (DbType = Double), @p650='?' (Size = 450), @p651='?' (DbType = Int64), @p652='?' (DbType = Int64), @p653='?' (DbType = Double), @p654='?' (DbType = Double), @p655='?' (DbType = Int64), @p656='?' (DbType = Int64), @p657='?' (DbType = Int64), @p658='?' (DbType = Double), @p659='?' (DbType = DateTime2), @p660='?' (DbType = Double), @p661='?' (DbType = Double), @p662='?' (DbType = Int64), @p663='?' (DbType = Int64), @p664='?' (DbType = Double), @p665='?' (DbType = Int64), @p666='?' (DbType = Int64), @p667='?' (DbType = Double), @p668='?' (DbType = Double), @p669='?' (DbType = Double), @p670='?' (DbType = Int64), @p671='?' (DbType = Double), @p672='?' (DbType = Double), @p673='?' (DbType = Int64), @p674='?' (Size = 4000), @p675='?' (DbType = Int64), @p676='?' (DbType = Double), @p677='?' (Size = 450), @p678='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
DECLARE @inserted0 TABLE ([Id] int, [_Position] [int]);
MERGE [IncomeStatementAnnualReport] USING (
VALUES (@p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21, @p22, @p23, @p24, @p25, @p26, @p27, @p28, @p29, @p30, 0),
(@p31, @p32, @p33, @p34, @p35, @p36, @p37, @p38, @p39, @p40, @p41, @p42, @p43, @p44, @p45, @p46, @p47, @p48, @p49, @p50, @p51, @p52, @p53, @p54, @p55, @p56, @p57, 1),
(@p58, @p59, @p60, @p61, @p62, @p63, @p64, @p65, @p66, @p67, @p68, @p69, @p70, @p71, @p72, @p73, @p74, @p75, @p76, @p77, @p78, @p79, @p80, @p81, @p82, @p83, @p84, 2),
(@p85, @p86, @p87, @p88, @p89, @p90, @p91, @p92, @p93, @p94, @p95, @p96, @p97, @p98, @p99, @p100, @p101, @p102, @p103, @p104, @p105, @p106, @p107, @p108, @p109, @p110, @p111, 3),
(@p112, @p113, @p114, @p115, @p116, @p117, @p118, @p119, @p120, @p121, @p122, @p123, @p124, @p125, @p126, @p127, @p128, @p129, @p130, @p131, @p132, @p133, @p134, @p135, @p136, @p137, @p138, 4)) AS i ([ComprehensiveIncomeNetOfTax], [CostOfRevenue], [CostofGoodsAndServicesSold], [Depreciation], [DepreciationAndAmortization], [Ebit], [Ebitda], [FiscalDateEnding], [GrossProfit], [IncomeBeforeTax], [IncomeTaxExpense], [InterestAndDebtExpense], [InterestExpense], [InterestIncome], [InvestmentIncomeNet], [NetIncome], [NetIncomeFromContinuingOperations], [NetInterestIncome], [NonInterestIncome], [OperatingExpenses], [OperatingIncome], [OtherNonOperatingIncome], [ReportedCurrency], [ResearchAndDevelopment], [SellingGeneralAndAdministrative], [Symbol], [TotalRevenue], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([ComprehensiveIncomeNetOfTax], [CostOfRevenue], [CostofGoodsAndServicesSold], [Depreciation], [DepreciationAndAmortization], [Ebit], [Ebitda], [FiscalDateEnding], [GrossProfit], [IncomeBeforeTax], [IncomeTaxExpense], [InterestAndDebtExpense], [InterestExpense], [InterestIncome], [InvestmentIncomeNet], [NetIncome], [NetIncomeFromContinuingOperations], [NetInterestIncome], [NonInterestIncome], [OperatingExpenses], [OperatingIncome], [OtherNonOperatingIncome], [ReportedCurrency], [ResearchAndDevelopment], [SellingGeneralAndAdministrative], [Symbol], [TotalRevenue])
VALUES (i.[ComprehensiveIncomeNetOfTax], i.[CostOfRevenue], i.[CostofGoodsAndServicesSold], i.[Depreciation], i.[DepreciationAndAmortization], i.[Ebit], i.[Ebitda], i.[FiscalDateEnding], i.[GrossProfit], i.[IncomeBeforeTax], i.[IncomeTaxExpense], i.[InterestAndDebtExpense], i.[InterestExpense], i.[InterestIncome], i.[InvestmentIncomeNet], i.[NetIncome], i.[NetIncomeFromContinuingOperations], i.[NetInterestIncome], i.[NonInterestIncome], i.[OperatingExpenses], i.[OperatingIncome], i.[OtherNonOperatingIncome], i.[ReportedCurrency], i.[ResearchAndDevelopment], i.[SellingGeneralAndAdministrative], i.[Symbol], i.[TotalRevenue])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted0;

SELECT [i].[Id] FROM @inserted0 i
ORDER BY [i].[_Position];

DECLARE @inserted5 TABLE ([Id] int, [_Position] [int]);
MERGE [IncomeStatementQuarterlyReport] USING (
VALUES (@p139, @p140, @p141, @p142, @p143, @p144, @p145, @p146, @p147, @p148, @p149, @p150, @p151, @p152, @p153, @p154, @p155, @p156, @p157, @p158, @p159, @p160, @p161, @p162, @p163, @p164, @p165, 0),
(@p166, @p167, @p168, @p169, @p170, @p171, @p172, @p173, @p174, @p175, @p176, @p177, @p178, @p179, @p180, @p181, @p182, @p183, @p184, @p185, @p186, @p187, @p188, @p189, @p190, @p191, @p192, 1),
(@p193, @p194, @p195, @p196, @p197, @p198, @p199, @p200, @p201, @p202, @p203, @p204, @p205, @p206, @p207, @p208, @p209, @p210, @p211, @p212, @p213, @p214, @p215, @p216, @p217, @p218, @p219, 2),
(@p220, @p221, @p222, @p223, @p224, @p225, @p226, @p227, @p228, @p229, @p230, @p231, @p232, @p233, @p234, @p235, @p236, @p237, @p238, @p239, @p240, @p241, @p242, @p243, @p244, @p245, @p246, 3),
(@p247, @p248, @p249, @p250, @p251, @p252, @p253, @p254, @p255, @p256, @p257, @p258, @p259, @p260, @p261, @p262, @p263, @p264, @p265, @p266, @p267, @p268, @p269, @p270, @p271, @p272, @p273, 4),
(@p274, @p275, @p276, @p277, @p278, @p279, @p280, @p281, @p282, @p283, @p284, @p285, @p286, @p287, @p288, @p289, @p290, @p291, @p292, @p293, @p294, @p295, @p296, @p297, @p298, @p299, @p300, 5),
(@p301, @p302, @p303, @p304, @p305, @p306, @p307, @p308, @p309, @p310, @p311, @p312, @p313, @p314, @p315, @p316, @p317, @p318, @p319, @p320, @p321, @p322, @p323, @p324, @p325, @p326, @p327, 6),
(@p328, @p329, @p330, @p331, @p332, @p333, @p334, @p335, @p336, @p337, @p338, @p339, @p340, @p341, @p342, @p343, @p344, @p345, @p346, @p347, @p348, @p349, @p350, @p351, @p352, @p353, @p354, 7),
(@p355, @p356, @p357, @p358, @p359, @p360, @p361, @p362, @p363, @p364, @p365, @p366, @p367, @p368, @p369, @p370, @p371, @p372, @p373, @p374, @p375, @p376, @p377, @p378, @p379, @p380, @p381, 8),
(@p382, @p383, @p384, @p385, @p386, @p387, @p388, @p389, @p390, @p391, @p392, @p393, @p394, @p395, @p396, @p397, @p398, @p399, @p400, @p401, @p402, @p403, @p404, @p405, @p406, @p407, @p408, 9),
(@p409, @p410, @p411, @p412, @p413, @p414, @p415, @p416, @p417, @p418, @p419, @p420, @p421, @p422, @p423, @p424, @p425, @p426, @p427, @p428, @p429, @p430, @p431, @p432, @p433, @p434, @p435, 10),
(@p436, @p437, @p438, @p439, @p440, @p441, @p442, @p443, @p444, @p445, @p446, @p447, @p448, @p449, @p450, @p451, @p452, @p453, @p454, @p455, @p456, @p457, @p458, @p459, @p460, @p461, @p462, 11),
(@p463, @p464, @p465, @p466, @p467, @p468, @p469, @p470, @p471, @p472, @p473, @p474, @p475, @p476, @p477, @p478, @p479, @p480, @p481, @p482, @p483, @p484, @p485, @p486, @p487, @p488, @p489, 12),
(@p490, @p491, @p492, @p493, @p494, @p495, @p496, @p497, @p498, @p499, @p500, @p501, @p502, @p503, @p504, @p505, @p506, @p507, @p508, @p509, @p510, @p511, @p512, @p513, @p514, @p515, @p516, 13),
(@p517, @p518, @p519, @p520, @p521, @p522, @p523, @p524, @p525, @p526, @p527, @p528, @p529, @p530, @p531, @p532, @p533, @p534, @p535, @p536, @p537, @p538, @p539, @p540, @p541, @p542, @p543, 14),
(@p544, @p545, @p546, @p547, @p548, @p549, @p550, @p551, @p552, @p553, @p554, @p555, @p556, @p557, @p558, @p559, @p560, @p561, @p562, @p563, @p564, @p565, @p566, @p567, @p568, @p569, @p570, 15),
(@p571, @p572, @p573, @p574, @p575, @p576, @p577, @p578, @p579, @p580, @p581, @p582, @p583, @p584, @p585, @p586, @p587, @p588, @p589, @p590, @p591, @p592, @p593, @p594, @p595, @p596, @p597, 16),
(@p598, @p599, @p600, @p601, @p602, @p603, @p604, @p605, @p606, @p607, @p608, @p609, @p610, @p611, @p612, @p613, @p614, @p615, @p616, @p617, @p618, @p619, @p620, @p621, @p622, @p623, @p624, 17),
(@p625, @p626, @p627, @p628, @p629, @p630, @p631, @p632, @p633, @p634, @p635, @p636, @p637, @p638, @p639, @p640, @p641, @p642, @p643, @p644, @p645, @p646, @p647, @p648, @p649, @p650, @p651, 18),
(@p652, @p653, @p654, @p655, @p656, @p657, @p658, @p659, @p660, @p661, @p662, @p663, @p664, @p665, @p666, @p667, @p668, @p669, @p670, @p671, @p672, @p673, @p674, @p675, @p676, @p677, @p678, 19)) AS i ([ComprehensiveIncomeNetOfTax], [CostOfRevenue], [CostofGoodsAndServicesSold], [Depreciation], [DepreciationAndAmortization], [Ebit], [Ebitda], [FiscalDateEnding], [GrossProfit], [IncomeBeforeTax], [IncomeTaxExpense], [InterestAndDebtExpense], [InterestExpense], [InterestIncome], [InvestmentIncomeNet], [NetIncome], [NetIncomeFromContinuingOperations], [NetInterestIncome], [NonInterestIncome], [OperatingExpenses], [OperatingIncome], [OtherNonOperatingIncome], [ReportedCurrency], [ResearchAndDevelopment], [SellingGeneralAndAdministrative], [Symbol], [TotalRevenue], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([ComprehensiveIncomeNetOfTax], [CostOfRevenue], [CostofGoodsAndServicesSold], [Depreciation], [DepreciationAndAmortization], [Ebit], [Ebitda], [FiscalDateEnding], [GrossProfit], [IncomeBeforeTax], [IncomeTaxExpense], [InterestAndDebtExpense], [InterestExpense], [InterestIncome], [InvestmentIncomeNet], [NetIncome], [NetIncomeFromContinuingOperations], [NetInterestIncome], [NonInterestIncome], [OperatingExpenses], [OperatingIncome], [OtherNonOperatingIncome], [ReportedCurrency], [ResearchAndDevelopment], [SellingGeneralAndAdministrative], [Symbol], [TotalRevenue])
VALUES (i.[ComprehensiveIncomeNetOfTax], i.[CostOfRevenue], i.[CostofGoodsAndServicesSold], i.[Depreciation], i.[DepreciationAndAmortization], i.[Ebit], i.[Ebitda], i.[FiscalDateEnding], i.[GrossProfit], i.[IncomeBeforeTax], i.[IncomeTaxExpense], i.[InterestAndDebtExpense], i.[InterestExpense], i.[InterestIncome], i.[InvestmentIncomeNet], i.[NetIncome], i.[NetIncomeFromContinuingOperations], i.[NetInterestIncome], i.[NonInterestIncome], i.[OperatingExpenses], i.[OperatingIncome], i.[OtherNonOperatingIncome], i.[ReportedCurrency], i.[ResearchAndDevelopment], i.[SellingGeneralAndAdministrative], i.[Symbol], i.[TotalRevenue])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted5;

SELECT [i].[Id] FROM @inserted5 i
ORDER BY [i].[_Position];
2022-05-12 01:12:16.259 +03:00 [INF] AddOrUpdate run successful.
2022-05-12 01:12:16.884 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CashFlow with Symbol AVAN-WS
2022-05-12 01:12:16.887 +03:00 [INF] Generating URI for CASH_FLOW with params: symbol: AVAN-WS
2022-05-12 01:12:16.888 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=CASH_FLOW&symbol=AVAN-WS
2022-05-12 01:12:16.888 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=CASH_FLOW&symbol=AVAN-WS".
2022-05-12 01:12:17.065 +03:00 [INF] Response has success status code
2022-05-12 01:12:17.066 +03:00 [INF] Trying to deserialize response.
2022-05-12 01:12:17.067 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 01:12:17.077 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__symbol_0
2022-05-12 01:12:17.078 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.Earnings.
2022-05-12 01:12:17.086 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [e].[Symbol], [e].[ExistInApi], [e].[LastApiRefresh], [e].[LastLocalRefresh]
FROM [Earnings] AS [e]
WHERE [e].[Symbol] = @__entity_Symbol_0
2022-05-12 01:12:17.087 +03:00 [INF] Entity does not exist. Adding to DB.
2022-05-12 01:12:17.102 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = Boolean), @p2='?' (DbType = DateTime2), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Earnings] ([Symbol], [ExistInApi], [LastApiRefresh], [LastLocalRefresh])
VALUES (@p0, @p1, @p2, @p3);
2022-05-12 01:12:17.126 +03:00 [INF] Executed DbCommand (22ms) [Parameters=[@p4='?' (DbType = DateTime2), @p5='?' (DbType = Double), @p6='?' (Size = 450), @p7='?' (DbType = DateTime2), @p8='?' (DbType = Double), @p9='?' (Size = 450), @p10='?' (DbType = DateTime2), @p11='?' (DbType = Double), @p12='?' (Size = 450), @p13='?' (DbType = DateTime2), @p14='?' (DbType = Double), @p15='?' (Size = 450), @p16='?' (DbType = DateTime2), @p17='?' (DbType = Double), @p18='?' (Size = 450), @p19='?' (DbType = DateTime2), @p20='?' (DbType = Double), @p21='?' (Size = 450), @p22='?' (DbType = DateTime2), @p23='?' (DbType = Double), @p24='?' (Size = 450), @p25='?' (DbType = DateTime2), @p26='?' (DbType = Double), @p27='?' (Size = 450), @p28='?' (DbType = DateTime2), @p29='?' (DbType = Double), @p30='?' (Size = 450), @p31='?' (DbType = DateTime2), @p32='?' (DbType = Double), @p33='?' (Size = 450), @p34='?' (DbType = DateTime2), @p35='?' (DbType = Double), @p36='?' (Size = 450), @p37='?' (DbType = DateTime2), @p38='?' (DbType = Double), @p39='?' (Size = 450), @p40='?' (DbType = DateTime2), @p41='?' (DbType = Double), @p42='?' (Size = 450), @p43='?' (DbType = DateTime2), @p44='?' (DbType = Double), @p45='?' (Size = 450), @p46='?' (DbType = DateTime2), @p47='?' (DbType = Double), @p48='?' (Size = 450), @p49='?' (DbType = DateTime2), @p50='?' (DbType = Double), @p51='?' (Size = 450), @p52='?' (DbType = DateTime2), @p53='?' (DbType = Double), @p54='?' (Size = 450), @p55='?' (DbType = DateTime2), @p56='?' (DbType = Double), @p57='?' (Size = 450), @p58='?' (DbType = DateTime2), @p59='?' (DbType = Double), @p60='?' (Size = 450), @p61='?' (DbType = DateTime2), @p62='?' (DbType = Double), @p63='?' (Size = 450), @p64='?' (DbType = DateTime2), @p65='?' (DbType = Double), @p66='?' (Size = 450), @p67='?' (DbType = DateTime2), @p68='?' (DbType = Double), @p69='?' (Size = 450), @p70='?' (DbType = DateTime2), @p71='?' (DbType = Double), @p72='?' (Size = 450), @p73='?' (DbType = DateTime2), @p74='?' (DbType = Double), @p75='?' (Size = 450), @p76='?' (DbType = DateTime2), @p77='?' (DbType = Double), @p78='?' (Size = 450), @p79='?' (DbType = DateTime2), @p80='?' (DbType = Double), @p81='?' (Size = 450), @p82='?' (DbType = DateTime2), @p83='?' (DbType = Double), @p84='?' (Size = 450), @p85='?' (DbType = Double), @p86='?' (DbType = DateTime2), @p87='?' (DbType = DateTime2), @p88='?' (DbType = Double), @p89='?' (DbType = Double), @p90='?' (DbType = Double), @p91='?' (Size = 450), @p92='?' (DbType = Double), @p93='?' (DbType = DateTime2), @p94='?' (DbType = DateTime2), @p95='?' (DbType = Double), @p96='?' (DbType = Double), @p97='?' (DbType = Double), @p98='?' (Size = 450), @p99='?' (DbType = Double), @p100='?' (DbType = DateTime2), @p101='?' (DbType = DateTime2), @p102='?' (DbType = Double), @p103='?' (DbType = Double), @p104='?' (DbType = Double), @p105='?' (Size = 450), @p106='?' (DbType = Double), @p107='?' (DbType = DateTime2), @p108='?' (DbType = DateTime2), @p109='?' (DbType = Double), @p110='?' (DbType = Double), @p111='?' (DbType = Double), @p112='?' (Size = 450), @p113='?' (DbType = Double), @p114='?' (DbType = DateTime2), @p115='?' (DbType = DateTime2), @p116='?' (DbType = Double), @p117='?' (DbType = Double), @p118='?' (DbType = Double), @p119='?' (Size = 450), @p120='?' (DbType = Double), @p121='?' (DbType = DateTime2), @p122='?' (DbType = DateTime2), @p123='?' (DbType = Double), @p124='?' (DbType = Double), @p125='?' (DbType = Double), @p126='?' (Size = 450), @p127='?' (DbType = Double), @p128='?' (DbType = DateTime2), @p129='?' (DbType = DateTime2), @p130='?' (DbType = Double), @p131='?' (DbType = Double), @p132='?' (DbType = Double), @p133='?' (Size = 450), @p134='?' (DbType = Double), @p135='?' (DbType = DateTime2), @p136='?' (DbType = DateTime2), @p137='?' (DbType = Double), @p138='?' (DbType = Double), @p139='?' (DbType = Double), @p140='?' (Size = 450), @p141='?' (DbType = Double), @p142='?' (DbType = DateTime2), @p143='?' (DbType = DateTime2), @p144='?' (DbType = Double), @p145='?' (DbType = Double), @p146='?' (DbType = Double), @p147='?' (Size = 450), @p148='?' (DbType = Double), @p149='?' (DbType = DateTime2), @p150='?' (DbType = DateTime2), @p151='?' (DbType = Double), @p152='?' (DbType = Double), @p153='?' (DbType = Double), @p154='?' (Size = 450), @p155='?' (DbType = Double), @p156='?' (DbType = DateTime2), @p157='?' (DbType = DateTime2), @p158='?' (DbType = Double), @p159='?' (DbType = Double), @p160='?' (DbType = Double), @p161='?' (Size = 450), @p162='?' (DbType = Double), @p163='?' (DbType = DateTime2), @p164='?' (DbType = DateTime2), @p165='?' (DbType = Double), @p166='?' (DbType = Double), @p167='?' (DbType = Double), @p168='?' (Size = 450), @p169='?' (DbType = Double), @p170='?' (DbType = DateTime2), @p171='?' (DbType = DateTime2), @p172='?' (DbType = Double), @p173='?' (DbType = Double), @p174='?' (DbType = Double), @p175='?' (Size = 450), @p176='?' (DbType = Double), @p177='?' (DbType = DateTime2), @p178='?' (DbType = DateTime2), @p179='?' (DbType = Double), @p180='?' (DbType = Double), @p181='?' (DbType = Double), @p182='?' (Size = 450), @p183='?' (DbType = Double), @p184='?' (DbType = DateTime2), @p185='?' (DbType = DateTime2), @p186='?' (DbType = Double), @p187='?' (DbType = Double), @p188='?' (DbType = Double), @p189='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
DECLARE @inserted0 TABLE ([Id] int, [_Position] [int]);
MERGE [AnnualEarning] USING (
VALUES (@p4, @p5, @p6, 0),
(@p7, @p8, @p9, 1),
(@p10, @p11, @p12, 2),
(@p13, @p14, @p15, 3),
(@p16, @p17, @p18, 4),
(@p19, @p20, @p21, 5),
(@p22, @p23, @p24, 6),
(@p25, @p26, @p27, 7),
(@p28, @p29, @p30, 8),
(@p31, @p32, @p33, 9),
(@p34, @p35, @p36, 10),
(@p37, @p38, @p39, 11),
(@p40, @p41, @p42, 12),
(@p43, @p44, @p45, 13),
(@p46, @p47, @p48, 14),
(@p49, @p50, @p51, 15),
(@p52, @p53, @p54, 16),
(@p55, @p56, @p57, 17),
(@p58, @p59, @p60, 18),
(@p61, @p62, @p63, 19),
(@p64, @p65, @p66, 20),
(@p67, @p68, @p69, 21),
(@p70, @p71, @p72, 22),
(@p73, @p74, @p75, 23),
(@p76, @p77, @p78, 24),
(@p79, @p80, @p81, 25),
(@p82, @p83, @p84, 26)) AS i ([FiscalDateEnding], [ReportedEPS], [Symbol], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([FiscalDateEnding], [ReportedEPS], [Symbol])
VALUES (i.[FiscalDateEnding], i.[ReportedEPS], i.[Symbol])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted0;

SELECT [i].[Id] FROM @inserted0 i
ORDER BY [i].[_Position];

DECLARE @inserted27 TABLE ([Id] int, [_Position] [int]);
MERGE [QuarterlyEarning] USING (
VALUES (@p85, @p86, @p87, @p88, @p89, @p90, @p91, 0),
(@p92, @p93, @p94, @p95, @p96, @p97, @p98, 1),
(@p99, @p100, @p101, @p102, @p103, @p104, @p105, 2),
(@p106, @p107, @p108, @p109, @p110, @p111, @p112, 3),
(@p113, @p114, @p115, @p116, @p117, @p118, @p119, 4),
(@p120, @p121, @p122, @p123, @p124, @p125, @p126, 5),
(@p127, @p128, @p129, @p130, @p131, @p132, @p133, 6),
(@p134, @p135, @p136, @p137, @p138, @p139, @p140, 7),
(@p141, @p142, @p143, @p144, @p145, @p146, @p147, 8),
(@p148, @p149, @p150, @p151, @p152, @p153, @p154, 9),
(@p155, @p156, @p157, @p158, @p159, @p160, @p161, 10),
(@p162, @p163, @p164, @p165, @p166, @p167, @p168, 11),
(@p169, @p170, @p171, @p172, @p173, @p174, @p175, 12),
(@p176, @p177, @p178, @p179, @p180, @p181, @p182, 13),
(@p183, @p184, @p185, @p186, @p187, @p188, @p189, 14)) AS i ([EstimatedEPS], [FiscalDateEnding], [ReportedDate], [ReportedEPS], [Surprise], [SurprisePercentage], [Symbol], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([EstimatedEPS], [FiscalDateEnding], [ReportedDate], [ReportedEPS], [Surprise], [SurprisePercentage], [Symbol])
VALUES (i.[EstimatedEPS], i.[FiscalDateEnding], i.[ReportedDate], i.[ReportedEPS], i.[Surprise], i.[SurprisePercentage], i.[Symbol])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted27;

SELECT [i].[Id] FROM @inserted27 i
ORDER BY [i].[_Position];
2022-05-12 01:12:17.148 +03:00 [INF] Executed DbCommand (19ms) [Parameters=[@p0='?' (DbType = Double), @p1='?' (DbType = DateTime2), @p2='?' (DbType = DateTime2), @p3='?' (DbType = Double), @p4='?' (DbType = Double), @p5='?' (DbType = Double), @p6='?' (Size = 450), @p7='?' (DbType = Double), @p8='?' (DbType = DateTime2), @p9='?' (DbType = DateTime2), @p10='?' (DbType = Double), @p11='?' (DbType = Double), @p12='?' (DbType = Double), @p13='?' (Size = 450), @p14='?' (DbType = Double), @p15='?' (DbType = DateTime2), @p16='?' (DbType = DateTime2), @p17='?' (DbType = Double), @p18='?' (DbType = Double), @p19='?' (DbType = Double), @p20='?' (Size = 450), @p21='?' (DbType = Double), @p22='?' (DbType = DateTime2), @p23='?' (DbType = DateTime2), @p24='?' (DbType = Double), @p25='?' (DbType = Double), @p26='?' (DbType = Double), @p27='?' (Size = 450), @p28='?' (DbType = Double), @p29='?' (DbType = DateTime2), @p30='?' (DbType = DateTime2), @p31='?' (DbType = Double), @p32='?' (DbType = Double), @p33='?' (DbType = Double), @p34='?' (Size = 450), @p35='?' (DbType = Double), @p36='?' (DbType = DateTime2), @p37='?' (DbType = DateTime2), @p38='?' (DbType = Double), @p39='?' (DbType = Double), @p40='?' (DbType = Double), @p41='?' (Size = 450), @p42='?' (DbType = Double), @p43='?' (DbType = DateTime2), @p44='?' (DbType = DateTime2), @p45='?' (DbType = Double), @p46='?' (DbType = Double), @p47='?' (DbType = Double), @p48='?' (Size = 450), @p49='?' (DbType = Double), @p50='?' (DbType = DateTime2), @p51='?' (DbType = DateTime2), @p52='?' (DbType = Double), @p53='?' (DbType = Double), @p54='?' (DbType = Double), @p55='?' (Size = 450), @p56='?' (DbType = Double), @p57='?' (DbType = DateTime2), @p58='?' (DbType = DateTime2), @p59='?' (DbType = Double), @p60='?' (DbType = Double), @p61='?' (DbType = Double), @p62='?' (Size = 450), @p63='?' (DbType = Double), @p64='?' (DbType = DateTime2), @p65='?' (DbType = DateTime2), @p66='?' (DbType = Double), @p67='?' (DbType = Double), @p68='?' (DbType = Double), @p69='?' (Size = 450), @p70='?' (DbType = Double), @p71='?' (DbType = DateTime2), @p72='?' (DbType = DateTime2), @p73='?' (DbType = Double), @p74='?' (DbType = Double), @p75='?' (DbType = Double), @p76='?' (Size = 450), @p77='?' (DbType = Double), @p78='?' (DbType = DateTime2), @p79='?' (DbType = DateTime2), @p80='?' (DbType = Double), @p81='?' (DbType = Double), @p82='?' (DbType = Double), @p83='?' (Size = 450), @p84='?' (DbType = Double), @p85='?' (DbType = DateTime2), @p86='?' (DbType = DateTime2), @p87='?' (DbType = Double), @p88='?' (DbType = Double), @p89='?' (DbType = Double), @p90='?' (Size = 450), @p91='?' (DbType = Double), @p92='?' (DbType = DateTime2), @p93='?' (DbType = DateTime2), @p94='?' (DbType = Double), @p95='?' (DbType = Double), @p96='?' (DbType = Double), @p97='?' (Size = 450), @p98='?' (DbType = Double), @p99='?' (DbType = DateTime2), @p100='?' (DbType = DateTime2), @p101='?' (DbType = Double), @p102='?' (DbType = Double), @p103='?' (DbType = Double), @p104='?' (Size = 450), @p105='?' (DbType = Double), @p106='?' (DbType = DateTime2), @p107='?' (DbType = DateTime2), @p108='?' (DbType = Double), @p109='?' (DbType = Double), @p110='?' (DbType = Double), @p111='?' (Size = 450), @p112='?' (DbType = Double), @p113='?' (DbType = DateTime2), @p114='?' (DbType = DateTime2), @p115='?' (DbType = Double), @p116='?' (DbType = Double), @p117='?' (DbType = Double), @p118='?' (Size = 450), @p119='?' (DbType = Double), @p120='?' (DbType = DateTime2), @p121='?' (DbType = DateTime2), @p122='?' (DbType = Double), @p123='?' (DbType = Double), @p124='?' (DbType = Double), @p125='?' (Size = 450), @p126='?' (DbType = Double), @p127='?' (DbType = DateTime2), @p128='?' (DbType = DateTime2), @p129='?' (DbType = Double), @p130='?' (DbType = Double), @p131='?' (DbType = Double), @p132='?' (Size = 450), @p133='?' (DbType = Double), @p134='?' (DbType = DateTime2), @p135='?' (DbType = DateTime2), @p136='?' (DbType = Double), @p137='?' (DbType = Double), @p138='?' (DbType = Double), @p139='?' (Size = 450), @p140='?' (DbType = Double), @p141='?' (DbType = DateTime2), @p142='?' (DbType = DateTime2), @p143='?' (DbType = Double), @p144='?' (DbType = Double), @p145='?' (DbType = Double), @p146='?' (Size = 450), @p147='?' (DbType = Double), @p148='?' (DbType = DateTime2), @p149='?' (DbType = DateTime2), @p150='?' (DbType = Double), @p151='?' (DbType = Double), @p152='?' (DbType = Double), @p153='?' (Size = 450), @p154='?' (DbType = Double), @p155='?' (DbType = DateTime2), @p156='?' (DbType = DateTime2), @p157='?' (DbType = Double), @p158='?' (DbType = Double), @p159='?' (DbType = Double), @p160='?' (Size = 450), @p161='?' (DbType = Double), @p162='?' (DbType = DateTime2), @p163='?' (DbType = DateTime2), @p164='?' (DbType = Double), @p165='?' (DbType = Double), @p166='?' (DbType = Double), @p167='?' (Size = 450), @p168='?' (DbType = Double), @p169='?' (DbType = DateTime2), @p170='?' (DbType = DateTime2), @p171='?' (DbType = Double), @p172='?' (DbType = Double), @p173='?' (DbType = Double), @p174='?' (Size = 450), @p175='?' (DbType = Double), @p176='?' (DbType = DateTime2), @p177='?' (DbType = DateTime2), @p178='?' (DbType = Double), @p179='?' (DbType = Double), @p180='?' (DbType = Double), @p181='?' (Size = 450), @p182='?' (DbType = Double), @p183='?' (DbType = DateTime2), @p184='?' (DbType = DateTime2), @p185='?' (DbType = Double), @p186='?' (DbType = Double), @p187='?' (DbType = Double), @p188='?' (Size = 450), @p189='?' (DbType = Double), @p190='?' (DbType = DateTime2), @p191='?' (DbType = DateTime2), @p192='?' (DbType = Double), @p193='?' (DbType = Double), @p194='?' (DbType = Double), @p195='?' (Size = 450), @p196='?' (DbType = Double), @p197='?' (DbType = DateTime2), @p198='?' (DbType = DateTime2), @p199='?' (DbType = Double), @p200='?' (DbType = Double), @p201='?' (DbType = Double), @p202='?' (Size = 450), @p203='?' (DbType = Double), @p204='?' (DbType = DateTime2), @p205='?' (DbType = DateTime2), @p206='?' (DbType = Double), @p207='?' (DbType = Double), @p208='?' (DbType = Double), @p209='?' (Size = 450), @p210='?' (DbType = Double), @p211='?' (DbType = DateTime2), @p212='?' (DbType = DateTime2), @p213='?' (DbType = Double), @p214='?' (DbType = Double), @p215='?' (DbType = Double), @p216='?' (Size = 450), @p217='?' (DbType = Double), @p218='?' (DbType = DateTime2), @p219='?' (DbType = DateTime2), @p220='?' (DbType = Double), @p221='?' (DbType = Double), @p222='?' (DbType = Double), @p223='?' (Size = 450), @p224='?' (DbType = Double), @p225='?' (DbType = DateTime2), @p226='?' (DbType = DateTime2), @p227='?' (DbType = Double), @p228='?' (DbType = Double), @p229='?' (DbType = Double), @p230='?' (Size = 450), @p231='?' (DbType = Double), @p232='?' (DbType = DateTime2), @p233='?' (DbType = DateTime2), @p234='?' (DbType = Double), @p235='?' (DbType = Double), @p236='?' (DbType = Double), @p237='?' (Size = 450), @p238='?' (DbType = Double), @p239='?' (DbType = DateTime2), @p240='?' (DbType = DateTime2), @p241='?' (DbType = Double), @p242='?' (DbType = Double), @p243='?' (DbType = Double), @p244='?' (Size = 450), @p245='?' (DbType = Double), @p246='?' (DbType = DateTime2), @p247='?' (DbType = DateTime2), @p248='?' (DbType = Double), @p249='?' (DbType = Double), @p250='?' (DbType = Double), @p251='?' (Size = 450), @p252='?' (DbType = Double), @p253='?' (DbType = DateTime2), @p254='?' (DbType = DateTime2), @p255='?' (DbType = Double), @p256='?' (DbType = Double), @p257='?' (DbType = Double), @p258='?' (Size = 450), @p259='?' (DbType = Double), @p260='?' (DbType = DateTime2), @p261='?' (DbType = DateTime2), @p262='?' (DbType = Double), @p263='?' (DbType = Double), @p264='?' (DbType = Double), @p265='?' (Size = 450), @p266='?' (DbType = Double), @p267='?' (DbType = DateTime2), @p268='?' (DbType = DateTime2), @p269='?' (DbType = Double), @p270='?' (DbType = Double), @p271='?' (DbType = Double), @p272='?' (Size = 450), @p273='?' (DbType = Double), @p274='?' (DbType = DateTime2), @p275='?' (DbType = DateTime2), @p276='?' (DbType = Double), @p277='?' (DbType = Double), @p278='?' (DbType = Double), @p279='?' (Size = 450), @p280='?' (DbType = Double), @p281='?' (DbType = DateTime2), @p282='?' (DbType = DateTime2), @p283='?' (DbType = Double), @p284='?' (DbType = Double), @p285='?' (DbType = Double), @p286='?' (Size = 450), @p287='?' (DbType = Double), @p288='?' (DbType = DateTime2), @p289='?' (DbType = DateTime2), @p290='?' (DbType = Double), @p291='?' (DbType = Double), @p292='?' (DbType = Double), @p293='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
DECLARE @inserted0 TABLE ([Id] int, [_Position] [int]);
MERGE [QuarterlyEarning] USING (
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, 0),
(@p7, @p8, @p9, @p10, @p11, @p12, @p13, 1),
(@p14, @p15, @p16, @p17, @p18, @p19, @p20, 2),
(@p21, @p22, @p23, @p24, @p25, @p26, @p27, 3),
(@p28, @p29, @p30, @p31, @p32, @p33, @p34, 4),
(@p35, @p36, @p37, @p38, @p39, @p40, @p41, 5),
(@p42, @p43, @p44, @p45, @p46, @p47, @p48, 6),
(@p49, @p50, @p51, @p52, @p53, @p54, @p55, 7),
(@p56, @p57, @p58, @p59, @p60, @p61, @p62, 8),
(@p63, @p64, @p65, @p66, @p67, @p68, @p69, 9),
(@p70, @p71, @p72, @p73, @p74, @p75, @p76, 10),
(@p77, @p78, @p79, @p80, @p81, @p82, @p83, 11),
(@p84, @p85, @p86, @p87, @p88, @p89, @p90, 12),
(@p91, @p92, @p93, @p94, @p95, @p96, @p97, 13),
(@p98, @p99, @p100, @p101, @p102, @p103, @p104, 14),
(@p105, @p106, @p107, @p108, @p109, @p110, @p111, 15),
(@p112, @p113, @p114, @p115, @p116, @p117, @p118, 16),
(@p119, @p120, @p121, @p122, @p123, @p124, @p125, 17),
(@p126, @p127, @p128, @p129, @p130, @p131, @p132, 18),
(@p133, @p134, @p135, @p136, @p137, @p138, @p139, 19),
(@p140, @p141, @p142, @p143, @p144, @p145, @p146, 20),
(@p147, @p148, @p149, @p150, @p151, @p152, @p153, 21),
(@p154, @p155, @p156, @p157, @p158, @p159, @p160, 22),
(@p161, @p162, @p163, @p164, @p165, @p166, @p167, 23),
(@p168, @p169, @p170, @p171, @p172, @p173, @p174, 24),
(@p175, @p176, @p177, @p178, @p179, @p180, @p181, 25),
(@p182, @p183, @p184, @p185, @p186, @p187, @p188, 26),
(@p189, @p190, @p191, @p192, @p193, @p194, @p195, 27),
(@p196, @p197, @p198, @p199, @p200, @p201, @p202, 28),
(@p203, @p204, @p205, @p206, @p207, @p208, @p209, 29),
(@p210, @p211, @p212, @p213, @p214, @p215, @p216, 30),
(@p217, @p218, @p219, @p220, @p221, @p222, @p223, 31),
(@p224, @p225, @p226, @p227, @p228, @p229, @p230, 32),
(@p231, @p232, @p233, @p234, @p235, @p236, @p237, 33),
(@p238, @p239, @p240, @p241, @p242, @p243, @p244, 34),
(@p245, @p246, @p247, @p248, @p249, @p250, @p251, 35),
(@p252, @p253, @p254, @p255, @p256, @p257, @p258, 36),
(@p259, @p260, @p261, @p262, @p263, @p264, @p265, 37),
(@p266, @p267, @p268, @p269, @p270, @p271, @p272, 38),
(@p273, @p274, @p275, @p276, @p277, @p278, @p279, 39),
(@p280, @p281, @p282, @p283, @p284, @p285, @p286, 40),
(@p287, @p288, @p289, @p290, @p291, @p292, @p293, 41)) AS i ([EstimatedEPS], [FiscalDateEnding], [ReportedDate], [ReportedEPS], [Surprise], [SurprisePercentage], [Symbol], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([EstimatedEPS], [FiscalDateEnding], [ReportedDate], [ReportedEPS], [Surprise], [SurprisePercentage], [Symbol])
VALUES (i.[EstimatedEPS], i.[FiscalDateEnding], i.[ReportedDate], i.[ReportedEPS], i.[Surprise], i.[SurprisePercentage], i.[Symbol])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted0;

SELECT [i].[Id] FROM @inserted0 i
ORDER BY [i].[_Position];
2022-05-12 01:12:17.167 +03:00 [INF] Executed DbCommand (15ms) [Parameters=[@p0='?' (DbType = Double), @p1='?' (DbType = DateTime2), @p2='?' (DbType = DateTime2), @p3='?' (DbType = Double), @p4='?' (DbType = Double), @p5='?' (DbType = Double), @p6='?' (Size = 450), @p7='?' (DbType = Double), @p8='?' (DbType = DateTime2), @p9='?' (DbType = DateTime2), @p10='?' (DbType = Double), @p11='?' (DbType = Double), @p12='?' (DbType = Double), @p13='?' (Size = 450), @p14='?' (DbType = Double), @p15='?' (DbType = DateTime2), @p16='?' (DbType = DateTime2), @p17='?' (DbType = Double), @p18='?' (DbType = Double), @p19='?' (DbType = Double), @p20='?' (Size = 450), @p21='?' (DbType = Double), @p22='?' (DbType = DateTime2), @p23='?' (DbType = DateTime2), @p24='?' (DbType = Double), @p25='?' (DbType = Double), @p26='?' (DbType = Double), @p27='?' (Size = 450), @p28='?' (DbType = Double), @p29='?' (DbType = DateTime2), @p30='?' (DbType = DateTime2), @p31='?' (DbType = Double), @p32='?' (DbType = Double), @p33='?' (DbType = Double), @p34='?' (Size = 450), @p35='?' (DbType = Double), @p36='?' (DbType = DateTime2), @p37='?' (DbType = DateTime2), @p38='?' (DbType = Double), @p39='?' (DbType = Double), @p40='?' (DbType = Double), @p41='?' (Size = 450), @p42='?' (DbType = Double), @p43='?' (DbType = DateTime2), @p44='?' (DbType = DateTime2), @p45='?' (DbType = Double), @p46='?' (DbType = Double), @p47='?' (DbType = Double), @p48='?' (Size = 450), @p49='?' (DbType = Double), @p50='?' (DbType = DateTime2), @p51='?' (DbType = DateTime2), @p52='?' (DbType = Double), @p53='?' (DbType = Double), @p54='?' (DbType = Double), @p55='?' (Size = 450), @p56='?' (DbType = Double), @p57='?' (DbType = DateTime2), @p58='?' (DbType = DateTime2), @p59='?' (DbType = Double), @p60='?' (DbType = Double), @p61='?' (DbType = Double), @p62='?' (Size = 450), @p63='?' (DbType = Double), @p64='?' (DbType = DateTime2), @p65='?' (DbType = DateTime2), @p66='?' (DbType = Double), @p67='?' (DbType = Double), @p68='?' (DbType = Double), @p69='?' (Size = 450), @p70='?' (DbType = Double), @p71='?' (DbType = DateTime2), @p72='?' (DbType = DateTime2), @p73='?' (DbType = Double), @p74='?' (DbType = Double), @p75='?' (DbType = Double), @p76='?' (Size = 450), @p77='?' (DbType = Double), @p78='?' (DbType = DateTime2), @p79='?' (DbType = DateTime2), @p80='?' (DbType = Double), @p81='?' (DbType = Double), @p82='?' (DbType = Double), @p83='?' (Size = 450), @p84='?' (DbType = Double), @p85='?' (DbType = DateTime2), @p86='?' (DbType = DateTime2), @p87='?' (DbType = Double), @p88='?' (DbType = Double), @p89='?' (DbType = Double), @p90='?' (Size = 450), @p91='?' (DbType = Double), @p92='?' (DbType = DateTime2), @p93='?' (DbType = DateTime2), @p94='?' (DbType = Double), @p95='?' (DbType = Double), @p96='?' (DbType = Double), @p97='?' (Size = 450), @p98='?' (DbType = Double), @p99='?' (DbType = DateTime2), @p100='?' (DbType = DateTime2), @p101='?' (DbType = Double), @p102='?' (DbType = Double), @p103='?' (DbType = Double), @p104='?' (Size = 450), @p105='?' (DbType = Double), @p106='?' (DbType = DateTime2), @p107='?' (DbType = DateTime2), @p108='?' (DbType = Double), @p109='?' (DbType = Double), @p110='?' (DbType = Double), @p111='?' (Size = 450), @p112='?' (DbType = Double), @p113='?' (DbType = DateTime2), @p114='?' (DbType = DateTime2), @p115='?' (DbType = Double), @p116='?' (DbType = Double), @p117='?' (DbType = Double), @p118='?' (Size = 450), @p119='?' (DbType = Double), @p120='?' (DbType = DateTime2), @p121='?' (DbType = DateTime2), @p122='?' (DbType = Double), @p123='?' (DbType = Double), @p124='?' (DbType = Double), @p125='?' (Size = 450), @p126='?' (DbType = Double), @p127='?' (DbType = DateTime2), @p128='?' (DbType = DateTime2), @p129='?' (DbType = Double), @p130='?' (DbType = Double), @p131='?' (DbType = Double), @p132='?' (Size = 450), @p133='?' (DbType = Double), @p134='?' (DbType = DateTime2), @p135='?' (DbType = DateTime2), @p136='?' (DbType = Double), @p137='?' (DbType = Double), @p138='?' (DbType = Double), @p139='?' (Size = 450), @p140='?' (DbType = Double), @p141='?' (DbType = DateTime2), @p142='?' (DbType = DateTime2), @p143='?' (DbType = Double), @p144='?' (DbType = Double), @p145='?' (DbType = Double), @p146='?' (Size = 450), @p147='?' (DbType = Double), @p148='?' (DbType = DateTime2), @p149='?' (DbType = DateTime2), @p150='?' (DbType = Double), @p151='?' (DbType = Double), @p152='?' (DbType = Double), @p153='?' (Size = 450), @p154='?' (DbType = Double), @p155='?' (DbType = DateTime2), @p156='?' (DbType = DateTime2), @p157='?' (DbType = Double), @p158='?' (DbType = Double), @p159='?' (DbType = Double), @p160='?' (Size = 450), @p161='?' (DbType = Double), @p162='?' (DbType = DateTime2), @p163='?' (DbType = DateTime2), @p164='?' (DbType = Double), @p165='?' (DbType = Double), @p166='?' (DbType = Double), @p167='?' (Size = 450), @p168='?' (DbType = Double), @p169='?' (DbType = DateTime2), @p170='?' (DbType = DateTime2), @p171='?' (DbType = Double), @p172='?' (DbType = Double), @p173='?' (DbType = Double), @p174='?' (Size = 450), @p175='?' (DbType = Double), @p176='?' (DbType = DateTime2), @p177='?' (DbType = DateTime2), @p178='?' (DbType = Double), @p179='?' (DbType = Double), @p180='?' (DbType = Double), @p181='?' (Size = 450), @p182='?' (DbType = Double), @p183='?' (DbType = DateTime2), @p184='?' (DbType = DateTime2), @p185='?' (DbType = Double), @p186='?' (DbType = Double), @p187='?' (DbType = Double), @p188='?' (Size = 450), @p189='?' (DbType = Double), @p190='?' (DbType = DateTime2), @p191='?' (DbType = DateTime2), @p192='?' (DbType = Double), @p193='?' (DbType = Double), @p194='?' (DbType = Double), @p195='?' (Size = 450), @p196='?' (DbType = Double), @p197='?' (DbType = DateTime2), @p198='?' (DbType = DateTime2), @p199='?' (DbType = Double), @p200='?' (DbType = Double), @p201='?' (DbType = Double), @p202='?' (Size = 450), @p203='?' (DbType = Double), @p204='?' (DbType = DateTime2), @p205='?' (DbType = DateTime2), @p206='?' (DbType = Double), @p207='?' (DbType = Double), @p208='?' (DbType = Double), @p209='?' (Size = 450), @p210='?' (DbType = Double), @p211='?' (DbType = DateTime2), @p212='?' (DbType = DateTime2), @p213='?' (DbType = Double), @p214='?' (DbType = Double), @p215='?' (DbType = Double), @p216='?' (Size = 450), @p217='?' (DbType = Double), @p218='?' (DbType = DateTime2), @p219='?' (DbType = DateTime2), @p220='?' (DbType = Double), @p221='?' (DbType = Double), @p222='?' (DbType = Double), @p223='?' (Size = 450), @p224='?' (DbType = Double), @p225='?' (DbType = DateTime2), @p226='?' (DbType = DateTime2), @p227='?' (DbType = Double), @p228='?' (DbType = Double), @p229='?' (DbType = Double), @p230='?' (Size = 450), @p231='?' (DbType = Double), @p232='?' (DbType = DateTime2), @p233='?' (DbType = DateTime2), @p234='?' (DbType = Double), @p235='?' (DbType = Double), @p236='?' (DbType = Double), @p237='?' (Size = 450), @p238='?' (DbType = Double), @p239='?' (DbType = DateTime2), @p240='?' (DbType = DateTime2), @p241='?' (DbType = Double), @p242='?' (DbType = Double), @p243='?' (DbType = Double), @p244='?' (Size = 450), @p245='?' (DbType = Double), @p246='?' (DbType = DateTime2), @p247='?' (DbType = DateTime2), @p248='?' (DbType = Double), @p249='?' (DbType = Double), @p250='?' (DbType = Double), @p251='?' (Size = 450), @p252='?' (DbType = Double), @p253='?' (DbType = DateTime2), @p254='?' (DbType = DateTime2), @p255='?' (DbType = Double), @p256='?' (DbType = Double), @p257='?' (DbType = Double), @p258='?' (Size = 450), @p259='?' (DbType = Double), @p260='?' (DbType = DateTime2), @p261='?' (DbType = DateTime2), @p262='?' (DbType = Double), @p263='?' (DbType = Double), @p264='?' (DbType = Double), @p265='?' (Size = 450), @p266='?' (DbType = Double), @p267='?' (DbType = DateTime2), @p268='?' (DbType = DateTime2), @p269='?' (DbType = Double), @p270='?' (DbType = Double), @p271='?' (DbType = Double), @p272='?' (Size = 450), @p273='?' (DbType = Double), @p274='?' (DbType = DateTime2), @p275='?' (DbType = DateTime2), @p276='?' (DbType = Double), @p277='?' (DbType = Double), @p278='?' (DbType = Double), @p279='?' (Size = 450), @p280='?' (DbType = Double), @p281='?' (DbType = DateTime2), @p282='?' (DbType = DateTime2), @p283='?' (DbType = Double), @p284='?' (DbType = Double), @p285='?' (DbType = Double), @p286='?' (Size = 450), @p287='?' (DbType = Double), @p288='?' (DbType = DateTime2), @p289='?' (DbType = DateTime2), @p290='?' (DbType = Double), @p291='?' (DbType = Double), @p292='?' (DbType = Double), @p293='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
DECLARE @inserted0 TABLE ([Id] int, [_Position] [int]);
MERGE [QuarterlyEarning] USING (
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, 0),
(@p7, @p8, @p9, @p10, @p11, @p12, @p13, 1),
(@p14, @p15, @p16, @p17, @p18, @p19, @p20, 2),
(@p21, @p22, @p23, @p24, @p25, @p26, @p27, 3),
(@p28, @p29, @p30, @p31, @p32, @p33, @p34, 4),
(@p35, @p36, @p37, @p38, @p39, @p40, @p41, 5),
(@p42, @p43, @p44, @p45, @p46, @p47, @p48, 6),
(@p49, @p50, @p51, @p52, @p53, @p54, @p55, 7),
(@p56, @p57, @p58, @p59, @p60, @p61, @p62, 8),
(@p63, @p64, @p65, @p66, @p67, @p68, @p69, 9),
(@p70, @p71, @p72, @p73, @p74, @p75, @p76, 10),
(@p77, @p78, @p79, @p80, @p81, @p82, @p83, 11),
(@p84, @p85, @p86, @p87, @p88, @p89, @p90, 12),
(@p91, @p92, @p93, @p94, @p95, @p96, @p97, 13),
(@p98, @p99, @p100, @p101, @p102, @p103, @p104, 14),
(@p105, @p106, @p107, @p108, @p109, @p110, @p111, 15),
(@p112, @p113, @p114, @p115, @p116, @p117, @p118, 16),
(@p119, @p120, @p121, @p122, @p123, @p124, @p125, 17),
(@p126, @p127, @p128, @p129, @p130, @p131, @p132, 18),
(@p133, @p134, @p135, @p136, @p137, @p138, @p139, 19),
(@p140, @p141, @p142, @p143, @p144, @p145, @p146, 20),
(@p147, @p148, @p149, @p150, @p151, @p152, @p153, 21),
(@p154, @p155, @p156, @p157, @p158, @p159, @p160, 22),
(@p161, @p162, @p163, @p164, @p165, @p166, @p167, 23),
(@p168, @p169, @p170, @p171, @p172, @p173, @p174, 24),
(@p175, @p176, @p177, @p178, @p179, @p180, @p181, 25),
(@p182, @p183, @p184, @p185, @p186, @p187, @p188, 26),
(@p189, @p190, @p191, @p192, @p193, @p194, @p195, 27),
(@p196, @p197, @p198, @p199, @p200, @p201, @p202, 28),
(@p203, @p204, @p205, @p206, @p207, @p208, @p209, 29),
(@p210, @p211, @p212, @p213, @p214, @p215, @p216, 30),
(@p217, @p218, @p219, @p220, @p221, @p222, @p223, 31),
(@p224, @p225, @p226, @p227, @p228, @p229, @p230, 32),
(@p231, @p232, @p233, @p234, @p235, @p236, @p237, 33),
(@p238, @p239, @p240, @p241, @p242, @p243, @p244, 34),
(@p245, @p246, @p247, @p248, @p249, @p250, @p251, 35),
(@p252, @p253, @p254, @p255, @p256, @p257, @p258, 36),
(@p259, @p260, @p261, @p262, @p263, @p264, @p265, 37),
(@p266, @p267, @p268, @p269, @p270, @p271, @p272, 38),
(@p273, @p274, @p275, @p276, @p277, @p278, @p279, 39),
(@p280, @p281, @p282, @p283, @p284, @p285, @p286, 40),
(@p287, @p288, @p289, @p290, @p291, @p292, @p293, 41)) AS i ([EstimatedEPS], [FiscalDateEnding], [ReportedDate], [ReportedEPS], [Surprise], [SurprisePercentage], [Symbol], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([EstimatedEPS], [FiscalDateEnding], [ReportedDate], [ReportedEPS], [Surprise], [SurprisePercentage], [Symbol])
VALUES (i.[EstimatedEPS], i.[FiscalDateEnding], i.[ReportedDate], i.[ReportedEPS], i.[Surprise], i.[SurprisePercentage], i.[Symbol])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted0;

SELECT [i].[Id] FROM @inserted0 i
ORDER BY [i].[_Position];
2022-05-12 01:12:17.184 +03:00 [INF] Executed DbCommand (13ms) [Parameters=[@p0='?' (DbType = Double), @p1='?' (DbType = DateTime2), @p2='?' (DbType = DateTime2), @p3='?' (DbType = Double), @p4='?' (DbType = Double), @p5='?' (DbType = Double), @p6='?' (Size = 450), @p7='?' (DbType = Double), @p8='?' (DbType = DateTime2), @p9='?' (DbType = DateTime2), @p10='?' (DbType = Double), @p11='?' (DbType = Double), @p12='?' (DbType = Double), @p13='?' (Size = 450), @p14='?' (DbType = Double), @p15='?' (DbType = DateTime2), @p16='?' (DbType = DateTime2), @p17='?' (DbType = Double), @p18='?' (DbType = Double), @p19='?' (DbType = Double), @p20='?' (Size = 450), @p21='?' (DbType = Double), @p22='?' (DbType = DateTime2), @p23='?' (DbType = DateTime2), @p24='?' (DbType = Double), @p25='?' (DbType = Double), @p26='?' (DbType = Double), @p27='?' (Size = 450), @p28='?' (DbType = Double), @p29='?' (DbType = DateTime2), @p30='?' (DbType = DateTime2), @p31='?' (DbType = Double), @p32='?' (DbType = Double), @p33='?' (DbType = Double), @p34='?' (Size = 450), @p35='?' (DbType = Double), @p36='?' (DbType = DateTime2), @p37='?' (DbType = DateTime2), @p38='?' (DbType = Double), @p39='?' (DbType = Double), @p40='?' (DbType = Double), @p41='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
DECLARE @inserted0 TABLE ([Id] int, [_Position] [int]);
MERGE [QuarterlyEarning] USING (
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, 0),
(@p7, @p8, @p9, @p10, @p11, @p12, @p13, 1),
(@p14, @p15, @p16, @p17, @p18, @p19, @p20, 2),
(@p21, @p22, @p23, @p24, @p25, @p26, @p27, 3),
(@p28, @p29, @p30, @p31, @p32, @p33, @p34, 4),
(@p35, @p36, @p37, @p38, @p39, @p40, @p41, 5)) AS i ([EstimatedEPS], [FiscalDateEnding], [ReportedDate], [ReportedEPS], [Surprise], [SurprisePercentage], [Symbol], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([EstimatedEPS], [FiscalDateEnding], [ReportedDate], [ReportedEPS], [Surprise], [SurprisePercentage], [Symbol])
VALUES (i.[EstimatedEPS], i.[FiscalDateEnding], i.[ReportedDate], i.[ReportedEPS], i.[Surprise], i.[SurprisePercentage], i.[Symbol])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted0;

SELECT [i].[Id] FROM @inserted0 i
ORDER BY [i].[_Position];
2022-05-12 01:12:17.192 +03:00 [INF] AddOrUpdate run successful.
2022-05-12 01:12:17.278 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.BalanceSheet with Symbol BFAC-WS
2022-05-12 01:12:17.280 +03:00 [INF] Generating URI for BALANCE_SHEET with params: symbol: BFAC-WS
2022-05-12 01:12:17.280 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BFAC-WS
2022-05-12 01:12:17.281 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BFAC-WS".
2022-05-12 01:12:19.423 +03:00 [INF] Response has success status code
2022-05-12 01:12:19.423 +03:00 [INF] Trying to deserialize response.
2022-05-12 01:12:19.424 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 01:12:19.435 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__symbol_0
2022-05-12 01:12:19.437 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.BalanceSheet.
2022-05-12 01:12:19.444 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [b].[Symbol], [b].[ExistInApi], [b].[LastApiRefresh], [b].[LastLocalRefresh]
FROM [BalanceSheets] AS [b]
WHERE [b].[Symbol] = @__entity_Symbol_0
2022-05-12 01:12:19.445 +03:00 [INF] Entity does not exist. Adding to DB.
2022-05-12 01:12:19.458 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = Boolean), @p2='?' (DbType = DateTime2), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [BalanceSheets] ([Symbol], [ExistInApi], [LastApiRefresh], [LastLocalRefresh])
VALUES (@p0, @p1, @p2, @p3);
2022-05-12 01:12:19.465 +03:00 [INF] AddOrUpdate run successful.
2022-05-12 01:12:23.889 +03:00 [INF] Response has success status code
2022-05-12 01:12:23.890 +03:00 [INF] Trying to deserialize response.
2022-05-12 01:12:23.891 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 01:12:23.901 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__symbol_0
2022-05-12 01:12:23.903 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.CashFlow.
2022-05-12 01:12:23.911 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[ExistInApi], [c].[LastApiRefresh], [c].[LastLocalRefresh]
FROM [CashFlows] AS [c]
WHERE [c].[Symbol] = @__entity_Symbol_0
2022-05-12 01:12:23.913 +03:00 [INF] Entity does not exist. Adding to DB.
2022-05-12 01:12:23.925 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = Boolean), @p2='?' (DbType = DateTime2), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [CashFlows] ([Symbol], [ExistInApi], [LastApiRefresh], [LastLocalRefresh])
VALUES (@p0, @p1, @p2, @p3);
2022-05-12 01:12:23.932 +03:00 [INF] AddOrUpdate run successful.
2022-05-12 01:12:37.067 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CompanyOverview with Symbol BKTI
2022-05-12 01:12:37.069 +03:00 [INF] Generating URI for OVERVIEW with params: symbol: BKTI
2022-05-12 01:12:37.070 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=OVERVIEW&symbol=BKTI
2022-05-12 01:12:37.070 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=OVERVIEW&symbol=BKTI".
2022-05-12 01:12:37.767 +03:00 [INF] Response has success status code
2022-05-12 01:12:37.767 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.CompanyOverview for symbol BKTI
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyOverview(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 116
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:12:46.267 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.IncomeStatement with Symbol AVDE
2022-05-12 01:12:46.270 +03:00 [INF] Generating URI for INCOME_STATEMENT with params: symbol: AVDE
2022-05-12 01:12:46.271 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=INCOME_STATEMENT&symbol=AVDE
2022-05-12 01:12:46.271 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=INCOME_STATEMENT&symbol=AVDE".
2022-05-12 01:12:47.207 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.Earnings with Symbol AXR
2022-05-12 01:12:47.210 +03:00 [INF] Generating URI for EARNINGS with params: symbol: AXR
2022-05-12 01:12:47.211 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=EARNINGS&symbol=AXR
2022-05-12 01:12:47.211 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=EARNINGS&symbol=AXR".
2022-05-12 01:12:47.225 +03:00 [INF] Response has success status code
2022-05-12 01:12:47.225 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.IncomeStatement for symbol AVDE
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetIncomeStatement(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 69
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:12:47.439 +03:00 [INF] Response has success status code
2022-05-12 01:12:47.439 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.Earnings for symbol AXR
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyEarnings(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 142
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:12:49.477 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.BalanceSheet with Symbol BFAM
2022-05-12 01:12:49.478 +03:00 [INF] Generating URI for BALANCE_SHEET with params: symbol: BFAM
2022-05-12 01:12:49.479 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BFAM
2022-05-12 01:12:49.479 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BFAM".
2022-05-12 01:12:49.708 +03:00 [INF] Response has success status code
2022-05-12 01:12:49.709 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.BalanceSheet for symbol BFAM
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetBalanceSheet(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 82
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:12:53.944 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CashFlow with Symbol AVAV
2022-05-12 01:12:53.947 +03:00 [INF] Generating URI for CASH_FLOW with params: symbol: AVAV
2022-05-12 01:12:53.948 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=CASH_FLOW&symbol=AVAV
2022-05-12 01:12:53.948 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=CASH_FLOW&symbol=AVAV".
2022-05-12 01:12:54.170 +03:00 [INF] Response has success status code
2022-05-12 01:12:54.171 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.CashFlow for symbol AVAV
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCashFlow(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 96
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:13:07.773 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CompanyOverview with Symbol BKU
2022-05-12 01:13:07.774 +03:00 [INF] Generating URI for OVERVIEW with params: symbol: BKU
2022-05-12 01:13:07.775 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=OVERVIEW&symbol=BKU
2022-05-12 01:13:07.775 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=OVERVIEW&symbol=BKU".
2022-05-12 01:13:08.665 +03:00 [INF] Response has success status code
2022-05-12 01:13:08.666 +03:00 [INF] Trying to deserialize response.
2022-05-12 01:13:08.666 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.CompanyOverview.
2022-05-12 01:13:08.667 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 01:13:08.677 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__entity_Symbol_0
2022-05-12 01:13:08.679 +03:00 [INF] Entity already exist. Updating entity DB.
2022-05-12 01:13:08.699 +03:00 [INF] Executed DbCommand (13ms) [Parameters=[@p28='?' (Size = 450), @p0='?' (DbType = Double), @p1='?' (DbType = Double), @p2='?' (DbType = Double), @p3='?' (DbType = Double), @p4='?' (DbType = Double), @p5='?' (DbType = Double), @p6='?' (DbType = Boolean), @p7='?' (DbType = Double), @p8='?' (DbType = DateTime2), @p9='?' (DbType = DateTime2), @p10='?' (DbType = Int64), @p11='?' (DbType = Double), @p12='?' (DbType = Double), @p13='?' (DbType = Double), @p14='?' (DbType = Double), @p15='?' (DbType = Double), @p16='?' (DbType = Double), @p17='?' (DbType = Double), @p18='?' (DbType = Double), @p19='?' (DbType = Double), @p20='?' (DbType = Double), @p21='?' (DbType = Int64), @p22='?' (DbType = Int64), @p23='?' (DbType = Double), @p24='?' (DbType = Double), @p25='?' (DbType = Double), @p26='?' (DbType = Double), @p27='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [CompanyOverviews] SET [AnalystTargetPrice] = @p0, [BookValue] = @p1, [DilutedEPSTTM] = @p2, [DividendPerShare] = @p3, [DividendYield] = @p4, [EPS] = @p5, [ExistInApi] = @p6, [ForwardPE] = @p7, [LastLocalRefresh] = @p8, [LatestQuarter] = @p9, [MarketCapitalization] = @p10, [OperatingMarginTTM] = @p11, [PERatio] = @p12, [PriceToBookRatio] = @p13, [PriceToSalesRatioTTM] = @p14, [ProfitMargin] = @p15, [QuarterlyEarningsGrowthYOY] = @p16, [QuarterlyRevenueGrowthYOY] = @p17, [ReturnOnAssetsTTM] = @p18, [ReturnOnEquityTTM] = @p19, [RevenuePerShareTTM] = @p20, [RevenueTTM] = @p21, [SharesOutstanding] = @p22, [TrailingPE] = @p23, [_200DayMovingAverage] = @p24, [_50DayMovingAverage] = @p25, [_52WeekHigh] = @p26, [_52WeekLow] = @p27
WHERE [Symbol] = @p28;
SELECT @@ROWCOUNT;
2022-05-12 01:13:08.707 +03:00 [INF] AddOrUpdate run successful.
2022-05-12 01:13:17.241 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.IncomeStatement with Symbol AVDL
2022-05-12 01:13:17.244 +03:00 [INF] Generating URI for INCOME_STATEMENT with params: symbol: AVDL
2022-05-12 01:13:17.245 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=INCOME_STATEMENT&symbol=AVDL
2022-05-12 01:13:17.245 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=INCOME_STATEMENT&symbol=AVDL".
2022-05-12 01:13:17.458 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.Earnings with Symbol AXS
2022-05-12 01:13:17.461 +03:00 [INF] Generating URI for EARNINGS with params: symbol: AXS
2022-05-12 01:13:17.462 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=EARNINGS&symbol=AXS
2022-05-12 01:13:17.463 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=EARNINGS&symbol=AXS".
2022-05-12 01:13:17.804 +03:00 [INF] Response has success status code
2022-05-12 01:13:17.805 +03:00 [INF] Trying to deserialize response.
2022-05-12 01:13:17.806 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 01:13:17.811 +03:00 [INF] Response has success status code
2022-05-12 01:13:17.812 +03:00 [INF] Trying to deserialize response.
2022-05-12 01:13:17.812 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 01:13:17.815 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__symbol_0
2022-05-12 01:13:17.816 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.IncomeStatement.
2022-05-12 01:13:17.819 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__symbol_0
2022-05-12 01:13:17.820 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.Earnings.
2022-05-12 01:13:17.821 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [i].[Symbol], [i].[ExistInApi], [i].[LastApiRefresh], [i].[LastLocalRefresh]
FROM [IncomeStatements] AS [i]
WHERE [i].[Symbol] = @__entity_Symbol_0
2022-05-12 01:13:17.822 +03:00 [INF] Entity does not exist. Adding to DB.
2022-05-12 01:13:17.829 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [e].[Symbol], [e].[ExistInApi], [e].[LastApiRefresh], [e].[LastLocalRefresh]
FROM [Earnings] AS [e]
WHERE [e].[Symbol] = @__entity_Symbol_0
2022-05-12 01:13:17.830 +03:00 [INF] Entity does not exist. Adding to DB.
2022-05-12 01:13:17.837 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = Boolean), @p2='?' (DbType = DateTime2), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [IncomeStatements] ([Symbol], [ExistInApi], [LastApiRefresh], [LastLocalRefresh])
VALUES (@p0, @p1, @p2, @p3);
2022-05-12 01:13:17.844 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = Boolean), @p2='?' (DbType = DateTime2), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Earnings] ([Symbol], [ExistInApi], [LastApiRefresh], [LastLocalRefresh])
VALUES (@p0, @p1, @p2, @p3);
2022-05-12 01:13:17.858 +03:00 [INF] Executed DbCommand (12ms) [Parameters=[@p4='?' (DbType = DateTime2), @p5='?' (DbType = Double), @p6='?' (Size = 450), @p7='?' (DbType = DateTime2), @p8='?' (DbType = Double), @p9='?' (Size = 450), @p10='?' (DbType = DateTime2), @p11='?' (DbType = Double), @p12='?' (Size = 450), @p13='?' (DbType = DateTime2), @p14='?' (DbType = Double), @p15='?' (Size = 450), @p16='?' (DbType = DateTime2), @p17='?' (DbType = Double), @p18='?' (Size = 450), @p19='?' (DbType = DateTime2), @p20='?' (DbType = Double), @p21='?' (Size = 450), @p22='?' (DbType = DateTime2), @p23='?' (DbType = Double), @p24='?' (Size = 450), @p25='?' (DbType = DateTime2), @p26='?' (DbType = Double), @p27='?' (Size = 450), @p28='?' (DbType = DateTime2), @p29='?' (DbType = Double), @p30='?' (Size = 450), @p31='?' (DbType = DateTime2), @p32='?' (DbType = Double), @p33='?' (Size = 450), @p34='?' (DbType = DateTime2), @p35='?' (DbType = Double), @p36='?' (Size = 450), @p37='?' (DbType = DateTime2), @p38='?' (DbType = Double), @p39='?' (Size = 450), @p40='?' (DbType = DateTime2), @p41='?' (DbType = Double), @p42='?' (Size = 450), @p43='?' (DbType = DateTime2), @p44='?' (DbType = Double), @p45='?' (Size = 450), @p46='?' (DbType = DateTime2), @p47='?' (DbType = Double), @p48='?' (Size = 450), @p49='?' (DbType = DateTime2), @p50='?' (DbType = Double), @p51='?' (Size = 450), @p52='?' (DbType = DateTime2), @p53='?' (DbType = Double), @p54='?' (Size = 450), @p55='?' (DbType = DateTime2), @p56='?' (DbType = Double), @p57='?' (Size = 450), @p58='?' (DbType = DateTime2), @p59='?' (DbType = Double), @p60='?' (Size = 450), @p61='?' (DbType = DateTime2), @p62='?' (DbType = Double), @p63='?' (Size = 450), @p64='?' (DbType = Double), @p65='?' (DbType = DateTime2), @p66='?' (DbType = DateTime2), @p67='?' (DbType = Double), @p68='?' (DbType = Double), @p69='?' (DbType = Double), @p70='?' (Size = 450), @p71='?' (DbType = Double), @p72='?' (DbType = DateTime2), @p73='?' (DbType = DateTime2), @p74='?' (DbType = Double), @p75='?' (DbType = Double), @p76='?' (DbType = Double), @p77='?' (Size = 450), @p78='?' (DbType = Double), @p79='?' (DbType = DateTime2), @p80='?' (DbType = DateTime2), @p81='?' (DbType = Double), @p82='?' (DbType = Double), @p83='?' (DbType = Double), @p84='?' (Size = 450), @p85='?' (DbType = Double), @p86='?' (DbType = DateTime2), @p87='?' (DbType = DateTime2), @p88='?' (DbType = Double), @p89='?' (DbType = Double), @p90='?' (DbType = Double), @p91='?' (Size = 450), @p92='?' (DbType = Double), @p93='?' (DbType = DateTime2), @p94='?' (DbType = DateTime2), @p95='?' (DbType = Double), @p96='?' (DbType = Double), @p97='?' (DbType = Double), @p98='?' (Size = 450), @p99='?' (DbType = Double), @p100='?' (DbType = DateTime2), @p101='?' (DbType = DateTime2), @p102='?' (DbType = Double), @p103='?' (DbType = Double), @p104='?' (DbType = Double), @p105='?' (Size = 450), @p106='?' (DbType = Double), @p107='?' (DbType = DateTime2), @p108='?' (DbType = DateTime2), @p109='?' (DbType = Double), @p110='?' (DbType = Double), @p111='?' (DbType = Double), @p112='?' (Size = 450), @p113='?' (DbType = Double), @p114='?' (DbType = DateTime2), @p115='?' (DbType = DateTime2), @p116='?' (DbType = Double), @p117='?' (DbType = Double), @p118='?' (DbType = Double), @p119='?' (Size = 450), @p120='?' (DbType = Double), @p121='?' (DbType = DateTime2), @p122='?' (DbType = DateTime2), @p123='?' (DbType = Double), @p124='?' (DbType = Double), @p125='?' (DbType = Double), @p126='?' (Size = 450), @p127='?' (DbType = Double), @p128='?' (DbType = DateTime2), @p129='?' (DbType = DateTime2), @p130='?' (DbType = Double), @p131='?' (DbType = Double), @p132='?' (DbType = Double), @p133='?' (Size = 450), @p134='?' (DbType = Double), @p135='?' (DbType = DateTime2), @p136='?' (DbType = DateTime2), @p137='?' (DbType = Double), @p138='?' (DbType = Double), @p139='?' (DbType = Double), @p140='?' (Size = 450), @p141='?' (DbType = Double), @p142='?' (DbType = DateTime2), @p143='?' (DbType = DateTime2), @p144='?' (DbType = Double), @p145='?' (DbType = Double), @p146='?' (DbType = Double), @p147='?' (Size = 450), @p148='?' (DbType = Double), @p149='?' (DbType = DateTime2), @p150='?' (DbType = DateTime2), @p151='?' (DbType = Double), @p152='?' (DbType = Double), @p153='?' (DbType = Double), @p154='?' (Size = 450), @p155='?' (DbType = Double), @p156='?' (DbType = DateTime2), @p157='?' (DbType = DateTime2), @p158='?' (DbType = Double), @p159='?' (DbType = Double), @p160='?' (DbType = Double), @p161='?' (Size = 450), @p162='?' (DbType = Double), @p163='?' (DbType = DateTime2), @p164='?' (DbType = DateTime2), @p165='?' (DbType = Double), @p166='?' (DbType = Double), @p167='?' (DbType = Double), @p168='?' (Size = 450), @p169='?' (DbType = Double), @p170='?' (DbType = DateTime2), @p171='?' (DbType = DateTime2), @p172='?' (DbType = Double), @p173='?' (DbType = Double), @p174='?' (DbType = Double), @p175='?' (Size = 450), @p176='?' (DbType = Double), @p177='?' (DbType = DateTime2), @p178='?' (DbType = DateTime2), @p179='?' (DbType = Double), @p180='?' (DbType = Double), @p181='?' (DbType = Double), @p182='?' (Size = 450), @p183='?' (DbType = Double), @p184='?' (DbType = DateTime2), @p185='?' (DbType = DateTime2), @p186='?' (DbType = Double), @p187='?' (DbType = Double), @p188='?' (DbType = Double), @p189='?' (Size = 450), @p190='?' (DbType = Double), @p191='?' (DbType = DateTime2), @p192='?' (DbType = DateTime2), @p193='?' (DbType = Double), @p194='?' (DbType = Double), @p195='?' (DbType = Double), @p196='?' (Size = 450), @p197='?' (DbType = Double), @p198='?' (DbType = DateTime2), @p199='?' (DbType = DateTime2), @p200='?' (DbType = Double), @p201='?' (DbType = Double), @p202='?' (DbType = Double), @p203='?' (Size = 450), @p204='?' (DbType = Double), @p205='?' (DbType = DateTime2), @p206='?' (DbType = DateTime2), @p207='?' (DbType = Double), @p208='?' (DbType = Double), @p209='?' (DbType = Double), @p210='?' (Size = 450), @p211='?' (DbType = Double), @p212='?' (DbType = DateTime2), @p213='?' (DbType = DateTime2), @p214='?' (DbType = Double), @p215='?' (DbType = Double), @p216='?' (DbType = Double), @p217='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
DECLARE @inserted0 TABLE ([Id] int, [_Position] [int]);
MERGE [AnnualEarning] USING (
VALUES (@p4, @p5, @p6, 0),
(@p7, @p8, @p9, 1),
(@p10, @p11, @p12, 2),
(@p13, @p14, @p15, 3),
(@p16, @p17, @p18, 4),
(@p19, @p20, @p21, 5),
(@p22, @p23, @p24, 6),
(@p25, @p26, @p27, 7),
(@p28, @p29, @p30, 8),
(@p31, @p32, @p33, 9),
(@p34, @p35, @p36, 10),
(@p37, @p38, @p39, 11),
(@p40, @p41, @p42, 12),
(@p43, @p44, @p45, 13),
(@p46, @p47, @p48, 14),
(@p49, @p50, @p51, 15),
(@p52, @p53, @p54, 16),
(@p55, @p56, @p57, 17),
(@p58, @p59, @p60, 18),
(@p61, @p62, @p63, 19)) AS i ([FiscalDateEnding], [ReportedEPS], [Symbol], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([FiscalDateEnding], [ReportedEPS], [Symbol])
VALUES (i.[FiscalDateEnding], i.[ReportedEPS], i.[Symbol])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted0;

SELECT [i].[Id] FROM @inserted0 i
ORDER BY [i].[_Position];

DECLARE @inserted20 TABLE ([Id] int, [_Position] [int]);
MERGE [QuarterlyEarning] USING (
VALUES (@p64, @p65, @p66, @p67, @p68, @p69, @p70, 0),
(@p71, @p72, @p73, @p74, @p75, @p76, @p77, 1),
(@p78, @p79, @p80, @p81, @p82, @p83, @p84, 2),
(@p85, @p86, @p87, @p88, @p89, @p90, @p91, 3),
(@p92, @p93, @p94, @p95, @p96, @p97, @p98, 4),
(@p99, @p100, @p101, @p102, @p103, @p104, @p105, 5),
(@p106, @p107, @p108, @p109, @p110, @p111, @p112, 6),
(@p113, @p114, @p115, @p116, @p117, @p118, @p119, 7),
(@p120, @p121, @p122, @p123, @p124, @p125, @p126, 8),
(@p127, @p128, @p129, @p130, @p131, @p132, @p133, 9),
(@p134, @p135, @p136, @p137, @p138, @p139, @p140, 10),
(@p141, @p142, @p143, @p144, @p145, @p146, @p147, 11),
(@p148, @p149, @p150, @p151, @p152, @p153, @p154, 12),
(@p155, @p156, @p157, @p158, @p159, @p160, @p161, 13),
(@p162, @p163, @p164, @p165, @p166, @p167, @p168, 14),
(@p169, @p170, @p171, @p172, @p173, @p174, @p175, 15),
(@p176, @p177, @p178, @p179, @p180, @p181, @p182, 16),
(@p183, @p184, @p185, @p186, @p187, @p188, @p189, 17),
(@p190, @p191, @p192, @p193, @p194, @p195, @p196, 18),
(@p197, @p198, @p199, @p200, @p201, @p202, @p203, 19),
(@p204, @p205, @p206, @p207, @p208, @p209, @p210, 20),
(@p211, @p212, @p213, @p214, @p215, @p216, @p217, 21)) AS i ([EstimatedEPS], [FiscalDateEnding], [ReportedDate], [ReportedEPS], [Surprise], [SurprisePercentage], [Symbol], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([EstimatedEPS], [FiscalDateEnding], [ReportedDate], [ReportedEPS], [Surprise], [SurprisePercentage], [Symbol])
VALUES (i.[EstimatedEPS], i.[FiscalDateEnding], i.[ReportedDate], i.[ReportedEPS], i.[Surprise], i.[SurprisePercentage], i.[Symbol])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted20;

SELECT [i].[Id] FROM @inserted20 i
ORDER BY [i].[_Position];
2022-05-12 01:13:17.877 +03:00 [INF] Executed DbCommand (15ms) [Parameters=[@p0='?' (DbType = Double), @p1='?' (DbType = DateTime2), @p2='?' (DbType = DateTime2), @p3='?' (DbType = Double), @p4='?' (DbType = Double), @p5='?' (DbType = Double), @p6='?' (Size = 450), @p7='?' (DbType = Double), @p8='?' (DbType = DateTime2), @p9='?' (DbType = DateTime2), @p10='?' (DbType = Double), @p11='?' (DbType = Double), @p12='?' (DbType = Double), @p13='?' (Size = 450), @p14='?' (DbType = Double), @p15='?' (DbType = DateTime2), @p16='?' (DbType = DateTime2), @p17='?' (DbType = Double), @p18='?' (DbType = Double), @p19='?' (DbType = Double), @p20='?' (Size = 450), @p21='?' (DbType = Double), @p22='?' (DbType = DateTime2), @p23='?' (DbType = DateTime2), @p24='?' (DbType = Double), @p25='?' (DbType = Double), @p26='?' (DbType = Double), @p27='?' (Size = 450), @p28='?' (DbType = Double), @p29='?' (DbType = DateTime2), @p30='?' (DbType = DateTime2), @p31='?' (DbType = Double), @p32='?' (DbType = Double), @p33='?' (DbType = Double), @p34='?' (Size = 450), @p35='?' (DbType = Double), @p36='?' (DbType = DateTime2), @p37='?' (DbType = DateTime2), @p38='?' (DbType = Double), @p39='?' (DbType = Double), @p40='?' (DbType = Double), @p41='?' (Size = 450), @p42='?' (DbType = Double), @p43='?' (DbType = DateTime2), @p44='?' (DbType = DateTime2), @p45='?' (DbType = Double), @p46='?' (DbType = Double), @p47='?' (DbType = Double), @p48='?' (Size = 450), @p49='?' (DbType = Double), @p50='?' (DbType = DateTime2), @p51='?' (DbType = DateTime2), @p52='?' (DbType = Double), @p53='?' (DbType = Double), @p54='?' (DbType = Double), @p55='?' (Size = 450), @p56='?' (DbType = Double), @p57='?' (DbType = DateTime2), @p58='?' (DbType = DateTime2), @p59='?' (DbType = Double), @p60='?' (DbType = Double), @p61='?' (DbType = Double), @p62='?' (Size = 450), @p63='?' (DbType = Double), @p64='?' (DbType = DateTime2), @p65='?' (DbType = DateTime2), @p66='?' (DbType = Double), @p67='?' (DbType = Double), @p68='?' (DbType = Double), @p69='?' (Size = 450), @p70='?' (DbType = Double), @p71='?' (DbType = DateTime2), @p72='?' (DbType = DateTime2), @p73='?' (DbType = Double), @p74='?' (DbType = Double), @p75='?' (DbType = Double), @p76='?' (Size = 450), @p77='?' (DbType = Double), @p78='?' (DbType = DateTime2), @p79='?' (DbType = DateTime2), @p80='?' (DbType = Double), @p81='?' (DbType = Double), @p82='?' (DbType = Double), @p83='?' (Size = 450), @p84='?' (DbType = Double), @p85='?' (DbType = DateTime2), @p86='?' (DbType = DateTime2), @p87='?' (DbType = Double), @p88='?' (DbType = Double), @p89='?' (DbType = Double), @p90='?' (Size = 450), @p91='?' (DbType = Double), @p92='?' (DbType = DateTime2), @p93='?' (DbType = DateTime2), @p94='?' (DbType = Double), @p95='?' (DbType = Double), @p96='?' (DbType = Double), @p97='?' (Size = 450), @p98='?' (DbType = Double), @p99='?' (DbType = DateTime2), @p100='?' (DbType = DateTime2), @p101='?' (DbType = Double), @p102='?' (DbType = Double), @p103='?' (DbType = Double), @p104='?' (Size = 450), @p105='?' (DbType = Double), @p106='?' (DbType = DateTime2), @p107='?' (DbType = DateTime2), @p108='?' (DbType = Double), @p109='?' (DbType = Double), @p110='?' (DbType = Double), @p111='?' (Size = 450), @p112='?' (DbType = Double), @p113='?' (DbType = DateTime2), @p114='?' (DbType = DateTime2), @p115='?' (DbType = Double), @p116='?' (DbType = Double), @p117='?' (DbType = Double), @p118='?' (Size = 450), @p119='?' (DbType = Double), @p120='?' (DbType = DateTime2), @p121='?' (DbType = DateTime2), @p122='?' (DbType = Double), @p123='?' (DbType = Double), @p124='?' (DbType = Double), @p125='?' (Size = 450), @p126='?' (DbType = Double), @p127='?' (DbType = DateTime2), @p128='?' (DbType = DateTime2), @p129='?' (DbType = Double), @p130='?' (DbType = Double), @p131='?' (DbType = Double), @p132='?' (Size = 450), @p133='?' (DbType = Double), @p134='?' (DbType = DateTime2), @p135='?' (DbType = DateTime2), @p136='?' (DbType = Double), @p137='?' (DbType = Double), @p138='?' (DbType = Double), @p139='?' (Size = 450), @p140='?' (DbType = Double), @p141='?' (DbType = DateTime2), @p142='?' (DbType = DateTime2), @p143='?' (DbType = Double), @p144='?' (DbType = Double), @p145='?' (DbType = Double), @p146='?' (Size = 450), @p147='?' (DbType = Double), @p148='?' (DbType = DateTime2), @p149='?' (DbType = DateTime2), @p150='?' (DbType = Double), @p151='?' (DbType = Double), @p152='?' (DbType = Double), @p153='?' (Size = 450), @p154='?' (DbType = Double), @p155='?' (DbType = DateTime2), @p156='?' (DbType = DateTime2), @p157='?' (DbType = Double), @p158='?' (DbType = Double), @p159='?' (DbType = Double), @p160='?' (Size = 450), @p161='?' (DbType = Double), @p162='?' (DbType = DateTime2), @p163='?' (DbType = DateTime2), @p164='?' (DbType = Double), @p165='?' (DbType = Double), @p166='?' (DbType = Double), @p167='?' (Size = 450), @p168='?' (DbType = Double), @p169='?' (DbType = DateTime2), @p170='?' (DbType = DateTime2), @p171='?' (DbType = Double), @p172='?' (DbType = Double), @p173='?' (DbType = Double), @p174='?' (Size = 450), @p175='?' (DbType = Double), @p176='?' (DbType = DateTime2), @p177='?' (DbType = DateTime2), @p178='?' (DbType = Double), @p179='?' (DbType = Double), @p180='?' (DbType = Double), @p181='?' (Size = 450), @p182='?' (DbType = Double), @p183='?' (DbType = DateTime2), @p184='?' (DbType = DateTime2), @p185='?' (DbType = Double), @p186='?' (DbType = Double), @p187='?' (DbType = Double), @p188='?' (Size = 450), @p189='?' (DbType = Double), @p190='?' (DbType = DateTime2), @p191='?' (DbType = DateTime2), @p192='?' (DbType = Double), @p193='?' (DbType = Double), @p194='?' (DbType = Double), @p195='?' (Size = 450), @p196='?' (DbType = Double), @p197='?' (DbType = DateTime2), @p198='?' (DbType = DateTime2), @p199='?' (DbType = Double), @p200='?' (DbType = Double), @p201='?' (DbType = Double), @p202='?' (Size = 450), @p203='?' (DbType = Double), @p204='?' (DbType = DateTime2), @p205='?' (DbType = DateTime2), @p206='?' (DbType = Double), @p207='?' (DbType = Double), @p208='?' (DbType = Double), @p209='?' (Size = 450), @p210='?' (DbType = Double), @p211='?' (DbType = DateTime2), @p212='?' (DbType = DateTime2), @p213='?' (DbType = Double), @p214='?' (DbType = Double), @p215='?' (DbType = Double), @p216='?' (Size = 450), @p217='?' (DbType = Double), @p218='?' (DbType = DateTime2), @p219='?' (DbType = DateTime2), @p220='?' (DbType = Double), @p221='?' (DbType = Double), @p222='?' (DbType = Double), @p223='?' (Size = 450), @p224='?' (DbType = Double), @p225='?' (DbType = DateTime2), @p226='?' (DbType = DateTime2), @p227='?' (DbType = Double), @p228='?' (DbType = Double), @p229='?' (DbType = Double), @p230='?' (Size = 450), @p231='?' (DbType = Double), @p232='?' (DbType = DateTime2), @p233='?' (DbType = DateTime2), @p234='?' (DbType = Double), @p235='?' (DbType = Double), @p236='?' (DbType = Double), @p237='?' (Size = 450), @p238='?' (DbType = Double), @p239='?' (DbType = DateTime2), @p240='?' (DbType = DateTime2), @p241='?' (DbType = Double), @p242='?' (DbType = Double), @p243='?' (DbType = Double), @p244='?' (Size = 450), @p245='?' (DbType = Double), @p246='?' (DbType = DateTime2), @p247='?' (DbType = DateTime2), @p248='?' (DbType = Double), @p249='?' (DbType = Double), @p250='?' (DbType = Double), @p251='?' (Size = 450), @p252='?' (DbType = Double), @p253='?' (DbType = DateTime2), @p254='?' (DbType = DateTime2), @p255='?' (DbType = Double), @p256='?' (DbType = Double), @p257='?' (DbType = Double), @p258='?' (Size = 450), @p259='?' (DbType = Double), @p260='?' (DbType = DateTime2), @p261='?' (DbType = DateTime2), @p262='?' (DbType = Double), @p263='?' (DbType = Double), @p264='?' (DbType = Double), @p265='?' (Size = 450), @p266='?' (DbType = Double), @p267='?' (DbType = DateTime2), @p268='?' (DbType = DateTime2), @p269='?' (DbType = Double), @p270='?' (DbType = Double), @p271='?' (DbType = Double), @p272='?' (Size = 450), @p273='?' (DbType = Double), @p274='?' (DbType = DateTime2), @p275='?' (DbType = DateTime2), @p276='?' (DbType = Double), @p277='?' (DbType = Double), @p278='?' (DbType = Double), @p279='?' (Size = 450), @p280='?' (DbType = Double), @p281='?' (DbType = DateTime2), @p282='?' (DbType = DateTime2), @p283='?' (DbType = Double), @p284='?' (DbType = Double), @p285='?' (DbType = Double), @p286='?' (Size = 450), @p287='?' (DbType = Double), @p288='?' (DbType = DateTime2), @p289='?' (DbType = DateTime2), @p290='?' (DbType = Double), @p291='?' (DbType = Double), @p292='?' (DbType = Double), @p293='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
DECLARE @inserted0 TABLE ([Id] int, [_Position] [int]);
MERGE [QuarterlyEarning] USING (
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, 0),
(@p7, @p8, @p9, @p10, @p11, @p12, @p13, 1),
(@p14, @p15, @p16, @p17, @p18, @p19, @p20, 2),
(@p21, @p22, @p23, @p24, @p25, @p26, @p27, 3),
(@p28, @p29, @p30, @p31, @p32, @p33, @p34, 4),
(@p35, @p36, @p37, @p38, @p39, @p40, @p41, 5),
(@p42, @p43, @p44, @p45, @p46, @p47, @p48, 6),
(@p49, @p50, @p51, @p52, @p53, @p54, @p55, 7),
(@p56, @p57, @p58, @p59, @p60, @p61, @p62, 8),
(@p63, @p64, @p65, @p66, @p67, @p68, @p69, 9),
(@p70, @p71, @p72, @p73, @p74, @p75, @p76, 10),
(@p77, @p78, @p79, @p80, @p81, @p82, @p83, 11),
(@p84, @p85, @p86, @p87, @p88, @p89, @p90, 12),
(@p91, @p92, @p93, @p94, @p95, @p96, @p97, 13),
(@p98, @p99, @p100, @p101, @p102, @p103, @p104, 14),
(@p105, @p106, @p107, @p108, @p109, @p110, @p111, 15),
(@p112, @p113, @p114, @p115, @p116, @p117, @p118, 16),
(@p119, @p120, @p121, @p122, @p123, @p124, @p125, 17),
(@p126, @p127, @p128, @p129, @p130, @p131, @p132, 18),
(@p133, @p134, @p135, @p136, @p137, @p138, @p139, 19),
(@p140, @p141, @p142, @p143, @p144, @p145, @p146, 20),
(@p147, @p148, @p149, @p150, @p151, @p152, @p153, 21),
(@p154, @p155, @p156, @p157, @p158, @p159, @p160, 22),
(@p161, @p162, @p163, @p164, @p165, @p166, @p167, 23),
(@p168, @p169, @p170, @p171, @p172, @p173, @p174, 24),
(@p175, @p176, @p177, @p178, @p179, @p180, @p181, 25),
(@p182, @p183, @p184, @p185, @p186, @p187, @p188, 26),
(@p189, @p190, @p191, @p192, @p193, @p194, @p195, 27),
(@p196, @p197, @p198, @p199, @p200, @p201, @p202, 28),
(@p203, @p204, @p205, @p206, @p207, @p208, @p209, 29),
(@p210, @p211, @p212, @p213, @p214, @p215, @p216, 30),
(@p217, @p218, @p219, @p220, @p221, @p222, @p223, 31),
(@p224, @p225, @p226, @p227, @p228, @p229, @p230, 32),
(@p231, @p232, @p233, @p234, @p235, @p236, @p237, 33),
(@p238, @p239, @p240, @p241, @p242, @p243, @p244, 34),
(@p245, @p246, @p247, @p248, @p249, @p250, @p251, 35),
(@p252, @p253, @p254, @p255, @p256, @p257, @p258, 36),
(@p259, @p260, @p261, @p262, @p263, @p264, @p265, 37),
(@p266, @p267, @p268, @p269, @p270, @p271, @p272, 38),
(@p273, @p274, @p275, @p276, @p277, @p278, @p279, 39),
(@p280, @p281, @p282, @p283, @p284, @p285, @p286, 40),
(@p287, @p288, @p289, @p290, @p291, @p292, @p293, 41)) AS i ([EstimatedEPS], [FiscalDateEnding], [ReportedDate], [ReportedEPS], [Surprise], [SurprisePercentage], [Symbol], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([EstimatedEPS], [FiscalDateEnding], [ReportedDate], [ReportedEPS], [Surprise], [SurprisePercentage], [Symbol])
VALUES (i.[EstimatedEPS], i.[FiscalDateEnding], i.[ReportedDate], i.[ReportedEPS], i.[Surprise], i.[SurprisePercentage], i.[Symbol])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted0;

SELECT [i].[Id] FROM @inserted0 i
ORDER BY [i].[_Position];
2022-05-12 01:13:17.878 +03:00 [INF] Executed DbCommand (39ms) [Parameters=[@p4='?' (DbType = Int64), @p5='?' (DbType = Double), @p6='?' (DbType = Double), @p7='?' (DbType = Int64), @p8='?' (DbType = Int64), @p9='?' (DbType = Int64), @p10='?' (DbType = Double), @p11='?' (DbType = DateTime2), @p12='?' (DbType = Double), @p13='?' (DbType = Double), @p14='?' (DbType = Int64), @p15='?' (DbType = Int64), @p16='?' (DbType = Double), @p17='?' (DbType = Int64), @p18='?' (DbType = Int64), @p19='?' (DbType = Double), @p20='?' (DbType = Double), @p21='?' (DbType = Double), @p22='?' (DbType = Int64), @p23='?' (DbType = Double), @p24='?' (DbType = Double), @p25='?' (DbType = Int64), @p26='?' (Size = 4000), @p27='?' (DbType = Int64), @p28='?' (DbType = Double), @p29='?' (Size = 450), @p30='?' (DbType = Int64), @p31='?' (DbType = Int64), @p32='?' (DbType = Double), @p33='?' (DbType = Double), @p34='?' (DbType = Int64), @p35='?' (DbType = Int64), @p36='?' (DbType = Int64), @p37='?' (DbType = Double), @p38='?' (DbType = DateTime2), @p39='?' (DbType = Double), @p40='?' (DbType = Double), @p41='?' (DbType = Int64), @p42='?' (DbType = Int64), @p43='?' (DbType = Double), @p44='?' (DbType = Int64), @p45='?' (DbType = Int64), @p46='?' (DbType = Double), @p47='?' (DbType = Double), @p48='?' (DbType = Double), @p49='?' (DbType = Int64), @p50='?' (DbType = Double), @p51='?' (DbType = Double), @p52='?' (DbType = Int64), @p53='?' (Size = 4000), @p54='?' (DbType = Int64), @p55='?' (DbType = Double), @p56='?' (Size = 450), @p57='?' (DbType = Int64), @p58='?' (DbType = Int64), @p59='?' (DbType = Double), @p60='?' (DbType = Double), @p61='?' (DbType = Int64), @p62='?' (DbType = Int64), @p63='?' (DbType = Int64), @p64='?' (DbType = Double), @p65='?' (DbType = DateTime2), @p66='?' (DbType = Double), @p67='?' (DbType = Double), @p68='?' (DbType = Int64), @p69='?' (DbType = Int64), @p70='?' (DbType = Double), @p71='?' (DbType = Int64), @p72='?' (DbType = Int64), @p73='?' (DbType = Double), @p74='?' (DbType = Double), @p75='?' (DbType = Double), @p76='?' (DbType = Int64), @p77='?' (DbType = Double), @p78='?' (DbType = Double), @p79='?' (DbType = Int64), @p80='?' (Size = 4000), @p81='?' (DbType = Int64), @p82='?' (DbType = Double), @p83='?' (Size = 450), @p84='?' (DbType = Int64), @p85='?' (DbType = Int64), @p86='?' (DbType = Double), @p87='?' (DbType = Double), @p88='?' (DbType = Int64), @p89='?' (DbType = Int64), @p90='?' (DbType = Int64), @p91='?' (DbType = Double), @p92='?' (DbType = DateTime2), @p93='?' (DbType = Double), @p94='?' (DbType = Double), @p95='?' (DbType = Int64), @p96='?' (DbType = Int64), @p97='?' (DbType = Double), @p98='?' (DbType = Int64), @p99='?' (DbType = Int64), @p100='?' (DbType = Double), @p101='?' (DbType = Double), @p102='?' (DbType = Double), @p103='?' (DbType = Int64), @p104='?' (DbType = Double), @p105='?' (DbType = Double), @p106='?' (DbType = Int64), @p107='?' (Size = 4000), @p108='?' (DbType = Int64), @p109='?' (DbType = Double), @p110='?' (Size = 450), @p111='?' (DbType = Int64), @p112='?' (DbType = Int64), @p113='?' (DbType = Double), @p114='?' (DbType = Double), @p115='?' (DbType = Int64), @p116='?' (DbType = Int64), @p117='?' (DbType = Int64), @p118='?' (DbType = Double), @p119='?' (DbType = DateTime2), @p120='?' (DbType = Double), @p121='?' (DbType = Double), @p122='?' (DbType = Int64), @p123='?' (DbType = Int64), @p124='?' (DbType = Double), @p125='?' (DbType = Int64), @p126='?' (DbType = Int64), @p127='?' (DbType = Double), @p128='?' (DbType = Double), @p129='?' (DbType = Double), @p130='?' (DbType = Int64), @p131='?' (DbType = Double), @p132='?' (DbType = Double), @p133='?' (DbType = Int64), @p134='?' (Size = 4000), @p135='?' (DbType = Int64), @p136='?' (DbType = Double), @p137='?' (Size = 450), @p138='?' (DbType = Int64), @p139='?' (DbType = Int64), @p140='?' (DbType = Double), @p141='?' (DbType = Double), @p142='?' (DbType = Int64), @p143='?' (DbType = Int64), @p144='?' (DbType = Int64), @p145='?' (DbType = Double), @p146='?' (DbType = DateTime2), @p147='?' (DbType = Double), @p148='?' (DbType = Double), @p149='?' (DbType = Int64), @p150='?' (DbType = Int64), @p151='?' (DbType = Double), @p152='?' (DbType = Int64), @p153='?' (DbType = Int64), @p154='?' (DbType = Double), @p155='?' (DbType = Double), @p156='?' (DbType = Double), @p157='?' (DbType = Int64), @p158='?' (DbType = Double), @p159='?' (DbType = Double), @p160='?' (DbType = Int64), @p161='?' (Size = 4000), @p162='?' (DbType = Int64), @p163='?' (DbType = Double), @p164='?' (Size = 450), @p165='?' (DbType = Int64), @p166='?' (DbType = Int64), @p167='?' (DbType = Double), @p168='?' (DbType = Double), @p169='?' (DbType = Int64), @p170='?' (DbType = Int64), @p171='?' (DbType = Int64), @p172='?' (DbType = Double), @p173='?' (DbType = DateTime2), @p174='?' (DbType = Double), @p175='?' (DbType = Double), @p176='?' (DbType = Int64), @p177='?' (DbType = Int64), @p178='?' (DbType = Double), @p179='?' (DbType = Int64), @p180='?' (DbType = Int64), @p181='?' (DbType = Double), @p182='?' (DbType = Double), @p183='?' (DbType = Double), @p184='?' (DbType = Int64), @p185='?' (DbType = Double), @p186='?' (DbType = Double), @p187='?' (DbType = Int64), @p188='?' (Size = 4000), @p189='?' (DbType = Int64), @p190='?' (DbType = Double), @p191='?' (Size = 450), @p192='?' (DbType = Int64), @p193='?' (DbType = Int64), @p194='?' (DbType = Double), @p195='?' (DbType = Double), @p196='?' (DbType = Int64), @p197='?' (DbType = Int64), @p198='?' (DbType = Int64), @p199='?' (DbType = Double), @p200='?' (DbType = DateTime2), @p201='?' (DbType = Double), @p202='?' (DbType = Double), @p203='?' (DbType = Int64), @p204='?' (DbType = Int64), @p205='?' (DbType = Double), @p206='?' (DbType = Int64), @p207='?' (DbType = Int64), @p208='?' (DbType = Double), @p209='?' (DbType = Double), @p210='?' (DbType = Double), @p211='?' (DbType = Int64), @p212='?' (DbType = Double), @p213='?' (DbType = Double), @p214='?' (DbType = Int64), @p215='?' (Size = 4000), @p216='?' (DbType = Int64), @p217='?' (DbType = Double), @p218='?' (Size = 450), @p219='?' (DbType = Int64), @p220='?' (DbType = Int64), @p221='?' (DbType = Double), @p222='?' (DbType = Double), @p223='?' (DbType = Int64), @p224='?' (DbType = Int64), @p225='?' (DbType = Int64), @p226='?' (DbType = Double), @p227='?' (DbType = DateTime2), @p228='?' (DbType = Double), @p229='?' (DbType = Double), @p230='?' (DbType = Int64), @p231='?' (DbType = Int64), @p232='?' (DbType = Double), @p233='?' (DbType = Int64), @p234='?' (DbType = Int64), @p235='?' (DbType = Double), @p236='?' (DbType = Double), @p237='?' (DbType = Double), @p238='?' (DbType = Int64), @p239='?' (DbType = Double), @p240='?' (DbType = Double), @p241='?' (DbType = Int64), @p242='?' (Size = 4000), @p243='?' (DbType = Int64), @p244='?' (DbType = Double), @p245='?' (Size = 450), @p246='?' (DbType = Int64), @p247='?' (DbType = Int64), @p248='?' (DbType = Double), @p249='?' (DbType = Double), @p250='?' (DbType = Int64), @p251='?' (DbType = Int64), @p252='?' (DbType = Int64), @p253='?' (DbType = Double), @p254='?' (DbType = DateTime2), @p255='?' (DbType = Double), @p256='?' (DbType = Double), @p257='?' (DbType = Int64), @p258='?' (DbType = Int64), @p259='?' (DbType = Double), @p260='?' (DbType = Int64), @p261='?' (DbType = Int64), @p262='?' (DbType = Double), @p263='?' (DbType = Double), @p264='?' (DbType = Double), @p265='?' (DbType = Int64), @p266='?' (DbType = Double), @p267='?' (DbType = Double), @p268='?' (DbType = Int64), @p269='?' (Size = 4000), @p270='?' (DbType = Int64), @p271='?' (DbType = Double), @p272='?' (Size = 450), @p273='?' (DbType = Int64), @p274='?' (DbType = Int64), @p275='?' (DbType = Double), @p276='?' (DbType = Double), @p277='?' (DbType = Int64), @p278='?' (DbType = Int64), @p279='?' (DbType = Int64), @p280='?' (DbType = Double), @p281='?' (DbType = DateTime2), @p282='?' (DbType = Double), @p283='?' (DbType = Double), @p284='?' (DbType = Int64), @p285='?' (DbType = Int64), @p286='?' (DbType = Double), @p287='?' (DbType = Int64), @p288='?' (DbType = Int64), @p289='?' (DbType = Double), @p290='?' (DbType = Double), @p291='?' (DbType = Double), @p292='?' (DbType = Int64), @p293='?' (DbType = Double), @p294='?' (DbType = Double), @p295='?' (DbType = Int64), @p296='?' (Size = 4000), @p297='?' (DbType = Int64), @p298='?' (DbType = Double), @p299='?' (Size = 450), @p300='?' (DbType = Int64), @p301='?' (DbType = Int64), @p302='?' (DbType = Double), @p303='?' (DbType = Double), @p304='?' (DbType = Int64), @p305='?' (DbType = Int64), @p306='?' (DbType = Int64), @p307='?' (DbType = Double), @p308='?' (DbType = DateTime2), @p309='?' (DbType = Double), @p310='?' (DbType = Double), @p311='?' (DbType = Int64), @p312='?' (DbType = Int64), @p313='?' (DbType = Double), @p314='?' (DbType = Int64), @p315='?' (DbType = Int64), @p316='?' (DbType = Double), @p317='?' (DbType = Double), @p318='?' (DbType = Double), @p319='?' (DbType = Int64), @p320='?' (DbType = Double), @p321='?' (DbType = Double), @p322='?' (DbType = Int64), @p323='?' (Size = 4000), @p324='?' (DbType = Int64), @p325='?' (DbType = Double), @p326='?' (Size = 450), @p327='?' (DbType = Int64), @p328='?' (DbType = Int64), @p329='?' (DbType = Double), @p330='?' (DbType = Double), @p331='?' (DbType = Int64), @p332='?' (DbType = Int64), @p333='?' (DbType = Int64), @p334='?' (DbType = Double), @p335='?' (DbType = DateTime2), @p336='?' (DbType = Double), @p337='?' (DbType = Double), @p338='?' (DbType = Int64), @p339='?' (DbType = Int64), @p340='?' (DbType = Double), @p341='?' (DbType = Int64), @p342='?' (DbType = Int64), @p343='?' (DbType = Double), @p344='?' (DbType = Double), @p345='?' (DbType = Double), @p346='?' (DbType = Int64), @p347='?' (DbType = Double), @p348='?' (DbType = Double), @p349='?' (DbType = Int64), @p350='?' (Size = 4000), @p351='?' (DbType = Int64), @p352='?' (DbType = Double), @p353='?' (Size = 450), @p354='?' (DbType = Int64), @p355='?' (DbType = Int64), @p356='?' (DbType = Double), @p357='?' (DbType = Double), @p358='?' (DbType = Int64), @p359='?' (DbType = Int64), @p360='?' (DbType = Int64), @p361='?' (DbType = Double), @p362='?' (DbType = DateTime2), @p363='?' (DbType = Double), @p364='?' (DbType = Double), @p365='?' (DbType = Int64), @p366='?' (DbType = Int64), @p367='?' (DbType = Double), @p368='?' (DbType = Int64), @p369='?' (DbType = Int64), @p370='?' (DbType = Double), @p371='?' (DbType = Double), @p372='?' (DbType = Double), @p373='?' (DbType = Int64), @p374='?' (DbType = Double), @p375='?' (DbType = Double), @p376='?' (DbType = Int64), @p377='?' (Size = 4000), @p378='?' (DbType = Int64), @p379='?' (DbType = Double), @p380='?' (Size = 450), @p381='?' (DbType = Int64), @p382='?' (DbType = Int64), @p383='?' (DbType = Double), @p384='?' (DbType = Double), @p385='?' (DbType = Int64), @p386='?' (DbType = Int64), @p387='?' (DbType = Int64), @p388='?' (DbType = Double), @p389='?' (DbType = DateTime2), @p390='?' (DbType = Double), @p391='?' (DbType = Double), @p392='?' (DbType = Int64), @p393='?' (DbType = Int64), @p394='?' (DbType = Double), @p395='?' (DbType = Int64), @p396='?' (DbType = Int64), @p397='?' (DbType = Double), @p398='?' (DbType = Double), @p399='?' (DbType = Double), @p400='?' (DbType = Int64), @p401='?' (DbType = Double), @p402='?' (DbType = Double), @p403='?' (DbType = Int64), @p404='?' (Size = 4000), @p405='?' (DbType = Int64), @p406='?' (DbType = Double), @p407='?' (Size = 450), @p408='?' (DbType = Int64), @p409='?' (DbType = Int64), @p410='?' (DbType = Double), @p411='?' (DbType = Double), @p412='?' (DbType = Int64), @p413='?' (DbType = Int64), @p414='?' (DbType = Int64), @p415='?' (DbType = Double), @p416='?' (DbType = DateTime2), @p417='?' (DbType = Double), @p418='?' (DbType = Double), @p419='?' (DbType = Int64), @p420='?' (DbType = Int64), @p421='?' (DbType = Double), @p422='?' (DbType = Int64), @p423='?' (DbType = Int64), @p424='?' (DbType = Double), @p425='?' (DbType = Double), @p426='?' (DbType = Double), @p427='?' (DbType = Int64), @p428='?' (DbType = Double), @p429='?' (DbType = Double), @p430='?' (DbType = Int64), @p431='?' (Size = 4000), @p432='?' (DbType = Int64), @p433='?' (DbType = Double), @p434='?' (Size = 450), @p435='?' (DbType = Int64), @p436='?' (DbType = Int64), @p437='?' (DbType = Double), @p438='?' (DbType = Double), @p439='?' (DbType = Int64), @p440='?' (DbType = Int64), @p441='?' (DbType = Int64), @p442='?' (DbType = Double), @p443='?' (DbType = DateTime2), @p444='?' (DbType = Double), @p445='?' (DbType = Double), @p446='?' (DbType = Int64), @p447='?' (DbType = Int64), @p448='?' (DbType = Double), @p449='?' (DbType = Int64), @p450='?' (DbType = Int64), @p451='?' (DbType = Double), @p452='?' (DbType = Double), @p453='?' (DbType = Double), @p454='?' (DbType = Int64), @p455='?' (DbType = Double), @p456='?' (DbType = Double), @p457='?' (DbType = Int64), @p458='?' (Size = 4000), @p459='?' (DbType = Int64), @p460='?' (DbType = Double), @p461='?' (Size = 450), @p462='?' (DbType = Int64), @p463='?' (DbType = Int64), @p464='?' (DbType = Double), @p465='?' (DbType = Double), @p466='?' (DbType = Int64), @p467='?' (DbType = Int64), @p468='?' (DbType = Int64), @p469='?' (DbType = Double), @p470='?' (DbType = DateTime2), @p471='?' (DbType = Double), @p472='?' (DbType = Double), @p473='?' (DbType = Int64), @p474='?' (DbType = Int64), @p475='?' (DbType = Double), @p476='?' (DbType = Int64), @p477='?' (DbType = Int64), @p478='?' (DbType = Double), @p479='?' (DbType = Double), @p480='?' (DbType = Double), @p481='?' (DbType = Int64), @p482='?' (DbType = Double), @p483='?' (DbType = Double), @p484='?' (DbType = Int64), @p485='?' (Size = 4000), @p486='?' (DbType = Int64), @p487='?' (DbType = Double), @p488='?' (Size = 450), @p489='?' (DbType = Int64), @p490='?' (DbType = Int64), @p491='?' (DbType = Double), @p492='?' (DbType = Double), @p493='?' (DbType = Int64), @p494='?' (DbType = Int64), @p495='?' (DbType = Int64), @p496='?' (DbType = Double), @p497='?' (DbType = DateTime2), @p498='?' (DbType = Double), @p499='?' (DbType = Double), @p500='?' (DbType = Int64), @p501='?' (DbType = Int64), @p502='?' (DbType = Double), @p503='?' (DbType = Int64), @p504='?' (DbType = Int64), @p505='?' (DbType = Double), @p506='?' (DbType = Double), @p507='?' (DbType = Double), @p508='?' (DbType = Int64), @p509='?' (DbType = Double), @p510='?' (DbType = Double), @p511='?' (DbType = Int64), @p512='?' (Size = 4000), @p513='?' (DbType = Int64), @p514='?' (DbType = Double), @p515='?' (Size = 450), @p516='?' (DbType = Int64), @p517='?' (DbType = Int64), @p518='?' (DbType = Double), @p519='?' (DbType = Double), @p520='?' (DbType = Int64), @p521='?' (DbType = Int64), @p522='?' (DbType = Int64), @p523='?' (DbType = Double), @p524='?' (DbType = DateTime2), @p525='?' (DbType = Double), @p526='?' (DbType = Double), @p527='?' (DbType = Int64), @p528='?' (DbType = Int64), @p529='?' (DbType = Double), @p530='?' (DbType = Int64), @p531='?' (DbType = Int64), @p532='?' (DbType = Double), @p533='?' (DbType = Double), @p534='?' (DbType = Double), @p535='?' (DbType = Int64), @p536='?' (DbType = Double), @p537='?' (DbType = Double), @p538='?' (DbType = Int64), @p539='?' (Size = 4000), @p540='?' (DbType = Int64), @p541='?' (DbType = Double), @p542='?' (Size = 450), @p543='?' (DbType = Int64), @p544='?' (DbType = Int64), @p545='?' (DbType = Double), @p546='?' (DbType = Double), @p547='?' (DbType = Int64), @p548='?' (DbType = Int64), @p549='?' (DbType = Int64), @p550='?' (DbType = Double), @p551='?' (DbType = DateTime2), @p552='?' (DbType = Double), @p553='?' (DbType = Double), @p554='?' (DbType = Int64), @p555='?' (DbType = Int64), @p556='?' (DbType = Double), @p557='?' (DbType = Int64), @p558='?' (DbType = Int64), @p559='?' (DbType = Double), @p560='?' (DbType = Double), @p561='?' (DbType = Double), @p562='?' (DbType = Int64), @p563='?' (DbType = Double), @p564='?' (DbType = Double), @p565='?' (DbType = Int64), @p566='?' (Size = 4000), @p567='?' (DbType = Int64), @p568='?' (DbType = Double), @p569='?' (Size = 450), @p570='?' (DbType = Int64), @p571='?' (DbType = Int64), @p572='?' (DbType = Double), @p573='?' (DbType = Double), @p574='?' (DbType = Int64), @p575='?' (DbType = Int64), @p576='?' (DbType = Int64), @p577='?' (DbType = Double), @p578='?' (DbType = DateTime2), @p579='?' (DbType = Double), @p580='?' (DbType = Double), @p581='?' (DbType = Int64), @p582='?' (DbType = Int64), @p583='?' (DbType = Double), @p584='?' (DbType = Int64), @p585='?' (DbType = Int64), @p586='?' (DbType = Double), @p587='?' (DbType = Double), @p588='?' (DbType = Double), @p589='?' (DbType = Int64), @p590='?' (DbType = Double), @p591='?' (DbType = Double), @p592='?' (DbType = Int64), @p593='?' (Size = 4000), @p594='?' (DbType = Int64), @p595='?' (DbType = Double), @p596='?' (Size = 450), @p597='?' (DbType = Int64), @p598='?' (DbType = Int64), @p599='?' (DbType = Double), @p600='?' (DbType = Double), @p601='?' (DbType = Int64), @p602='?' (DbType = Int64), @p603='?' (DbType = Int64), @p604='?' (DbType = Double), @p605='?' (DbType = DateTime2), @p606='?' (DbType = Double), @p607='?' (DbType = Double), @p608='?' (DbType = Int64), @p609='?' (DbType = Int64), @p610='?' (DbType = Double), @p611='?' (DbType = Int64), @p612='?' (DbType = Int64), @p613='?' (DbType = Double), @p614='?' (DbType = Double), @p615='?' (DbType = Double), @p616='?' (DbType = Int64), @p617='?' (DbType = Double), @p618='?' (DbType = Double), @p619='?' (DbType = Int64), @p620='?' (Size = 4000), @p621='?' (DbType = Int64), @p622='?' (DbType = Double), @p623='?' (Size = 450), @p624='?' (DbType = Int64), @p625='?' (DbType = Int64), @p626='?' (DbType = Double), @p627='?' (DbType = Double), @p628='?' (DbType = Int64), @p629='?' (DbType = Int64), @p630='?' (DbType = Int64), @p631='?' (DbType = Double), @p632='?' (DbType = DateTime2), @p633='?' (DbType = Double), @p634='?' (DbType = Double), @p635='?' (DbType = Int64), @p636='?' (DbType = Int64), @p637='?' (DbType = Double), @p638='?' (DbType = Int64), @p639='?' (DbType = Int64), @p640='?' (DbType = Double), @p641='?' (DbType = Double), @p642='?' (DbType = Double), @p643='?' (DbType = Int64), @p644='?' (DbType = Double), @p645='?' (DbType = Double), @p646='?' (DbType = Int64), @p647='?' (Size = 4000), @p648='?' (DbType = Int64), @p649='?' (DbType = Double), @p650='?' (Size = 450), @p651='?' (DbType = Int64), @p652='?' (DbType = Int64), @p653='?' (DbType = Double), @p654='?' (DbType = Double), @p655='?' (DbType = Int64), @p656='?' (DbType = Int64), @p657='?' (DbType = Int64), @p658='?' (DbType = Double), @p659='?' (DbType = DateTime2), @p660='?' (DbType = Double), @p661='?' (DbType = Double), @p662='?' (DbType = Int64), @p663='?' (DbType = Int64), @p664='?' (DbType = Double), @p665='?' (DbType = Int64), @p666='?' (DbType = Int64), @p667='?' (DbType = Double), @p668='?' (DbType = Double), @p669='?' (DbType = Double), @p670='?' (DbType = Int64), @p671='?' (DbType = Double), @p672='?' (DbType = Double), @p673='?' (DbType = Int64), @p674='?' (Size = 4000), @p675='?' (DbType = Int64), @p676='?' (DbType = Double), @p677='?' (Size = 450), @p678='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
DECLARE @inserted0 TABLE ([Id] int, [_Position] [int]);
MERGE [IncomeStatementAnnualReport] USING (
VALUES (@p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21, @p22, @p23, @p24, @p25, @p26, @p27, @p28, @p29, @p30, 0),
(@p31, @p32, @p33, @p34, @p35, @p36, @p37, @p38, @p39, @p40, @p41, @p42, @p43, @p44, @p45, @p46, @p47, @p48, @p49, @p50, @p51, @p52, @p53, @p54, @p55, @p56, @p57, 1),
(@p58, @p59, @p60, @p61, @p62, @p63, @p64, @p65, @p66, @p67, @p68, @p69, @p70, @p71, @p72, @p73, @p74, @p75, @p76, @p77, @p78, @p79, @p80, @p81, @p82, @p83, @p84, 2),
(@p85, @p86, @p87, @p88, @p89, @p90, @p91, @p92, @p93, @p94, @p95, @p96, @p97, @p98, @p99, @p100, @p101, @p102, @p103, @p104, @p105, @p106, @p107, @p108, @p109, @p110, @p111, 3),
(@p112, @p113, @p114, @p115, @p116, @p117, @p118, @p119, @p120, @p121, @p122, @p123, @p124, @p125, @p126, @p127, @p128, @p129, @p130, @p131, @p132, @p133, @p134, @p135, @p136, @p137, @p138, 4)) AS i ([ComprehensiveIncomeNetOfTax], [CostOfRevenue], [CostofGoodsAndServicesSold], [Depreciation], [DepreciationAndAmortization], [Ebit], [Ebitda], [FiscalDateEnding], [GrossProfit], [IncomeBeforeTax], [IncomeTaxExpense], [InterestAndDebtExpense], [InterestExpense], [InterestIncome], [InvestmentIncomeNet], [NetIncome], [NetIncomeFromContinuingOperations], [NetInterestIncome], [NonInterestIncome], [OperatingExpenses], [OperatingIncome], [OtherNonOperatingIncome], [ReportedCurrency], [ResearchAndDevelopment], [SellingGeneralAndAdministrative], [Symbol], [TotalRevenue], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([ComprehensiveIncomeNetOfTax], [CostOfRevenue], [CostofGoodsAndServicesSold], [Depreciation], [DepreciationAndAmortization], [Ebit], [Ebitda], [FiscalDateEnding], [GrossProfit], [IncomeBeforeTax], [IncomeTaxExpense], [InterestAndDebtExpense], [InterestExpense], [InterestIncome], [InvestmentIncomeNet], [NetIncome], [NetIncomeFromContinuingOperations], [NetInterestIncome], [NonInterestIncome], [OperatingExpenses], [OperatingIncome], [OtherNonOperatingIncome], [ReportedCurrency], [ResearchAndDevelopment], [SellingGeneralAndAdministrative], [Symbol], [TotalRevenue])
VALUES (i.[ComprehensiveIncomeNetOfTax], i.[CostOfRevenue], i.[CostofGoodsAndServicesSold], i.[Depreciation], i.[DepreciationAndAmortization], i.[Ebit], i.[Ebitda], i.[FiscalDateEnding], i.[GrossProfit], i.[IncomeBeforeTax], i.[IncomeTaxExpense], i.[InterestAndDebtExpense], i.[InterestExpense], i.[InterestIncome], i.[InvestmentIncomeNet], i.[NetIncome], i.[NetIncomeFromContinuingOperations], i.[NetInterestIncome], i.[NonInterestIncome], i.[OperatingExpenses], i.[OperatingIncome], i.[OtherNonOperatingIncome], i.[ReportedCurrency], i.[ResearchAndDevelopment], i.[SellingGeneralAndAdministrative], i.[Symbol], i.[TotalRevenue])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted0;

SELECT [i].[Id] FROM @inserted0 i
ORDER BY [i].[_Position];

DECLARE @inserted5 TABLE ([Id] int, [_Position] [int]);
MERGE [IncomeStatementQuarterlyReport] USING (
VALUES (@p139, @p140, @p141, @p142, @p143, @p144, @p145, @p146, @p147, @p148, @p149, @p150, @p151, @p152, @p153, @p154, @p155, @p156, @p157, @p158, @p159, @p160, @p161, @p162, @p163, @p164, @p165, 0),
(@p166, @p167, @p168, @p169, @p170, @p171, @p172, @p173, @p174, @p175, @p176, @p177, @p178, @p179, @p180, @p181, @p182, @p183, @p184, @p185, @p186, @p187, @p188, @p189, @p190, @p191, @p192, 1),
(@p193, @p194, @p195, @p196, @p197, @p198, @p199, @p200, @p201, @p202, @p203, @p204, @p205, @p206, @p207, @p208, @p209, @p210, @p211, @p212, @p213, @p214, @p215, @p216, @p217, @p218, @p219, 2),
(@p220, @p221, @p222, @p223, @p224, @p225, @p226, @p227, @p228, @p229, @p230, @p231, @p232, @p233, @p234, @p235, @p236, @p237, @p238, @p239, @p240, @p241, @p242, @p243, @p244, @p245, @p246, 3),
(@p247, @p248, @p249, @p250, @p251, @p252, @p253, @p254, @p255, @p256, @p257, @p258, @p259, @p260, @p261, @p262, @p263, @p264, @p265, @p266, @p267, @p268, @p269, @p270, @p271, @p272, @p273, 4),
(@p274, @p275, @p276, @p277, @p278, @p279, @p280, @p281, @p282, @p283, @p284, @p285, @p286, @p287, @p288, @p289, @p290, @p291, @p292, @p293, @p294, @p295, @p296, @p297, @p298, @p299, @p300, 5),
(@p301, @p302, @p303, @p304, @p305, @p306, @p307, @p308, @p309, @p310, @p311, @p312, @p313, @p314, @p315, @p316, @p317, @p318, @p319, @p320, @p321, @p322, @p323, @p324, @p325, @p326, @p327, 6),
(@p328, @p329, @p330, @p331, @p332, @p333, @p334, @p335, @p336, @p337, @p338, @p339, @p340, @p341, @p342, @p343, @p344, @p345, @p346, @p347, @p348, @p349, @p350, @p351, @p352, @p353, @p354, 7),
(@p355, @p356, @p357, @p358, @p359, @p360, @p361, @p362, @p363, @p364, @p365, @p366, @p367, @p368, @p369, @p370, @p371, @p372, @p373, @p374, @p375, @p376, @p377, @p378, @p379, @p380, @p381, 8),
(@p382, @p383, @p384, @p385, @p386, @p387, @p388, @p389, @p390, @p391, @p392, @p393, @p394, @p395, @p396, @p397, @p398, @p399, @p400, @p401, @p402, @p403, @p404, @p405, @p406, @p407, @p408, 9),
(@p409, @p410, @p411, @p412, @p413, @p414, @p415, @p416, @p417, @p418, @p419, @p420, @p421, @p422, @p423, @p424, @p425, @p426, @p427, @p428, @p429, @p430, @p431, @p432, @p433, @p434, @p435, 10),
(@p436, @p437, @p438, @p439, @p440, @p441, @p442, @p443, @p444, @p445, @p446, @p447, @p448, @p449, @p450, @p451, @p452, @p453, @p454, @p455, @p456, @p457, @p458, @p459, @p460, @p461, @p462, 11),
(@p463, @p464, @p465, @p466, @p467, @p468, @p469, @p470, @p471, @p472, @p473, @p474, @p475, @p476, @p477, @p478, @p479, @p480, @p481, @p482, @p483, @p484, @p485, @p486, @p487, @p488, @p489, 12),
(@p490, @p491, @p492, @p493, @p494, @p495, @p496, @p497, @p498, @p499, @p500, @p501, @p502, @p503, @p504, @p505, @p506, @p507, @p508, @p509, @p510, @p511, @p512, @p513, @p514, @p515, @p516, 13),
(@p517, @p518, @p519, @p520, @p521, @p522, @p523, @p524, @p525, @p526, @p527, @p528, @p529, @p530, @p531, @p532, @p533, @p534, @p535, @p536, @p537, @p538, @p539, @p540, @p541, @p542, @p543, 14),
(@p544, @p545, @p546, @p547, @p548, @p549, @p550, @p551, @p552, @p553, @p554, @p555, @p556, @p557, @p558, @p559, @p560, @p561, @p562, @p563, @p564, @p565, @p566, @p567, @p568, @p569, @p570, 15),
(@p571, @p572, @p573, @p574, @p575, @p576, @p577, @p578, @p579, @p580, @p581, @p582, @p583, @p584, @p585, @p586, @p587, @p588, @p589, @p590, @p591, @p592, @p593, @p594, @p595, @p596, @p597, 16),
(@p598, @p599, @p600, @p601, @p602, @p603, @p604, @p605, @p606, @p607, @p608, @p609, @p610, @p611, @p612, @p613, @p614, @p615, @p616, @p617, @p618, @p619, @p620, @p621, @p622, @p623, @p624, 17),
(@p625, @p626, @p627, @p628, @p629, @p630, @p631, @p632, @p633, @p634, @p635, @p636, @p637, @p638, @p639, @p640, @p641, @p642, @p643, @p644, @p645, @p646, @p647, @p648, @p649, @p650, @p651, 18),
(@p652, @p653, @p654, @p655, @p656, @p657, @p658, @p659, @p660, @p661, @p662, @p663, @p664, @p665, @p666, @p667, @p668, @p669, @p670, @p671, @p672, @p673, @p674, @p675, @p676, @p677, @p678, 19)) AS i ([ComprehensiveIncomeNetOfTax], [CostOfRevenue], [CostofGoodsAndServicesSold], [Depreciation], [DepreciationAndAmortization], [Ebit], [Ebitda], [FiscalDateEnding], [GrossProfit], [IncomeBeforeTax], [IncomeTaxExpense], [InterestAndDebtExpense], [InterestExpense], [InterestIncome], [InvestmentIncomeNet], [NetIncome], [NetIncomeFromContinuingOperations], [NetInterestIncome], [NonInterestIncome], [OperatingExpenses], [OperatingIncome], [OtherNonOperatingIncome], [ReportedCurrency], [ResearchAndDevelopment], [SellingGeneralAndAdministrative], [Symbol], [TotalRevenue], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([ComprehensiveIncomeNetOfTax], [CostOfRevenue], [CostofGoodsAndServicesSold], [Depreciation], [DepreciationAndAmortization], [Ebit], [Ebitda], [FiscalDateEnding], [GrossProfit], [IncomeBeforeTax], [IncomeTaxExpense], [InterestAndDebtExpense], [InterestExpense], [InterestIncome], [InvestmentIncomeNet], [NetIncome], [NetIncomeFromContinuingOperations], [NetInterestIncome], [NonInterestIncome], [OperatingExpenses], [OperatingIncome], [OtherNonOperatingIncome], [ReportedCurrency], [ResearchAndDevelopment], [SellingGeneralAndAdministrative], [Symbol], [TotalRevenue])
VALUES (i.[ComprehensiveIncomeNetOfTax], i.[CostOfRevenue], i.[CostofGoodsAndServicesSold], i.[Depreciation], i.[DepreciationAndAmortization], i.[Ebit], i.[Ebitda], i.[FiscalDateEnding], i.[GrossProfit], i.[IncomeBeforeTax], i.[IncomeTaxExpense], i.[InterestAndDebtExpense], i.[InterestExpense], i.[InterestIncome], i.[InvestmentIncomeNet], i.[NetIncome], i.[NetIncomeFromContinuingOperations], i.[NetInterestIncome], i.[NonInterestIncome], i.[OperatingExpenses], i.[OperatingIncome], i.[OtherNonOperatingIncome], i.[ReportedCurrency], i.[ResearchAndDevelopment], i.[SellingGeneralAndAdministrative], i.[Symbol], i.[TotalRevenue])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted5;

SELECT [i].[Id] FROM @inserted5 i
ORDER BY [i].[_Position];
2022-05-12 01:13:17.893 +03:00 [INF] AddOrUpdate run successful.
2022-05-12 01:13:17.895 +03:00 [INF] Executed DbCommand (14ms) [Parameters=[@p0='?' (DbType = Double), @p1='?' (DbType = DateTime2), @p2='?' (DbType = DateTime2), @p3='?' (DbType = Double), @p4='?' (DbType = Double), @p5='?' (DbType = Double), @p6='?' (Size = 450), @p7='?' (DbType = Double), @p8='?' (DbType = DateTime2), @p9='?' (DbType = DateTime2), @p10='?' (DbType = Double), @p11='?' (DbType = Double), @p12='?' (DbType = Double), @p13='?' (Size = 450), @p14='?' (DbType = Double), @p15='?' (DbType = DateTime2), @p16='?' (DbType = DateTime2), @p17='?' (DbType = Double), @p18='?' (DbType = Double), @p19='?' (DbType = Double), @p20='?' (Size = 450), @p21='?' (DbType = Double), @p22='?' (DbType = DateTime2), @p23='?' (DbType = DateTime2), @p24='?' (DbType = Double), @p25='?' (DbType = Double), @p26='?' (DbType = Double), @p27='?' (Size = 450), @p28='?' (DbType = Double), @p29='?' (DbType = DateTime2), @p30='?' (DbType = DateTime2), @p31='?' (DbType = Double), @p32='?' (DbType = Double), @p33='?' (DbType = Double), @p34='?' (Size = 450), @p35='?' (DbType = Double), @p36='?' (DbType = DateTime2), @p37='?' (DbType = DateTime2), @p38='?' (DbType = Double), @p39='?' (DbType = Double), @p40='?' (DbType = Double), @p41='?' (Size = 450), @p42='?' (DbType = Double), @p43='?' (DbType = DateTime2), @p44='?' (DbType = DateTime2), @p45='?' (DbType = Double), @p46='?' (DbType = Double), @p47='?' (DbType = Double), @p48='?' (Size = 450), @p49='?' (DbType = Double), @p50='?' (DbType = DateTime2), @p51='?' (DbType = DateTime2), @p52='?' (DbType = Double), @p53='?' (DbType = Double), @p54='?' (DbType = Double), @p55='?' (Size = 450), @p56='?' (DbType = Double), @p57='?' (DbType = DateTime2), @p58='?' (DbType = DateTime2), @p59='?' (DbType = Double), @p60='?' (DbType = Double), @p61='?' (DbType = Double), @p62='?' (Size = 450), @p63='?' (DbType = Double), @p64='?' (DbType = DateTime2), @p65='?' (DbType = DateTime2), @p66='?' (DbType = Double), @p67='?' (DbType = Double), @p68='?' (DbType = Double), @p69='?' (Size = 450), @p70='?' (DbType = Double), @p71='?' (DbType = DateTime2), @p72='?' (DbType = DateTime2), @p73='?' (DbType = Double), @p74='?' (DbType = Double), @p75='?' (DbType = Double), @p76='?' (Size = 450), @p77='?' (DbType = Double), @p78='?' (DbType = DateTime2), @p79='?' (DbType = DateTime2), @p80='?' (DbType = Double), @p81='?' (DbType = Double), @p82='?' (DbType = Double), @p83='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
DECLARE @inserted0 TABLE ([Id] int, [_Position] [int]);
MERGE [QuarterlyEarning] USING (
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, 0),
(@p7, @p8, @p9, @p10, @p11, @p12, @p13, 1),
(@p14, @p15, @p16, @p17, @p18, @p19, @p20, 2),
(@p21, @p22, @p23, @p24, @p25, @p26, @p27, 3),
(@p28, @p29, @p30, @p31, @p32, @p33, @p34, 4),
(@p35, @p36, @p37, @p38, @p39, @p40, @p41, 5),
(@p42, @p43, @p44, @p45, @p46, @p47, @p48, 6),
(@p49, @p50, @p51, @p52, @p53, @p54, @p55, 7),
(@p56, @p57, @p58, @p59, @p60, @p61, @p62, 8),
(@p63, @p64, @p65, @p66, @p67, @p68, @p69, 9),
(@p70, @p71, @p72, @p73, @p74, @p75, @p76, 10),
(@p77, @p78, @p79, @p80, @p81, @p82, @p83, 11)) AS i ([EstimatedEPS], [FiscalDateEnding], [ReportedDate], [ReportedEPS], [Surprise], [SurprisePercentage], [Symbol], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([EstimatedEPS], [FiscalDateEnding], [ReportedDate], [ReportedEPS], [Surprise], [SurprisePercentage], [Symbol])
VALUES (i.[EstimatedEPS], i.[FiscalDateEnding], i.[ReportedDate], i.[ReportedEPS], i.[Surprise], i.[SurprisePercentage], i.[Symbol])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted0;

SELECT [i].[Id] FROM @inserted0 i
ORDER BY [i].[_Position];
2022-05-12 01:13:17.910 +03:00 [INF] AddOrUpdate run successful.
2022-05-12 01:13:19.726 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.BalanceSheet with Symbol BF-B
2022-05-12 01:13:19.728 +03:00 [INF] Generating URI for BALANCE_SHEET with params: symbol: BF-B
2022-05-12 01:13:19.728 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BF-B
2022-05-12 01:13:19.729 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BF-B".
2022-05-12 01:13:21.202 +03:00 [INF] Response has success status code
2022-05-12 01:13:21.203 +03:00 [INF] Trying to deserialize response.
2022-05-12 01:13:21.204 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 01:13:21.220 +03:00 [INF] Executed DbCommand (16ms) [Parameters=[@__symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__symbol_0
2022-05-12 01:13:21.222 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.BalanceSheet.
2022-05-12 01:13:21.229 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [b].[Symbol], [b].[ExistInApi], [b].[LastApiRefresh], [b].[LastLocalRefresh]
FROM [BalanceSheets] AS [b]
WHERE [b].[Symbol] = @__entity_Symbol_0
2022-05-12 01:13:21.230 +03:00 [INF] Entity does not exist. Adding to DB.
2022-05-12 01:13:21.245 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = Boolean), @p2='?' (DbType = DateTime2), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [BalanceSheets] ([Symbol], [ExistInApi], [LastApiRefresh], [LastLocalRefresh])
VALUES (@p0, @p1, @p2, @p3);
2022-05-12 01:13:21.308 +03:00 [INF] Executed DbCommand (59ms) [Parameters=[@p4='?' (DbType = Int64), @p5='?' (DbType = Double), @p6='?' (DbType = Double), @p7='?' (DbType = Double), @p8='?' (DbType = Double), @p9='?' (DbType = Int64), @p10='?' (DbType = Int64), @p11='?' (DbType = Int64), @p12='?' (DbType = Double), @p13='?' (DbType = Int64), @p14='?' (DbType = Int64), @p15='?' (DbType = DateTime2), @p16='?' (DbType = Double), @p17='?' (DbType = Double), @p18='?' (DbType = Double), @p19='?' (DbType = Double), @p20='?' (DbType = Int64), @p21='?' (DbType = Double), @p22='?' (DbType = Int64), @p23='?' (DbType = Double), @p24='?' (DbType = Double), @p25='?' (DbType = Double), @p26='?' (DbType = Double), @p27='?' (DbType = Double), @p28='?' (DbType = Int64), @p29='?' (Size = 4000), @p30='?' (DbType = Double), @p31='?' (DbType = Double), @p32='?' (DbType = Double), @p33='?' (DbType = Double), @p34='?' (Size = 450), @p35='?' (DbType = Double), @p36='?' (DbType = Double), @p37='?' (DbType = Double), @p38='?' (DbType = Double), @p39='?' (DbType = Double), @p40='?' (DbType = Double), @p41='?' (DbType = Double), @p42='?' (DbType = Double), @p43='?' (DbType = Int64), @p44='?' (DbType = Double), @p45='?' (DbType = Double), @p46='?' (DbType = Double), @p47='?' (DbType = Double), @p48='?' (DbType = Int64), @p49='?' (DbType = Int64), @p50='?' (DbType = Int64), @p51='?' (DbType = Double), @p52='?' (DbType = Int64), @p53='?' (DbType = Int64), @p54='?' (DbType = DateTime2), @p55='?' (DbType = Double), @p56='?' (DbType = Double), @p57='?' (DbType = Double), @p58='?' (DbType = Double), @p59='?' (DbType = Int64), @p60='?' (DbType = Double), @p61='?' (DbType = Int64), @p62='?' (DbType = Double), @p63='?' (DbType = Double), @p64='?' (DbType = Double), @p65='?' (DbType = Double), @p66='?' (DbType = Double), @p67='?' (DbType = Int64), @p68='?' (Size = 4000), @p69='?' (DbType = Double), @p70='?' (DbType = Double), @p71='?' (DbType = Double), @p72='?' (DbType = Double), @p73='?' (Size = 450), @p74='?' (DbType = Double), @p75='?' (DbType = Double), @p76='?' (DbType = Double), @p77='?' (DbType = Double), @p78='?' (DbType = Double), @p79='?' (DbType = Double), @p80='?' (DbType = Double), @p81='?' (DbType = Double), @p82='?' (DbType = Int64), @p83='?' (DbType = Double), @p84='?' (DbType = Double), @p85='?' (DbType = Double), @p86='?' (DbType = Double), @p87='?' (DbType = Int64), @p88='?' (DbType = Int64), @p89='?' (DbType = Int64), @p90='?' (DbType = Double), @p91='?' (DbType = Int64), @p92='?' (DbType = Int64), @p93='?' (DbType = DateTime2), @p94='?' (DbType = Double), @p95='?' (DbType = Double), @p96='?' (DbType = Double), @p97='?' (DbType = Double), @p98='?' (DbType = Int64), @p99='?' (DbType = Double), @p100='?' (DbType = Int64), @p101='?' (DbType = Double), @p102='?' (DbType = Double), @p103='?' (DbType = Double), @p104='?' (DbType = Double), @p105='?' (DbType = Double), @p106='?' (DbType = Int64), @p107='?' (Size = 4000), @p108='?' (DbType = Double), @p109='?' (DbType = Double), @p110='?' (DbType = Double), @p111='?' (DbType = Double), @p112='?' (Size = 450), @p113='?' (DbType = Double), @p114='?' (DbType = Double), @p115='?' (DbType = Double), @p116='?' (DbType = Double), @p117='?' (DbType = Double), @p118='?' (DbType = Double), @p119='?' (DbType = Double), @p120='?' (DbType = Double), @p121='?' (DbType = Int64), @p122='?' (DbType = Double), @p123='?' (DbType = Double), @p124='?' (DbType = Double), @p125='?' (DbType = Double), @p126='?' (DbType = Int64), @p127='?' (DbType = Int64), @p128='?' (DbType = Int64), @p129='?' (DbType = Double), @p130='?' (DbType = Int64), @p131='?' (DbType = Int64), @p132='?' (DbType = DateTime2), @p133='?' (DbType = Double), @p134='?' (DbType = Double), @p135='?' (DbType = Double), @p136='?' (DbType = Double), @p137='?' (DbType = Int64), @p138='?' (DbType = Double), @p139='?' (DbType = Int64), @p140='?' (DbType = Double), @p141='?' (DbType = Double), @p142='?' (DbType = Double), @p143='?' (DbType = Double), @p144='?' (DbType = Double), @p145='?' (DbType = Int64), @p146='?' (Size = 4000), @p147='?' (DbType = Double), @p148='?' (DbType = Double), @p149='?' (DbType = Double), @p150='?' (DbType = Double), @p151='?' (Size = 450), @p152='?' (DbType = Double), @p153='?' (DbType = Double), @p154='?' (DbType = Double), @p155='?' (DbType = Double), @p156='?' (DbType = Double), @p157='?' (DbType = Double), @p158='?' (DbType = Double), @p159='?' (DbType = Double), @p160='?' (DbType = Int64), @p161='?' (DbType = Double), @p162='?' (DbType = Double), @p163='?' (DbType = Double), @p164='?' (DbType = Double), @p165='?' (DbType = Int64), @p166='?' (DbType = Int64), @p167='?' (DbType = Int64), @p168='?' (DbType = Double), @p169='?' (DbType = Int64), @p170='?' (DbType = Int64), @p171='?' (DbType = DateTime2), @p172='?' (DbType = Double), @p173='?' (DbType = Double), @p174='?' (DbType = Double), @p175='?' (DbType = Double), @p176='?' (DbType = Int64), @p177='?' (DbType = Double), @p178='?' (DbType = Int64), @p179='?' (DbType = Double), @p180='?' (DbType = Double), @p181='?' (DbType = Double), @p182='?' (DbType = Double), @p183='?' (DbType = Double), @p184='?' (DbType = Int64), @p185='?' (Size = 4000), @p186='?' (DbType = Double), @p187='?' (DbType = Double), @p188='?' (DbType = Double), @p189='?' (DbType = Double), @p190='?' (Size = 450), @p191='?' (DbType = Double), @p192='?' (DbType = Double), @p193='?' (DbType = Double), @p194='?' (DbType = Double), @p195='?' (DbType = Double), @p196='?' (DbType = Double), @p197='?' (DbType = Double), @p198='?' (DbType = Double), @p199='?' (DbType = Int64), @p200='?' (DbType = Double), @p201='?' (DbType = Double), @p202='?' (DbType = Double), @p203='?' (DbType = Double), @p204='?' (DbType = Int64), @p205='?' (DbType = Int64), @p206='?' (DbType = Int64), @p207='?' (DbType = Double), @p208='?' (DbType = Int64), @p209='?' (DbType = Int64), @p210='?' (DbType = DateTime2), @p211='?' (DbType = Double), @p212='?' (DbType = Double), @p213='?' (DbType = Double), @p214='?' (DbType = Double), @p215='?' (DbType = Int64), @p216='?' (DbType = Double), @p217='?' (DbType = Int64), @p218='?' (DbType = Double), @p219='?' (DbType = Double), @p220='?' (DbType = Double), @p221='?' (DbType = Double), @p222='?' (DbType = Double), @p223='?' (DbType = Int64), @p224='?' (Size = 4000), @p225='?' (DbType = Double), @p226='?' (DbType = Double), @p227='?' (DbType = Double), @p228='?' (DbType = Double), @p229='?' (Size = 450), @p230='?' (DbType = Double), @p231='?' (DbType = Double), @p232='?' (DbType = Double), @p233='?' (DbType = Double), @p234='?' (DbType = Double), @p235='?' (DbType = Double), @p236='?' (DbType = Double), @p237='?' (DbType = Double), @p238='?' (DbType = Int64), @p239='?' (DbType = Double), @p240='?' (DbType = Double), @p241='?' (DbType = Double), @p242='?' (DbType = Double), @p243='?' (DbType = Int64), @p244='?' (DbType = Int64), @p245='?' (DbType = Int64), @p246='?' (DbType = Double), @p247='?' (DbType = Int64), @p248='?' (DbType = Int64), @p249='?' (DbType = DateTime2), @p250='?' (DbType = Double), @p251='?' (DbType = Double), @p252='?' (DbType = Double), @p253='?' (DbType = Double), @p254='?' (DbType = Int64), @p255='?' (DbType = Double), @p256='?' (DbType = Int64), @p257='?' (DbType = Double), @p258='?' (DbType = Double), @p259='?' (DbType = Double), @p260='?' (DbType = Double), @p261='?' (DbType = Double), @p262='?' (DbType = Int64), @p263='?' (Size = 4000), @p264='?' (DbType = Double), @p265='?' (DbType = Double), @p266='?' (DbType = Double), @p267='?' (DbType = Double), @p268='?' (Size = 450), @p269='?' (DbType = Double), @p270='?' (DbType = Double), @p271='?' (DbType = Double), @p272='?' (DbType = Double), @p273='?' (DbType = Double), @p274='?' (DbType = Double), @p275='?' (DbType = Double), @p276='?' (DbType = Double), @p277='?' (DbType = Int64), @p278='?' (DbType = Double), @p279='?' (DbType = Double), @p280='?' (DbType = Double), @p281='?' (DbType = Double), @p282='?' (DbType = Int64), @p283='?' (DbType = Int64), @p284='?' (DbType = Int64), @p285='?' (DbType = Double), @p286='?' (DbType = Int64), @p287='?' (DbType = Int64), @p288='?' (DbType = DateTime2), @p289='?' (DbType = Double), @p290='?' (DbType = Double), @p291='?' (DbType = Double), @p292='?' (DbType = Double), @p293='?' (DbType = Int64), @p294='?' (DbType = Double), @p295='?' (DbType = Int64), @p296='?' (DbType = Double), @p297='?' (DbType = Double), @p298='?' (DbType = Double), @p299='?' (DbType = Double), @p300='?' (DbType = Double), @p301='?' (DbType = Int64), @p302='?' (Size = 4000), @p303='?' (DbType = Double), @p304='?' (DbType = Double), @p305='?' (DbType = Double), @p306='?' (DbType = Double), @p307='?' (Size = 450), @p308='?' (DbType = Double), @p309='?' (DbType = Double), @p310='?' (DbType = Double), @p311='?' (DbType = Double), @p312='?' (DbType = Double), @p313='?' (DbType = Double), @p314='?' (DbType = Double), @p315='?' (DbType = Double), @p316='?' (DbType = Int64), @p317='?' (DbType = Double), @p318='?' (DbType = Double), @p319='?' (DbType = Double), @p320='?' (DbType = Double), @p321='?' (DbType = Int64), @p322='?' (DbType = Int64), @p323='?' (DbType = Int64), @p324='?' (DbType = Double), @p325='?' (DbType = Int64), @p326='?' (DbType = Int64), @p327='?' (DbType = DateTime2), @p328='?' (DbType = Double), @p329='?' (DbType = Double), @p330='?' (DbType = Double), @p331='?' (DbType = Double), @p332='?' (DbType = Int64), @p333='?' (DbType = Double), @p334='?' (DbType = Int64), @p335='?' (DbType = Double), @p336='?' (DbType = Double), @p337='?' (DbType = Double), @p338='?' (DbType = Double), @p339='?' (DbType = Double), @p340='?' (DbType = Int64), @p341='?' (Size = 4000), @p342='?' (DbType = Double), @p343='?' (DbType = Double), @p344='?' (DbType = Double), @p345='?' (DbType = Double), @p346='?' (Size = 450), @p347='?' (DbType = Double), @p348='?' (DbType = Double), @p349='?' (DbType = Double), @p350='?' (DbType = Double), @p351='?' (DbType = Double), @p352='?' (DbType = Double), @p353='?' (DbType = Double), @p354='?' (DbType = Double), @p355='?' (DbType = Int64), @p356='?' (DbType = Double), @p357='?' (DbType = Double), @p358='?' (DbType = Double), @p359='?' (DbType = Double), @p360='?' (DbType = Int64), @p361='?' (DbType = Int64), @p362='?' (DbType = Int64), @p363='?' (DbType = Double), @p364='?' (DbType = Int64), @p365='?' (DbType = Int64), @p366='?' (DbType = DateTime2), @p367='?' (DbType = Double), @p368='?' (DbType = Double), @p369='?' (DbType = Double), @p370='?' (DbType = Double), @p371='?' (DbType = Int64), @p372='?' (DbType = Double), @p373='?' (DbType = Int64), @p374='?' (DbType = Double), @p375='?' (DbType = Double), @p376='?' (DbType = Double), @p377='?' (DbType = Double), @p378='?' (DbType = Double), @p379='?' (DbType = Int64), @p380='?' (Size = 4000), @p381='?' (DbType = Double), @p382='?' (DbType = Double), @p383='?' (DbType = Double), @p384='?' (DbType = Double), @p385='?' (Size = 450), @p386='?' (DbType = Double), @p387='?' (DbType = Double), @p388='?' (DbType = Double), @p389='?' (DbType = Double), @p390='?' (DbType = Double), @p391='?' (DbType = Double), @p392='?' (DbType = Double), @p393='?' (DbType = Double), @p394='?' (DbType = Int64), @p395='?' (DbType = Double), @p396='?' (DbType = Double), @p397='?' (DbType = Double), @p398='?' (DbType = Double), @p399='?' (DbType = Int64), @p400='?' (DbType = Int64), @p401='?' (DbType = Int64), @p402='?' (DbType = Double), @p403='?' (DbType = Int64), @p404='?' (DbType = Int64), @p405='?' (DbType = DateTime2), @p406='?' (DbType = Double), @p407='?' (DbType = Double), @p408='?' (DbType = Double), @p409='?' (DbType = Double), @p410='?' (DbType = Int64), @p411='?' (DbType = Double), @p412='?' (DbType = Int64), @p413='?' (DbType = Double), @p414='?' (DbType = Double), @p415='?' (DbType = Double), @p416='?' (DbType = Double), @p417='?' (DbType = Double), @p418='?' (DbType = Int64), @p419='?' (Size = 4000), @p420='?' (DbType = Double), @p421='?' (DbType = Double), @p422='?' (DbType = Double), @p423='?' (DbType = Double), @p424='?' (Size = 450), @p425='?' (DbType = Double), @p426='?' (DbType = Double), @p427='?' (DbType = Double), @p428='?' (DbType = Double), @p429='?' (DbType = Double), @p430='?' (DbType = Double), @p431='?' (DbType = Double), @p432='?' (DbType = Double), @p433='?' (DbType = Int64), @p434='?' (DbType = Double), @p435='?' (DbType = Double), @p436='?' (DbType = Double), @p437='?' (DbType = Double), @p438='?' (DbType = Int64), @p439='?' (DbType = Int64), @p440='?' (DbType = Int64), @p441='?' (DbType = Double), @p442='?' (DbType = Int64), @p443='?' (DbType = Int64), @p444='?' (DbType = DateTime2), @p445='?' (DbType = Double), @p446='?' (DbType = Double), @p447='?' (DbType = Double), @p448='?' (DbType = Double), @p449='?' (DbType = Int64), @p450='?' (DbType = Double), @p451='?' (DbType = Int64), @p452='?' (DbType = Double), @p453='?' (DbType = Double), @p454='?' (DbType = Double), @p455='?' (DbType = Double), @p456='?' (DbType = Double), @p457='?' (DbType = Int64), @p458='?' (Size = 4000), @p459='?' (DbType = Double), @p460='?' (DbType = Double), @p461='?' (DbType = Double), @p462='?' (DbType = Double), @p463='?' (Size = 450), @p464='?' (DbType = Double), @p465='?' (DbType = Double), @p466='?' (DbType = Double), @p467='?' (DbType = Double), @p468='?' (DbType = Double), @p469='?' (DbType = Double), @p470='?' (DbType = Double), @p471='?' (DbType = Double), @p472='?' (DbType = Int64), @p473='?' (DbType = Double), @p474='?' (DbType = Double), @p475='?' (DbType = Double), @p476='?' (DbType = Double), @p477='?' (DbType = Int64), @p478='?' (DbType = Int64), @p479='?' (DbType = Int64), @p480='?' (DbType = Double), @p481='?' (DbType = Int64), @p482='?' (DbType = Int64), @p483='?' (DbType = DateTime2), @p484='?' (DbType = Double), @p485='?' (DbType = Double), @p486='?' (DbType = Double), @p487='?' (DbType = Double), @p488='?' (DbType = Int64), @p489='?' (DbType = Double), @p490='?' (DbType = Int64), @p491='?' (DbType = Double), @p492='?' (DbType = Double), @p493='?' (DbType = Double), @p494='?' (DbType = Double), @p495='?' (DbType = Double), @p496='?' (DbType = Int64), @p497='?' (Size = 4000), @p498='?' (DbType = Double), @p499='?' (DbType = Double), @p500='?' (DbType = Double), @p501='?' (DbType = Double), @p502='?' (Size = 450), @p503='?' (DbType = Double), @p504='?' (DbType = Double), @p505='?' (DbType = Double), @p506='?' (DbType = Double), @p507='?' (DbType = Double), @p508='?' (DbType = Double), @p509='?' (DbType = Double), @p510='?' (DbType = Double), @p511='?' (DbType = Int64), @p512='?' (DbType = Double), @p513='?' (DbType = Double), @p514='?' (DbType = Double), @p515='?' (DbType = Double), @p516='?' (DbType = Int64), @p517='?' (DbType = Int64), @p518='?' (DbType = Int64), @p519='?' (DbType = Double), @p520='?' (DbType = Int64), @p521='?' (DbType = Int64), @p522='?' (DbType = DateTime2), @p523='?' (DbType = Double), @p524='?' (DbType = Double), @p525='?' (DbType = Double), @p526='?' (DbType = Double), @p527='?' (DbType = Int64), @p528='?' (DbType = Double), @p529='?' (DbType = Int64), @p530='?' (DbType = Double), @p531='?' (DbType = Double), @p532='?' (DbType = Double), @p533='?' (DbType = Double), @p534='?' (DbType = Double), @p535='?' (DbType = Int64), @p536='?' (Size = 4000), @p537='?' (DbType = Double), @p538='?' (DbType = Double), @p539='?' (DbType = Double), @p540='?' (DbType = Double), @p541='?' (Size = 450), @p542='?' (DbType = Double), @p543='?' (DbType = Double), @p544='?' (DbType = Double), @p545='?' (DbType = Double), @p546='?' (DbType = Double), @p547='?' (DbType = Double), @p548='?' (DbType = Double), @p549='?' (DbType = Double), @p550='?' (DbType = Int64), @p551='?' (DbType = Double), @p552='?' (DbType = Double), @p553='?' (DbType = Double), @p554='?' (DbType = Double), @p555='?' (DbType = Int64), @p556='?' (DbType = Int64), @p557='?' (DbType = Int64), @p558='?' (DbType = Double), @p559='?' (DbType = Int64), @p560='?' (DbType = Int64), @p561='?' (DbType = DateTime2), @p562='?' (DbType = Double), @p563='?' (DbType = Double), @p564='?' (DbType = Double), @p565='?' (DbType = Double), @p566='?' (DbType = Int64), @p567='?' (DbType = Double), @p568='?' (DbType = Int64), @p569='?' (DbType = Double), @p570='?' (DbType = Double), @p571='?' (DbType = Double), @p572='?' (DbType = Double), @p573='?' (DbType = Double), @p574='?' (DbType = Int64), @p575='?' (Size = 4000), @p576='?' (DbType = Double), @p577='?' (DbType = Double), @p578='?' (DbType = Double), @p579='?' (DbType = Double), @p580='?' (Size = 450), @p581='?' (DbType = Double), @p582='?' (DbType = Double), @p583='?' (DbType = Double), @p584='?' (DbType = Double), @p585='?' (DbType = Double), @p586='?' (DbType = Double), @p587='?' (DbType = Double), @p588='?' (DbType = Double), @p589='?' (DbType = Int64), @p590='?' (DbType = Double), @p591='?' (DbType = Double), @p592='?' (DbType = Double), @p593='?' (DbType = Double), @p594='?' (DbType = Int64), @p595='?' (DbType = Int64), @p596='?' (DbType = Int64), @p597='?' (DbType = Double), @p598='?' (DbType = Int64), @p599='?' (DbType = Int64), @p600='?' (DbType = DateTime2), @p601='?' (DbType = Double), @p602='?' (DbType = Double), @p603='?' (DbType = Double), @p604='?' (DbType = Double), @p605='?' (DbType = Int64), @p606='?' (DbType = Double), @p607='?' (DbType = Int64), @p608='?' (DbType = Double), @p609='?' (DbType = Double), @p610='?' (DbType = Double), @p611='?' (DbType = Double), @p612='?' (DbType = Double), @p613='?' (DbType = Int64), @p614='?' (Size = 4000), @p615='?' (DbType = Double), @p616='?' (DbType = Double), @p617='?' (DbType = Double), @p618='?' (DbType = Double), @p619='?' (Size = 450), @p620='?' (DbType = Double), @p621='?' (DbType = Double), @p622='?' (DbType = Double), @p623='?' (DbType = Double), @p624='?' (DbType = Double), @p625='?' (DbType = Double), @p626='?' (DbType = Double), @p627='?' (DbType = Double), @p628='?' (DbType = Int64), @p629='?' (DbType = Double), @p630='?' (DbType = Double), @p631='?' (DbType = Double), @p632='?' (DbType = Double), @p633='?' (DbType = Int64), @p634='?' (DbType = Int64), @p635='?' (DbType = Int64), @p636='?' (DbType = Double), @p637='?' (DbType = Int64), @p638='?' (DbType = Int64), @p639='?' (DbType = DateTime2), @p640='?' (DbType = Double), @p641='?' (DbType = Double), @p642='?' (DbType = Double), @p643='?' (DbType = Double), @p644='?' (DbType = Int64), @p645='?' (DbType = Double), @p646='?' (DbType = Int64), @p647='?' (DbType = Double), @p648='?' (DbType = Double), @p649='?' (DbType = Double), @p650='?' (DbType = Double), @p651='?' (DbType = Double), @p652='?' (DbType = Int64), @p653='?' (Size = 4000), @p654='?' (DbType = Double), @p655='?' (DbType = Double), @p656='?' (DbType = Double), @p657='?' (DbType = Double), @p658='?' (Size = 450), @p659='?' (DbType = Double), @p660='?' (DbType = Double), @p661='?' (DbType = Double), @p662='?' (DbType = Double), @p663='?' (DbType = Double), @p664='?' (DbType = Double), @p665='?' (DbType = Double), @p666='?' (DbType = Double), @p667='?' (DbType = Int64), @p668='?' (DbType = Double), @p669='?' (DbType = Double), @p670='?' (DbType = Double), @p671='?' (DbType = Double), @p672='?' (DbType = Int64), @p673='?' (DbType = Int64), @p674='?' (DbType = Int64), @p675='?' (DbType = Double), @p676='?' (DbType = Int64), @p677='?' (DbType = Int64), @p678='?' (DbType = DateTime2), @p679='?' (DbType = Double), @p680='?' (DbType = Double), @p681='?' (DbType = Double), @p682='?' (DbType = Double), @p683='?' (DbType = Int64), @p684='?' (DbType = Double), @p685='?' (DbType = Int64), @p686='?' (DbType = Double), @p687='?' (DbType = Double), @p688='?' (DbType = Double), @p689='?' (DbType = Double), @p690='?' (DbType = Double), @p691='?' (DbType = Int64), @p692='?' (Size = 4000), @p693='?' (DbType = Double), @p694='?' (DbType = Double), @p695='?' (DbType = Double), @p696='?' (DbType = Double), @p697='?' (Size = 450), @p698='?' (DbType = Double), @p699='?' (DbType = Double), @p700='?' (DbType = Double), @p701='?' (DbType = Double), @p702='?' (DbType = Double), @p703='?' (DbType = Double), @p704='?' (DbType = Double), @p705='?' (DbType = Double), @p706='?' (DbType = Int64), @p707='?' (DbType = Double), @p708='?' (DbType = Double), @p709='?' (DbType = Double), @p710='?' (DbType = Double), @p711='?' (DbType = Int64), @p712='?' (DbType = Int64), @p713='?' (DbType = Int64), @p714='?' (DbType = Double), @p715='?' (DbType = Int64), @p716='?' (DbType = Int64), @p717='?' (DbType = DateTime2), @p718='?' (DbType = Double), @p719='?' (DbType = Double), @p720='?' (DbType = Double), @p721='?' (DbType = Double), @p722='?' (DbType = Int64), @p723='?' (DbType = Double), @p724='?' (DbType = Int64), @p725='?' (DbType = Double), @p726='?' (DbType = Double), @p727='?' (DbType = Double), @p728='?' (DbType = Double), @p729='?' (DbType = Double), @p730='?' (DbType = Int64), @p731='?' (Size = 4000), @p732='?' (DbType = Double), @p733='?' (DbType = Double), @p734='?' (DbType = Double), @p735='?' (DbType = Double), @p736='?' (Size = 450), @p737='?' (DbType = Double), @p738='?' (DbType = Double), @p739='?' (DbType = Double), @p740='?' (DbType = Double), @p741='?' (DbType = Double), @p742='?' (DbType = Double), @p743='?' (DbType = Double), @p744='?' (DbType = Double), @p745='?' (DbType = Int64), @p746='?' (DbType = Double), @p747='?' (DbType = Double), @p748='?' (DbType = Double), @p749='?' (DbType = Double), @p750='?' (DbType = Int64), @p751='?' (DbType = Int64), @p752='?' (DbType = Int64), @p753='?' (DbType = Double), @p754='?' (DbType = Int64), @p755='?' (DbType = Int64), @p756='?' (DbType = DateTime2), @p757='?' (DbType = Double), @p758='?' (DbType = Double), @p759='?' (DbType = Double), @p760='?' (DbType = Double), @p761='?' (DbType = Int64), @p762='?' (DbType = Double), @p763='?' (DbType = Int64), @p764='?' (DbType = Double), @p765='?' (DbType = Double), @p766='?' (DbType = Double), @p767='?' (DbType = Double), @p768='?' (DbType = Double), @p769='?' (DbType = Int64), @p770='?' (Size = 4000), @p771='?' (DbType = Double), @p772='?' (DbType = Double), @p773='?' (DbType = Double), @p774='?' (DbType = Double), @p775='?' (Size = 450), @p776='?' (DbType = Double), @p777='?' (DbType = Double), @p778='?' (DbType = Double), @p779='?' (DbType = Double), @p780='?' (DbType = Double), @p781='?' (DbType = Double), @p782='?' (DbType = Double), @p783='?' (DbType = Double), @p784='?' (DbType = Int64), @p785='?' (DbType = Double), @p786='?' (DbType = Double), @p787='?' (DbType = Double), @p788='?' (DbType = Double), @p789='?' (DbType = Int64), @p790='?' (DbType = Int64), @p791='?' (DbType = Int64), @p792='?' (DbType = Double), @p793='?' (DbType = Int64), @p794='?' (DbType = Int64), @p795='?' (DbType = DateTime2), @p796='?' (DbType = Double), @p797='?' (DbType = Double), @p798='?' (DbType = Double), @p799='?' (DbType = Double), @p800='?' (DbType = Int64), @p801='?' (DbType = Double), @p802='?' (DbType = Int64), @p803='?' (DbType = Double), @p804='?' (DbType = Double), @p805='?' (DbType = Double), @p806='?' (DbType = Double), @p807='?' (DbType = Double), @p808='?' (DbType = Int64), @p809='?' (Size = 4000), @p810='?' (DbType = Double), @p811='?' (DbType = Double), @p812='?' (DbType = Double), @p813='?' (DbType = Double), @p814='?' (Size = 450), @p815='?' (DbType = Double), @p816='?' (DbType = Double), @p817='?' (DbType = Double), @p818='?' (DbType = Double), @p819='?' (DbType = Double), @p820='?' (DbType = Double), @p821='?' (DbType = Double), @p822='?' (DbType = Double), @p823='?' (DbType = Int64), @p824='?' (DbType = Double), @p825='?' (DbType = Double), @p826='?' (DbType = Double), @p827='?' (DbType = Double), @p828='?' (DbType = Int64), @p829='?' (DbType = Int64), @p830='?' (DbType = Int64), @p831='?' (DbType = Double), @p832='?' (DbType = Int64), @p833='?' (DbType = Int64), @p834='?' (DbType = DateTime2), @p835='?' (DbType = Double), @p836='?' (DbType = Double), @p837='?' (DbType = Double), @p838='?' (DbType = Double), @p839='?' (DbType = Int64), @p840='?' (DbType = Double), @p841='?' (DbType = Int64), @p842='?' (DbType = Double), @p843='?' (DbType = Double), @p844='?' (DbType = Double), @p845='?' (DbType = Double), @p846='?' (DbType = Double), @p847='?' (DbType = Int64), @p848='?' (Size = 4000), @p849='?' (DbType = Double), @p850='?' (DbType = Double), @p851='?' (DbType = Double), @p852='?' (DbType = Double), @p853='?' (Size = 450), @p854='?' (DbType = Double), @p855='?' (DbType = Double), @p856='?' (DbType = Double), @p857='?' (DbType = Double), @p858='?' (DbType = Double), @p859='?' (DbType = Double), @p860='?' (DbType = Double), @p861='?' (DbType = Double), @p862='?' (DbType = Int64), @p863='?' (DbType = Double), @p864='?' (DbType = Double), @p865='?' (DbType = Double), @p866='?' (DbType = Double), @p867='?' (DbType = Int64), @p868='?' (DbType = Int64), @p869='?' (DbType = Int64), @p870='?' (DbType = Double), @p871='?' (DbType = Int64), @p872='?' (DbType = Int64), @p873='?' (DbType = DateTime2), @p874='?' (DbType = Double), @p875='?' (DbType = Double), @p876='?' (DbType = Double), @p877='?' (DbType = Double), @p878='?' (DbType = Int64), @p879='?' (DbType = Double), @p880='?' (DbType = Int64), @p881='?' (DbType = Double), @p882='?' (DbType = Double), @p883='?' (DbType = Double), @p884='?' (DbType = Double), @p885='?' (DbType = Double), @p886='?' (DbType = Int64), @p887='?' (Size = 4000), @p888='?' (DbType = Double), @p889='?' (DbType = Double), @p890='?' (DbType = Double), @p891='?' (DbType = Double), @p892='?' (Size = 450), @p893='?' (DbType = Double), @p894='?' (DbType = Double), @p895='?' (DbType = Double), @p896='?' (DbType = Double), @p897='?' (DbType = Double), @p898='?' (DbType = Double), @p899='?' (DbType = Double), @p900='?' (DbType = Double), @p901='?' (DbType = Int64), @p902='?' (DbType = Double), @p903='?' (DbType = Double), @p904='?' (DbType = Double), @p905='?' (DbType = Double), @p906='?' (DbType = Int64), @p907='?' (DbType = Int64), @p908='?' (DbType = Int64), @p909='?' (DbType = Double), @p910='?' (DbType = Int64), @p911='?' (DbType = Int64), @p912='?' (DbType = DateTime2), @p913='?' (DbType = Double), @p914='?' (DbType = Double), @p915='?' (DbType = Double), @p916='?' (DbType = Double), @p917='?' (DbType = Int64), @p918='?' (DbType = Double), @p919='?' (DbType = Int64), @p920='?' (DbType = Double), @p921='?' (DbType = Double), @p922='?' (DbType = Double), @p923='?' (DbType = Double), @p924='?' (DbType = Double), @p925='?' (DbType = Int64), @p926='?' (Size = 4000), @p927='?' (DbType = Double), @p928='?' (DbType = Double), @p929='?' (DbType = Double), @p930='?' (DbType = Double), @p931='?' (Size = 450), @p932='?' (DbType = Double), @p933='?' (DbType = Double), @p934='?' (DbType = Double), @p935='?' (DbType = Double), @p936='?' (DbType = Double), @p937='?' (DbType = Double), @p938='?' (DbType = Double), @p939='?' (DbType = Double), @p940='?' (DbType = Int64), @p941='?' (DbType = Double), @p942='?' (DbType = Double), @p943='?' (DbType = Double), @p944='?' (DbType = Double), @p945='?' (DbType = Int64), @p946='?' (DbType = Int64), @p947='?' (DbType = Int64), @p948='?' (DbType = Double), @p949='?' (DbType = Int64), @p950='?' (DbType = Int64), @p951='?' (DbType = DateTime2), @p952='?' (DbType = Double), @p953='?' (DbType = Double), @p954='?' (DbType = Double), @p955='?' (DbType = Double), @p956='?' (DbType = Int64), @p957='?' (DbType = Double), @p958='?' (DbType = Int64), @p959='?' (DbType = Double), @p960='?' (DbType = Double), @p961='?' (DbType = Double), @p962='?' (DbType = Double), @p963='?' (DbType = Double), @p964='?' (DbType = Int64), @p965='?' (Size = 4000), @p966='?' (DbType = Double), @p967='?' (DbType = Double), @p968='?' (DbType = Double), @p969='?' (DbType = Double), @p970='?' (Size = 450), @p971='?' (DbType = Double), @p972='?' (DbType = Double), @p973='?' (DbType = Double), @p974='?' (DbType = Double), @p975='?' (DbType = Double), @p976='?' (DbType = Double), @p977='?' (DbType = Double), @p978='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
DECLARE @inserted0 TABLE ([Id] int, [_Position] [int]);
MERGE [BalanceSheetAnnualReport] USING (
VALUES (@p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21, @p22, @p23, @p24, @p25, @p26, @p27, @p28, @p29, @p30, @p31, @p32, @p33, @p34, @p35, @p36, @p37, @p38, @p39, @p40, @p41, @p42, 0),
(@p43, @p44, @p45, @p46, @p47, @p48, @p49, @p50, @p51, @p52, @p53, @p54, @p55, @p56, @p57, @p58, @p59, @p60, @p61, @p62, @p63, @p64, @p65, @p66, @p67, @p68, @p69, @p70, @p71, @p72, @p73, @p74, @p75, @p76, @p77, @p78, @p79, @p80, @p81, 1),
(@p82, @p83, @p84, @p85, @p86, @p87, @p88, @p89, @p90, @p91, @p92, @p93, @p94, @p95, @p96, @p97, @p98, @p99, @p100, @p101, @p102, @p103, @p104, @p105, @p106, @p107, @p108, @p109, @p110, @p111, @p112, @p113, @p114, @p115, @p116, @p117, @p118, @p119, @p120, 2),
(@p121, @p122, @p123, @p124, @p125, @p126, @p127, @p128, @p129, @p130, @p131, @p132, @p133, @p134, @p135, @p136, @p137, @p138, @p139, @p140, @p141, @p142, @p143, @p144, @p145, @p146, @p147, @p148, @p149, @p150, @p151, @p152, @p153, @p154, @p155, @p156, @p157, @p158, @p159, 3),
(@p160, @p161, @p162, @p163, @p164, @p165, @p166, @p167, @p168, @p169, @p170, @p171, @p172, @p173, @p174, @p175, @p176, @p177, @p178, @p179, @p180, @p181, @p182, @p183, @p184, @p185, @p186, @p187, @p188, @p189, @p190, @p191, @p192, @p193, @p194, @p195, @p196, @p197, @p198, 4)) AS i ([AccumulatedDepreciationAmortizationPPE], [CapitalLeaseObligations], [CashAndCashEquivalentsAtCarryingValue], [CashAndShortTermInvestments], [CommonStock], [CommonStockSharesOutstanding], [CurrentAccountsPayable], [CurrentDebt], [CurrentLongTermDebt], [CurrentNetReceivables], [DeferredRevenue], [FiscalDateEnding], [Goodwill], [IntangibleAssets], [IntangibleAssetsExcludingGoodwill], [Inventory], [Investments], [LongTermDebt], [LongTermDebtNoncurrent], [LongTermInvestments], [OtherCurrentAssets], [OtherCurrentLiabilities], [OtherNonCurrentAssets], [OtherNonCurrentLiabilities], [PropertyPlantEquipment], [ReportedCurrency], [RetainedEarnings], [ShortLongTermDebtTotal], [ShortTermDebt], [ShortTermInvestments], [Symbol], [TotalAssets], [TotalCurrentAssets], [TotalCurrentLiabilities], [TotalLiabilities], [TotalNonCurrentAssets], [TotalNonCurrentLiabilities], [TotalShareholderEquity], [TreasuryStock], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([AccumulatedDepreciationAmortizationPPE], [CapitalLeaseObligations], [CashAndCashEquivalentsAtCarryingValue], [CashAndShortTermInvestments], [CommonStock], [CommonStockSharesOutstanding], [CurrentAccountsPayable], [CurrentDebt], [CurrentLongTermDebt], [CurrentNetReceivables], [DeferredRevenue], [FiscalDateEnding], [Goodwill], [IntangibleAssets], [IntangibleAssetsExcludingGoodwill], [Inventory], [Investments], [LongTermDebt], [LongTermDebtNoncurrent], [LongTermInvestments], [OtherCurrentAssets], [OtherCurrentLiabilities], [OtherNonCurrentAssets], [OtherNonCurrentLiabilities], [PropertyPlantEquipment], [ReportedCurrency], [RetainedEarnings], [ShortLongTermDebtTotal], [ShortTermDebt], [ShortTermInvestments], [Symbol], [TotalAssets], [TotalCurrentAssets], [TotalCurrentLiabilities], [TotalLiabilities], [TotalNonCurrentAssets], [TotalNonCurrentLiabilities], [TotalShareholderEquity], [TreasuryStock])
VALUES (i.[AccumulatedDepreciationAmortizationPPE], i.[CapitalLeaseObligations], i.[CashAndCashEquivalentsAtCarryingValue], i.[CashAndShortTermInvestments], i.[CommonStock], i.[CommonStockSharesOutstanding], i.[CurrentAccountsPayable], i.[CurrentDebt], i.[CurrentLongTermDebt], i.[CurrentNetReceivables], i.[DeferredRevenue], i.[FiscalDateEnding], i.[Goodwill], i.[IntangibleAssets], i.[IntangibleAssetsExcludingGoodwill], i.[Inventory], i.[Investments], i.[LongTermDebt], i.[LongTermDebtNoncurrent], i.[LongTermInvestments], i.[OtherCurrentAssets], i.[OtherCurrentLiabilities], i.[OtherNonCurrentAssets], i.[OtherNonCurrentLiabilities], i.[PropertyPlantEquipment], i.[ReportedCurrency], i.[RetainedEarnings], i.[ShortLongTermDebtTotal], i.[ShortTermDebt], i.[ShortTermInvestments], i.[Symbol], i.[TotalAssets], i.[TotalCurrentAssets], i.[TotalCurrentLiabilities], i.[TotalLiabilities], i.[TotalNonCurrentAssets], i.[TotalNonCurrentLiabilities], i.[TotalShareholderEquity], i.[TreasuryStock])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted0;

SELECT [i].[Id] FROM @inserted0 i
ORDER BY [i].[_Position];

DECLARE @inserted5 TABLE ([Id] int, [_Position] [int]);
MERGE [BalanceSheetQuarterlyReports] USING (
VALUES (@p199, @p200, @p201, @p202, @p203, @p204, @p205, @p206, @p207, @p208, @p209, @p210, @p211, @p212, @p213, @p214, @p215, @p216, @p217, @p218, @p219, @p220, @p221, @p222, @p223, @p224, @p225, @p226, @p227, @p228, @p229, @p230, @p231, @p232, @p233, @p234, @p235, @p236, @p237, 0),
(@p238, @p239, @p240, @p241, @p242, @p243, @p244, @p245, @p246, @p247, @p248, @p249, @p250, @p251, @p252, @p253, @p254, @p255, @p256, @p257, @p258, @p259, @p260, @p261, @p262, @p263, @p264, @p265, @p266, @p267, @p268, @p269, @p270, @p271, @p272, @p273, @p274, @p275, @p276, 1),
(@p277, @p278, @p279, @p280, @p281, @p282, @p283, @p284, @p285, @p286, @p287, @p288, @p289, @p290, @p291, @p292, @p293, @p294, @p295, @p296, @p297, @p298, @p299, @p300, @p301, @p302, @p303, @p304, @p305, @p306, @p307, @p308, @p309, @p310, @p311, @p312, @p313, @p314, @p315, 2),
(@p316, @p317, @p318, @p319, @p320, @p321, @p322, @p323, @p324, @p325, @p326, @p327, @p328, @p329, @p330, @p331, @p332, @p333, @p334, @p335, @p336, @p337, @p338, @p339, @p340, @p341, @p342, @p343, @p344, @p345, @p346, @p347, @p348, @p349, @p350, @p351, @p352, @p353, @p354, 3),
(@p355, @p356, @p357, @p358, @p359, @p360, @p361, @p362, @p363, @p364, @p365, @p366, @p367, @p368, @p369, @p370, @p371, @p372, @p373, @p374, @p375, @p376, @p377, @p378, @p379, @p380, @p381, @p382, @p383, @p384, @p385, @p386, @p387, @p388, @p389, @p390, @p391, @p392, @p393, 4),
(@p394, @p395, @p396, @p397, @p398, @p399, @p400, @p401, @p402, @p403, @p404, @p405, @p406, @p407, @p408, @p409, @p410, @p411, @p412, @p413, @p414, @p415, @p416, @p417, @p418, @p419, @p420, @p421, @p422, @p423, @p424, @p425, @p426, @p427, @p428, @p429, @p430, @p431, @p432, 5),
(@p433, @p434, @p435, @p436, @p437, @p438, @p439, @p440, @p441, @p442, @p443, @p444, @p445, @p446, @p447, @p448, @p449, @p450, @p451, @p452, @p453, @p454, @p455, @p456, @p457, @p458, @p459, @p460, @p461, @p462, @p463, @p464, @p465, @p466, @p467, @p468, @p469, @p470, @p471, 6),
(@p472, @p473, @p474, @p475, @p476, @p477, @p478, @p479, @p480, @p481, @p482, @p483, @p484, @p485, @p486, @p487, @p488, @p489, @p490, @p491, @p492, @p493, @p494, @p495, @p496, @p497, @p498, @p499, @p500, @p501, @p502, @p503, @p504, @p505, @p506, @p507, @p508, @p509, @p510, 7),
(@p511, @p512, @p513, @p514, @p515, @p516, @p517, @p518, @p519, @p520, @p521, @p522, @p523, @p524, @p525, @p526, @p527, @p528, @p529, @p530, @p531, @p532, @p533, @p534, @p535, @p536, @p537, @p538, @p539, @p540, @p541, @p542, @p543, @p544, @p545, @p546, @p547, @p548, @p549, 8),
(@p550, @p551, @p552, @p553, @p554, @p555, @p556, @p557, @p558, @p559, @p560, @p561, @p562, @p563, @p564, @p565, @p566, @p567, @p568, @p569, @p570, @p571, @p572, @p573, @p574, @p575, @p576, @p577, @p578, @p579, @p580, @p581, @p582, @p583, @p584, @p585, @p586, @p587, @p588, 9),
(@p589, @p590, @p591, @p592, @p593, @p594, @p595, @p596, @p597, @p598, @p599, @p600, @p601, @p602, @p603, @p604, @p605, @p606, @p607, @p608, @p609, @p610, @p611, @p612, @p613, @p614, @p615, @p616, @p617, @p618, @p619, @p620, @p621, @p622, @p623, @p624, @p625, @p626, @p627, 10),
(@p628, @p629, @p630, @p631, @p632, @p633, @p634, @p635, @p636, @p637, @p638, @p639, @p640, @p641, @p642, @p643, @p644, @p645, @p646, @p647, @p648, @p649, @p650, @p651, @p652, @p653, @p654, @p655, @p656, @p657, @p658, @p659, @p660, @p661, @p662, @p663, @p664, @p665, @p666, 11),
(@p667, @p668, @p669, @p670, @p671, @p672, @p673, @p674, @p675, @p676, @p677, @p678, @p679, @p680, @p681, @p682, @p683, @p684, @p685, @p686, @p687, @p688, @p689, @p690, @p691, @p692, @p693, @p694, @p695, @p696, @p697, @p698, @p699, @p700, @p701, @p702, @p703, @p704, @p705, 12),
(@p706, @p707, @p708, @p709, @p710, @p711, @p712, @p713, @p714, @p715, @p716, @p717, @p718, @p719, @p720, @p721, @p722, @p723, @p724, @p725, @p726, @p727, @p728, @p729, @p730, @p731, @p732, @p733, @p734, @p735, @p736, @p737, @p738, @p739, @p740, @p741, @p742, @p743, @p744, 13),
(@p745, @p746, @p747, @p748, @p749, @p750, @p751, @p752, @p753, @p754, @p755, @p756, @p757, @p758, @p759, @p760, @p761, @p762, @p763, @p764, @p765, @p766, @p767, @p768, @p769, @p770, @p771, @p772, @p773, @p774, @p775, @p776, @p777, @p778, @p779, @p780, @p781, @p782, @p783, 14),
(@p784, @p785, @p786, @p787, @p788, @p789, @p790, @p791, @p792, @p793, @p794, @p795, @p796, @p797, @p798, @p799, @p800, @p801, @p802, @p803, @p804, @p805, @p806, @p807, @p808, @p809, @p810, @p811, @p812, @p813, @p814, @p815, @p816, @p817, @p818, @p819, @p820, @p821, @p822, 15),
(@p823, @p824, @p825, @p826, @p827, @p828, @p829, @p830, @p831, @p832, @p833, @p834, @p835, @p836, @p837, @p838, @p839, @p840, @p841, @p842, @p843, @p844, @p845, @p846, @p847, @p848, @p849, @p850, @p851, @p852, @p853, @p854, @p855, @p856, @p857, @p858, @p859, @p860, @p861, 16),
(@p862, @p863, @p864, @p865, @p866, @p867, @p868, @p869, @p870, @p871, @p872, @p873, @p874, @p875, @p876, @p877, @p878, @p879, @p880, @p881, @p882, @p883, @p884, @p885, @p886, @p887, @p888, @p889, @p890, @p891, @p892, @p893, @p894, @p895, @p896, @p897, @p898, @p899, @p900, 17),
(@p901, @p902, @p903, @p904, @p905, @p906, @p907, @p908, @p909, @p910, @p911, @p912, @p913, @p914, @p915, @p916, @p917, @p918, @p919, @p920, @p921, @p922, @p923, @p924, @p925, @p926, @p927, @p928, @p929, @p930, @p931, @p932, @p933, @p934, @p935, @p936, @p937, @p938, @p939, 18),
(@p940, @p941, @p942, @p943, @p944, @p945, @p946, @p947, @p948, @p949, @p950, @p951, @p952, @p953, @p954, @p955, @p956, @p957, @p958, @p959, @p960, @p961, @p962, @p963, @p964, @p965, @p966, @p967, @p968, @p969, @p970, @p971, @p972, @p973, @p974, @p975, @p976, @p977, @p978, 19)) AS i ([AccumulatedDepreciationAmortizationPPE], [CapitalLeaseObligations], [CashAndCashEquivalentsAtCarryingValue], [CashAndShortTermInvestments], [CommonStock], [CommonStockSharesOutstanding], [CurrentAccountsPayable], [CurrentDebt], [CurrentLongTermDebt], [CurrentNetReceivables], [DeferredRevenue], [FiscalDateEnding], [Goodwill], [IntangibleAssets], [IntangibleAssetsExcludingGoodwill], [Inventory], [Investments], [LongTermDebt], [LongTermDebtNoncurrent], [LongTermInvestments], [OtherCurrentAssets], [OtherCurrentLiabilities], [OtherNonCurrentAssets], [OtherNonCurrentLiabilities], [PropertyPlantEquipment], [ReportedCurrency], [RetainedEarnings], [ShortLongTermDebtTotal], [ShortTermDebt], [ShortTermInvestments], [Symbol], [TotalAssets], [TotalCurrentAssets], [TotalCurrentLiabilities], [TotalLiabilities], [TotalNonCurrentAssets], [TotalNonCurrentLiabilities], [TotalShareholderEquity], [TreasuryStock], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([AccumulatedDepreciationAmortizationPPE], [CapitalLeaseObligations], [CashAndCashEquivalentsAtCarryingValue], [CashAndShortTermInvestments], [CommonStock], [CommonStockSharesOutstanding], [CurrentAccountsPayable], [CurrentDebt], [CurrentLongTermDebt], [CurrentNetReceivables], [DeferredRevenue], [FiscalDateEnding], [Goodwill], [IntangibleAssets], [IntangibleAssetsExcludingGoodwill], [Inventory], [Investments], [LongTermDebt], [LongTermDebtNoncurrent], [LongTermInvestments], [OtherCurrentAssets], [OtherCurrentLiabilities], [OtherNonCurrentAssets], [OtherNonCurrentLiabilities], [PropertyPlantEquipment], [ReportedCurrency], [RetainedEarnings], [ShortLongTermDebtTotal], [ShortTermDebt], [ShortTermInvestments], [Symbol], [TotalAssets], [TotalCurrentAssets], [TotalCurrentLiabilities], [TotalLiabilities], [TotalNonCurrentAssets], [TotalNonCurrentLiabilities], [TotalShareholderEquity], [TreasuryStock])
VALUES (i.[AccumulatedDepreciationAmortizationPPE], i.[CapitalLeaseObligations], i.[CashAndCashEquivalentsAtCarryingValue], i.[CashAndShortTermInvestments], i.[CommonStock], i.[CommonStockSharesOutstanding], i.[CurrentAccountsPayable], i.[CurrentDebt], i.[CurrentLongTermDebt], i.[CurrentNetReceivables], i.[DeferredRevenue], i.[FiscalDateEnding], i.[Goodwill], i.[IntangibleAssets], i.[IntangibleAssetsExcludingGoodwill], i.[Inventory], i.[Investments], i.[LongTermDebt], i.[LongTermDebtNoncurrent], i.[LongTermInvestments], i.[OtherCurrentAssets], i.[OtherCurrentLiabilities], i.[OtherNonCurrentAssets], i.[OtherNonCurrentLiabilities], i.[PropertyPlantEquipment], i.[ReportedCurrency], i.[RetainedEarnings], i.[ShortLongTermDebtTotal], i.[ShortTermDebt], i.[ShortTermInvestments], i.[Symbol], i.[TotalAssets], i.[TotalCurrentAssets], i.[TotalCurrentLiabilities], i.[TotalLiabilities], i.[TotalNonCurrentAssets], i.[TotalNonCurrentLiabilities], i.[TotalShareholderEquity], i.[TreasuryStock])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted5;

SELECT [i].[Id] FROM @inserted5 i
ORDER BY [i].[_Position];
2022-05-12 01:13:21.323 +03:00 [INF] AddOrUpdate run successful.
2022-05-12 01:13:24.183 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CashFlow with Symbol AVB
2022-05-12 01:13:24.184 +03:00 [INF] Generating URI for CASH_FLOW with params: symbol: AVB
2022-05-12 01:13:24.184 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=CASH_FLOW&symbol=AVB
2022-05-12 01:13:24.185 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=CASH_FLOW&symbol=AVB".
2022-05-12 01:13:24.810 +03:00 [INF] Response has success status code
2022-05-12 01:13:24.811 +03:00 [INF] Trying to deserialize response.
2022-05-12 01:13:24.812 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 01:13:24.822 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__symbol_0
2022-05-12 01:13:24.824 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.CashFlow.
2022-05-12 01:13:24.832 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[ExistInApi], [c].[LastApiRefresh], [c].[LastLocalRefresh]
FROM [CashFlows] AS [c]
WHERE [c].[Symbol] = @__entity_Symbol_0
2022-05-12 01:13:24.833 +03:00 [INF] Entity does not exist. Adding to DB.
2022-05-12 01:13:24.845 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = Boolean), @p2='?' (DbType = DateTime2), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [CashFlows] ([Symbol], [ExistInApi], [LastApiRefresh], [LastLocalRefresh])
VALUES (@p0, @p1, @p2, @p3);
2022-05-12 01:13:24.888 +03:00 [INF] Executed DbCommand (40ms) [Parameters=[@p4='?' (DbType = Double), @p5='?' (DbType = Double), @p6='?' (DbType = Int64), @p7='?' (DbType = Int64), @p8='?' (DbType = Int64), @p9='?' (DbType = Int64), @p10='?' (DbType = Int64), @p11='?' (DbType = Int64), @p12='?' (DbType = Int64), @p13='?' (DbType = Double), @p14='?' (DbType = Int64), @p15='?' (DbType = Double), @p16='?' (DbType = Int64), @p17='?' (Size = 4000), @p18='?' (DbType = Double), @p19='?' (DbType = Double), @p20='?' (DbType = Int64), @p21='?' (DbType = Int64), @p22='?' (DbType = Int64), @p23='?' (DbType = Int64), @p24='?' (DbType = Int64), @p25='?' (DbType = Int64), @p26='?' (DbType = Int64), @p27='?' (DbType = Int64), @p28='?' (DbType = Int64), @p29='?' (DbType = Double), @p30='?' (DbType = Int64), @p31='?' (DbType = Int64), @p32='?' (Size = 4000), @p33='?' (Size = 450), @p34='?' (DbType = Double), @p35='?' (DbType = Double), @p36='?' (DbType = Int64), @p37='?' (DbType = Int64), @p38='?' (DbType = Int64), @p39='?' (DbType = Int64), @p40='?' (DbType = Int64), @p41='?' (DbType = Int64), @p42='?' (DbType = Int64), @p43='?' (DbType = Double), @p44='?' (DbType = Int64), @p45='?' (DbType = Double), @p46='?' (DbType = Int64), @p47='?' (Size = 4000), @p48='?' (DbType = Double), @p49='?' (DbType = Double), @p50='?' (DbType = Int64), @p51='?' (DbType = Int64), @p52='?' (DbType = Int64), @p53='?' (DbType = Int64), @p54='?' (DbType = Int64), @p55='?' (DbType = Int64), @p56='?' (DbType = Int64), @p57='?' (DbType = Int64), @p58='?' (DbType = Int64), @p59='?' (DbType = Double), @p60='?' (DbType = Int64), @p61='?' (DbType = Int64), @p62='?' (Size = 4000), @p63='?' (Size = 450), @p64='?' (DbType = Double), @p65='?' (DbType = Double), @p66='?' (DbType = Int64), @p67='?' (DbType = Int64), @p68='?' (DbType = Int64), @p69='?' (DbType = Int64), @p70='?' (DbType = Int64), @p71='?' (DbType = Int64), @p72='?' (DbType = Int64), @p73='?' (DbType = Double), @p74='?' (DbType = Int64), @p75='?' (DbType = Double), @p76='?' (DbType = Int64), @p77='?' (Size = 4000), @p78='?' (DbType = Double), @p79='?' (DbType = Double), @p80='?' (DbType = Int64), @p81='?' (DbType = Int64), @p82='?' (DbType = Int64), @p83='?' (DbType = Int64), @p84='?' (DbType = Int64), @p85='?' (DbType = Int64), @p86='?' (DbType = Int64), @p87='?' (DbType = Int64), @p88='?' (DbType = Int64), @p89='?' (DbType = Double), @p90='?' (DbType = Int64), @p91='?' (DbType = Int64), @p92='?' (Size = 4000), @p93='?' (Size = 450), @p94='?' (DbType = Double), @p95='?' (DbType = Double), @p96='?' (DbType = Int64), @p97='?' (DbType = Int64), @p98='?' (DbType = Int64), @p99='?' (DbType = Int64), @p100='?' (DbType = Int64), @p101='?' (DbType = Int64), @p102='?' (DbType = Int64), @p103='?' (DbType = Double), @p104='?' (DbType = Int64), @p105='?' (DbType = Double), @p106='?' (DbType = Int64), @p107='?' (Size = 4000), @p108='?' (DbType = Double), @p109='?' (DbType = Double), @p110='?' (DbType = Int64), @p111='?' (DbType = Int64), @p112='?' (DbType = Int64), @p113='?' (DbType = Int64), @p114='?' (DbType = Int64), @p115='?' (DbType = Int64), @p116='?' (DbType = Int64), @p117='?' (DbType = Int64), @p118='?' (DbType = Int64), @p119='?' (DbType = Double), @p120='?' (DbType = Int64), @p121='?' (DbType = Int64), @p122='?' (Size = 4000), @p123='?' (Size = 450), @p124='?' (DbType = Double), @p125='?' (DbType = Double), @p126='?' (DbType = Int64), @p127='?' (DbType = Int64), @p128='?' (DbType = Int64), @p129='?' (DbType = Int64), @p130='?' (DbType = Int64), @p131='?' (DbType = Int64), @p132='?' (DbType = Int64), @p133='?' (DbType = Double), @p134='?' (DbType = Int64), @p135='?' (DbType = Double), @p136='?' (DbType = Int64), @p137='?' (Size = 4000), @p138='?' (DbType = Double), @p139='?' (DbType = Double), @p140='?' (DbType = Int64), @p141='?' (DbType = Int64), @p142='?' (DbType = Int64), @p143='?' (DbType = Int64), @p144='?' (DbType = Int64), @p145='?' (DbType = Int64), @p146='?' (DbType = Int64), @p147='?' (DbType = Int64), @p148='?' (DbType = Int64), @p149='?' (DbType = Double), @p150='?' (DbType = Int64), @p151='?' (DbType = Int64), @p152='?' (Size = 4000), @p153='?' (Size = 450), @p154='?' (DbType = Double), @p155='?' (DbType = Double), @p156='?' (DbType = Int64), @p157='?' (DbType = Int64), @p158='?' (DbType = Int64), @p159='?' (DbType = Int64), @p160='?' (DbType = Int64), @p161='?' (DbType = Int64), @p162='?' (DbType = Int64), @p163='?' (DbType = Double), @p164='?' (DbType = Int64), @p165='?' (DbType = Double), @p166='?' (DbType = Int64), @p167='?' (Size = 4000), @p168='?' (DbType = Double), @p169='?' (DbType = Double), @p170='?' (DbType = Int64), @p171='?' (DbType = Int64), @p172='?' (DbType = Int64), @p173='?' (DbType = Int64), @p174='?' (DbType = Int64), @p175='?' (DbType = Int64), @p176='?' (DbType = Int64), @p177='?' (DbType = Int64), @p178='?' (DbType = Int64), @p179='?' (DbType = Double), @p180='?' (DbType = Int64), @p181='?' (DbType = Int64), @p182='?' (Size = 4000), @p183='?' (Size = 450), @p184='?' (DbType = Double), @p185='?' (DbType = Double), @p186='?' (DbType = Int64), @p187='?' (DbType = Int64), @p188='?' (DbType = Int64), @p189='?' (DbType = Int64), @p190='?' (DbType = Int64), @p191='?' (DbType = Int64), @p192='?' (DbType = Int64), @p193='?' (DbType = Double), @p194='?' (DbType = Int64), @p195='?' (DbType = Double), @p196='?' (DbType = Int64), @p197='?' (Size = 4000), @p198='?' (DbType = Double), @p199='?' (DbType = Double), @p200='?' (DbType = Int64), @p201='?' (DbType = Int64), @p202='?' (DbType = Int64), @p203='?' (DbType = Int64), @p204='?' (DbType = Int64), @p205='?' (DbType = Int64), @p206='?' (DbType = Int64), @p207='?' (DbType = Int64), @p208='?' (DbType = Int64), @p209='?' (DbType = Double), @p210='?' (DbType = Int64), @p211='?' (DbType = Int64), @p212='?' (Size = 4000), @p213='?' (Size = 450), @p214='?' (DbType = Double), @p215='?' (DbType = Double), @p216='?' (DbType = Int64), @p217='?' (DbType = Int64), @p218='?' (DbType = Int64), @p219='?' (DbType = Int64), @p220='?' (DbType = Int64), @p221='?' (DbType = Int64), @p222='?' (DbType = Int64), @p223='?' (DbType = Double), @p224='?' (DbType = Int64), @p225='?' (DbType = Double), @p226='?' (DbType = Int64), @p227='?' (Size = 4000), @p228='?' (DbType = Double), @p229='?' (DbType = Double), @p230='?' (DbType = Int64), @p231='?' (DbType = Int64), @p232='?' (DbType = Int64), @p233='?' (DbType = Int64), @p234='?' (DbType = Int64), @p235='?' (DbType = Int64), @p236='?' (DbType = Int64), @p237='?' (DbType = Int64), @p238='?' (DbType = Int64), @p239='?' (DbType = Double), @p240='?' (DbType = Int64), @p241='?' (DbType = Int64), @p242='?' (Size = 4000), @p243='?' (Size = 450), @p244='?' (DbType = Double), @p245='?' (DbType = Double), @p246='?' (DbType = Int64), @p247='?' (DbType = Int64), @p248='?' (DbType = Int64), @p249='?' (DbType = Int64), @p250='?' (DbType = Int64), @p251='?' (DbType = Int64), @p252='?' (DbType = Int64), @p253='?' (DbType = Double), @p254='?' (DbType = Int64), @p255='?' (DbType = Double), @p256='?' (DbType = Int64), @p257='?' (Size = 4000), @p258='?' (DbType = Double), @p259='?' (DbType = Double), @p260='?' (DbType = Int64), @p261='?' (DbType = Int64), @p262='?' (DbType = Int64), @p263='?' (DbType = Int64), @p264='?' (DbType = Int64), @p265='?' (DbType = Int64), @p266='?' (DbType = Int64), @p267='?' (DbType = Int64), @p268='?' (DbType = Int64), @p269='?' (DbType = Double), @p270='?' (DbType = Int64), @p271='?' (DbType = Int64), @p272='?' (Size = 4000), @p273='?' (Size = 450), @p274='?' (DbType = Double), @p275='?' (DbType = Double), @p276='?' (DbType = Int64), @p277='?' (DbType = Int64), @p278='?' (DbType = Int64), @p279='?' (DbType = Int64), @p280='?' (DbType = Int64), @p281='?' (DbType = Int64), @p282='?' (DbType = Int64), @p283='?' (DbType = Double), @p284='?' (DbType = Int64), @p285='?' (DbType = Double), @p286='?' (DbType = Int64), @p287='?' (Size = 4000), @p288='?' (DbType = Double), @p289='?' (DbType = Double), @p290='?' (DbType = Int64), @p291='?' (DbType = Int64), @p292='?' (DbType = Int64), @p293='?' (DbType = Int64), @p294='?' (DbType = Int64), @p295='?' (DbType = Int64), @p296='?' (DbType = Int64), @p297='?' (DbType = Int64), @p298='?' (DbType = Int64), @p299='?' (DbType = Double), @p300='?' (DbType = Int64), @p301='?' (DbType = Int64), @p302='?' (Size = 4000), @p303='?' (Size = 450), @p304='?' (DbType = Double), @p305='?' (DbType = Double), @p306='?' (DbType = Int64), @p307='?' (DbType = Int64), @p308='?' (DbType = Int64), @p309='?' (DbType = Int64), @p310='?' (DbType = Int64), @p311='?' (DbType = Int64), @p312='?' (DbType = Int64), @p313='?' (DbType = Double), @p314='?' (DbType = Int64), @p315='?' (DbType = Double), @p316='?' (DbType = Int64), @p317='?' (Size = 4000), @p318='?' (DbType = Double), @p319='?' (DbType = Double), @p320='?' (DbType = Int64), @p321='?' (DbType = Int64), @p322='?' (DbType = Int64), @p323='?' (DbType = Int64), @p324='?' (DbType = Int64), @p325='?' (DbType = Int64), @p326='?' (DbType = Int64), @p327='?' (DbType = Int64), @p328='?' (DbType = Int64), @p329='?' (DbType = Double), @p330='?' (DbType = Int64), @p331='?' (DbType = Int64), @p332='?' (Size = 4000), @p333='?' (Size = 450), @p334='?' (DbType = Double), @p335='?' (DbType = Double), @p336='?' (DbType = Int64), @p337='?' (DbType = Int64), @p338='?' (DbType = Int64), @p339='?' (DbType = Int64), @p340='?' (DbType = Int64), @p341='?' (DbType = Int64), @p342='?' (DbType = Int64), @p343='?' (DbType = Double), @p344='?' (DbType = Int64), @p345='?' (DbType = Double), @p346='?' (DbType = Int64), @p347='?' (Size = 4000), @p348='?' (DbType = Double), @p349='?' (DbType = Double), @p350='?' (DbType = Int64), @p351='?' (DbType = Int64), @p352='?' (DbType = Int64), @p353='?' (DbType = Int64), @p354='?' (DbType = Int64), @p355='?' (DbType = Int64), @p356='?' (DbType = Int64), @p357='?' (DbType = Int64), @p358='?' (DbType = Int64), @p359='?' (DbType = Double), @p360='?' (DbType = Int64), @p361='?' (DbType = Int64), @p362='?' (Size = 4000), @p363='?' (Size = 450), @p364='?' (DbType = Double), @p365='?' (DbType = Double), @p366='?' (DbType = Int64), @p367='?' (DbType = Int64), @p368='?' (DbType = Int64), @p369='?' (DbType = Int64), @p370='?' (DbType = Int64), @p371='?' (DbType = Int64), @p372='?' (DbType = Int64), @p373='?' (DbType = Double), @p374='?' (DbType = Int64), @p375='?' (DbType = Double), @p376='?' (DbType = Int64), @p377='?' (Size = 4000), @p378='?' (DbType = Double), @p379='?' (DbType = Double), @p380='?' (DbType = Int64), @p381='?' (DbType = Int64), @p382='?' (DbType = Int64), @p383='?' (DbType = Int64), @p384='?' (DbType = Int64), @p385='?' (DbType = Int64), @p386='?' (DbType = Int64), @p387='?' (DbType = Int64), @p388='?' (DbType = Int64), @p389='?' (DbType = Double), @p390='?' (DbType = Int64), @p391='?' (DbType = Int64), @p392='?' (Size = 4000), @p393='?' (Size = 450), @p394='?' (DbType = Double), @p395='?' (DbType = Double), @p396='?' (DbType = Int64), @p397='?' (DbType = Int64), @p398='?' (DbType = Int64), @p399='?' (DbType = Int64), @p400='?' (DbType = Int64), @p401='?' (DbType = Int64), @p402='?' (DbType = Int64), @p403='?' (DbType = Double), @p404='?' (DbType = Int64), @p405='?' (DbType = Double), @p406='?' (DbType = Int64), @p407='?' (Size = 4000), @p408='?' (DbType = Double), @p409='?' (DbType = Double), @p410='?' (DbType = Int64), @p411='?' (DbType = Int64), @p412='?' (DbType = Int64), @p413='?' (DbType = Int64), @p414='?' (DbType = Int64), @p415='?' (DbType = Int64), @p416='?' (DbType = Int64), @p417='?' (DbType = Int64), @p418='?' (DbType = Int64), @p419='?' (DbType = Double), @p420='?' (DbType = Int64), @p421='?' (DbType = Int64), @p422='?' (Size = 4000), @p423='?' (Size = 450), @p424='?' (DbType = Double), @p425='?' (DbType = Double), @p426='?' (DbType = Int64), @p427='?' (DbType = Int64), @p428='?' (DbType = Int64), @p429='?' (DbType = Int64), @p430='?' (DbType = Int64), @p431='?' (DbType = Int64), @p432='?' (DbType = Int64), @p433='?' (DbType = Double), @p434='?' (DbType = Int64), @p435='?' (DbType = Double), @p436='?' (DbType = Int64), @p437='?' (Size = 4000), @p438='?' (DbType = Double), @p439='?' (DbType = Double), @p440='?' (DbType = Int64), @p441='?' (DbType = Int64), @p442='?' (DbType = Int64), @p443='?' (DbType = Int64), @p444='?' (DbType = Int64), @p445='?' (DbType = Int64), @p446='?' (DbType = Int64), @p447='?' (DbType = Int64), @p448='?' (DbType = Int64), @p449='?' (DbType = Double), @p450='?' (DbType = Int64), @p451='?' (DbType = Int64), @p452='?' (Size = 4000), @p453='?' (Size = 450), @p454='?' (DbType = Double), @p455='?' (DbType = Double), @p456='?' (DbType = Int64), @p457='?' (DbType = Int64), @p458='?' (DbType = Int64), @p459='?' (DbType = Int64), @p460='?' (DbType = Int64), @p461='?' (DbType = Int64), @p462='?' (DbType = Int64), @p463='?' (DbType = Double), @p464='?' (DbType = Int64), @p465='?' (DbType = Double), @p466='?' (DbType = Int64), @p467='?' (Size = 4000), @p468='?' (DbType = Double), @p469='?' (DbType = Double), @p470='?' (DbType = Int64), @p471='?' (DbType = Int64), @p472='?' (DbType = Int64), @p473='?' (DbType = Int64), @p474='?' (DbType = Int64), @p475='?' (DbType = Int64), @p476='?' (DbType = Int64), @p477='?' (DbType = Int64), @p478='?' (DbType = Int64), @p479='?' (DbType = Double), @p480='?' (DbType = Int64), @p481='?' (DbType = Int64), @p482='?' (Size = 4000), @p483='?' (Size = 450), @p484='?' (DbType = Double), @p485='?' (DbType = Double), @p486='?' (DbType = Int64), @p487='?' (DbType = Int64), @p488='?' (DbType = Int64), @p489='?' (DbType = Int64), @p490='?' (DbType = Int64), @p491='?' (DbType = Int64), @p492='?' (DbType = Int64), @p493='?' (DbType = Double), @p494='?' (DbType = Int64), @p495='?' (DbType = Double), @p496='?' (DbType = Int64), @p497='?' (Size = 4000), @p498='?' (DbType = Double), @p499='?' (DbType = Double), @p500='?' (DbType = Int64), @p501='?' (DbType = Int64), @p502='?' (DbType = Int64), @p503='?' (DbType = Int64), @p504='?' (DbType = Int64), @p505='?' (DbType = Int64), @p506='?' (DbType = Int64), @p507='?' (DbType = Int64), @p508='?' (DbType = Int64), @p509='?' (DbType = Double), @p510='?' (DbType = Int64), @p511='?' (DbType = Int64), @p512='?' (Size = 4000), @p513='?' (Size = 450), @p514='?' (DbType = Double), @p515='?' (DbType = Double), @p516='?' (DbType = Int64), @p517='?' (DbType = Int64), @p518='?' (DbType = Int64), @p519='?' (DbType = Int64), @p520='?' (DbType = Int64), @p521='?' (DbType = Int64), @p522='?' (DbType = Int64), @p523='?' (DbType = Double), @p524='?' (DbType = Int64), @p525='?' (DbType = Double), @p526='?' (DbType = Int64), @p527='?' (Size = 4000), @p528='?' (DbType = Double), @p529='?' (DbType = Double), @p530='?' (DbType = Int64), @p531='?' (DbType = Int64), @p532='?' (DbType = Int64), @p533='?' (DbType = Int64), @p534='?' (DbType = Int64), @p535='?' (DbType = Int64), @p536='?' (DbType = Int64), @p537='?' (DbType = Int64), @p538='?' (DbType = Int64), @p539='?' (DbType = Double), @p540='?' (DbType = Int64), @p541='?' (DbType = Int64), @p542='?' (Size = 4000), @p543='?' (Size = 450), @p544='?' (DbType = Double), @p545='?' (DbType = Double), @p546='?' (DbType = Int64), @p547='?' (DbType = Int64), @p548='?' (DbType = Int64), @p549='?' (DbType = Int64), @p550='?' (DbType = Int64), @p551='?' (DbType = Int64), @p552='?' (DbType = Int64), @p553='?' (DbType = Double), @p554='?' (DbType = Int64), @p555='?' (DbType = Double), @p556='?' (DbType = Int64), @p557='?' (Size = 4000), @p558='?' (DbType = Double), @p559='?' (DbType = Double), @p560='?' (DbType = Int64), @p561='?' (DbType = Int64), @p562='?' (DbType = Int64), @p563='?' (DbType = Int64), @p564='?' (DbType = Int64), @p565='?' (DbType = Int64), @p566='?' (DbType = Int64), @p567='?' (DbType = Int64), @p568='?' (DbType = Int64), @p569='?' (DbType = Double), @p570='?' (DbType = Int64), @p571='?' (DbType = Int64), @p572='?' (Size = 4000), @p573='?' (Size = 450), @p574='?' (DbType = Double), @p575='?' (DbType = Double), @p576='?' (DbType = Int64), @p577='?' (DbType = Int64), @p578='?' (DbType = Int64), @p579='?' (DbType = Int64), @p580='?' (DbType = Int64), @p581='?' (DbType = Int64), @p582='?' (DbType = Int64), @p583='?' (DbType = Double), @p584='?' (DbType = Int64), @p585='?' (DbType = Double), @p586='?' (DbType = Int64), @p587='?' (Size = 4000), @p588='?' (DbType = Double), @p589='?' (DbType = Double), @p590='?' (DbType = Int64), @p591='?' (DbType = Int64), @p592='?' (DbType = Int64), @p593='?' (DbType = Int64), @p594='?' (DbType = Int64), @p595='?' (DbType = Int64), @p596='?' (DbType = Int64), @p597='?' (DbType = Int64), @p598='?' (DbType = Int64), @p599='?' (DbType = Double), @p600='?' (DbType = Int64), @p601='?' (DbType = Int64), @p602='?' (Size = 4000), @p603='?' (Size = 450), @p604='?' (DbType = Double), @p605='?' (DbType = Double), @p606='?' (DbType = Int64), @p607='?' (DbType = Int64), @p608='?' (DbType = Int64), @p609='?' (DbType = Int64), @p610='?' (DbType = Int64), @p611='?' (DbType = Int64), @p612='?' (DbType = Int64), @p613='?' (DbType = Double), @p614='?' (DbType = Int64), @p615='?' (DbType = Double), @p616='?' (DbType = Int64), @p617='?' (Size = 4000), @p618='?' (DbType = Double), @p619='?' (DbType = Double), @p620='?' (DbType = Int64), @p621='?' (DbType = Int64), @p622='?' (DbType = Int64), @p623='?' (DbType = Int64), @p624='?' (DbType = Int64), @p625='?' (DbType = Int64), @p626='?' (DbType = Int64), @p627='?' (DbType = Int64), @p628='?' (DbType = Int64), @p629='?' (DbType = Double), @p630='?' (DbType = Int64), @p631='?' (DbType = Int64), @p632='?' (Size = 4000), @p633='?' (Size = 450), @p634='?' (DbType = Double), @p635='?' (DbType = Double), @p636='?' (DbType = Int64), @p637='?' (DbType = Int64), @p638='?' (DbType = Int64), @p639='?' (DbType = Int64), @p640='?' (DbType = Int64), @p641='?' (DbType = Int64), @p642='?' (DbType = Int64), @p643='?' (DbType = Double), @p644='?' (DbType = Int64), @p645='?' (DbType = Double), @p646='?' (DbType = Int64), @p647='?' (Size = 4000), @p648='?' (DbType = Double), @p649='?' (DbType = Double), @p650='?' (DbType = Int64), @p651='?' (DbType = Int64), @p652='?' (DbType = Int64), @p653='?' (DbType = Int64), @p654='?' (DbType = Int64), @p655='?' (DbType = Int64), @p656='?' (DbType = Int64), @p657='?' (DbType = Int64), @p658='?' (DbType = Int64), @p659='?' (DbType = Double), @p660='?' (DbType = Int64), @p661='?' (DbType = Int64), @p662='?' (Size = 4000), @p663='?' (Size = 450), @p664='?' (DbType = Double), @p665='?' (DbType = Double), @p666='?' (DbType = Int64), @p667='?' (DbType = Int64), @p668='?' (DbType = Int64), @p669='?' (DbType = Int64), @p670='?' (DbType = Int64), @p671='?' (DbType = Int64), @p672='?' (DbType = Int64), @p673='?' (DbType = Double), @p674='?' (DbType = Int64), @p675='?' (DbType = Double), @p676='?' (DbType = Int64), @p677='?' (Size = 4000), @p678='?' (DbType = Double), @p679='?' (DbType = Double), @p680='?' (DbType = Int64), @p681='?' (DbType = Int64), @p682='?' (DbType = Int64), @p683='?' (DbType = Int64), @p684='?' (DbType = Int64), @p685='?' (DbType = Int64), @p686='?' (DbType = Int64), @p687='?' (DbType = Int64), @p688='?' (DbType = Int64), @p689='?' (DbType = Double), @p690='?' (DbType = Int64), @p691='?' (DbType = Int64), @p692='?' (Size = 4000), @p693='?' (Size = 450), @p694='?' (DbType = Double), @p695='?' (DbType = Double), @p696='?' (DbType = Int64), @p697='?' (DbType = Int64), @p698='?' (DbType = Int64), @p699='?' (DbType = Int64), @p700='?' (DbType = Int64), @p701='?' (DbType = Int64), @p702='?' (DbType = Int64), @p703='?' (DbType = Double), @p704='?' (DbType = Int64), @p705='?' (DbType = Double), @p706='?' (DbType = Int64), @p707='?' (Size = 4000), @p708='?' (DbType = Double), @p709='?' (DbType = Double), @p710='?' (DbType = Int64), @p711='?' (DbType = Int64), @p712='?' (DbType = Int64), @p713='?' (DbType = Int64), @p714='?' (DbType = Int64), @p715='?' (DbType = Int64), @p716='?' (DbType = Int64), @p717='?' (DbType = Int64), @p718='?' (DbType = Int64), @p719='?' (DbType = Double), @p720='?' (DbType = Int64), @p721='?' (DbType = Int64), @p722='?' (Size = 4000), @p723='?' (Size = 450), @p724='?' (DbType = Double), @p725='?' (DbType = Double), @p726='?' (DbType = Int64), @p727='?' (DbType = Int64), @p728='?' (DbType = Int64), @p729='?' (DbType = Int64), @p730='?' (DbType = Int64), @p731='?' (DbType = Int64), @p732='?' (DbType = Int64), @p733='?' (DbType = Double), @p734='?' (DbType = Int64), @p735='?' (DbType = Double), @p736='?' (DbType = Int64), @p737='?' (Size = 4000), @p738='?' (DbType = Double), @p739='?' (DbType = Double), @p740='?' (DbType = Int64), @p741='?' (DbType = Int64), @p742='?' (DbType = Int64), @p743='?' (DbType = Int64), @p744='?' (DbType = Int64), @p745='?' (DbType = Int64), @p746='?' (DbType = Int64), @p747='?' (DbType = Int64), @p748='?' (DbType = Int64), @p749='?' (DbType = Double), @p750='?' (DbType = Int64), @p751='?' (DbType = Int64), @p752='?' (Size = 4000), @p753='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
DECLARE @inserted0 TABLE ([Id] int, [_Position] [int]);
MERGE [CashFlowAnnualReport] USING (
VALUES (@p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21, @p22, @p23, @p24, @p25, @p26, @p27, @p28, @p29, @p30, @p31, @p32, @p33, 0),
(@p34, @p35, @p36, @p37, @p38, @p39, @p40, @p41, @p42, @p43, @p44, @p45, @p46, @p47, @p48, @p49, @p50, @p51, @p52, @p53, @p54, @p55, @p56, @p57, @p58, @p59, @p60, @p61, @p62, @p63, 1),
(@p64, @p65, @p66, @p67, @p68, @p69, @p70, @p71, @p72, @p73, @p74, @p75, @p76, @p77, @p78, @p79, @p80, @p81, @p82, @p83, @p84, @p85, @p86, @p87, @p88, @p89, @p90, @p91, @p92, @p93, 2),
(@p94, @p95, @p96, @p97, @p98, @p99, @p100, @p101, @p102, @p103, @p104, @p105, @p106, @p107, @p108, @p109, @p110, @p111, @p112, @p113, @p114, @p115, @p116, @p117, @p118, @p119, @p120, @p121, @p122, @p123, 3),
(@p124, @p125, @p126, @p127, @p128, @p129, @p130, @p131, @p132, @p133, @p134, @p135, @p136, @p137, @p138, @p139, @p140, @p141, @p142, @p143, @p144, @p145, @p146, @p147, @p148, @p149, @p150, @p151, @p152, @p153, 4)) AS i ([CapitalExpenditures], [CashflowFromFinancing], [CashflowFromInvestment], [ChangeInCashAndCashEquivalents], [ChangeInExchangeRate], [ChangeInInventory], [ChangeInOperatingAssets], [ChangeInOperatingLiabilities], [ChangeInReceivables], [DepreciationDepletionAndAmortization], [DividendPayout], [DividendPayoutCommonStock], [DividendPayoutPreferredStock], [FiscalDateEnding], [NetIncome], [OperatingCashFlow], [PaymentsForOperatingActivities], [PaymentsForRepurchaseOfCommonStock], [PaymentsForRepurchaseOfEquity], [PaymentsForRepurchaseOfPreferredStock], [ProceedsFromIssuanceOfCommonStock], [ProceedsFromIssuanceOfLongTermDebtAndCapitalSecuritiesNet], [ProceedsFromIssuanceOfPreferredStock], [ProceedsFromOperatingActivities], [ProceedsFromRepaymentsOfShortTermDebt], [ProceedsFromRepurchaseOfEquity], [ProceedsFromSaleOfTreasuryStock], [ProfitLoss], [ReportedCurrency], [Symbol], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([CapitalExpenditures], [CashflowFromFinancing], [CashflowFromInvestment], [ChangeInCashAndCashEquivalents], [ChangeInExchangeRate], [ChangeInInventory], [ChangeInOperatingAssets], [ChangeInOperatingLiabilities], [ChangeInReceivables], [DepreciationDepletionAndAmortization], [DividendPayout], [DividendPayoutCommonStock], [DividendPayoutPreferredStock], [FiscalDateEnding], [NetIncome], [OperatingCashFlow], [PaymentsForOperatingActivities], [PaymentsForRepurchaseOfCommonStock], [PaymentsForRepurchaseOfEquity], [PaymentsForRepurchaseOfPreferredStock], [ProceedsFromIssuanceOfCommonStock], [ProceedsFromIssuanceOfLongTermDebtAndCapitalSecuritiesNet], [ProceedsFromIssuanceOfPreferredStock], [ProceedsFromOperatingActivities], [ProceedsFromRepaymentsOfShortTermDebt], [ProceedsFromRepurchaseOfEquity], [ProceedsFromSaleOfTreasuryStock], [ProfitLoss], [ReportedCurrency], [Symbol])
VALUES (i.[CapitalExpenditures], i.[CashflowFromFinancing], i.[CashflowFromInvestment], i.[ChangeInCashAndCashEquivalents], i.[ChangeInExchangeRate], i.[ChangeInInventory], i.[ChangeInOperatingAssets], i.[ChangeInOperatingLiabilities], i.[ChangeInReceivables], i.[DepreciationDepletionAndAmortization], i.[DividendPayout], i.[DividendPayoutCommonStock], i.[DividendPayoutPreferredStock], i.[FiscalDateEnding], i.[NetIncome], i.[OperatingCashFlow], i.[PaymentsForOperatingActivities], i.[PaymentsForRepurchaseOfCommonStock], i.[PaymentsForRepurchaseOfEquity], i.[PaymentsForRepurchaseOfPreferredStock], i.[ProceedsFromIssuanceOfCommonStock], i.[ProceedsFromIssuanceOfLongTermDebtAndCapitalSecuritiesNet], i.[ProceedsFromIssuanceOfPreferredStock], i.[ProceedsFromOperatingActivities], i.[ProceedsFromRepaymentsOfShortTermDebt], i.[ProceedsFromRepurchaseOfEquity], i.[ProceedsFromSaleOfTreasuryStock], i.[ProfitLoss], i.[ReportedCurrency], i.[Symbol])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted0;

SELECT [i].[Id] FROM @inserted0 i
ORDER BY [i].[_Position];

DECLARE @inserted5 TABLE ([Id] int, [_Position] [int]);
MERGE [CashFlowQuarterlyReport] USING (
VALUES (@p154, @p155, @p156, @p157, @p158, @p159, @p160, @p161, @p162, @p163, @p164, @p165, @p166, @p167, @p168, @p169, @p170, @p171, @p172, @p173, @p174, @p175, @p176, @p177, @p178, @p179, @p180, @p181, @p182, @p183, 0),
(@p184, @p185, @p186, @p187, @p188, @p189, @p190, @p191, @p192, @p193, @p194, @p195, @p196, @p197, @p198, @p199, @p200, @p201, @p202, @p203, @p204, @p205, @p206, @p207, @p208, @p209, @p210, @p211, @p212, @p213, 1),
(@p214, @p215, @p216, @p217, @p218, @p219, @p220, @p221, @p222, @p223, @p224, @p225, @p226, @p227, @p228, @p229, @p230, @p231, @p232, @p233, @p234, @p235, @p236, @p237, @p238, @p239, @p240, @p241, @p242, @p243, 2),
(@p244, @p245, @p246, @p247, @p248, @p249, @p250, @p251, @p252, @p253, @p254, @p255, @p256, @p257, @p258, @p259, @p260, @p261, @p262, @p263, @p264, @p265, @p266, @p267, @p268, @p269, @p270, @p271, @p272, @p273, 3),
(@p274, @p275, @p276, @p277, @p278, @p279, @p280, @p281, @p282, @p283, @p284, @p285, @p286, @p287, @p288, @p289, @p290, @p291, @p292, @p293, @p294, @p295, @p296, @p297, @p298, @p299, @p300, @p301, @p302, @p303, 4),
(@p304, @p305, @p306, @p307, @p308, @p309, @p310, @p311, @p312, @p313, @p314, @p315, @p316, @p317, @p318, @p319, @p320, @p321, @p322, @p323, @p324, @p325, @p326, @p327, @p328, @p329, @p330, @p331, @p332, @p333, 5),
(@p334, @p335, @p336, @p337, @p338, @p339, @p340, @p341, @p342, @p343, @p344, @p345, @p346, @p347, @p348, @p349, @p350, @p351, @p352, @p353, @p354, @p355, @p356, @p357, @p358, @p359, @p360, @p361, @p362, @p363, 6),
(@p364, @p365, @p366, @p367, @p368, @p369, @p370, @p371, @p372, @p373, @p374, @p375, @p376, @p377, @p378, @p379, @p380, @p381, @p382, @p383, @p384, @p385, @p386, @p387, @p388, @p389, @p390, @p391, @p392, @p393, 7),
(@p394, @p395, @p396, @p397, @p398, @p399, @p400, @p401, @p402, @p403, @p404, @p405, @p406, @p407, @p408, @p409, @p410, @p411, @p412, @p413, @p414, @p415, @p416, @p417, @p418, @p419, @p420, @p421, @p422, @p423, 8),
(@p424, @p425, @p426, @p427, @p428, @p429, @p430, @p431, @p432, @p433, @p434, @p435, @p436, @p437, @p438, @p439, @p440, @p441, @p442, @p443, @p444, @p445, @p446, @p447, @p448, @p449, @p450, @p451, @p452, @p453, 9),
(@p454, @p455, @p456, @p457, @p458, @p459, @p460, @p461, @p462, @p463, @p464, @p465, @p466, @p467, @p468, @p469, @p470, @p471, @p472, @p473, @p474, @p475, @p476, @p477, @p478, @p479, @p480, @p481, @p482, @p483, 10),
(@p484, @p485, @p486, @p487, @p488, @p489, @p490, @p491, @p492, @p493, @p494, @p495, @p496, @p497, @p498, @p499, @p500, @p501, @p502, @p503, @p504, @p505, @p506, @p507, @p508, @p509, @p510, @p511, @p512, @p513, 11),
(@p514, @p515, @p516, @p517, @p518, @p519, @p520, @p521, @p522, @p523, @p524, @p525, @p526, @p527, @p528, @p529, @p530, @p531, @p532, @p533, @p534, @p535, @p536, @p537, @p538, @p539, @p540, @p541, @p542, @p543, 12),
(@p544, @p545, @p546, @p547, @p548, @p549, @p550, @p551, @p552, @p553, @p554, @p555, @p556, @p557, @p558, @p559, @p560, @p561, @p562, @p563, @p564, @p565, @p566, @p567, @p568, @p569, @p570, @p571, @p572, @p573, 13),
(@p574, @p575, @p576, @p577, @p578, @p579, @p580, @p581, @p582, @p583, @p584, @p585, @p586, @p587, @p588, @p589, @p590, @p591, @p592, @p593, @p594, @p595, @p596, @p597, @p598, @p599, @p600, @p601, @p602, @p603, 14),
(@p604, @p605, @p606, @p607, @p608, @p609, @p610, @p611, @p612, @p613, @p614, @p615, @p616, @p617, @p618, @p619, @p620, @p621, @p622, @p623, @p624, @p625, @p626, @p627, @p628, @p629, @p630, @p631, @p632, @p633, 15),
(@p634, @p635, @p636, @p637, @p638, @p639, @p640, @p641, @p642, @p643, @p644, @p645, @p646, @p647, @p648, @p649, @p650, @p651, @p652, @p653, @p654, @p655, @p656, @p657, @p658, @p659, @p660, @p661, @p662, @p663, 16),
(@p664, @p665, @p666, @p667, @p668, @p669, @p670, @p671, @p672, @p673, @p674, @p675, @p676, @p677, @p678, @p679, @p680, @p681, @p682, @p683, @p684, @p685, @p686, @p687, @p688, @p689, @p690, @p691, @p692, @p693, 17),
(@p694, @p695, @p696, @p697, @p698, @p699, @p700, @p701, @p702, @p703, @p704, @p705, @p706, @p707, @p708, @p709, @p710, @p711, @p712, @p713, @p714, @p715, @p716, @p717, @p718, @p719, @p720, @p721, @p722, @p723, 18),
(@p724, @p725, @p726, @p727, @p728, @p729, @p730, @p731, @p732, @p733, @p734, @p735, @p736, @p737, @p738, @p739, @p740, @p741, @p742, @p743, @p744, @p745, @p746, @p747, @p748, @p749, @p750, @p751, @p752, @p753, 19)) AS i ([CapitalExpenditures], [CashflowFromFinancing], [CashflowFromInvestment], [ChangeInCashAndCashEquivalents], [ChangeInExchangeRate], [ChangeInInventory], [ChangeInOperatingAssets], [ChangeInOperatingLiabilities], [ChangeInReceivables], [DepreciationDepletionAndAmortization], [DividendPayout], [DividendPayoutCommonStock], [DividendPayoutPreferredStock], [FiscalDateEnding], [NetIncome], [OperatingCashFlow], [PaymentsForOperatingActivities], [PaymentsForRepurchaseOfCommonStock], [PaymentsForRepurchaseOfEquity], [PaymentsForRepurchaseOfPreferredStock], [ProceedsFromIssuanceOfCommonStock], [ProceedsFromIssuanceOfLongTermDebtAndCapitalSecuritiesNet], [ProceedsFromIssuanceOfPreferredStock], [ProceedsFromOperatingActivities], [ProceedsFromRepaymentsOfShortTermDebt], [ProceedsFromRepurchaseOfEquity], [ProceedsFromSaleOfTreasuryStock], [ProfitLoss], [ReportedCurrency], [Symbol], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([CapitalExpenditures], [CashflowFromFinancing], [CashflowFromInvestment], [ChangeInCashAndCashEquivalents], [ChangeInExchangeRate], [ChangeInInventory], [ChangeInOperatingAssets], [ChangeInOperatingLiabilities], [ChangeInReceivables], [DepreciationDepletionAndAmortization], [DividendPayout], [DividendPayoutCommonStock], [DividendPayoutPreferredStock], [FiscalDateEnding], [NetIncome], [OperatingCashFlow], [PaymentsForOperatingActivities], [PaymentsForRepurchaseOfCommonStock], [PaymentsForRepurchaseOfEquity], [PaymentsForRepurchaseOfPreferredStock], [ProceedsFromIssuanceOfCommonStock], [ProceedsFromIssuanceOfLongTermDebtAndCapitalSecuritiesNet], [ProceedsFromIssuanceOfPreferredStock], [ProceedsFromOperatingActivities], [ProceedsFromRepaymentsOfShortTermDebt], [ProceedsFromRepurchaseOfEquity], [ProceedsFromSaleOfTreasuryStock], [ProfitLoss], [ReportedCurrency], [Symbol])
VALUES (i.[CapitalExpenditures], i.[CashflowFromFinancing], i.[CashflowFromInvestment], i.[ChangeInCashAndCashEquivalents], i.[ChangeInExchangeRate], i.[ChangeInInventory], i.[ChangeInOperatingAssets], i.[ChangeInOperatingLiabilities], i.[ChangeInReceivables], i.[DepreciationDepletionAndAmortization], i.[DividendPayout], i.[DividendPayoutCommonStock], i.[DividendPayoutPreferredStock], i.[FiscalDateEnding], i.[NetIncome], i.[OperatingCashFlow], i.[PaymentsForOperatingActivities], i.[PaymentsForRepurchaseOfCommonStock], i.[PaymentsForRepurchaseOfEquity], i.[PaymentsForRepurchaseOfPreferredStock], i.[ProceedsFromIssuanceOfCommonStock], i.[ProceedsFromIssuanceOfLongTermDebtAndCapitalSecuritiesNet], i.[ProceedsFromIssuanceOfPreferredStock], i.[ProceedsFromOperatingActivities], i.[ProceedsFromRepaymentsOfShortTermDebt], i.[ProceedsFromRepurchaseOfEquity], i.[ProceedsFromSaleOfTreasuryStock], i.[ProfitLoss], i.[ReportedCurrency], i.[Symbol])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted5;

SELECT [i].[Id] FROM @inserted5 i
ORDER BY [i].[_Position];
2022-05-12 01:13:24.900 +03:00 [INF] AddOrUpdate run successful.
2022-05-12 01:13:38.721 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CompanyOverview with Symbol BKUI
2022-05-12 01:13:38.723 +03:00 [INF] Generating URI for OVERVIEW with params: symbol: BKUI
2022-05-12 01:13:38.723 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=OVERVIEW&symbol=BKUI
2022-05-12 01:13:38.723 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=OVERVIEW&symbol=BKUI".
2022-05-12 01:13:38.981 +03:00 [INF] Response has success status code
2022-05-12 01:13:38.982 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.CompanyOverview for symbol BKUI
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyOverview(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 116
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:13:47.905 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.IncomeStatement with Symbol AVDV
2022-05-12 01:13:47.908 +03:00 [INF] Generating URI for INCOME_STATEMENT with params: symbol: AVDV
2022-05-12 01:13:47.909 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=INCOME_STATEMENT&symbol=AVDV
2022-05-12 01:13:47.909 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=INCOME_STATEMENT&symbol=AVDV".
2022-05-12 01:13:47.921 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.Earnings with Symbol AXSM
2022-05-12 01:13:47.923 +03:00 [INF] Generating URI for EARNINGS with params: symbol: AXSM
2022-05-12 01:13:47.924 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=EARNINGS&symbol=AXSM
2022-05-12 01:13:47.924 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=EARNINGS&symbol=AXSM".
2022-05-12 01:13:48.128 +03:00 [INF] Response has success status code
2022-05-12 01:13:48.128 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.IncomeStatement for symbol AVDV
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetIncomeStatement(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 69
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:13:48.146 +03:00 [INF] Response has success status code
2022-05-12 01:13:48.146 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.Earnings for symbol AXSM
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyEarnings(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 142
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:13:51.350 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.BalanceSheet with Symbol BFC
2022-05-12 01:13:51.353 +03:00 [INF] Generating URI for BALANCE_SHEET with params: symbol: BFC
2022-05-12 01:13:51.354 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BFC
2022-05-12 01:13:51.354 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BFC".
2022-05-12 01:13:51.578 +03:00 [INF] Response has success status code
2022-05-12 01:13:51.578 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.BalanceSheet for symbol BFC
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetBalanceSheet(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 82
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:13:54.913 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CashFlow with Symbol AVCO
2022-05-12 01:13:54.916 +03:00 [INF] Generating URI for CASH_FLOW with params: symbol: AVCO
2022-05-12 01:13:54.917 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=CASH_FLOW&symbol=AVCO
2022-05-12 01:13:54.917 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=CASH_FLOW&symbol=AVCO".
2022-05-12 01:13:55.134 +03:00 [INF] Response has success status code
2022-05-12 01:13:55.135 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.CashFlow for symbol AVCO
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCashFlow(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 96
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:14:08.993 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CompanyOverview with Symbol BKYI
2022-05-12 01:14:08.996 +03:00 [INF] Generating URI for OVERVIEW with params: symbol: BKYI
2022-05-12 01:14:08.997 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=OVERVIEW&symbol=BKYI
2022-05-12 01:14:08.997 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=OVERVIEW&symbol=BKYI".
2022-05-12 01:14:10.796 +03:00 [INF] Response has success status code
2022-05-12 01:14:10.797 +03:00 [INF] Trying to deserialize response.
2022-05-12 01:14:10.797 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.CompanyOverview.
2022-05-12 01:14:10.798 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 01:14:10.810 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__entity_Symbol_0
2022-05-12 01:14:10.811 +03:00 [INF] Entity does not exist. Adding to DB.
2022-05-12 01:14:10.828 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (Size = 4000), @p2='?' (DbType = Double), @p3='?' (Size = 4000), @p4='?' (DbType = Double), @p5='?' (DbType = Double), @p6='?' (DbType = Int64), @p7='?' (Size = 4000), @p8='?' (Size = 4000), @p9='?' (Size = 4000), @p10='?' (DbType = Double), @p11='?' (DbType = DateTime2), @p12='?' (DbType = Double), @p13='?' (DbType = Double), @p14='?' (DbType = Int64), @p15='?' (DbType = Double), @p16='?' (DbType = Double), @p17='?' (DbType = Double), @p18='?' (DbType = DateTime2), @p19='?' (Size = 4000), @p20='?' (DbType = Boolean), @p21='?' (Size = 4000), @p22='?' (DbType = Double), @p23='?' (DbType = Int64), @p24='?' (Size = 4000), @p25='?' (DbType = DateTime2), @p26='?' (DbType = DateTime2), @p27='?' (DbType = DateTime2), @p28='?' (DbType = Int64), @p29='?' (Size = 4000), @p30='?' (DbType = Double), @p31='?' (DbType = Double), @p32='?' (DbType = Double), @p33='?' (DbType = Double), @p34='?' (DbType = Double), @p35='?' (DbType = Double), @p36='?' (DbType = Double), @p37='?' (DbType = Double), @p38='?' (DbType = Double), @p39='?' (DbType = Double), @p40='?' (DbType = Double), @p41='?' (DbType = Int64), @p42='?' (Size = 4000), @p43='?' (DbType = Int64), @p44='?' (DbType = Double), @p45='?' (DbType = Double), @p46='?' (DbType = Double), @p47='?' (DbType = Double), @p48='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [CompanyOverviews] ([Symbol], [Address], [AnalystTargetPrice], [AssetType], [Beta], [BookValue], [CIK], [Country], [Currency], [Description], [DilutedEPSTTM], [DividendDate], [DividendPerShare], [DividendYield], [EBITDA], [EPS], [EVToEBITDA], [EVToRevenue], [ExDividendDate], [Exchange], [ExistInApi], [FiscalYearEnd], [ForwardPE], [GrossProfitTTM], [Industry], [LastApiRefresh], [LastLocalRefresh], [LatestQuarter], [MarketCapitalization], [Name], [OperatingMarginTTM], [PEGRatio], [PERatio], [PriceToBookRatio], [PriceToSalesRatioTTM], [ProfitMargin], [QuarterlyEarningsGrowthYOY], [QuarterlyRevenueGrowthYOY], [ReturnOnAssetsTTM], [ReturnOnEquityTTM], [RevenuePerShareTTM], [RevenueTTM], [Sector], [SharesOutstanding], [TrailingPE], [_200DayMovingAverage], [_50DayMovingAverage], [_52WeekHigh], [_52WeekLow])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21, @p22, @p23, @p24, @p25, @p26, @p27, @p28, @p29, @p30, @p31, @p32, @p33, @p34, @p35, @p36, @p37, @p38, @p39, @p40, @p41, @p42, @p43, @p44, @p45, @p46, @p47, @p48);
2022-05-12 01:14:10.835 +03:00 [INF] AddOrUpdate run successful.
2022-05-12 01:14:18.134 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.IncomeStatement with Symbol AVEM
2022-05-12 01:14:18.137 +03:00 [INF] Generating URI for INCOME_STATEMENT with params: symbol: AVEM
2022-05-12 01:14:18.138 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=INCOME_STATEMENT&symbol=AVEM
2022-05-12 01:14:18.138 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=INCOME_STATEMENT&symbol=AVEM".
2022-05-12 01:14:18.150 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.Earnings with Symbol AXS-P-D
2022-05-12 01:14:18.152 +03:00 [INF] Generating URI for EARNINGS with params: symbol: AXS-P-D
2022-05-12 01:14:18.152 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=EARNINGS&symbol=AXS-P-D
2022-05-12 01:14:18.153 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=EARNINGS&symbol=AXS-P-D".
2022-05-12 01:14:18.369 +03:00 [INF] Response has success status code
2022-05-12 01:14:18.370 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 01:14:18.381 +03:00 [INF] Response has success status code
2022-05-12 01:14:18.382 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 01:14:18.382 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__symbol_0
2022-05-12 01:14:18.384 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.IncomeStatement.
2022-05-12 01:14:18.391 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__symbol_0
2022-05-12 01:14:18.392 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [i].[Symbol], [i].[ExistInApi], [i].[LastApiRefresh], [i].[LastLocalRefresh]
FROM [IncomeStatements] AS [i]
WHERE [i].[Symbol] = @__entity_Symbol_0
2022-05-12 01:14:18.393 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.Earnings.
2022-05-12 01:14:18.394 +03:00 [INF] Entity does not exist. Adding to DB.
2022-05-12 01:14:18.401 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [e].[Symbol], [e].[ExistInApi], [e].[LastApiRefresh], [e].[LastLocalRefresh]
FROM [Earnings] AS [e]
WHERE [e].[Symbol] = @__entity_Symbol_0
2022-05-12 01:14:18.402 +03:00 [INF] Entity does not exist. Adding to DB.
2022-05-12 01:14:18.408 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = Boolean), @p2='?' (DbType = DateTime2), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [IncomeStatements] ([Symbol], [ExistInApi], [LastApiRefresh], [LastLocalRefresh])
VALUES (@p0, @p1, @p2, @p3);
2022-05-12 01:14:18.415 +03:00 [INF] AddOrUpdate run successful.
2022-05-12 01:14:18.415 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = Boolean), @p2='?' (DbType = DateTime2), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Earnings] ([Symbol], [ExistInApi], [LastApiRefresh], [LastLocalRefresh])
VALUES (@p0, @p1, @p2, @p3);
2022-05-12 01:14:18.416 +03:00 [WRN] Alpha Vantage has no SaluteStocksAPI.Models.FundamentalData.IncomeStatement for symbol AVEM
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageEmptyResponse: Response was empty.
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetIncomeStatement(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 69
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:14:18.423 +03:00 [INF] AddOrUpdate run successful.
2022-05-12 01:14:18.423 +03:00 [WRN] Alpha Vantage has no SaluteStocksAPI.Models.FundamentalData.Earnings for symbol AXS-P-D
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageEmptyResponse: Response was empty.
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyEarnings(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 142
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:14:21.587 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.BalanceSheet with Symbol BFEB
2022-05-12 01:14:21.591 +03:00 [INF] Generating URI for BALANCE_SHEET with params: symbol: BFEB
2022-05-12 01:14:21.591 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BFEB
2022-05-12 01:14:21.592 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BFEB".
2022-05-12 01:14:22.713 +03:00 [INF] Response has success status code
2022-05-12 01:14:22.714 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 01:14:22.724 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__symbol_0
2022-05-12 01:14:22.725 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.BalanceSheet.
2022-05-12 01:14:22.734 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [b].[Symbol], [b].[ExistInApi], [b].[LastApiRefresh], [b].[LastLocalRefresh]
FROM [BalanceSheets] AS [b]
WHERE [b].[Symbol] = @__entity_Symbol_0
2022-05-12 01:14:22.735 +03:00 [INF] Entity does not exist. Adding to DB.
2022-05-12 01:14:22.748 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = Boolean), @p2='?' (DbType = DateTime2), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [BalanceSheets] ([Symbol], [ExistInApi], [LastApiRefresh], [LastLocalRefresh])
VALUES (@p0, @p1, @p2, @p3);
2022-05-12 01:14:22.754 +03:00 [INF] AddOrUpdate run successful.
2022-05-12 01:14:22.755 +03:00 [WRN] Alpha Vantage has no SaluteStocksAPI.Models.FundamentalData.BalanceSheet for symbol BFEB
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageEmptyResponse: Response was empty.
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetBalanceSheet(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 82
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:14:25.150 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CashFlow with Symbol AVCTW
2022-05-12 01:14:25.153 +03:00 [INF] Generating URI for CASH_FLOW with params: symbol: AVCTW
2022-05-12 01:14:25.154 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=CASH_FLOW&symbol=AVCTW
2022-05-12 01:14:25.154 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=CASH_FLOW&symbol=AVCTW".
2022-05-12 01:14:25.510 +03:00 [INF] Response has success status code
2022-05-12 01:14:25.510 +03:00 [INF] Trying to deserialize response.
2022-05-12 01:14:25.511 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 01:14:25.520 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__symbol_0
2022-05-12 01:14:25.521 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.CashFlow.
2022-05-12 01:14:25.529 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[ExistInApi], [c].[LastApiRefresh], [c].[LastLocalRefresh]
FROM [CashFlows] AS [c]
WHERE [c].[Symbol] = @__entity_Symbol_0
2022-05-12 01:14:25.534 +03:00 [INF] Entity does not exist. Adding to DB.
2022-05-12 01:14:25.548 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = Boolean), @p2='?' (DbType = DateTime2), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [CashFlows] ([Symbol], [ExistInApi], [LastApiRefresh], [LastLocalRefresh])
VALUES (@p0, @p1, @p2, @p3);
2022-05-12 01:14:25.662 +03:00 [INF] Executed DbCommand (112ms) [Parameters=[@p4='?' (DbType = Double), @p5='?' (DbType = Double), @p6='?' (DbType = Int64), @p7='?' (DbType = Int64), @p8='?' (DbType = Int64), @p9='?' (DbType = Int64), @p10='?' (DbType = Int64), @p11='?' (DbType = Int64), @p12='?' (DbType = Int64), @p13='?' (DbType = Double), @p14='?' (DbType = Int64), @p15='?' (DbType = Double), @p16='?' (DbType = Int64), @p17='?' (Size = 4000), @p18='?' (DbType = Double), @p19='?' (DbType = Double), @p20='?' (DbType = Int64), @p21='?' (DbType = Int64), @p22='?' (DbType = Int64), @p23='?' (DbType = Int64), @p24='?' (DbType = Int64), @p25='?' (DbType = Int64), @p26='?' (DbType = Int64), @p27='?' (DbType = Int64), @p28='?' (DbType = Int64), @p29='?' (DbType = Double), @p30='?' (DbType = Int64), @p31='?' (DbType = Int64), @p32='?' (Size = 4000), @p33='?' (Size = 450), @p34='?' (DbType = Double), @p35='?' (DbType = Double), @p36='?' (DbType = Int64), @p37='?' (DbType = Int64), @p38='?' (DbType = Int64), @p39='?' (DbType = Int64), @p40='?' (DbType = Int64), @p41='?' (DbType = Int64), @p42='?' (DbType = Int64), @p43='?' (DbType = Double), @p44='?' (DbType = Int64), @p45='?' (DbType = Double), @p46='?' (DbType = Int64), @p47='?' (Size = 4000), @p48='?' (DbType = Double), @p49='?' (DbType = Double), @p50='?' (DbType = Int64), @p51='?' (DbType = Int64), @p52='?' (DbType = Int64), @p53='?' (DbType = Int64), @p54='?' (DbType = Int64), @p55='?' (DbType = Int64), @p56='?' (DbType = Int64), @p57='?' (DbType = Int64), @p58='?' (DbType = Int64), @p59='?' (DbType = Double), @p60='?' (DbType = Int64), @p61='?' (DbType = Int64), @p62='?' (Size = 4000), @p63='?' (Size = 450), @p64='?' (DbType = Double), @p65='?' (DbType = Double), @p66='?' (DbType = Int64), @p67='?' (DbType = Int64), @p68='?' (DbType = Int64), @p69='?' (DbType = Int64), @p70='?' (DbType = Int64), @p71='?' (DbType = Int64), @p72='?' (DbType = Int64), @p73='?' (DbType = Double), @p74='?' (DbType = Int64), @p75='?' (DbType = Double), @p76='?' (DbType = Int64), @p77='?' (Size = 4000), @p78='?' (DbType = Double), @p79='?' (DbType = Double), @p80='?' (DbType = Int64), @p81='?' (DbType = Int64), @p82='?' (DbType = Int64), @p83='?' (DbType = Int64), @p84='?' (DbType = Int64), @p85='?' (DbType = Int64), @p86='?' (DbType = Int64), @p87='?' (DbType = Int64), @p88='?' (DbType = Int64), @p89='?' (DbType = Double), @p90='?' (DbType = Int64), @p91='?' (DbType = Int64), @p92='?' (Size = 4000), @p93='?' (Size = 450), @p94='?' (DbType = Double), @p95='?' (DbType = Double), @p96='?' (DbType = Int64), @p97='?' (DbType = Int64), @p98='?' (DbType = Int64), @p99='?' (DbType = Int64), @p100='?' (DbType = Int64), @p101='?' (DbType = Int64), @p102='?' (DbType = Int64), @p103='?' (DbType = Double), @p104='?' (DbType = Int64), @p105='?' (DbType = Double), @p106='?' (DbType = Int64), @p107='?' (Size = 4000), @p108='?' (DbType = Double), @p109='?' (DbType = Double), @p110='?' (DbType = Int64), @p111='?' (DbType = Int64), @p112='?' (DbType = Int64), @p113='?' (DbType = Int64), @p114='?' (DbType = Int64), @p115='?' (DbType = Int64), @p116='?' (DbType = Int64), @p117='?' (DbType = Int64), @p118='?' (DbType = Int64), @p119='?' (DbType = Double), @p120='?' (DbType = Int64), @p121='?' (DbType = Int64), @p122='?' (Size = 4000), @p123='?' (Size = 450), @p124='?' (DbType = Double), @p125='?' (DbType = Double), @p126='?' (DbType = Int64), @p127='?' (DbType = Int64), @p128='?' (DbType = Int64), @p129='?' (DbType = Int64), @p130='?' (DbType = Int64), @p131='?' (DbType = Int64), @p132='?' (DbType = Int64), @p133='?' (DbType = Double), @p134='?' (DbType = Int64), @p135='?' (DbType = Double), @p136='?' (DbType = Int64), @p137='?' (Size = 4000), @p138='?' (DbType = Double), @p139='?' (DbType = Double), @p140='?' (DbType = Int64), @p141='?' (DbType = Int64), @p142='?' (DbType = Int64), @p143='?' (DbType = Int64), @p144='?' (DbType = Int64), @p145='?' (DbType = Int64), @p146='?' (DbType = Int64), @p147='?' (DbType = Int64), @p148='?' (DbType = Int64), @p149='?' (DbType = Double), @p150='?' (DbType = Int64), @p151='?' (DbType = Int64), @p152='?' (Size = 4000), @p153='?' (Size = 450), @p154='?' (DbType = Double), @p155='?' (DbType = Double), @p156='?' (DbType = Int64), @p157='?' (DbType = Int64), @p158='?' (DbType = Int64), @p159='?' (DbType = Int64), @p160='?' (DbType = Int64), @p161='?' (DbType = Int64), @p162='?' (DbType = Int64), @p163='?' (DbType = Double), @p164='?' (DbType = Int64), @p165='?' (DbType = Double), @p166='?' (DbType = Int64), @p167='?' (Size = 4000), @p168='?' (DbType = Double), @p169='?' (DbType = Double), @p170='?' (DbType = Int64), @p171='?' (DbType = Int64), @p172='?' (DbType = Int64), @p173='?' (DbType = Int64), @p174='?' (DbType = Int64), @p175='?' (DbType = Int64), @p176='?' (DbType = Int64), @p177='?' (DbType = Int64), @p178='?' (DbType = Int64), @p179='?' (DbType = Double), @p180='?' (DbType = Int64), @p181='?' (DbType = Int64), @p182='?' (Size = 4000), @p183='?' (Size = 450), @p184='?' (DbType = Double), @p185='?' (DbType = Double), @p186='?' (DbType = Int64), @p187='?' (DbType = Int64), @p188='?' (DbType = Int64), @p189='?' (DbType = Int64), @p190='?' (DbType = Int64), @p191='?' (DbType = Int64), @p192='?' (DbType = Int64), @p193='?' (DbType = Double), @p194='?' (DbType = Int64), @p195='?' (DbType = Double), @p196='?' (DbType = Int64), @p197='?' (Size = 4000), @p198='?' (DbType = Double), @p199='?' (DbType = Double), @p200='?' (DbType = Int64), @p201='?' (DbType = Int64), @p202='?' (DbType = Int64), @p203='?' (DbType = Int64), @p204='?' (DbType = Int64), @p205='?' (DbType = Int64), @p206='?' (DbType = Int64), @p207='?' (DbType = Int64), @p208='?' (DbType = Int64), @p209='?' (DbType = Double), @p210='?' (DbType = Int64), @p211='?' (DbType = Int64), @p212='?' (Size = 4000), @p213='?' (Size = 450), @p214='?' (DbType = Double), @p215='?' (DbType = Double), @p216='?' (DbType = Int64), @p217='?' (DbType = Int64), @p218='?' (DbType = Int64), @p219='?' (DbType = Int64), @p220='?' (DbType = Int64), @p221='?' (DbType = Int64), @p222='?' (DbType = Int64), @p223='?' (DbType = Double), @p224='?' (DbType = Int64), @p225='?' (DbType = Double), @p226='?' (DbType = Int64), @p227='?' (Size = 4000), @p228='?' (DbType = Double), @p229='?' (DbType = Double), @p230='?' (DbType = Int64), @p231='?' (DbType = Int64), @p232='?' (DbType = Int64), @p233='?' (DbType = Int64), @p234='?' (DbType = Int64), @p235='?' (DbType = Int64), @p236='?' (DbType = Int64), @p237='?' (DbType = Int64), @p238='?' (DbType = Int64), @p239='?' (DbType = Double), @p240='?' (DbType = Int64), @p241='?' (DbType = Int64), @p242='?' (Size = 4000), @p243='?' (Size = 450), @p244='?' (DbType = Double), @p245='?' (DbType = Double), @p246='?' (DbType = Int64), @p247='?' (DbType = Int64), @p248='?' (DbType = Int64), @p249='?' (DbType = Int64), @p250='?' (DbType = Int64), @p251='?' (DbType = Int64), @p252='?' (DbType = Int64), @p253='?' (DbType = Double), @p254='?' (DbType = Int64), @p255='?' (DbType = Double), @p256='?' (DbType = Int64), @p257='?' (Size = 4000), @p258='?' (DbType = Double), @p259='?' (DbType = Double), @p260='?' (DbType = Int64), @p261='?' (DbType = Int64), @p262='?' (DbType = Int64), @p263='?' (DbType = Int64), @p264='?' (DbType = Int64), @p265='?' (DbType = Int64), @p266='?' (DbType = Int64), @p267='?' (DbType = Int64), @p268='?' (DbType = Int64), @p269='?' (DbType = Double), @p270='?' (DbType = Int64), @p271='?' (DbType = Int64), @p272='?' (Size = 4000), @p273='?' (Size = 450), @p274='?' (DbType = Double), @p275='?' (DbType = Double), @p276='?' (DbType = Int64), @p277='?' (DbType = Int64), @p278='?' (DbType = Int64), @p279='?' (DbType = Int64), @p280='?' (DbType = Int64), @p281='?' (DbType = Int64), @p282='?' (DbType = Int64), @p283='?' (DbType = Double), @p284='?' (DbType = Int64), @p285='?' (DbType = Double), @p286='?' (DbType = Int64), @p287='?' (Size = 4000), @p288='?' (DbType = Double), @p289='?' (DbType = Double), @p290='?' (DbType = Int64), @p291='?' (DbType = Int64), @p292='?' (DbType = Int64), @p293='?' (DbType = Int64), @p294='?' (DbType = Int64), @p295='?' (DbType = Int64), @p296='?' (DbType = Int64), @p297='?' (DbType = Int64), @p298='?' (DbType = Int64), @p299='?' (DbType = Double), @p300='?' (DbType = Int64), @p301='?' (DbType = Int64), @p302='?' (Size = 4000), @p303='?' (Size = 450), @p304='?' (DbType = Double), @p305='?' (DbType = Double), @p306='?' (DbType = Int64), @p307='?' (DbType = Int64), @p308='?' (DbType = Int64), @p309='?' (DbType = Int64), @p310='?' (DbType = Int64), @p311='?' (DbType = Int64), @p312='?' (DbType = Int64), @p313='?' (DbType = Double), @p314='?' (DbType = Int64), @p315='?' (DbType = Double), @p316='?' (DbType = Int64), @p317='?' (Size = 4000), @p318='?' (DbType = Double), @p319='?' (DbType = Double), @p320='?' (DbType = Int64), @p321='?' (DbType = Int64), @p322='?' (DbType = Int64), @p323='?' (DbType = Int64), @p324='?' (DbType = Int64), @p325='?' (DbType = Int64), @p326='?' (DbType = Int64), @p327='?' (DbType = Int64), @p328='?' (DbType = Int64), @p329='?' (DbType = Double), @p330='?' (DbType = Int64), @p331='?' (DbType = Int64), @p332='?' (Size = 4000), @p333='?' (Size = 450), @p334='?' (DbType = Double), @p335='?' (DbType = Double), @p336='?' (DbType = Int64), @p337='?' (DbType = Int64), @p338='?' (DbType = Int64), @p339='?' (DbType = Int64), @p340='?' (DbType = Int64), @p341='?' (DbType = Int64), @p342='?' (DbType = Int64), @p343='?' (DbType = Double), @p344='?' (DbType = Int64), @p345='?' (DbType = Double), @p346='?' (DbType = Int64), @p347='?' (Size = 4000), @p348='?' (DbType = Double), @p349='?' (DbType = Double), @p350='?' (DbType = Int64), @p351='?' (DbType = Int64), @p352='?' (DbType = Int64), @p353='?' (DbType = Int64), @p354='?' (DbType = Int64), @p355='?' (DbType = Int64), @p356='?' (DbType = Int64), @p357='?' (DbType = Int64), @p358='?' (DbType = Int64), @p359='?' (DbType = Double), @p360='?' (DbType = Int64), @p361='?' (DbType = Int64), @p362='?' (Size = 4000), @p363='?' (Size = 450), @p364='?' (DbType = Double), @p365='?' (DbType = Double), @p366='?' (DbType = Int64), @p367='?' (DbType = Int64), @p368='?' (DbType = Int64), @p369='?' (DbType = Int64), @p370='?' (DbType = Int64), @p371='?' (DbType = Int64), @p372='?' (DbType = Int64), @p373='?' (DbType = Double), @p374='?' (DbType = Int64), @p375='?' (DbType = Double), @p376='?' (DbType = Int64), @p377='?' (Size = 4000), @p378='?' (DbType = Double), @p379='?' (DbType = Double), @p380='?' (DbType = Int64), @p381='?' (DbType = Int64), @p382='?' (DbType = Int64), @p383='?' (DbType = Int64), @p384='?' (DbType = Int64), @p385='?' (DbType = Int64), @p386='?' (DbType = Int64), @p387='?' (DbType = Int64), @p388='?' (DbType = Int64), @p389='?' (DbType = Double), @p390='?' (DbType = Int64), @p391='?' (DbType = Int64), @p392='?' (Size = 4000), @p393='?' (Size = 450), @p394='?' (DbType = Double), @p395='?' (DbType = Double), @p396='?' (DbType = Int64), @p397='?' (DbType = Int64), @p398='?' (DbType = Int64), @p399='?' (DbType = Int64), @p400='?' (DbType = Int64), @p401='?' (DbType = Int64), @p402='?' (DbType = Int64), @p403='?' (DbType = Double), @p404='?' (DbType = Int64), @p405='?' (DbType = Double), @p406='?' (DbType = Int64), @p407='?' (Size = 4000), @p408='?' (DbType = Double), @p409='?' (DbType = Double), @p410='?' (DbType = Int64), @p411='?' (DbType = Int64), @p412='?' (DbType = Int64), @p413='?' (DbType = Int64), @p414='?' (DbType = Int64), @p415='?' (DbType = Int64), @p416='?' (DbType = Int64), @p417='?' (DbType = Int64), @p418='?' (DbType = Int64), @p419='?' (DbType = Double), @p420='?' (DbType = Int64), @p421='?' (DbType = Int64), @p422='?' (Size = 4000), @p423='?' (Size = 450), @p424='?' (DbType = Double), @p425='?' (DbType = Double), @p426='?' (DbType = Int64), @p427='?' (DbType = Int64), @p428='?' (DbType = Int64), @p429='?' (DbType = Int64), @p430='?' (DbType = Int64), @p431='?' (DbType = Int64), @p432='?' (DbType = Int64), @p433='?' (DbType = Double), @p434='?' (DbType = Int64), @p435='?' (DbType = Double), @p436='?' (DbType = Int64), @p437='?' (Size = 4000), @p438='?' (DbType = Double), @p439='?' (DbType = Double), @p440='?' (DbType = Int64), @p441='?' (DbType = Int64), @p442='?' (DbType = Int64), @p443='?' (DbType = Int64), @p444='?' (DbType = Int64), @p445='?' (DbType = Int64), @p446='?' (DbType = Int64), @p447='?' (DbType = Int64), @p448='?' (DbType = Int64), @p449='?' (DbType = Double), @p450='?' (DbType = Int64), @p451='?' (DbType = Int64), @p452='?' (Size = 4000), @p453='?' (Size = 450), @p454='?' (DbType = Double), @p455='?' (DbType = Double), @p456='?' (DbType = Int64), @p457='?' (DbType = Int64), @p458='?' (DbType = Int64), @p459='?' (DbType = Int64), @p460='?' (DbType = Int64), @p461='?' (DbType = Int64), @p462='?' (DbType = Int64), @p463='?' (DbType = Double), @p464='?' (DbType = Int64), @p465='?' (DbType = Double), @p466='?' (DbType = Int64), @p467='?' (Size = 4000), @p468='?' (DbType = Double), @p469='?' (DbType = Double), @p470='?' (DbType = Int64), @p471='?' (DbType = Int64), @p472='?' (DbType = Int64), @p473='?' (DbType = Int64), @p474='?' (DbType = Int64), @p475='?' (DbType = Int64), @p476='?' (DbType = Int64), @p477='?' (DbType = Int64), @p478='?' (DbType = Int64), @p479='?' (DbType = Double), @p480='?' (DbType = Int64), @p481='?' (DbType = Int64), @p482='?' (Size = 4000), @p483='?' (Size = 450), @p484='?' (DbType = Double), @p485='?' (DbType = Double), @p486='?' (DbType = Int64), @p487='?' (DbType = Int64), @p488='?' (DbType = Int64), @p489='?' (DbType = Int64), @p490='?' (DbType = Int64), @p491='?' (DbType = Int64), @p492='?' (DbType = Int64), @p493='?' (DbType = Double), @p494='?' (DbType = Int64), @p495='?' (DbType = Double), @p496='?' (DbType = Int64), @p497='?' (Size = 4000), @p498='?' (DbType = Double), @p499='?' (DbType = Double), @p500='?' (DbType = Int64), @p501='?' (DbType = Int64), @p502='?' (DbType = Int64), @p503='?' (DbType = Int64), @p504='?' (DbType = Int64), @p505='?' (DbType = Int64), @p506='?' (DbType = Int64), @p507='?' (DbType = Int64), @p508='?' (DbType = Int64), @p509='?' (DbType = Double), @p510='?' (DbType = Int64), @p511='?' (DbType = Int64), @p512='?' (Size = 4000), @p513='?' (Size = 450), @p514='?' (DbType = Double), @p515='?' (DbType = Double), @p516='?' (DbType = Int64), @p517='?' (DbType = Int64), @p518='?' (DbType = Int64), @p519='?' (DbType = Int64), @p520='?' (DbType = Int64), @p521='?' (DbType = Int64), @p522='?' (DbType = Int64), @p523='?' (DbType = Double), @p524='?' (DbType = Int64), @p525='?' (DbType = Double), @p526='?' (DbType = Int64), @p527='?' (Size = 4000), @p528='?' (DbType = Double), @p529='?' (DbType = Double), @p530='?' (DbType = Int64), @p531='?' (DbType = Int64), @p532='?' (DbType = Int64), @p533='?' (DbType = Int64), @p534='?' (DbType = Int64), @p535='?' (DbType = Int64), @p536='?' (DbType = Int64), @p537='?' (DbType = Int64), @p538='?' (DbType = Int64), @p539='?' (DbType = Double), @p540='?' (DbType = Int64), @p541='?' (DbType = Int64), @p542='?' (Size = 4000), @p543='?' (Size = 450), @p544='?' (DbType = Double), @p545='?' (DbType = Double), @p546='?' (DbType = Int64), @p547='?' (DbType = Int64), @p548='?' (DbType = Int64), @p549='?' (DbType = Int64), @p550='?' (DbType = Int64), @p551='?' (DbType = Int64), @p552='?' (DbType = Int64), @p553='?' (DbType = Double), @p554='?' (DbType = Int64), @p555='?' (DbType = Double), @p556='?' (DbType = Int64), @p557='?' (Size = 4000), @p558='?' (DbType = Double), @p559='?' (DbType = Double), @p560='?' (DbType = Int64), @p561='?' (DbType = Int64), @p562='?' (DbType = Int64), @p563='?' (DbType = Int64), @p564='?' (DbType = Int64), @p565='?' (DbType = Int64), @p566='?' (DbType = Int64), @p567='?' (DbType = Int64), @p568='?' (DbType = Int64), @p569='?' (DbType = Double), @p570='?' (DbType = Int64), @p571='?' (DbType = Int64), @p572='?' (Size = 4000), @p573='?' (Size = 450), @p574='?' (DbType = Double), @p575='?' (DbType = Double), @p576='?' (DbType = Int64), @p577='?' (DbType = Int64), @p578='?' (DbType = Int64), @p579='?' (DbType = Int64), @p580='?' (DbType = Int64), @p581='?' (DbType = Int64), @p582='?' (DbType = Int64), @p583='?' (DbType = Double), @p584='?' (DbType = Int64), @p585='?' (DbType = Double), @p586='?' (DbType = Int64), @p587='?' (Size = 4000), @p588='?' (DbType = Double), @p589='?' (DbType = Double), @p590='?' (DbType = Int64), @p591='?' (DbType = Int64), @p592='?' (DbType = Int64), @p593='?' (DbType = Int64), @p594='?' (DbType = Int64), @p595='?' (DbType = Int64), @p596='?' (DbType = Int64), @p597='?' (DbType = Int64), @p598='?' (DbType = Int64), @p599='?' (DbType = Double), @p600='?' (DbType = Int64), @p601='?' (DbType = Int64), @p602='?' (Size = 4000), @p603='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
DECLARE @inserted0 TABLE ([Id] int, [_Position] [int]);
MERGE [CashFlowAnnualReport] USING (
VALUES (@p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21, @p22, @p23, @p24, @p25, @p26, @p27, @p28, @p29, @p30, @p31, @p32, @p33, 0),
(@p34, @p35, @p36, @p37, @p38, @p39, @p40, @p41, @p42, @p43, @p44, @p45, @p46, @p47, @p48, @p49, @p50, @p51, @p52, @p53, @p54, @p55, @p56, @p57, @p58, @p59, @p60, @p61, @p62, @p63, 1)) AS i ([CapitalExpenditures], [CashflowFromFinancing], [CashflowFromInvestment], [ChangeInCashAndCashEquivalents], [ChangeInExchangeRate], [ChangeInInventory], [ChangeInOperatingAssets], [ChangeInOperatingLiabilities], [ChangeInReceivables], [DepreciationDepletionAndAmortization], [DividendPayout], [DividendPayoutCommonStock], [DividendPayoutPreferredStock], [FiscalDateEnding], [NetIncome], [OperatingCashFlow], [PaymentsForOperatingActivities], [PaymentsForRepurchaseOfCommonStock], [PaymentsForRepurchaseOfEquity], [PaymentsForRepurchaseOfPreferredStock], [ProceedsFromIssuanceOfCommonStock], [ProceedsFromIssuanceOfLongTermDebtAndCapitalSecuritiesNet], [ProceedsFromIssuanceOfPreferredStock], [ProceedsFromOperatingActivities], [ProceedsFromRepaymentsOfShortTermDebt], [ProceedsFromRepurchaseOfEquity], [ProceedsFromSaleOfTreasuryStock], [ProfitLoss], [ReportedCurrency], [Symbol], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([CapitalExpenditures], [CashflowFromFinancing], [CashflowFromInvestment], [ChangeInCashAndCashEquivalents], [ChangeInExchangeRate], [ChangeInInventory], [ChangeInOperatingAssets], [ChangeInOperatingLiabilities], [ChangeInReceivables], [DepreciationDepletionAndAmortization], [DividendPayout], [DividendPayoutCommonStock], [DividendPayoutPreferredStock], [FiscalDateEnding], [NetIncome], [OperatingCashFlow], [PaymentsForOperatingActivities], [PaymentsForRepurchaseOfCommonStock], [PaymentsForRepurchaseOfEquity], [PaymentsForRepurchaseOfPreferredStock], [ProceedsFromIssuanceOfCommonStock], [ProceedsFromIssuanceOfLongTermDebtAndCapitalSecuritiesNet], [ProceedsFromIssuanceOfPreferredStock], [ProceedsFromOperatingActivities], [ProceedsFromRepaymentsOfShortTermDebt], [ProceedsFromRepurchaseOfEquity], [ProceedsFromSaleOfTreasuryStock], [ProfitLoss], [ReportedCurrency], [Symbol])
VALUES (i.[CapitalExpenditures], i.[CashflowFromFinancing], i.[CashflowFromInvestment], i.[ChangeInCashAndCashEquivalents], i.[ChangeInExchangeRate], i.[ChangeInInventory], i.[ChangeInOperatingAssets], i.[ChangeInOperatingLiabilities], i.[ChangeInReceivables], i.[DepreciationDepletionAndAmortization], i.[DividendPayout], i.[DividendPayoutCommonStock], i.[DividendPayoutPreferredStock], i.[FiscalDateEnding], i.[NetIncome], i.[OperatingCashFlow], i.[PaymentsForOperatingActivities], i.[PaymentsForRepurchaseOfCommonStock], i.[PaymentsForRepurchaseOfEquity], i.[PaymentsForRepurchaseOfPreferredStock], i.[ProceedsFromIssuanceOfCommonStock], i.[ProceedsFromIssuanceOfLongTermDebtAndCapitalSecuritiesNet], i.[ProceedsFromIssuanceOfPreferredStock], i.[ProceedsFromOperatingActivities], i.[ProceedsFromRepaymentsOfShortTermDebt], i.[ProceedsFromRepurchaseOfEquity], i.[ProceedsFromSaleOfTreasuryStock], i.[ProfitLoss], i.[ReportedCurrency], i.[Symbol])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted0;

SELECT [i].[Id] FROM @inserted0 i
ORDER BY [i].[_Position];

DECLARE @inserted2 TABLE ([Id] int, [_Position] [int]);
MERGE [CashFlowQuarterlyReport] USING (
VALUES (@p64, @p65, @p66, @p67, @p68, @p69, @p70, @p71, @p72, @p73, @p74, @p75, @p76, @p77, @p78, @p79, @p80, @p81, @p82, @p83, @p84, @p85, @p86, @p87, @p88, @p89, @p90, @p91, @p92, @p93, 0),
(@p94, @p95, @p96, @p97, @p98, @p99, @p100, @p101, @p102, @p103, @p104, @p105, @p106, @p107, @p108, @p109, @p110, @p111, @p112, @p113, @p114, @p115, @p116, @p117, @p118, @p119, @p120, @p121, @p122, @p123, 1),
(@p124, @p125, @p126, @p127, @p128, @p129, @p130, @p131, @p132, @p133, @p134, @p135, @p136, @p137, @p138, @p139, @p140, @p141, @p142, @p143, @p144, @p145, @p146, @p147, @p148, @p149, @p150, @p151, @p152, @p153, 2),
(@p154, @p155, @p156, @p157, @p158, @p159, @p160, @p161, @p162, @p163, @p164, @p165, @p166, @p167, @p168, @p169, @p170, @p171, @p172, @p173, @p174, @p175, @p176, @p177, @p178, @p179, @p180, @p181, @p182, @p183, 3),
(@p184, @p185, @p186, @p187, @p188, @p189, @p190, @p191, @p192, @p193, @p194, @p195, @p196, @p197, @p198, @p199, @p200, @p201, @p202, @p203, @p204, @p205, @p206, @p207, @p208, @p209, @p210, @p211, @p212, @p213, 4),
(@p214, @p215, @p216, @p217, @p218, @p219, @p220, @p221, @p222, @p223, @p224, @p225, @p226, @p227, @p228, @p229, @p230, @p231, @p232, @p233, @p234, @p235, @p236, @p237, @p238, @p239, @p240, @p241, @p242, @p243, 5),
(@p244, @p245, @p246, @p247, @p248, @p249, @p250, @p251, @p252, @p253, @p254, @p255, @p256, @p257, @p258, @p259, @p260, @p261, @p262, @p263, @p264, @p265, @p266, @p267, @p268, @p269, @p270, @p271, @p272, @p273, 6),
(@p274, @p275, @p276, @p277, @p278, @p279, @p280, @p281, @p282, @p283, @p284, @p285, @p286, @p287, @p288, @p289, @p290, @p291, @p292, @p293, @p294, @p295, @p296, @p297, @p298, @p299, @p300, @p301, @p302, @p303, 7),
(@p304, @p305, @p306, @p307, @p308, @p309, @p310, @p311, @p312, @p313, @p314, @p315, @p316, @p317, @p318, @p319, @p320, @p321, @p322, @p323, @p324, @p325, @p326, @p327, @p328, @p329, @p330, @p331, @p332, @p333, 8),
(@p334, @p335, @p336, @p337, @p338, @p339, @p340, @p341, @p342, @p343, @p344, @p345, @p346, @p347, @p348, @p349, @p350, @p351, @p352, @p353, @p354, @p355, @p356, @p357, @p358, @p359, @p360, @p361, @p362, @p363, 9),
(@p364, @p365, @p366, @p367, @p368, @p369, @p370, @p371, @p372, @p373, @p374, @p375, @p376, @p377, @p378, @p379, @p380, @p381, @p382, @p383, @p384, @p385, @p386, @p387, @p388, @p389, @p390, @p391, @p392, @p393, 10),
(@p394, @p395, @p396, @p397, @p398, @p399, @p400, @p401, @p402, @p403, @p404, @p405, @p406, @p407, @p408, @p409, @p410, @p411, @p412, @p413, @p414, @p415, @p416, @p417, @p418, @p419, @p420, @p421, @p422, @p423, 11),
(@p424, @p425, @p426, @p427, @p428, @p429, @p430, @p431, @p432, @p433, @p434, @p435, @p436, @p437, @p438, @p439, @p440, @p441, @p442, @p443, @p444, @p445, @p446, @p447, @p448, @p449, @p450, @p451, @p452, @p453, 12),
(@p454, @p455, @p456, @p457, @p458, @p459, @p460, @p461, @p462, @p463, @p464, @p465, @p466, @p467, @p468, @p469, @p470, @p471, @p472, @p473, @p474, @p475, @p476, @p477, @p478, @p479, @p480, @p481, @p482, @p483, 13),
(@p484, @p485, @p486, @p487, @p488, @p489, @p490, @p491, @p492, @p493, @p494, @p495, @p496, @p497, @p498, @p499, @p500, @p501, @p502, @p503, @p504, @p505, @p506, @p507, @p508, @p509, @p510, @p511, @p512, @p513, 14),
(@p514, @p515, @p516, @p517, @p518, @p519, @p520, @p521, @p522, @p523, @p524, @p525, @p526, @p527, @p528, @p529, @p530, @p531, @p532, @p533, @p534, @p535, @p536, @p537, @p538, @p539, @p540, @p541, @p542, @p543, 15),
(@p544, @p545, @p546, @p547, @p548, @p549, @p550, @p551, @p552, @p553, @p554, @p555, @p556, @p557, @p558, @p559, @p560, @p561, @p562, @p563, @p564, @p565, @p566, @p567, @p568, @p569, @p570, @p571, @p572, @p573, 16),
(@p574, @p575, @p576, @p577, @p578, @p579, @p580, @p581, @p582, @p583, @p584, @p585, @p586, @p587, @p588, @p589, @p590, @p591, @p592, @p593, @p594, @p595, @p596, @p597, @p598, @p599, @p600, @p601, @p602, @p603, 17)) AS i ([CapitalExpenditures], [CashflowFromFinancing], [CashflowFromInvestment], [ChangeInCashAndCashEquivalents], [ChangeInExchangeRate], [ChangeInInventory], [ChangeInOperatingAssets], [ChangeInOperatingLiabilities], [ChangeInReceivables], [DepreciationDepletionAndAmortization], [DividendPayout], [DividendPayoutCommonStock], [DividendPayoutPreferredStock], [FiscalDateEnding], [NetIncome], [OperatingCashFlow], [PaymentsForOperatingActivities], [PaymentsForRepurchaseOfCommonStock], [PaymentsForRepurchaseOfEquity], [PaymentsForRepurchaseOfPreferredStock], [ProceedsFromIssuanceOfCommonStock], [ProceedsFromIssuanceOfLongTermDebtAndCapitalSecuritiesNet], [ProceedsFromIssuanceOfPreferredStock], [ProceedsFromOperatingActivities], [ProceedsFromRepaymentsOfShortTermDebt], [ProceedsFromRepurchaseOfEquity], [ProceedsFromSaleOfTreasuryStock], [ProfitLoss], [ReportedCurrency], [Symbol], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([CapitalExpenditures], [CashflowFromFinancing], [CashflowFromInvestment], [ChangeInCashAndCashEquivalents], [ChangeInExchangeRate], [ChangeInInventory], [ChangeInOperatingAssets], [ChangeInOperatingLiabilities], [ChangeInReceivables], [DepreciationDepletionAndAmortization], [DividendPayout], [DividendPayoutCommonStock], [DividendPayoutPreferredStock], [FiscalDateEnding], [NetIncome], [OperatingCashFlow], [PaymentsForOperatingActivities], [PaymentsForRepurchaseOfCommonStock], [PaymentsForRepurchaseOfEquity], [PaymentsForRepurchaseOfPreferredStock], [ProceedsFromIssuanceOfCommonStock], [ProceedsFromIssuanceOfLongTermDebtAndCapitalSecuritiesNet], [ProceedsFromIssuanceOfPreferredStock], [ProceedsFromOperatingActivities], [ProceedsFromRepaymentsOfShortTermDebt], [ProceedsFromRepurchaseOfEquity], [ProceedsFromSaleOfTreasuryStock], [ProfitLoss], [ReportedCurrency], [Symbol])
VALUES (i.[CapitalExpenditures], i.[CashflowFromFinancing], i.[CashflowFromInvestment], i.[ChangeInCashAndCashEquivalents], i.[ChangeInExchangeRate], i.[ChangeInInventory], i.[ChangeInOperatingAssets], i.[ChangeInOperatingLiabilities], i.[ChangeInReceivables], i.[DepreciationDepletionAndAmortization], i.[DividendPayout], i.[DividendPayoutCommonStock], i.[DividendPayoutPreferredStock], i.[FiscalDateEnding], i.[NetIncome], i.[OperatingCashFlow], i.[PaymentsForOperatingActivities], i.[PaymentsForRepurchaseOfCommonStock], i.[PaymentsForRepurchaseOfEquity], i.[PaymentsForRepurchaseOfPreferredStock], i.[ProceedsFromIssuanceOfCommonStock], i.[ProceedsFromIssuanceOfLongTermDebtAndCapitalSecuritiesNet], i.[ProceedsFromIssuanceOfPreferredStock], i.[ProceedsFromOperatingActivities], i.[ProceedsFromRepaymentsOfShortTermDebt], i.[ProceedsFromRepurchaseOfEquity], i.[ProceedsFromSaleOfTreasuryStock], i.[ProfitLoss], i.[ReportedCurrency], i.[Symbol])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted2;

SELECT [i].[Id] FROM @inserted2 i
ORDER BY [i].[_Position];
2022-05-12 01:14:25.673 +03:00 [INF] AddOrUpdate run successful.
2022-05-12 01:14:40.857 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CompanyOverview with Symbol BL
2022-05-12 01:14:40.861 +03:00 [INF] Generating URI for OVERVIEW with params: symbol: BL
2022-05-12 01:14:40.861 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=OVERVIEW&symbol=BL
2022-05-12 01:14:40.862 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=OVERVIEW&symbol=BL".
2022-05-12 01:14:41.370 +03:00 [INF] Response has success status code
2022-05-12 01:14:41.371 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.CompanyOverview for symbol BL
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyOverview(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 116
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:14:48.433 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.Earnings with Symbol AXS-P-E
2022-05-12 01:14:48.433 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.IncomeStatement with Symbol AVES
2022-05-12 01:14:48.436 +03:00 [INF] Generating URI for EARNINGS with params: symbol: AXS-P-E
2022-05-12 01:14:48.437 +03:00 [INF] Generating URI for INCOME_STATEMENT with params: symbol: AVES
2022-05-12 01:14:48.437 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=EARNINGS&symbol=AXS-P-E
2022-05-12 01:14:48.437 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=INCOME_STATEMENT&symbol=AVES
2022-05-12 01:14:48.438 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=EARNINGS&symbol=AXS-P-E".
2022-05-12 01:14:48.438 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=INCOME_STATEMENT&symbol=AVES".
2022-05-12 01:14:48.659 +03:00 [INF] Response has success status code
2022-05-12 01:14:48.659 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.Earnings for symbol AXS-P-E
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyEarnings(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 142
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:14:48.746 +03:00 [INF] Response has success status code
2022-05-12 01:14:48.747 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.IncomeStatement for symbol AVES
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetIncomeStatement(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 69
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:14:52.761 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.BalanceSheet with Symbol BFH
2022-05-12 01:14:52.763 +03:00 [INF] Generating URI for BALANCE_SHEET with params: symbol: BFH
2022-05-12 01:14:52.763 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BFH
2022-05-12 01:14:52.764 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BFH".
2022-05-12 01:14:52.978 +03:00 [INF] Response has success status code
2022-05-12 01:14:52.979 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.BalanceSheet for symbol BFH
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetBalanceSheet(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 82
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:14:55.676 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CashFlow with Symbol AVD
2022-05-12 01:14:55.677 +03:00 [INF] Generating URI for CASH_FLOW with params: symbol: AVD
2022-05-12 01:14:55.678 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=CASH_FLOW&symbol=AVD
2022-05-12 01:14:55.678 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=CASH_FLOW&symbol=AVD".
2022-05-12 01:14:55.893 +03:00 [INF] Response has success status code
2022-05-12 01:14:55.893 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.CashFlow for symbol AVD
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCashFlow(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 96
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:15:11.383 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CompanyOverview with Symbol BLBD
2022-05-12 01:15:11.386 +03:00 [INF] Generating URI for OVERVIEW with params: symbol: BLBD
2022-05-12 01:15:11.387 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=OVERVIEW&symbol=BLBD
2022-05-12 01:15:11.387 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=OVERVIEW&symbol=BLBD".
2022-05-12 01:15:13.466 +03:00 [INF] Response has success status code
2022-05-12 01:15:13.467 +03:00 [INF] Trying to deserialize response.
2022-05-12 01:15:13.467 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.CompanyOverview.
2022-05-12 01:15:13.468 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 01:15:13.480 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__entity_Symbol_0
2022-05-12 01:15:13.482 +03:00 [INF] Entity does not exist. Adding to DB.
2022-05-12 01:15:13.499 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (Size = 4000), @p2='?' (DbType = Double), @p3='?' (Size = 4000), @p4='?' (DbType = Double), @p5='?' (DbType = Double), @p6='?' (DbType = Int64), @p7='?' (Size = 4000), @p8='?' (Size = 4000), @p9='?' (Size = 4000), @p10='?' (DbType = Double), @p11='?' (DbType = DateTime2), @p12='?' (DbType = Double), @p13='?' (DbType = Double), @p14='?' (DbType = Int64), @p15='?' (DbType = Double), @p16='?' (DbType = Double), @p17='?' (DbType = Double), @p18='?' (DbType = DateTime2), @p19='?' (Size = 4000), @p20='?' (DbType = Boolean), @p21='?' (Size = 4000), @p22='?' (DbType = Double), @p23='?' (DbType = Int64), @p24='?' (Size = 4000), @p25='?' (DbType = DateTime2), @p26='?' (DbType = DateTime2), @p27='?' (DbType = DateTime2), @p28='?' (DbType = Int64), @p29='?' (Size = 4000), @p30='?' (DbType = Double), @p31='?' (DbType = Double), @p32='?' (DbType = Double), @p33='?' (DbType = Double), @p34='?' (DbType = Double), @p35='?' (DbType = Double), @p36='?' (DbType = Double), @p37='?' (DbType = Double), @p38='?' (DbType = Double), @p39='?' (DbType = Double), @p40='?' (DbType = Double), @p41='?' (DbType = Int64), @p42='?' (Size = 4000), @p43='?' (DbType = Int64), @p44='?' (DbType = Double), @p45='?' (DbType = Double), @p46='?' (DbType = Double), @p47='?' (DbType = Double), @p48='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [CompanyOverviews] ([Symbol], [Address], [AnalystTargetPrice], [AssetType], [Beta], [BookValue], [CIK], [Country], [Currency], [Description], [DilutedEPSTTM], [DividendDate], [DividendPerShare], [DividendYield], [EBITDA], [EPS], [EVToEBITDA], [EVToRevenue], [ExDividendDate], [Exchange], [ExistInApi], [FiscalYearEnd], [ForwardPE], [GrossProfitTTM], [Industry], [LastApiRefresh], [LastLocalRefresh], [LatestQuarter], [MarketCapitalization], [Name], [OperatingMarginTTM], [PEGRatio], [PERatio], [PriceToBookRatio], [PriceToSalesRatioTTM], [ProfitMargin], [QuarterlyEarningsGrowthYOY], [QuarterlyRevenueGrowthYOY], [ReturnOnAssetsTTM], [ReturnOnEquityTTM], [RevenuePerShareTTM], [RevenueTTM], [Sector], [SharesOutstanding], [TrailingPE], [_200DayMovingAverage], [_50DayMovingAverage], [_52WeekHigh], [_52WeekLow])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21, @p22, @p23, @p24, @p25, @p26, @p27, @p28, @p29, @p30, @p31, @p32, @p33, @p34, @p35, @p36, @p37, @p38, @p39, @p40, @p41, @p42, @p43, @p44, @p45, @p46, @p47, @p48);
2022-05-12 01:15:13.507 +03:00 [INF] AddOrUpdate run successful.
2022-05-12 01:15:18.667 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.Earnings with Symbol AXTA
2022-05-12 01:15:18.669 +03:00 [INF] Generating URI for EARNINGS with params: symbol: AXTA
2022-05-12 01:15:18.669 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=EARNINGS&symbol=AXTA
2022-05-12 01:15:18.670 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=EARNINGS&symbol=AXTA".
2022-05-12 01:15:18.763 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.IncomeStatement with Symbol AVGOP
2022-05-12 01:15:18.765 +03:00 [INF] Generating URI for INCOME_STATEMENT with params: symbol: AVGOP
2022-05-12 01:15:18.765 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=INCOME_STATEMENT&symbol=AVGOP
2022-05-12 01:15:18.766 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=INCOME_STATEMENT&symbol=AVGOP".
2022-05-12 01:15:18.938 +03:00 [INF] Response has success status code
2022-05-12 01:15:18.939 +03:00 [INF] Trying to deserialize response.
2022-05-12 01:15:18.939 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 01:15:18.949 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__symbol_0
2022-05-12 01:15:18.950 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.Earnings.
2022-05-12 01:15:18.959 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [e].[Symbol], [e].[ExistInApi], [e].[LastApiRefresh], [e].[LastLocalRefresh]
FROM [Earnings] AS [e]
WHERE [e].[Symbol] = @__entity_Symbol_0
2022-05-12 01:15:18.960 +03:00 [INF] Entity does not exist. Adding to DB.
2022-05-12 01:15:18.972 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = Boolean), @p2='?' (DbType = DateTime2), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Earnings] ([Symbol], [ExistInApi], [LastApiRefresh], [LastLocalRefresh])
VALUES (@p0, @p1, @p2, @p3);
2022-05-12 01:15:18.992 +03:00 [INF] Executed DbCommand (18ms) [Parameters=[@p4='?' (DbType = DateTime2), @p5='?' (DbType = Double), @p6='?' (Size = 450), @p7='?' (DbType = DateTime2), @p8='?' (DbType = Double), @p9='?' (Size = 450), @p10='?' (DbType = DateTime2), @p11='?' (DbType = Double), @p12='?' (Size = 450), @p13='?' (DbType = DateTime2), @p14='?' (DbType = Double), @p15='?' (Size = 450), @p16='?' (DbType = DateTime2), @p17='?' (DbType = Double), @p18='?' (Size = 450), @p19='?' (DbType = DateTime2), @p20='?' (DbType = Double), @p21='?' (Size = 450), @p22='?' (DbType = DateTime2), @p23='?' (DbType = Double), @p24='?' (Size = 450), @p25='?' (DbType = DateTime2), @p26='?' (DbType = Double), @p27='?' (Size = 450), @p28='?' (DbType = DateTime2), @p29='?' (DbType = Double), @p30='?' (Size = 450), @p31='?' (DbType = Double), @p32='?' (DbType = DateTime2), @p33='?' (DbType = DateTime2), @p34='?' (DbType = Double), @p35='?' (DbType = Double), @p36='?' (DbType = Double), @p37='?' (Size = 450), @p38='?' (DbType = Double), @p39='?' (DbType = DateTime2), @p40='?' (DbType = DateTime2), @p41='?' (DbType = Double), @p42='?' (DbType = Double), @p43='?' (DbType = Double), @p44='?' (Size = 450), @p45='?' (DbType = Double), @p46='?' (DbType = DateTime2), @p47='?' (DbType = DateTime2), @p48='?' (DbType = Double), @p49='?' (DbType = Double), @p50='?' (DbType = Double), @p51='?' (Size = 450), @p52='?' (DbType = Double), @p53='?' (DbType = DateTime2), @p54='?' (DbType = DateTime2), @p55='?' (DbType = Double), @p56='?' (DbType = Double), @p57='?' (DbType = Double), @p58='?' (Size = 450), @p59='?' (DbType = Double), @p60='?' (DbType = DateTime2), @p61='?' (DbType = DateTime2), @p62='?' (DbType = Double), @p63='?' (DbType = Double), @p64='?' (DbType = Double), @p65='?' (Size = 450), @p66='?' (DbType = Double), @p67='?' (DbType = DateTime2), @p68='?' (DbType = DateTime2), @p69='?' (DbType = Double), @p70='?' (DbType = Double), @p71='?' (DbType = Double), @p72='?' (Size = 450), @p73='?' (DbType = Double), @p74='?' (DbType = DateTime2), @p75='?' (DbType = DateTime2), @p76='?' (DbType = Double), @p77='?' (DbType = Double), @p78='?' (DbType = Double), @p79='?' (Size = 450), @p80='?' (DbType = Double), @p81='?' (DbType = DateTime2), @p82='?' (DbType = DateTime2), @p83='?' (DbType = Double), @p84='?' (DbType = Double), @p85='?' (DbType = Double), @p86='?' (Size = 450), @p87='?' (DbType = Double), @p88='?' (DbType = DateTime2), @p89='?' (DbType = DateTime2), @p90='?' (DbType = Double), @p91='?' (DbType = Double), @p92='?' (DbType = Double), @p93='?' (Size = 450), @p94='?' (DbType = Double), @p95='?' (DbType = DateTime2), @p96='?' (DbType = DateTime2), @p97='?' (DbType = Double), @p98='?' (DbType = Double), @p99='?' (DbType = Double), @p100='?' (Size = 450), @p101='?' (DbType = Double), @p102='?' (DbType = DateTime2), @p103='?' (DbType = DateTime2), @p104='?' (DbType = Double), @p105='?' (DbType = Double), @p106='?' (DbType = Double), @p107='?' (Size = 450), @p108='?' (DbType = Double), @p109='?' (DbType = DateTime2), @p110='?' (DbType = DateTime2), @p111='?' (DbType = Double), @p112='?' (DbType = Double), @p113='?' (DbType = Double), @p114='?' (Size = 450), @p115='?' (DbType = Double), @p116='?' (DbType = DateTime2), @p117='?' (DbType = DateTime2), @p118='?' (DbType = Double), @p119='?' (DbType = Double), @p120='?' (DbType = Double), @p121='?' (Size = 450), @p122='?' (DbType = Double), @p123='?' (DbType = DateTime2), @p124='?' (DbType = DateTime2), @p125='?' (DbType = Double), @p126='?' (DbType = Double), @p127='?' (DbType = Double), @p128='?' (Size = 450), @p129='?' (DbType = Double), @p130='?' (DbType = DateTime2), @p131='?' (DbType = DateTime2), @p132='?' (DbType = Double), @p133='?' (DbType = Double), @p134='?' (DbType = Double), @p135='?' (Size = 450), @p136='?' (DbType = Double), @p137='?' (DbType = DateTime2), @p138='?' (DbType = DateTime2), @p139='?' (DbType = Double), @p140='?' (DbType = Double), @p141='?' (DbType = Double), @p142='?' (Size = 450), @p143='?' (DbType = Double), @p144='?' (DbType = DateTime2), @p145='?' (DbType = DateTime2), @p146='?' (DbType = Double), @p147='?' (DbType = Double), @p148='?' (DbType = Double), @p149='?' (Size = 450), @p150='?' (DbType = Double), @p151='?' (DbType = DateTime2), @p152='?' (DbType = DateTime2), @p153='?' (DbType = Double), @p154='?' (DbType = Double), @p155='?' (DbType = Double), @p156='?' (Size = 450), @p157='?' (DbType = Double), @p158='?' (DbType = DateTime2), @p159='?' (DbType = DateTime2), @p160='?' (DbType = Double), @p161='?' (DbType = Double), @p162='?' (DbType = Double), @p163='?' (Size = 450), @p164='?' (DbType = Double), @p165='?' (DbType = DateTime2), @p166='?' (DbType = DateTime2), @p167='?' (DbType = Double), @p168='?' (DbType = Double), @p169='?' (DbType = Double), @p170='?' (Size = 450), @p171='?' (DbType = Double), @p172='?' (DbType = DateTime2), @p173='?' (DbType = DateTime2), @p174='?' (DbType = Double), @p175='?' (DbType = Double), @p176='?' (DbType = Double), @p177='?' (Size = 450), @p178='?' (DbType = Double), @p179='?' (DbType = DateTime2), @p180='?' (DbType = DateTime2), @p181='?' (DbType = Double), @p182='?' (DbType = Double), @p183='?' (DbType = Double), @p184='?' (Size = 450), @p185='?' (DbType = Double), @p186='?' (DbType = DateTime2), @p187='?' (DbType = DateTime2), @p188='?' (DbType = Double), @p189='?' (DbType = Double), @p190='?' (DbType = Double), @p191='?' (Size = 450), @p192='?' (DbType = Double), @p193='?' (DbType = DateTime2), @p194='?' (DbType = DateTime2), @p195='?' (DbType = Double), @p196='?' (DbType = Double), @p197='?' (DbType = Double), @p198='?' (Size = 450), @p199='?' (DbType = Double), @p200='?' (DbType = DateTime2), @p201='?' (DbType = DateTime2), @p202='?' (DbType = Double), @p203='?' (DbType = Double), @p204='?' (DbType = Double), @p205='?' (Size = 450), @p206='?' (DbType = Double), @p207='?' (DbType = DateTime2), @p208='?' (DbType = DateTime2), @p209='?' (DbType = Double), @p210='?' (DbType = Double), @p211='?' (DbType = Double), @p212='?' (Size = 450), @p213='?' (DbType = Double), @p214='?' (DbType = DateTime2), @p215='?' (DbType = DateTime2), @p216='?' (DbType = Double), @p217='?' (DbType = Double), @p218='?' (DbType = Double), @p219='?' (Size = 450), @p220='?' (DbType = Double), @p221='?' (DbType = DateTime2), @p222='?' (DbType = DateTime2), @p223='?' (DbType = Double), @p224='?' (DbType = Double), @p225='?' (DbType = Double), @p226='?' (Size = 450), @p227='?' (DbType = Double), @p228='?' (DbType = DateTime2), @p229='?' (DbType = DateTime2), @p230='?' (DbType = Double), @p231='?' (DbType = Double), @p232='?' (DbType = Double), @p233='?' (Size = 450), @p234='?' (DbType = Double), @p235='?' (DbType = DateTime2), @p236='?' (DbType = DateTime2), @p237='?' (DbType = Double), @p238='?' (DbType = Double), @p239='?' (DbType = Double), @p240='?' (Size = 450), @p241='?' (DbType = Double), @p242='?' (DbType = DateTime2), @p243='?' (DbType = DateTime2), @p244='?' (DbType = Double), @p245='?' (DbType = Double), @p246='?' (DbType = Double), @p247='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
DECLARE @inserted0 TABLE ([Id] int, [_Position] [int]);
MERGE [AnnualEarning] USING (
VALUES (@p4, @p5, @p6, 0),
(@p7, @p8, @p9, 1),
(@p10, @p11, @p12, 2),
(@p13, @p14, @p15, 3),
(@p16, @p17, @p18, 4),
(@p19, @p20, @p21, 5),
(@p22, @p23, @p24, 6),
(@p25, @p26, @p27, 7),
(@p28, @p29, @p30, 8)) AS i ([FiscalDateEnding], [ReportedEPS], [Symbol], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([FiscalDateEnding], [ReportedEPS], [Symbol])
VALUES (i.[FiscalDateEnding], i.[ReportedEPS], i.[Symbol])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted0;

SELECT [i].[Id] FROM @inserted0 i
ORDER BY [i].[_Position];

DECLARE @inserted9 TABLE ([Id] int, [_Position] [int]);
MERGE [QuarterlyEarning] USING (
VALUES (@p31, @p32, @p33, @p34, @p35, @p36, @p37, 0),
(@p38, @p39, @p40, @p41, @p42, @p43, @p44, 1),
(@p45, @p46, @p47, @p48, @p49, @p50, @p51, 2),
(@p52, @p53, @p54, @p55, @p56, @p57, @p58, 3),
(@p59, @p60, @p61, @p62, @p63, @p64, @p65, 4),
(@p66, @p67, @p68, @p69, @p70, @p71, @p72, 5),
(@p73, @p74, @p75, @p76, @p77, @p78, @p79, 6),
(@p80, @p81, @p82, @p83, @p84, @p85, @p86, 7),
(@p87, @p88, @p89, @p90, @p91, @p92, @p93, 8),
(@p94, @p95, @p96, @p97, @p98, @p99, @p100, 9),
(@p101, @p102, @p103, @p104, @p105, @p106, @p107, 10),
(@p108, @p109, @p110, @p111, @p112, @p113, @p114, 11),
(@p115, @p116, @p117, @p118, @p119, @p120, @p121, 12),
(@p122, @p123, @p124, @p125, @p126, @p127, @p128, 13),
(@p129, @p130, @p131, @p132, @p133, @p134, @p135, 14),
(@p136, @p137, @p138, @p139, @p140, @p141, @p142, 15),
(@p143, @p144, @p145, @p146, @p147, @p148, @p149, 16),
(@p150, @p151, @p152, @p153, @p154, @p155, @p156, 17),
(@p157, @p158, @p159, @p160, @p161, @p162, @p163, 18),
(@p164, @p165, @p166, @p167, @p168, @p169, @p170, 19),
(@p171, @p172, @p173, @p174, @p175, @p176, @p177, 20),
(@p178, @p179, @p180, @p181, @p182, @p183, @p184, 21),
(@p185, @p186, @p187, @p188, @p189, @p190, @p191, 22),
(@p192, @p193, @p194, @p195, @p196, @p197, @p198, 23),
(@p199, @p200, @p201, @p202, @p203, @p204, @p205, 24),
(@p206, @p207, @p208, @p209, @p210, @p211, @p212, 25),
(@p213, @p214, @p215, @p216, @p217, @p218, @p219, 26),
(@p220, @p221, @p222, @p223, @p224, @p225, @p226, 27),
(@p227, @p228, @p229, @p230, @p231, @p232, @p233, 28),
(@p234, @p235, @p236, @p237, @p238, @p239, @p240, 29),
(@p241, @p242, @p243, @p244, @p245, @p246, @p247, 30)) AS i ([EstimatedEPS], [FiscalDateEnding], [ReportedDate], [ReportedEPS], [Surprise], [SurprisePercentage], [Symbol], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([EstimatedEPS], [FiscalDateEnding], [ReportedDate], [ReportedEPS], [Surprise], [SurprisePercentage], [Symbol])
VALUES (i.[EstimatedEPS], i.[FiscalDateEnding], i.[ReportedDate], i.[ReportedEPS], i.[Surprise], i.[SurprisePercentage], i.[Symbol])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted9;

SELECT [i].[Id] FROM @inserted9 i
ORDER BY [i].[_Position];
2022-05-12 01:15:19.000 +03:00 [INF] AddOrUpdate run successful.
2022-05-12 01:15:19.123 +03:00 [INF] Response has success status code
2022-05-12 01:15:19.124 +03:00 [INF] Trying to deserialize response.
2022-05-12 01:15:19.125 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 01:15:19.135 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__symbol_0
2022-05-12 01:15:19.136 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.IncomeStatement.
2022-05-12 01:15:19.143 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [i].[Symbol], [i].[ExistInApi], [i].[LastApiRefresh], [i].[LastLocalRefresh]
FROM [IncomeStatements] AS [i]
WHERE [i].[Symbol] = @__entity_Symbol_0
2022-05-12 01:15:19.144 +03:00 [INF] Entity does not exist. Adding to DB.
2022-05-12 01:15:19.158 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = Boolean), @p2='?' (DbType = DateTime2), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [IncomeStatements] ([Symbol], [ExistInApi], [LastApiRefresh], [LastLocalRefresh])
VALUES (@p0, @p1, @p2, @p3);
2022-05-12 01:15:19.268 +03:00 [INF] Executed DbCommand (106ms) [Parameters=[@p4='?' (DbType = Int64), @p5='?' (DbType = Double), @p6='?' (DbType = Double), @p7='?' (DbType = Int64), @p8='?' (DbType = Int64), @p9='?' (DbType = Int64), @p10='?' (DbType = Double), @p11='?' (DbType = DateTime2), @p12='?' (DbType = Double), @p13='?' (DbType = Double), @p14='?' (DbType = Int64), @p15='?' (DbType = Int64), @p16='?' (DbType = Double), @p17='?' (DbType = Int64), @p18='?' (DbType = Int64), @p19='?' (DbType = Double), @p20='?' (DbType = Double), @p21='?' (DbType = Double), @p22='?' (DbType = Int64), @p23='?' (DbType = Double), @p24='?' (DbType = Double), @p25='?' (DbType = Int64), @p26='?' (Size = 4000), @p27='?' (DbType = Int64), @p28='?' (DbType = Double), @p29='?' (Size = 450), @p30='?' (DbType = Int64), @p31='?' (DbType = Int64), @p32='?' (DbType = Double), @p33='?' (DbType = Double), @p34='?' (DbType = Int64), @p35='?' (DbType = Int64), @p36='?' (DbType = Int64), @p37='?' (DbType = Double), @p38='?' (DbType = DateTime2), @p39='?' (DbType = Double), @p40='?' (DbType = Double), @p41='?' (DbType = Int64), @p42='?' (DbType = Int64), @p43='?' (DbType = Double), @p44='?' (DbType = Int64), @p45='?' (DbType = Int64), @p46='?' (DbType = Double), @p47='?' (DbType = Double), @p48='?' (DbType = Double), @p49='?' (DbType = Int64), @p50='?' (DbType = Double), @p51='?' (DbType = Double), @p52='?' (DbType = Int64), @p53='?' (Size = 4000), @p54='?' (DbType = Int64), @p55='?' (DbType = Double), @p56='?' (Size = 450), @p57='?' (DbType = Int64), @p58='?' (DbType = Int64), @p59='?' (DbType = Double), @p60='?' (DbType = Double), @p61='?' (DbType = Int64), @p62='?' (DbType = Int64), @p63='?' (DbType = Int64), @p64='?' (DbType = Double), @p65='?' (DbType = DateTime2), @p66='?' (DbType = Double), @p67='?' (DbType = Double), @p68='?' (DbType = Int64), @p69='?' (DbType = Int64), @p70='?' (DbType = Double), @p71='?' (DbType = Int64), @p72='?' (DbType = Int64), @p73='?' (DbType = Double), @p74='?' (DbType = Double), @p75='?' (DbType = Double), @p76='?' (DbType = Int64), @p77='?' (DbType = Double), @p78='?' (DbType = Double), @p79='?' (DbType = Int64), @p80='?' (Size = 4000), @p81='?' (DbType = Int64), @p82='?' (DbType = Double), @p83='?' (Size = 450), @p84='?' (DbType = Int64), @p85='?' (DbType = Int64), @p86='?' (DbType = Double), @p87='?' (DbType = Double), @p88='?' (DbType = Int64), @p89='?' (DbType = Int64), @p90='?' (DbType = Int64), @p91='?' (DbType = Double), @p92='?' (DbType = DateTime2), @p93='?' (DbType = Double), @p94='?' (DbType = Double), @p95='?' (DbType = Int64), @p96='?' (DbType = Int64), @p97='?' (DbType = Double), @p98='?' (DbType = Int64), @p99='?' (DbType = Int64), @p100='?' (DbType = Double), @p101='?' (DbType = Double), @p102='?' (DbType = Double), @p103='?' (DbType = Int64), @p104='?' (DbType = Double), @p105='?' (DbType = Double), @p106='?' (DbType = Int64), @p107='?' (Size = 4000), @p108='?' (DbType = Int64), @p109='?' (DbType = Double), @p110='?' (Size = 450), @p111='?' (DbType = Int64), @p112='?' (DbType = Int64), @p113='?' (DbType = Double), @p114='?' (DbType = Double), @p115='?' (DbType = Int64), @p116='?' (DbType = Int64), @p117='?' (DbType = Int64), @p118='?' (DbType = Double), @p119='?' (DbType = DateTime2), @p120='?' (DbType = Double), @p121='?' (DbType = Double), @p122='?' (DbType = Int64), @p123='?' (DbType = Int64), @p124='?' (DbType = Double), @p125='?' (DbType = Int64), @p126='?' (DbType = Int64), @p127='?' (DbType = Double), @p128='?' (DbType = Double), @p129='?' (DbType = Double), @p130='?' (DbType = Int64), @p131='?' (DbType = Double), @p132='?' (DbType = Double), @p133='?' (DbType = Int64), @p134='?' (Size = 4000), @p135='?' (DbType = Int64), @p136='?' (DbType = Double), @p137='?' (Size = 450), @p138='?' (DbType = Int64), @p139='?' (DbType = Int64), @p140='?' (DbType = Double), @p141='?' (DbType = Double), @p142='?' (DbType = Int64), @p143='?' (DbType = Int64), @p144='?' (DbType = Int64), @p145='?' (DbType = Double), @p146='?' (DbType = DateTime2), @p147='?' (DbType = Double), @p148='?' (DbType = Double), @p149='?' (DbType = Int64), @p150='?' (DbType = Int64), @p151='?' (DbType = Double), @p152='?' (DbType = Int64), @p153='?' (DbType = Int64), @p154='?' (DbType = Double), @p155='?' (DbType = Double), @p156='?' (DbType = Double), @p157='?' (DbType = Int64), @p158='?' (DbType = Double), @p159='?' (DbType = Double), @p160='?' (DbType = Int64), @p161='?' (Size = 4000), @p162='?' (DbType = Int64), @p163='?' (DbType = Double), @p164='?' (Size = 450), @p165='?' (DbType = Int64), @p166='?' (DbType = Int64), @p167='?' (DbType = Double), @p168='?' (DbType = Double), @p169='?' (DbType = Int64), @p170='?' (DbType = Int64), @p171='?' (DbType = Int64), @p172='?' (DbType = Double), @p173='?' (DbType = DateTime2), @p174='?' (DbType = Double), @p175='?' (DbType = Double), @p176='?' (DbType = Int64), @p177='?' (DbType = Int64), @p178='?' (DbType = Double), @p179='?' (DbType = Int64), @p180='?' (DbType = Int64), @p181='?' (DbType = Double), @p182='?' (DbType = Double), @p183='?' (DbType = Double), @p184='?' (DbType = Int64), @p185='?' (DbType = Double), @p186='?' (DbType = Double), @p187='?' (DbType = Int64), @p188='?' (Size = 4000), @p189='?' (DbType = Int64), @p190='?' (DbType = Double), @p191='?' (Size = 450), @p192='?' (DbType = Int64), @p193='?' (DbType = Int64), @p194='?' (DbType = Double), @p195='?' (DbType = Double), @p196='?' (DbType = Int64), @p197='?' (DbType = Int64), @p198='?' (DbType = Int64), @p199='?' (DbType = Double), @p200='?' (DbType = DateTime2), @p201='?' (DbType = Double), @p202='?' (DbType = Double), @p203='?' (DbType = Int64), @p204='?' (DbType = Int64), @p205='?' (DbType = Double), @p206='?' (DbType = Int64), @p207='?' (DbType = Int64), @p208='?' (DbType = Double), @p209='?' (DbType = Double), @p210='?' (DbType = Double), @p211='?' (DbType = Int64), @p212='?' (DbType = Double), @p213='?' (DbType = Double), @p214='?' (DbType = Int64), @p215='?' (Size = 4000), @p216='?' (DbType = Int64), @p217='?' (DbType = Double), @p218='?' (Size = 450), @p219='?' (DbType = Int64), @p220='?' (DbType = Int64), @p221='?' (DbType = Double), @p222='?' (DbType = Double), @p223='?' (DbType = Int64), @p224='?' (DbType = Int64), @p225='?' (DbType = Int64), @p226='?' (DbType = Double), @p227='?' (DbType = DateTime2), @p228='?' (DbType = Double), @p229='?' (DbType = Double), @p230='?' (DbType = Int64), @p231='?' (DbType = Int64), @p232='?' (DbType = Double), @p233='?' (DbType = Int64), @p234='?' (DbType = Int64), @p235='?' (DbType = Double), @p236='?' (DbType = Double), @p237='?' (DbType = Double), @p238='?' (DbType = Int64), @p239='?' (DbType = Double), @p240='?' (DbType = Double), @p241='?' (DbType = Int64), @p242='?' (Size = 4000), @p243='?' (DbType = Int64), @p244='?' (DbType = Double), @p245='?' (Size = 450), @p246='?' (DbType = Int64), @p247='?' (DbType = Int64), @p248='?' (DbType = Double), @p249='?' (DbType = Double), @p250='?' (DbType = Int64), @p251='?' (DbType = Int64), @p252='?' (DbType = Int64), @p253='?' (DbType = Double), @p254='?' (DbType = DateTime2), @p255='?' (DbType = Double), @p256='?' (DbType = Double), @p257='?' (DbType = Int64), @p258='?' (DbType = Int64), @p259='?' (DbType = Double), @p260='?' (DbType = Int64), @p261='?' (DbType = Int64), @p262='?' (DbType = Double), @p263='?' (DbType = Double), @p264='?' (DbType = Double), @p265='?' (DbType = Int64), @p266='?' (DbType = Double), @p267='?' (DbType = Double), @p268='?' (DbType = Int64), @p269='?' (Size = 4000), @p270='?' (DbType = Int64), @p271='?' (DbType = Double), @p272='?' (Size = 450), @p273='?' (DbType = Int64), @p274='?' (DbType = Int64), @p275='?' (DbType = Double), @p276='?' (DbType = Double), @p277='?' (DbType = Int64), @p278='?' (DbType = Int64), @p279='?' (DbType = Int64), @p280='?' (DbType = Double), @p281='?' (DbType = DateTime2), @p282='?' (DbType = Double), @p283='?' (DbType = Double), @p284='?' (DbType = Int64), @p285='?' (DbType = Int64), @p286='?' (DbType = Double), @p287='?' (DbType = Int64), @p288='?' (DbType = Int64), @p289='?' (DbType = Double), @p290='?' (DbType = Double), @p291='?' (DbType = Double), @p292='?' (DbType = Int64), @p293='?' (DbType = Double), @p294='?' (DbType = Double), @p295='?' (DbType = Int64), @p296='?' (Size = 4000), @p297='?' (DbType = Int64), @p298='?' (DbType = Double), @p299='?' (Size = 450), @p300='?' (DbType = Int64), @p301='?' (DbType = Int64), @p302='?' (DbType = Double), @p303='?' (DbType = Double), @p304='?' (DbType = Int64), @p305='?' (DbType = Int64), @p306='?' (DbType = Int64), @p307='?' (DbType = Double), @p308='?' (DbType = DateTime2), @p309='?' (DbType = Double), @p310='?' (DbType = Double), @p311='?' (DbType = Int64), @p312='?' (DbType = Int64), @p313='?' (DbType = Double), @p314='?' (DbType = Int64), @p315='?' (DbType = Int64), @p316='?' (DbType = Double), @p317='?' (DbType = Double), @p318='?' (DbType = Double), @p319='?' (DbType = Int64), @p320='?' (DbType = Double), @p321='?' (DbType = Double), @p322='?' (DbType = Int64), @p323='?' (Size = 4000), @p324='?' (DbType = Int64), @p325='?' (DbType = Double), @p326='?' (Size = 450), @p327='?' (DbType = Int64), @p328='?' (DbType = Int64), @p329='?' (DbType = Double), @p330='?' (DbType = Double), @p331='?' (DbType = Int64), @p332='?' (DbType = Int64), @p333='?' (DbType = Int64), @p334='?' (DbType = Double), @p335='?' (DbType = DateTime2), @p336='?' (DbType = Double), @p337='?' (DbType = Double), @p338='?' (DbType = Int64), @p339='?' (DbType = Int64), @p340='?' (DbType = Double), @p341='?' (DbType = Int64), @p342='?' (DbType = Int64), @p343='?' (DbType = Double), @p344='?' (DbType = Double), @p345='?' (DbType = Double), @p346='?' (DbType = Int64), @p347='?' (DbType = Double), @p348='?' (DbType = Double), @p349='?' (DbType = Int64), @p350='?' (Size = 4000), @p351='?' (DbType = Int64), @p352='?' (DbType = Double), @p353='?' (Size = 450), @p354='?' (DbType = Int64), @p355='?' (DbType = Int64), @p356='?' (DbType = Double), @p357='?' (DbType = Double), @p358='?' (DbType = Int64), @p359='?' (DbType = Int64), @p360='?' (DbType = Int64), @p361='?' (DbType = Double), @p362='?' (DbType = DateTime2), @p363='?' (DbType = Double), @p364='?' (DbType = Double), @p365='?' (DbType = Int64), @p366='?' (DbType = Int64), @p367='?' (DbType = Double), @p368='?' (DbType = Int64), @p369='?' (DbType = Int64), @p370='?' (DbType = Double), @p371='?' (DbType = Double), @p372='?' (DbType = Double), @p373='?' (DbType = Int64), @p374='?' (DbType = Double), @p375='?' (DbType = Double), @p376='?' (DbType = Int64), @p377='?' (Size = 4000), @p378='?' (DbType = Int64), @p379='?' (DbType = Double), @p380='?' (Size = 450), @p381='?' (DbType = Int64), @p382='?' (DbType = Int64), @p383='?' (DbType = Double), @p384='?' (DbType = Double), @p385='?' (DbType = Int64), @p386='?' (DbType = Int64), @p387='?' (DbType = Int64), @p388='?' (DbType = Double), @p389='?' (DbType = DateTime2), @p390='?' (DbType = Double), @p391='?' (DbType = Double), @p392='?' (DbType = Int64), @p393='?' (DbType = Int64), @p394='?' (DbType = Double), @p395='?' (DbType = Int64), @p396='?' (DbType = Int64), @p397='?' (DbType = Double), @p398='?' (DbType = Double), @p399='?' (DbType = Double), @p400='?' (DbType = Int64), @p401='?' (DbType = Double), @p402='?' (DbType = Double), @p403='?' (DbType = Int64), @p404='?' (Size = 4000), @p405='?' (DbType = Int64), @p406='?' (DbType = Double), @p407='?' (Size = 450), @p408='?' (DbType = Int64), @p409='?' (DbType = Int64), @p410='?' (DbType = Double), @p411='?' (DbType = Double), @p412='?' (DbType = Int64), @p413='?' (DbType = Int64), @p414='?' (DbType = Int64), @p415='?' (DbType = Double), @p416='?' (DbType = DateTime2), @p417='?' (DbType = Double), @p418='?' (DbType = Double), @p419='?' (DbType = Int64), @p420='?' (DbType = Int64), @p421='?' (DbType = Double), @p422='?' (DbType = Int64), @p423='?' (DbType = Int64), @p424='?' (DbType = Double), @p425='?' (DbType = Double), @p426='?' (DbType = Double), @p427='?' (DbType = Int64), @p428='?' (DbType = Double), @p429='?' (DbType = Double), @p430='?' (DbType = Int64), @p431='?' (Size = 4000), @p432='?' (DbType = Int64), @p433='?' (DbType = Double), @p434='?' (Size = 450), @p435='?' (DbType = Int64), @p436='?' (DbType = Int64), @p437='?' (DbType = Double), @p438='?' (DbType = Double), @p439='?' (DbType = Int64), @p440='?' (DbType = Int64), @p441='?' (DbType = Int64), @p442='?' (DbType = Double), @p443='?' (DbType = DateTime2), @p444='?' (DbType = Double), @p445='?' (DbType = Double), @p446='?' (DbType = Int64), @p447='?' (DbType = Int64), @p448='?' (DbType = Double), @p449='?' (DbType = Int64), @p450='?' (DbType = Int64), @p451='?' (DbType = Double), @p452='?' (DbType = Double), @p453='?' (DbType = Double), @p454='?' (DbType = Int64), @p455='?' (DbType = Double), @p456='?' (DbType = Double), @p457='?' (DbType = Int64), @p458='?' (Size = 4000), @p459='?' (DbType = Int64), @p460='?' (DbType = Double), @p461='?' (Size = 450), @p462='?' (DbType = Int64), @p463='?' (DbType = Int64), @p464='?' (DbType = Double), @p465='?' (DbType = Double), @p466='?' (DbType = Int64), @p467='?' (DbType = Int64), @p468='?' (DbType = Int64), @p469='?' (DbType = Double), @p470='?' (DbType = DateTime2), @p471='?' (DbType = Double), @p472='?' (DbType = Double), @p473='?' (DbType = Int64), @p474='?' (DbType = Int64), @p475='?' (DbType = Double), @p476='?' (DbType = Int64), @p477='?' (DbType = Int64), @p478='?' (DbType = Double), @p479='?' (DbType = Double), @p480='?' (DbType = Double), @p481='?' (DbType = Int64), @p482='?' (DbType = Double), @p483='?' (DbType = Double), @p484='?' (DbType = Int64), @p485='?' (Size = 4000), @p486='?' (DbType = Int64), @p487='?' (DbType = Double), @p488='?' (Size = 450), @p489='?' (DbType = Int64), @p490='?' (DbType = Int64), @p491='?' (DbType = Double), @p492='?' (DbType = Double), @p493='?' (DbType = Int64), @p494='?' (DbType = Int64), @p495='?' (DbType = Int64), @p496='?' (DbType = Double), @p497='?' (DbType = DateTime2), @p498='?' (DbType = Double), @p499='?' (DbType = Double), @p500='?' (DbType = Int64), @p501='?' (DbType = Int64), @p502='?' (DbType = Double), @p503='?' (DbType = Int64), @p504='?' (DbType = Int64), @p505='?' (DbType = Double), @p506='?' (DbType = Double), @p507='?' (DbType = Double), @p508='?' (DbType = Int64), @p509='?' (DbType = Double), @p510='?' (DbType = Double), @p511='?' (DbType = Int64), @p512='?' (Size = 4000), @p513='?' (DbType = Int64), @p514='?' (DbType = Double), @p515='?' (Size = 450), @p516='?' (DbType = Int64), @p517='?' (DbType = Int64), @p518='?' (DbType = Double), @p519='?' (DbType = Double), @p520='?' (DbType = Int64), @p521='?' (DbType = Int64), @p522='?' (DbType = Int64), @p523='?' (DbType = Double), @p524='?' (DbType = DateTime2), @p525='?' (DbType = Double), @p526='?' (DbType = Double), @p527='?' (DbType = Int64), @p528='?' (DbType = Int64), @p529='?' (DbType = Double), @p530='?' (DbType = Int64), @p531='?' (DbType = Int64), @p532='?' (DbType = Double), @p533='?' (DbType = Double), @p534='?' (DbType = Double), @p535='?' (DbType = Int64), @p536='?' (DbType = Double), @p537='?' (DbType = Double), @p538='?' (DbType = Int64), @p539='?' (Size = 4000), @p540='?' (DbType = Int64), @p541='?' (DbType = Double), @p542='?' (Size = 450), @p543='?' (DbType = Int64), @p544='?' (DbType = Int64), @p545='?' (DbType = Double), @p546='?' (DbType = Double), @p547='?' (DbType = Int64), @p548='?' (DbType = Int64), @p549='?' (DbType = Int64), @p550='?' (DbType = Double), @p551='?' (DbType = DateTime2), @p552='?' (DbType = Double), @p553='?' (DbType = Double), @p554='?' (DbType = Int64), @p555='?' (DbType = Int64), @p556='?' (DbType = Double), @p557='?' (DbType = Int64), @p558='?' (DbType = Int64), @p559='?' (DbType = Double), @p560='?' (DbType = Double), @p561='?' (DbType = Double), @p562='?' (DbType = Int64), @p563='?' (DbType = Double), @p564='?' (DbType = Double), @p565='?' (DbType = Int64), @p566='?' (Size = 4000), @p567='?' (DbType = Int64), @p568='?' (DbType = Double), @p569='?' (Size = 450), @p570='?' (DbType = Int64), @p571='?' (DbType = Int64), @p572='?' (DbType = Double), @p573='?' (DbType = Double), @p574='?' (DbType = Int64), @p575='?' (DbType = Int64), @p576='?' (DbType = Int64), @p577='?' (DbType = Double), @p578='?' (DbType = DateTime2), @p579='?' (DbType = Double), @p580='?' (DbType = Double), @p581='?' (DbType = Int64), @p582='?' (DbType = Int64), @p583='?' (DbType = Double), @p584='?' (DbType = Int64), @p585='?' (DbType = Int64), @p586='?' (DbType = Double), @p587='?' (DbType = Double), @p588='?' (DbType = Double), @p589='?' (DbType = Int64), @p590='?' (DbType = Double), @p591='?' (DbType = Double), @p592='?' (DbType = Int64), @p593='?' (Size = 4000), @p594='?' (DbType = Int64), @p595='?' (DbType = Double), @p596='?' (Size = 450), @p597='?' (DbType = Int64), @p598='?' (DbType = Int64), @p599='?' (DbType = Double), @p600='?' (DbType = Double), @p601='?' (DbType = Int64), @p602='?' (DbType = Int64), @p603='?' (DbType = Int64), @p604='?' (DbType = Double), @p605='?' (DbType = DateTime2), @p606='?' (DbType = Double), @p607='?' (DbType = Double), @p608='?' (DbType = Int64), @p609='?' (DbType = Int64), @p610='?' (DbType = Double), @p611='?' (DbType = Int64), @p612='?' (DbType = Int64), @p613='?' (DbType = Double), @p614='?' (DbType = Double), @p615='?' (DbType = Double), @p616='?' (DbType = Int64), @p617='?' (DbType = Double), @p618='?' (DbType = Double), @p619='?' (DbType = Int64), @p620='?' (Size = 4000), @p621='?' (DbType = Int64), @p622='?' (DbType = Double), @p623='?' (Size = 450), @p624='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
DECLARE @inserted0 TABLE ([Id] int, [_Position] [int]);
MERGE [IncomeStatementAnnualReport] USING (
VALUES (@p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21, @p22, @p23, @p24, @p25, @p26, @p27, @p28, @p29, @p30, 0),
(@p31, @p32, @p33, @p34, @p35, @p36, @p37, @p38, @p39, @p40, @p41, @p42, @p43, @p44, @p45, @p46, @p47, @p48, @p49, @p50, @p51, @p52, @p53, @p54, @p55, @p56, @p57, 1),
(@p58, @p59, @p60, @p61, @p62, @p63, @p64, @p65, @p66, @p67, @p68, @p69, @p70, @p71, @p72, @p73, @p74, @p75, @p76, @p77, @p78, @p79, @p80, @p81, @p82, @p83, @p84, 2),
(@p85, @p86, @p87, @p88, @p89, @p90, @p91, @p92, @p93, @p94, @p95, @p96, @p97, @p98, @p99, @p100, @p101, @p102, @p103, @p104, @p105, @p106, @p107, @p108, @p109, @p110, @p111, 3)) AS i ([ComprehensiveIncomeNetOfTax], [CostOfRevenue], [CostofGoodsAndServicesSold], [Depreciation], [DepreciationAndAmortization], [Ebit], [Ebitda], [FiscalDateEnding], [GrossProfit], [IncomeBeforeTax], [IncomeTaxExpense], [InterestAndDebtExpense], [InterestExpense], [InterestIncome], [InvestmentIncomeNet], [NetIncome], [NetIncomeFromContinuingOperations], [NetInterestIncome], [NonInterestIncome], [OperatingExpenses], [OperatingIncome], [OtherNonOperatingIncome], [ReportedCurrency], [ResearchAndDevelopment], [SellingGeneralAndAdministrative], [Symbol], [TotalRevenue], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([ComprehensiveIncomeNetOfTax], [CostOfRevenue], [CostofGoodsAndServicesSold], [Depreciation], [DepreciationAndAmortization], [Ebit], [Ebitda], [FiscalDateEnding], [GrossProfit], [IncomeBeforeTax], [IncomeTaxExpense], [InterestAndDebtExpense], [InterestExpense], [InterestIncome], [InvestmentIncomeNet], [NetIncome], [NetIncomeFromContinuingOperations], [NetInterestIncome], [NonInterestIncome], [OperatingExpenses], [OperatingIncome], [OtherNonOperatingIncome], [ReportedCurrency], [ResearchAndDevelopment], [SellingGeneralAndAdministrative], [Symbol], [TotalRevenue])
VALUES (i.[ComprehensiveIncomeNetOfTax], i.[CostOfRevenue], i.[CostofGoodsAndServicesSold], i.[Depreciation], i.[DepreciationAndAmortization], i.[Ebit], i.[Ebitda], i.[FiscalDateEnding], i.[GrossProfit], i.[IncomeBeforeTax], i.[IncomeTaxExpense], i.[InterestAndDebtExpense], i.[InterestExpense], i.[InterestIncome], i.[InvestmentIncomeNet], i.[NetIncome], i.[NetIncomeFromContinuingOperations], i.[NetInterestIncome], i.[NonInterestIncome], i.[OperatingExpenses], i.[OperatingIncome], i.[OtherNonOperatingIncome], i.[ReportedCurrency], i.[ResearchAndDevelopment], i.[SellingGeneralAndAdministrative], i.[Symbol], i.[TotalRevenue])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted0;

SELECT [i].[Id] FROM @inserted0 i
ORDER BY [i].[_Position];

DECLARE @inserted4 TABLE ([Id] int, [_Position] [int]);
MERGE [IncomeStatementQuarterlyReport] USING (
VALUES (@p112, @p113, @p114, @p115, @p116, @p117, @p118, @p119, @p120, @p121, @p122, @p123, @p124, @p125, @p126, @p127, @p128, @p129, @p130, @p131, @p132, @p133, @p134, @p135, @p136, @p137, @p138, 0),
(@p139, @p140, @p141, @p142, @p143, @p144, @p145, @p146, @p147, @p148, @p149, @p150, @p151, @p152, @p153, @p154, @p155, @p156, @p157, @p158, @p159, @p160, @p161, @p162, @p163, @p164, @p165, 1),
(@p166, @p167, @p168, @p169, @p170, @p171, @p172, @p173, @p174, @p175, @p176, @p177, @p178, @p179, @p180, @p181, @p182, @p183, @p184, @p185, @p186, @p187, @p188, @p189, @p190, @p191, @p192, 2),
(@p193, @p194, @p195, @p196, @p197, @p198, @p199, @p200, @p201, @p202, @p203, @p204, @p205, @p206, @p207, @p208, @p209, @p210, @p211, @p212, @p213, @p214, @p215, @p216, @p217, @p218, @p219, 3),
(@p220, @p221, @p222, @p223, @p224, @p225, @p226, @p227, @p228, @p229, @p230, @p231, @p232, @p233, @p234, @p235, @p236, @p237, @p238, @p239, @p240, @p241, @p242, @p243, @p244, @p245, @p246, 4),
(@p247, @p248, @p249, @p250, @p251, @p252, @p253, @p254, @p255, @p256, @p257, @p258, @p259, @p260, @p261, @p262, @p263, @p264, @p265, @p266, @p267, @p268, @p269, @p270, @p271, @p272, @p273, 5),
(@p274, @p275, @p276, @p277, @p278, @p279, @p280, @p281, @p282, @p283, @p284, @p285, @p286, @p287, @p288, @p289, @p290, @p291, @p292, @p293, @p294, @p295, @p296, @p297, @p298, @p299, @p300, 6),
(@p301, @p302, @p303, @p304, @p305, @p306, @p307, @p308, @p309, @p310, @p311, @p312, @p313, @p314, @p315, @p316, @p317, @p318, @p319, @p320, @p321, @p322, @p323, @p324, @p325, @p326, @p327, 7),
(@p328, @p329, @p330, @p331, @p332, @p333, @p334, @p335, @p336, @p337, @p338, @p339, @p340, @p341, @p342, @p343, @p344, @p345, @p346, @p347, @p348, @p349, @p350, @p351, @p352, @p353, @p354, 8),
(@p355, @p356, @p357, @p358, @p359, @p360, @p361, @p362, @p363, @p364, @p365, @p366, @p367, @p368, @p369, @p370, @p371, @p372, @p373, @p374, @p375, @p376, @p377, @p378, @p379, @p380, @p381, 9),
(@p382, @p383, @p384, @p385, @p386, @p387, @p388, @p389, @p390, @p391, @p392, @p393, @p394, @p395, @p396, @p397, @p398, @p399, @p400, @p401, @p402, @p403, @p404, @p405, @p406, @p407, @p408, 10),
(@p409, @p410, @p411, @p412, @p413, @p414, @p415, @p416, @p417, @p418, @p419, @p420, @p421, @p422, @p423, @p424, @p425, @p426, @p427, @p428, @p429, @p430, @p431, @p432, @p433, @p434, @p435, 11),
(@p436, @p437, @p438, @p439, @p440, @p441, @p442, @p443, @p444, @p445, @p446, @p447, @p448, @p449, @p450, @p451, @p452, @p453, @p454, @p455, @p456, @p457, @p458, @p459, @p460, @p461, @p462, 12),
(@p463, @p464, @p465, @p466, @p467, @p468, @p469, @p470, @p471, @p472, @p473, @p474, @p475, @p476, @p477, @p478, @p479, @p480, @p481, @p482, @p483, @p484, @p485, @p486, @p487, @p488, @p489, 13),
(@p490, @p491, @p492, @p493, @p494, @p495, @p496, @p497, @p498, @p499, @p500, @p501, @p502, @p503, @p504, @p505, @p506, @p507, @p508, @p509, @p510, @p511, @p512, @p513, @p514, @p515, @p516, 14),
(@p517, @p518, @p519, @p520, @p521, @p522, @p523, @p524, @p525, @p526, @p527, @p528, @p529, @p530, @p531, @p532, @p533, @p534, @p535, @p536, @p537, @p538, @p539, @p540, @p541, @p542, @p543, 15),
(@p544, @p545, @p546, @p547, @p548, @p549, @p550, @p551, @p552, @p553, @p554, @p555, @p556, @p557, @p558, @p559, @p560, @p561, @p562, @p563, @p564, @p565, @p566, @p567, @p568, @p569, @p570, 16),
(@p571, @p572, @p573, @p574, @p575, @p576, @p577, @p578, @p579, @p580, @p581, @p582, @p583, @p584, @p585, @p586, @p587, @p588, @p589, @p590, @p591, @p592, @p593, @p594, @p595, @p596, @p597, 17),
(@p598, @p599, @p600, @p601, @p602, @p603, @p604, @p605, @p606, @p607, @p608, @p609, @p610, @p611, @p612, @p613, @p614, @p615, @p616, @p617, @p618, @p619, @p620, @p621, @p622, @p623, @p624, 18)) AS i ([ComprehensiveIncomeNetOfTax], [CostOfRevenue], [CostofGoodsAndServicesSold], [Depreciation], [DepreciationAndAmortization], [Ebit], [Ebitda], [FiscalDateEnding], [GrossProfit], [IncomeBeforeTax], [IncomeTaxExpense], [InterestAndDebtExpense], [InterestExpense], [InterestIncome], [InvestmentIncomeNet], [NetIncome], [NetIncomeFromContinuingOperations], [NetInterestIncome], [NonInterestIncome], [OperatingExpenses], [OperatingIncome], [OtherNonOperatingIncome], [ReportedCurrency], [ResearchAndDevelopment], [SellingGeneralAndAdministrative], [Symbol], [TotalRevenue], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([ComprehensiveIncomeNetOfTax], [CostOfRevenue], [CostofGoodsAndServicesSold], [Depreciation], [DepreciationAndAmortization], [Ebit], [Ebitda], [FiscalDateEnding], [GrossProfit], [IncomeBeforeTax], [IncomeTaxExpense], [InterestAndDebtExpense], [InterestExpense], [InterestIncome], [InvestmentIncomeNet], [NetIncome], [NetIncomeFromContinuingOperations], [NetInterestIncome], [NonInterestIncome], [OperatingExpenses], [OperatingIncome], [OtherNonOperatingIncome], [ReportedCurrency], [ResearchAndDevelopment], [SellingGeneralAndAdministrative], [Symbol], [TotalRevenue])
VALUES (i.[ComprehensiveIncomeNetOfTax], i.[CostOfRevenue], i.[CostofGoodsAndServicesSold], i.[Depreciation], i.[DepreciationAndAmortization], i.[Ebit], i.[Ebitda], i.[FiscalDateEnding], i.[GrossProfit], i.[IncomeBeforeTax], i.[IncomeTaxExpense], i.[InterestAndDebtExpense], i.[InterestExpense], i.[InterestIncome], i.[InvestmentIncomeNet], i.[NetIncome], i.[NetIncomeFromContinuingOperations], i.[NetInterestIncome], i.[NonInterestIncome], i.[OperatingExpenses], i.[OperatingIncome], i.[OtherNonOperatingIncome], i.[ReportedCurrency], i.[ResearchAndDevelopment], i.[SellingGeneralAndAdministrative], i.[Symbol], i.[TotalRevenue])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted4;

SELECT [i].[Id] FROM @inserted4 i
ORDER BY [i].[_Position];
2022-05-12 01:15:19.279 +03:00 [INF] AddOrUpdate run successful.
2022-05-12 01:15:22.989 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.BalanceSheet with Symbol BFI
2022-05-12 01:15:22.990 +03:00 [INF] Generating URI for BALANCE_SHEET with params: symbol: BFI
2022-05-12 01:15:22.991 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BFI
2022-05-12 01:15:22.991 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BFI".
2022-05-12 01:15:24.014 +03:00 [INF] Response has success status code
2022-05-12 01:15:24.015 +03:00 [INF] Trying to deserialize response.
2022-05-12 01:15:24.016 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 01:15:24.025 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__symbol_0
2022-05-12 01:15:24.026 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.BalanceSheet.
2022-05-12 01:15:24.034 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [b].[Symbol], [b].[ExistInApi], [b].[LastApiRefresh], [b].[LastLocalRefresh]
FROM [BalanceSheets] AS [b]
WHERE [b].[Symbol] = @__entity_Symbol_0
2022-05-12 01:15:24.035 +03:00 [INF] Entity does not exist. Adding to DB.
2022-05-12 01:15:24.047 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = Boolean), @p2='?' (DbType = DateTime2), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [BalanceSheets] ([Symbol], [ExistInApi], [LastApiRefresh], [LastLocalRefresh])
VALUES (@p0, @p1, @p2, @p3);
2022-05-12 01:15:24.103 +03:00 [INF] Executed DbCommand (54ms) [Parameters=[@p4='?' (DbType = Int64), @p5='?' (DbType = Double), @p6='?' (DbType = Double), @p7='?' (DbType = Double), @p8='?' (DbType = Double), @p9='?' (DbType = Int64), @p10='?' (DbType = Int64), @p11='?' (DbType = Int64), @p12='?' (DbType = Double), @p13='?' (DbType = Int64), @p14='?' (DbType = Int64), @p15='?' (DbType = DateTime2), @p16='?' (DbType = Double), @p17='?' (DbType = Double), @p18='?' (DbType = Double), @p19='?' (DbType = Double), @p20='?' (DbType = Int64), @p21='?' (DbType = Double), @p22='?' (DbType = Int64), @p23='?' (DbType = Double), @p24='?' (DbType = Double), @p25='?' (DbType = Double), @p26='?' (DbType = Double), @p27='?' (DbType = Double), @p28='?' (DbType = Int64), @p29='?' (Size = 4000), @p30='?' (DbType = Double), @p31='?' (DbType = Double), @p32='?' (DbType = Double), @p33='?' (DbType = Double), @p34='?' (Size = 450), @p35='?' (DbType = Double), @p36='?' (DbType = Double), @p37='?' (DbType = Double), @p38='?' (DbType = Double), @p39='?' (DbType = Double), @p40='?' (DbType = Double), @p41='?' (DbType = Double), @p42='?' (DbType = Double), @p43='?' (DbType = Int64), @p44='?' (DbType = Double), @p45='?' (DbType = Double), @p46='?' (DbType = Double), @p47='?' (DbType = Double), @p48='?' (DbType = Int64), @p49='?' (DbType = Int64), @p50='?' (DbType = Int64), @p51='?' (DbType = Double), @p52='?' (DbType = Int64), @p53='?' (DbType = Int64), @p54='?' (DbType = DateTime2), @p55='?' (DbType = Double), @p56='?' (DbType = Double), @p57='?' (DbType = Double), @p58='?' (DbType = Double), @p59='?' (DbType = Int64), @p60='?' (DbType = Double), @p61='?' (DbType = Int64), @p62='?' (DbType = Double), @p63='?' (DbType = Double), @p64='?' (DbType = Double), @p65='?' (DbType = Double), @p66='?' (DbType = Double), @p67='?' (DbType = Int64), @p68='?' (Size = 4000), @p69='?' (DbType = Double), @p70='?' (DbType = Double), @p71='?' (DbType = Double), @p72='?' (DbType = Double), @p73='?' (Size = 450), @p74='?' (DbType = Double), @p75='?' (DbType = Double), @p76='?' (DbType = Double), @p77='?' (DbType = Double), @p78='?' (DbType = Double), @p79='?' (DbType = Double), @p80='?' (DbType = Double), @p81='?' (DbType = Double), @p82='?' (DbType = Int64), @p83='?' (DbType = Double), @p84='?' (DbType = Double), @p85='?' (DbType = Double), @p86='?' (DbType = Double), @p87='?' (DbType = Int64), @p88='?' (DbType = Int64), @p89='?' (DbType = Int64), @p90='?' (DbType = Double), @p91='?' (DbType = Int64), @p92='?' (DbType = Int64), @p93='?' (DbType = DateTime2), @p94='?' (DbType = Double), @p95='?' (DbType = Double), @p96='?' (DbType = Double), @p97='?' (DbType = Double), @p98='?' (DbType = Int64), @p99='?' (DbType = Double), @p100='?' (DbType = Int64), @p101='?' (DbType = Double), @p102='?' (DbType = Double), @p103='?' (DbType = Double), @p104='?' (DbType = Double), @p105='?' (DbType = Double), @p106='?' (DbType = Int64), @p107='?' (Size = 4000), @p108='?' (DbType = Double), @p109='?' (DbType = Double), @p110='?' (DbType = Double), @p111='?' (DbType = Double), @p112='?' (Size = 450), @p113='?' (DbType = Double), @p114='?' (DbType = Double), @p115='?' (DbType = Double), @p116='?' (DbType = Double), @p117='?' (DbType = Double), @p118='?' (DbType = Double), @p119='?' (DbType = Double), @p120='?' (DbType = Double), @p121='?' (DbType = Int64), @p122='?' (DbType = Double), @p123='?' (DbType = Double), @p124='?' (DbType = Double), @p125='?' (DbType = Double), @p126='?' (DbType = Int64), @p127='?' (DbType = Int64), @p128='?' (DbType = Int64), @p129='?' (DbType = Double), @p130='?' (DbType = Int64), @p131='?' (DbType = Int64), @p132='?' (DbType = DateTime2), @p133='?' (DbType = Double), @p134='?' (DbType = Double), @p135='?' (DbType = Double), @p136='?' (DbType = Double), @p137='?' (DbType = Int64), @p138='?' (DbType = Double), @p139='?' (DbType = Int64), @p140='?' (DbType = Double), @p141='?' (DbType = Double), @p142='?' (DbType = Double), @p143='?' (DbType = Double), @p144='?' (DbType = Double), @p145='?' (DbType = Int64), @p146='?' (Size = 4000), @p147='?' (DbType = Double), @p148='?' (DbType = Double), @p149='?' (DbType = Double), @p150='?' (DbType = Double), @p151='?' (Size = 450), @p152='?' (DbType = Double), @p153='?' (DbType = Double), @p154='?' (DbType = Double), @p155='?' (DbType = Double), @p156='?' (DbType = Double), @p157='?' (DbType = Double), @p158='?' (DbType = Double), @p159='?' (DbType = Double), @p160='?' (DbType = Int64), @p161='?' (DbType = Double), @p162='?' (DbType = Double), @p163='?' (DbType = Double), @p164='?' (DbType = Double), @p165='?' (DbType = Int64), @p166='?' (DbType = Int64), @p167='?' (DbType = Int64), @p168='?' (DbType = Double), @p169='?' (DbType = Int64), @p170='?' (DbType = Int64), @p171='?' (DbType = DateTime2), @p172='?' (DbType = Double), @p173='?' (DbType = Double), @p174='?' (DbType = Double), @p175='?' (DbType = Double), @p176='?' (DbType = Int64), @p177='?' (DbType = Double), @p178='?' (DbType = Int64), @p179='?' (DbType = Double), @p180='?' (DbType = Double), @p181='?' (DbType = Double), @p182='?' (DbType = Double), @p183='?' (DbType = Double), @p184='?' (DbType = Int64), @p185='?' (Size = 4000), @p186='?' (DbType = Double), @p187='?' (DbType = Double), @p188='?' (DbType = Double), @p189='?' (DbType = Double), @p190='?' (Size = 450), @p191='?' (DbType = Double), @p192='?' (DbType = Double), @p193='?' (DbType = Double), @p194='?' (DbType = Double), @p195='?' (DbType = Double), @p196='?' (DbType = Double), @p197='?' (DbType = Double), @p198='?' (DbType = Double), @p199='?' (DbType = Int64), @p200='?' (DbType = Double), @p201='?' (DbType = Double), @p202='?' (DbType = Double), @p203='?' (DbType = Double), @p204='?' (DbType = Int64), @p205='?' (DbType = Int64), @p206='?' (DbType = Int64), @p207='?' (DbType = Double), @p208='?' (DbType = Int64), @p209='?' (DbType = Int64), @p210='?' (DbType = DateTime2), @p211='?' (DbType = Double), @p212='?' (DbType = Double), @p213='?' (DbType = Double), @p214='?' (DbType = Double), @p215='?' (DbType = Int64), @p216='?' (DbType = Double), @p217='?' (DbType = Int64), @p218='?' (DbType = Double), @p219='?' (DbType = Double), @p220='?' (DbType = Double), @p221='?' (DbType = Double), @p222='?' (DbType = Double), @p223='?' (DbType = Int64), @p224='?' (Size = 4000), @p225='?' (DbType = Double), @p226='?' (DbType = Double), @p227='?' (DbType = Double), @p228='?' (DbType = Double), @p229='?' (Size = 450), @p230='?' (DbType = Double), @p231='?' (DbType = Double), @p232='?' (DbType = Double), @p233='?' (DbType = Double), @p234='?' (DbType = Double), @p235='?' (DbType = Double), @p236='?' (DbType = Double), @p237='?' (DbType = Double), @p238='?' (DbType = Int64), @p239='?' (DbType = Double), @p240='?' (DbType = Double), @p241='?' (DbType = Double), @p242='?' (DbType = Double), @p243='?' (DbType = Int64), @p244='?' (DbType = Int64), @p245='?' (DbType = Int64), @p246='?' (DbType = Double), @p247='?' (DbType = Int64), @p248='?' (DbType = Int64), @p249='?' (DbType = DateTime2), @p250='?' (DbType = Double), @p251='?' (DbType = Double), @p252='?' (DbType = Double), @p253='?' (DbType = Double), @p254='?' (DbType = Int64), @p255='?' (DbType = Double), @p256='?' (DbType = Int64), @p257='?' (DbType = Double), @p258='?' (DbType = Double), @p259='?' (DbType = Double), @p260='?' (DbType = Double), @p261='?' (DbType = Double), @p262='?' (DbType = Int64), @p263='?' (Size = 4000), @p264='?' (DbType = Double), @p265='?' (DbType = Double), @p266='?' (DbType = Double), @p267='?' (DbType = Double), @p268='?' (Size = 450), @p269='?' (DbType = Double), @p270='?' (DbType = Double), @p271='?' (DbType = Double), @p272='?' (DbType = Double), @p273='?' (DbType = Double), @p274='?' (DbType = Double), @p275='?' (DbType = Double), @p276='?' (DbType = Double), @p277='?' (DbType = Int64), @p278='?' (DbType = Double), @p279='?' (DbType = Double), @p280='?' (DbType = Double), @p281='?' (DbType = Double), @p282='?' (DbType = Int64), @p283='?' (DbType = Int64), @p284='?' (DbType = Int64), @p285='?' (DbType = Double), @p286='?' (DbType = Int64), @p287='?' (DbType = Int64), @p288='?' (DbType = DateTime2), @p289='?' (DbType = Double), @p290='?' (DbType = Double), @p291='?' (DbType = Double), @p292='?' (DbType = Double), @p293='?' (DbType = Int64), @p294='?' (DbType = Double), @p295='?' (DbType = Int64), @p296='?' (DbType = Double), @p297='?' (DbType = Double), @p298='?' (DbType = Double), @p299='?' (DbType = Double), @p300='?' (DbType = Double), @p301='?' (DbType = Int64), @p302='?' (Size = 4000), @p303='?' (DbType = Double), @p304='?' (DbType = Double), @p305='?' (DbType = Double), @p306='?' (DbType = Double), @p307='?' (Size = 450), @p308='?' (DbType = Double), @p309='?' (DbType = Double), @p310='?' (DbType = Double), @p311='?' (DbType = Double), @p312='?' (DbType = Double), @p313='?' (DbType = Double), @p314='?' (DbType = Double), @p315='?' (DbType = Double), @p316='?' (DbType = Int64), @p317='?' (DbType = Double), @p318='?' (DbType = Double), @p319='?' (DbType = Double), @p320='?' (DbType = Double), @p321='?' (DbType = Int64), @p322='?' (DbType = Int64), @p323='?' (DbType = Int64), @p324='?' (DbType = Double), @p325='?' (DbType = Int64), @p326='?' (DbType = Int64), @p327='?' (DbType = DateTime2), @p328='?' (DbType = Double), @p329='?' (DbType = Double), @p330='?' (DbType = Double), @p331='?' (DbType = Double), @p332='?' (DbType = Int64), @p333='?' (DbType = Double), @p334='?' (DbType = Int64), @p335='?' (DbType = Double), @p336='?' (DbType = Double), @p337='?' (DbType = Double), @p338='?' (DbType = Double), @p339='?' (DbType = Double), @p340='?' (DbType = Int64), @p341='?' (Size = 4000), @p342='?' (DbType = Double), @p343='?' (DbType = Double), @p344='?' (DbType = Double), @p345='?' (DbType = Double), @p346='?' (Size = 450), @p347='?' (DbType = Double), @p348='?' (DbType = Double), @p349='?' (DbType = Double), @p350='?' (DbType = Double), @p351='?' (DbType = Double), @p352='?' (DbType = Double), @p353='?' (DbType = Double), @p354='?' (DbType = Double), @p355='?' (DbType = Int64), @p356='?' (DbType = Double), @p357='?' (DbType = Double), @p358='?' (DbType = Double), @p359='?' (DbType = Double), @p360='?' (DbType = Int64), @p361='?' (DbType = Int64), @p362='?' (DbType = Int64), @p363='?' (DbType = Double), @p364='?' (DbType = Int64), @p365='?' (DbType = Int64), @p366='?' (DbType = DateTime2), @p367='?' (DbType = Double), @p368='?' (DbType = Double), @p369='?' (DbType = Double), @p370='?' (DbType = Double), @p371='?' (DbType = Int64), @p372='?' (DbType = Double), @p373='?' (DbType = Int64), @p374='?' (DbType = Double), @p375='?' (DbType = Double), @p376='?' (DbType = Double), @p377='?' (DbType = Double), @p378='?' (DbType = Double), @p379='?' (DbType = Int64), @p380='?' (Size = 4000), @p381='?' (DbType = Double), @p382='?' (DbType = Double), @p383='?' (DbType = Double), @p384='?' (DbType = Double), @p385='?' (Size = 450), @p386='?' (DbType = Double), @p387='?' (DbType = Double), @p388='?' (DbType = Double), @p389='?' (DbType = Double), @p390='?' (DbType = Double), @p391='?' (DbType = Double), @p392='?' (DbType = Double), @p393='?' (DbType = Double), @p394='?' (DbType = Int64), @p395='?' (DbType = Double), @p396='?' (DbType = Double), @p397='?' (DbType = Double), @p398='?' (DbType = Double), @p399='?' (DbType = Int64), @p400='?' (DbType = Int64), @p401='?' (DbType = Int64), @p402='?' (DbType = Double), @p403='?' (DbType = Int64), @p404='?' (DbType = Int64), @p405='?' (DbType = DateTime2), @p406='?' (DbType = Double), @p407='?' (DbType = Double), @p408='?' (DbType = Double), @p409='?' (DbType = Double), @p410='?' (DbType = Int64), @p411='?' (DbType = Double), @p412='?' (DbType = Int64), @p413='?' (DbType = Double), @p414='?' (DbType = Double), @p415='?' (DbType = Double), @p416='?' (DbType = Double), @p417='?' (DbType = Double), @p418='?' (DbType = Int64), @p419='?' (Size = 4000), @p420='?' (DbType = Double), @p421='?' (DbType = Double), @p422='?' (DbType = Double), @p423='?' (DbType = Double), @p424='?' (Size = 450), @p425='?' (DbType = Double), @p426='?' (DbType = Double), @p427='?' (DbType = Double), @p428='?' (DbType = Double), @p429='?' (DbType = Double), @p430='?' (DbType = Double), @p431='?' (DbType = Double), @p432='?' (DbType = Double), @p433='?' (DbType = Int64), @p434='?' (DbType = Double), @p435='?' (DbType = Double), @p436='?' (DbType = Double), @p437='?' (DbType = Double), @p438='?' (DbType = Int64), @p439='?' (DbType = Int64), @p440='?' (DbType = Int64), @p441='?' (DbType = Double), @p442='?' (DbType = Int64), @p443='?' (DbType = Int64), @p444='?' (DbType = DateTime2), @p445='?' (DbType = Double), @p446='?' (DbType = Double), @p447='?' (DbType = Double), @p448='?' (DbType = Double), @p449='?' (DbType = Int64), @p450='?' (DbType = Double), @p451='?' (DbType = Int64), @p452='?' (DbType = Double), @p453='?' (DbType = Double), @p454='?' (DbType = Double), @p455='?' (DbType = Double), @p456='?' (DbType = Double), @p457='?' (DbType = Int64), @p458='?' (Size = 4000), @p459='?' (DbType = Double), @p460='?' (DbType = Double), @p461='?' (DbType = Double), @p462='?' (DbType = Double), @p463='?' (Size = 450), @p464='?' (DbType = Double), @p465='?' (DbType = Double), @p466='?' (DbType = Double), @p467='?' (DbType = Double), @p468='?' (DbType = Double), @p469='?' (DbType = Double), @p470='?' (DbType = Double), @p471='?' (DbType = Double), @p472='?' (DbType = Int64), @p473='?' (DbType = Double), @p474='?' (DbType = Double), @p475='?' (DbType = Double), @p476='?' (DbType = Double), @p477='?' (DbType = Int64), @p478='?' (DbType = Int64), @p479='?' (DbType = Int64), @p480='?' (DbType = Double), @p481='?' (DbType = Int64), @p482='?' (DbType = Int64), @p483='?' (DbType = DateTime2), @p484='?' (DbType = Double), @p485='?' (DbType = Double), @p486='?' (DbType = Double), @p487='?' (DbType = Double), @p488='?' (DbType = Int64), @p489='?' (DbType = Double), @p490='?' (DbType = Int64), @p491='?' (DbType = Double), @p492='?' (DbType = Double), @p493='?' (DbType = Double), @p494='?' (DbType = Double), @p495='?' (DbType = Double), @p496='?' (DbType = Int64), @p497='?' (Size = 4000), @p498='?' (DbType = Double), @p499='?' (DbType = Double), @p500='?' (DbType = Double), @p501='?' (DbType = Double), @p502='?' (Size = 450), @p503='?' (DbType = Double), @p504='?' (DbType = Double), @p505='?' (DbType = Double), @p506='?' (DbType = Double), @p507='?' (DbType = Double), @p508='?' (DbType = Double), @p509='?' (DbType = Double), @p510='?' (DbType = Double), @p511='?' (DbType = Int64), @p512='?' (DbType = Double), @p513='?' (DbType = Double), @p514='?' (DbType = Double), @p515='?' (DbType = Double), @p516='?' (DbType = Int64), @p517='?' (DbType = Int64), @p518='?' (DbType = Int64), @p519='?' (DbType = Double), @p520='?' (DbType = Int64), @p521='?' (DbType = Int64), @p522='?' (DbType = DateTime2), @p523='?' (DbType = Double), @p524='?' (DbType = Double), @p525='?' (DbType = Double), @p526='?' (DbType = Double), @p527='?' (DbType = Int64), @p528='?' (DbType = Double), @p529='?' (DbType = Int64), @p530='?' (DbType = Double), @p531='?' (DbType = Double), @p532='?' (DbType = Double), @p533='?' (DbType = Double), @p534='?' (DbType = Double), @p535='?' (DbType = Int64), @p536='?' (Size = 4000), @p537='?' (DbType = Double), @p538='?' (DbType = Double), @p539='?' (DbType = Double), @p540='?' (DbType = Double), @p541='?' (Size = 450), @p542='?' (DbType = Double), @p543='?' (DbType = Double), @p544='?' (DbType = Double), @p545='?' (DbType = Double), @p546='?' (DbType = Double), @p547='?' (DbType = Double), @p548='?' (DbType = Double), @p549='?' (DbType = Double), @p550='?' (DbType = Int64), @p551='?' (DbType = Double), @p552='?' (DbType = Double), @p553='?' (DbType = Double), @p554='?' (DbType = Double), @p555='?' (DbType = Int64), @p556='?' (DbType = Int64), @p557='?' (DbType = Int64), @p558='?' (DbType = Double), @p559='?' (DbType = Int64), @p560='?' (DbType = Int64), @p561='?' (DbType = DateTime2), @p562='?' (DbType = Double), @p563='?' (DbType = Double), @p564='?' (DbType = Double), @p565='?' (DbType = Double), @p566='?' (DbType = Int64), @p567='?' (DbType = Double), @p568='?' (DbType = Int64), @p569='?' (DbType = Double), @p570='?' (DbType = Double), @p571='?' (DbType = Double), @p572='?' (DbType = Double), @p573='?' (DbType = Double), @p574='?' (DbType = Int64), @p575='?' (Size = 4000), @p576='?' (DbType = Double), @p577='?' (DbType = Double), @p578='?' (DbType = Double), @p579='?' (DbType = Double), @p580='?' (Size = 450), @p581='?' (DbType = Double), @p582='?' (DbType = Double), @p583='?' (DbType = Double), @p584='?' (DbType = Double), @p585='?' (DbType = Double), @p586='?' (DbType = Double), @p587='?' (DbType = Double), @p588='?' (DbType = Double), @p589='?' (DbType = Int64), @p590='?' (DbType = Double), @p591='?' (DbType = Double), @p592='?' (DbType = Double), @p593='?' (DbType = Double), @p594='?' (DbType = Int64), @p595='?' (DbType = Int64), @p596='?' (DbType = Int64), @p597='?' (DbType = Double), @p598='?' (DbType = Int64), @p599='?' (DbType = Int64), @p600='?' (DbType = DateTime2), @p601='?' (DbType = Double), @p602='?' (DbType = Double), @p603='?' (DbType = Double), @p604='?' (DbType = Double), @p605='?' (DbType = Int64), @p606='?' (DbType = Double), @p607='?' (DbType = Int64), @p608='?' (DbType = Double), @p609='?' (DbType = Double), @p610='?' (DbType = Double), @p611='?' (DbType = Double), @p612='?' (DbType = Double), @p613='?' (DbType = Int64), @p614='?' (Size = 4000), @p615='?' (DbType = Double), @p616='?' (DbType = Double), @p617='?' (DbType = Double), @p618='?' (DbType = Double), @p619='?' (Size = 450), @p620='?' (DbType = Double), @p621='?' (DbType = Double), @p622='?' (DbType = Double), @p623='?' (DbType = Double), @p624='?' (DbType = Double), @p625='?' (DbType = Double), @p626='?' (DbType = Double), @p627='?' (DbType = Double), @p628='?' (DbType = Int64), @p629='?' (DbType = Double), @p630='?' (DbType = Double), @p631='?' (DbType = Double), @p632='?' (DbType = Double), @p633='?' (DbType = Int64), @p634='?' (DbType = Int64), @p635='?' (DbType = Int64), @p636='?' (DbType = Double), @p637='?' (DbType = Int64), @p638='?' (DbType = Int64), @p639='?' (DbType = DateTime2), @p640='?' (DbType = Double), @p641='?' (DbType = Double), @p642='?' (DbType = Double), @p643='?' (DbType = Double), @p644='?' (DbType = Int64), @p645='?' (DbType = Double), @p646='?' (DbType = Int64), @p647='?' (DbType = Double), @p648='?' (DbType = Double), @p649='?' (DbType = Double), @p650='?' (DbType = Double), @p651='?' (DbType = Double), @p652='?' (DbType = Int64), @p653='?' (Size = 4000), @p654='?' (DbType = Double), @p655='?' (DbType = Double), @p656='?' (DbType = Double), @p657='?' (DbType = Double), @p658='?' (Size = 450), @p659='?' (DbType = Double), @p660='?' (DbType = Double), @p661='?' (DbType = Double), @p662='?' (DbType = Double), @p663='?' (DbType = Double), @p664='?' (DbType = Double), @p665='?' (DbType = Double), @p666='?' (DbType = Double), @p667='?' (DbType = Int64), @p668='?' (DbType = Double), @p669='?' (DbType = Double), @p670='?' (DbType = Double), @p671='?' (DbType = Double), @p672='?' (DbType = Int64), @p673='?' (DbType = Int64), @p674='?' (DbType = Int64), @p675='?' (DbType = Double), @p676='?' (DbType = Int64), @p677='?' (DbType = Int64), @p678='?' (DbType = DateTime2), @p679='?' (DbType = Double), @p680='?' (DbType = Double), @p681='?' (DbType = Double), @p682='?' (DbType = Double), @p683='?' (DbType = Int64), @p684='?' (DbType = Double), @p685='?' (DbType = Int64), @p686='?' (DbType = Double), @p687='?' (DbType = Double), @p688='?' (DbType = Double), @p689='?' (DbType = Double), @p690='?' (DbType = Double), @p691='?' (DbType = Int64), @p692='?' (Size = 4000), @p693='?' (DbType = Double), @p694='?' (DbType = Double), @p695='?' (DbType = Double), @p696='?' (DbType = Double), @p697='?' (Size = 450), @p698='?' (DbType = Double), @p699='?' (DbType = Double), @p700='?' (DbType = Double), @p701='?' (DbType = Double), @p702='?' (DbType = Double), @p703='?' (DbType = Double), @p704='?' (DbType = Double), @p705='?' (DbType = Double), @p706='?' (DbType = Int64), @p707='?' (DbType = Double), @p708='?' (DbType = Double), @p709='?' (DbType = Double), @p710='?' (DbType = Double), @p711='?' (DbType = Int64), @p712='?' (DbType = Int64), @p713='?' (DbType = Int64), @p714='?' (DbType = Double), @p715='?' (DbType = Int64), @p716='?' (DbType = Int64), @p717='?' (DbType = DateTime2), @p718='?' (DbType = Double), @p719='?' (DbType = Double), @p720='?' (DbType = Double), @p721='?' (DbType = Double), @p722='?' (DbType = Int64), @p723='?' (DbType = Double), @p724='?' (DbType = Int64), @p725='?' (DbType = Double), @p726='?' (DbType = Double), @p727='?' (DbType = Double), @p728='?' (DbType = Double), @p729='?' (DbType = Double), @p730='?' (DbType = Int64), @p731='?' (Size = 4000), @p732='?' (DbType = Double), @p733='?' (DbType = Double), @p734='?' (DbType = Double), @p735='?' (DbType = Double), @p736='?' (Size = 450), @p737='?' (DbType = Double), @p738='?' (DbType = Double), @p739='?' (DbType = Double), @p740='?' (DbType = Double), @p741='?' (DbType = Double), @p742='?' (DbType = Double), @p743='?' (DbType = Double), @p744='?' (DbType = Double), @p745='?' (DbType = Int64), @p746='?' (DbType = Double), @p747='?' (DbType = Double), @p748='?' (DbType = Double), @p749='?' (DbType = Double), @p750='?' (DbType = Int64), @p751='?' (DbType = Int64), @p752='?' (DbType = Int64), @p753='?' (DbType = Double), @p754='?' (DbType = Int64), @p755='?' (DbType = Int64), @p756='?' (DbType = DateTime2), @p757='?' (DbType = Double), @p758='?' (DbType = Double), @p759='?' (DbType = Double), @p760='?' (DbType = Double), @p761='?' (DbType = Int64), @p762='?' (DbType = Double), @p763='?' (DbType = Int64), @p764='?' (DbType = Double), @p765='?' (DbType = Double), @p766='?' (DbType = Double), @p767='?' (DbType = Double), @p768='?' (DbType = Double), @p769='?' (DbType = Int64), @p770='?' (Size = 4000), @p771='?' (DbType = Double), @p772='?' (DbType = Double), @p773='?' (DbType = Double), @p774='?' (DbType = Double), @p775='?' (Size = 450), @p776='?' (DbType = Double), @p777='?' (DbType = Double), @p778='?' (DbType = Double), @p779='?' (DbType = Double), @p780='?' (DbType = Double), @p781='?' (DbType = Double), @p782='?' (DbType = Double), @p783='?' (DbType = Double), @p784='?' (DbType = Int64), @p785='?' (DbType = Double), @p786='?' (DbType = Double), @p787='?' (DbType = Double), @p788='?' (DbType = Double), @p789='?' (DbType = Int64), @p790='?' (DbType = Int64), @p791='?' (DbType = Int64), @p792='?' (DbType = Double), @p793='?' (DbType = Int64), @p794='?' (DbType = Int64), @p795='?' (DbType = DateTime2), @p796='?' (DbType = Double), @p797='?' (DbType = Double), @p798='?' (DbType = Double), @p799='?' (DbType = Double), @p800='?' (DbType = Int64), @p801='?' (DbType = Double), @p802='?' (DbType = Int64), @p803='?' (DbType = Double), @p804='?' (DbType = Double), @p805='?' (DbType = Double), @p806='?' (DbType = Double), @p807='?' (DbType = Double), @p808='?' (DbType = Int64), @p809='?' (Size = 4000), @p810='?' (DbType = Double), @p811='?' (DbType = Double), @p812='?' (DbType = Double), @p813='?' (DbType = Double), @p814='?' (Size = 450), @p815='?' (DbType = Double), @p816='?' (DbType = Double), @p817='?' (DbType = Double), @p818='?' (DbType = Double), @p819='?' (DbType = Double), @p820='?' (DbType = Double), @p821='?' (DbType = Double), @p822='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
DECLARE @inserted0 TABLE ([Id] int, [_Position] [int]);
MERGE [BalanceSheetAnnualReport] USING (
VALUES (@p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21, @p22, @p23, @p24, @p25, @p26, @p27, @p28, @p29, @p30, @p31, @p32, @p33, @p34, @p35, @p36, @p37, @p38, @p39, @p40, @p41, @p42, 0),
(@p43, @p44, @p45, @p46, @p47, @p48, @p49, @p50, @p51, @p52, @p53, @p54, @p55, @p56, @p57, @p58, @p59, @p60, @p61, @p62, @p63, @p64, @p65, @p66, @p67, @p68, @p69, @p70, @p71, @p72, @p73, @p74, @p75, @p76, @p77, @p78, @p79, @p80, @p81, 1),
(@p82, @p83, @p84, @p85, @p86, @p87, @p88, @p89, @p90, @p91, @p92, @p93, @p94, @p95, @p96, @p97, @p98, @p99, @p100, @p101, @p102, @p103, @p104, @p105, @p106, @p107, @p108, @p109, @p110, @p111, @p112, @p113, @p114, @p115, @p116, @p117, @p118, @p119, @p120, 2),
(@p121, @p122, @p123, @p124, @p125, @p126, @p127, @p128, @p129, @p130, @p131, @p132, @p133, @p134, @p135, @p136, @p137, @p138, @p139, @p140, @p141, @p142, @p143, @p144, @p145, @p146, @p147, @p148, @p149, @p150, @p151, @p152, @p153, @p154, @p155, @p156, @p157, @p158, @p159, 3),
(@p160, @p161, @p162, @p163, @p164, @p165, @p166, @p167, @p168, @p169, @p170, @p171, @p172, @p173, @p174, @p175, @p176, @p177, @p178, @p179, @p180, @p181, @p182, @p183, @p184, @p185, @p186, @p187, @p188, @p189, @p190, @p191, @p192, @p193, @p194, @p195, @p196, @p197, @p198, 4)) AS i ([AccumulatedDepreciationAmortizationPPE], [CapitalLeaseObligations], [CashAndCashEquivalentsAtCarryingValue], [CashAndShortTermInvestments], [CommonStock], [CommonStockSharesOutstanding], [CurrentAccountsPayable], [CurrentDebt], [CurrentLongTermDebt], [CurrentNetReceivables], [DeferredRevenue], [FiscalDateEnding], [Goodwill], [IntangibleAssets], [IntangibleAssetsExcludingGoodwill], [Inventory], [Investments], [LongTermDebt], [LongTermDebtNoncurrent], [LongTermInvestments], [OtherCurrentAssets], [OtherCurrentLiabilities], [OtherNonCurrentAssets], [OtherNonCurrentLiabilities], [PropertyPlantEquipment], [ReportedCurrency], [RetainedEarnings], [ShortLongTermDebtTotal], [ShortTermDebt], [ShortTermInvestments], [Symbol], [TotalAssets], [TotalCurrentAssets], [TotalCurrentLiabilities], [TotalLiabilities], [TotalNonCurrentAssets], [TotalNonCurrentLiabilities], [TotalShareholderEquity], [TreasuryStock], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([AccumulatedDepreciationAmortizationPPE], [CapitalLeaseObligations], [CashAndCashEquivalentsAtCarryingValue], [CashAndShortTermInvestments], [CommonStock], [CommonStockSharesOutstanding], [CurrentAccountsPayable], [CurrentDebt], [CurrentLongTermDebt], [CurrentNetReceivables], [DeferredRevenue], [FiscalDateEnding], [Goodwill], [IntangibleAssets], [IntangibleAssetsExcludingGoodwill], [Inventory], [Investments], [LongTermDebt], [LongTermDebtNoncurrent], [LongTermInvestments], [OtherCurrentAssets], [OtherCurrentLiabilities], [OtherNonCurrentAssets], [OtherNonCurrentLiabilities], [PropertyPlantEquipment], [ReportedCurrency], [RetainedEarnings], [ShortLongTermDebtTotal], [ShortTermDebt], [ShortTermInvestments], [Symbol], [TotalAssets], [TotalCurrentAssets], [TotalCurrentLiabilities], [TotalLiabilities], [TotalNonCurrentAssets], [TotalNonCurrentLiabilities], [TotalShareholderEquity], [TreasuryStock])
VALUES (i.[AccumulatedDepreciationAmortizationPPE], i.[CapitalLeaseObligations], i.[CashAndCashEquivalentsAtCarryingValue], i.[CashAndShortTermInvestments], i.[CommonStock], i.[CommonStockSharesOutstanding], i.[CurrentAccountsPayable], i.[CurrentDebt], i.[CurrentLongTermDebt], i.[CurrentNetReceivables], i.[DeferredRevenue], i.[FiscalDateEnding], i.[Goodwill], i.[IntangibleAssets], i.[IntangibleAssetsExcludingGoodwill], i.[Inventory], i.[Investments], i.[LongTermDebt], i.[LongTermDebtNoncurrent], i.[LongTermInvestments], i.[OtherCurrentAssets], i.[OtherCurrentLiabilities], i.[OtherNonCurrentAssets], i.[OtherNonCurrentLiabilities], i.[PropertyPlantEquipment], i.[ReportedCurrency], i.[RetainedEarnings], i.[ShortLongTermDebtTotal], i.[ShortTermDebt], i.[ShortTermInvestments], i.[Symbol], i.[TotalAssets], i.[TotalCurrentAssets], i.[TotalCurrentLiabilities], i.[TotalLiabilities], i.[TotalNonCurrentAssets], i.[TotalNonCurrentLiabilities], i.[TotalShareholderEquity], i.[TreasuryStock])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted0;

SELECT [i].[Id] FROM @inserted0 i
ORDER BY [i].[_Position];

DECLARE @inserted5 TABLE ([Id] int, [_Position] [int]);
MERGE [BalanceSheetQuarterlyReports] USING (
VALUES (@p199, @p200, @p201, @p202, @p203, @p204, @p205, @p206, @p207, @p208, @p209, @p210, @p211, @p212, @p213, @p214, @p215, @p216, @p217, @p218, @p219, @p220, @p221, @p222, @p223, @p224, @p225, @p226, @p227, @p228, @p229, @p230, @p231, @p232, @p233, @p234, @p235, @p236, @p237, 0),
(@p238, @p239, @p240, @p241, @p242, @p243, @p244, @p245, @p246, @p247, @p248, @p249, @p250, @p251, @p252, @p253, @p254, @p255, @p256, @p257, @p258, @p259, @p260, @p261, @p262, @p263, @p264, @p265, @p266, @p267, @p268, @p269, @p270, @p271, @p272, @p273, @p274, @p275, @p276, 1),
(@p277, @p278, @p279, @p280, @p281, @p282, @p283, @p284, @p285, @p286, @p287, @p288, @p289, @p290, @p291, @p292, @p293, @p294, @p295, @p296, @p297, @p298, @p299, @p300, @p301, @p302, @p303, @p304, @p305, @p306, @p307, @p308, @p309, @p310, @p311, @p312, @p313, @p314, @p315, 2),
(@p316, @p317, @p318, @p319, @p320, @p321, @p322, @p323, @p324, @p325, @p326, @p327, @p328, @p329, @p330, @p331, @p332, @p333, @p334, @p335, @p336, @p337, @p338, @p339, @p340, @p341, @p342, @p343, @p344, @p345, @p346, @p347, @p348, @p349, @p350, @p351, @p352, @p353, @p354, 3),
(@p355, @p356, @p357, @p358, @p359, @p360, @p361, @p362, @p363, @p364, @p365, @p366, @p367, @p368, @p369, @p370, @p371, @p372, @p373, @p374, @p375, @p376, @p377, @p378, @p379, @p380, @p381, @p382, @p383, @p384, @p385, @p386, @p387, @p388, @p389, @p390, @p391, @p392, @p393, 4),
(@p394, @p395, @p396, @p397, @p398, @p399, @p400, @p401, @p402, @p403, @p404, @p405, @p406, @p407, @p408, @p409, @p410, @p411, @p412, @p413, @p414, @p415, @p416, @p417, @p418, @p419, @p420, @p421, @p422, @p423, @p424, @p425, @p426, @p427, @p428, @p429, @p430, @p431, @p432, 5),
(@p433, @p434, @p435, @p436, @p437, @p438, @p439, @p440, @p441, @p442, @p443, @p444, @p445, @p446, @p447, @p448, @p449, @p450, @p451, @p452, @p453, @p454, @p455, @p456, @p457, @p458, @p459, @p460, @p461, @p462, @p463, @p464, @p465, @p466, @p467, @p468, @p469, @p470, @p471, 6),
(@p472, @p473, @p474, @p475, @p476, @p477, @p478, @p479, @p480, @p481, @p482, @p483, @p484, @p485, @p486, @p487, @p488, @p489, @p490, @p491, @p492, @p493, @p494, @p495, @p496, @p497, @p498, @p499, @p500, @p501, @p502, @p503, @p504, @p505, @p506, @p507, @p508, @p509, @p510, 7),
(@p511, @p512, @p513, @p514, @p515, @p516, @p517, @p518, @p519, @p520, @p521, @p522, @p523, @p524, @p525, @p526, @p527, @p528, @p529, @p530, @p531, @p532, @p533, @p534, @p535, @p536, @p537, @p538, @p539, @p540, @p541, @p542, @p543, @p544, @p545, @p546, @p547, @p548, @p549, 8),
(@p550, @p551, @p552, @p553, @p554, @p555, @p556, @p557, @p558, @p559, @p560, @p561, @p562, @p563, @p564, @p565, @p566, @p567, @p568, @p569, @p570, @p571, @p572, @p573, @p574, @p575, @p576, @p577, @p578, @p579, @p580, @p581, @p582, @p583, @p584, @p585, @p586, @p587, @p588, 9),
(@p589, @p590, @p591, @p592, @p593, @p594, @p595, @p596, @p597, @p598, @p599, @p600, @p601, @p602, @p603, @p604, @p605, @p606, @p607, @p608, @p609, @p610, @p611, @p612, @p613, @p614, @p615, @p616, @p617, @p618, @p619, @p620, @p621, @p622, @p623, @p624, @p625, @p626, @p627, 10),
(@p628, @p629, @p630, @p631, @p632, @p633, @p634, @p635, @p636, @p637, @p638, @p639, @p640, @p641, @p642, @p643, @p644, @p645, @p646, @p647, @p648, @p649, @p650, @p651, @p652, @p653, @p654, @p655, @p656, @p657, @p658, @p659, @p660, @p661, @p662, @p663, @p664, @p665, @p666, 11),
(@p667, @p668, @p669, @p670, @p671, @p672, @p673, @p674, @p675, @p676, @p677, @p678, @p679, @p680, @p681, @p682, @p683, @p684, @p685, @p686, @p687, @p688, @p689, @p690, @p691, @p692, @p693, @p694, @p695, @p696, @p697, @p698, @p699, @p700, @p701, @p702, @p703, @p704, @p705, 12),
(@p706, @p707, @p708, @p709, @p710, @p711, @p712, @p713, @p714, @p715, @p716, @p717, @p718, @p719, @p720, @p721, @p722, @p723, @p724, @p725, @p726, @p727, @p728, @p729, @p730, @p731, @p732, @p733, @p734, @p735, @p736, @p737, @p738, @p739, @p740, @p741, @p742, @p743, @p744, 13),
(@p745, @p746, @p747, @p748, @p749, @p750, @p751, @p752, @p753, @p754, @p755, @p756, @p757, @p758, @p759, @p760, @p761, @p762, @p763, @p764, @p765, @p766, @p767, @p768, @p769, @p770, @p771, @p772, @p773, @p774, @p775, @p776, @p777, @p778, @p779, @p780, @p781, @p782, @p783, 14),
(@p784, @p785, @p786, @p787, @p788, @p789, @p790, @p791, @p792, @p793, @p794, @p795, @p796, @p797, @p798, @p799, @p800, @p801, @p802, @p803, @p804, @p805, @p806, @p807, @p808, @p809, @p810, @p811, @p812, @p813, @p814, @p815, @p816, @p817, @p818, @p819, @p820, @p821, @p822, 15)) AS i ([AccumulatedDepreciationAmortizationPPE], [CapitalLeaseObligations], [CashAndCashEquivalentsAtCarryingValue], [CashAndShortTermInvestments], [CommonStock], [CommonStockSharesOutstanding], [CurrentAccountsPayable], [CurrentDebt], [CurrentLongTermDebt], [CurrentNetReceivables], [DeferredRevenue], [FiscalDateEnding], [Goodwill], [IntangibleAssets], [IntangibleAssetsExcludingGoodwill], [Inventory], [Investments], [LongTermDebt], [LongTermDebtNoncurrent], [LongTermInvestments], [OtherCurrentAssets], [OtherCurrentLiabilities], [OtherNonCurrentAssets], [OtherNonCurrentLiabilities], [PropertyPlantEquipment], [ReportedCurrency], [RetainedEarnings], [ShortLongTermDebtTotal], [ShortTermDebt], [ShortTermInvestments], [Symbol], [TotalAssets], [TotalCurrentAssets], [TotalCurrentLiabilities], [TotalLiabilities], [TotalNonCurrentAssets], [TotalNonCurrentLiabilities], [TotalShareholderEquity], [TreasuryStock], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([AccumulatedDepreciationAmortizationPPE], [CapitalLeaseObligations], [CashAndCashEquivalentsAtCarryingValue], [CashAndShortTermInvestments], [CommonStock], [CommonStockSharesOutstanding], [CurrentAccountsPayable], [CurrentDebt], [CurrentLongTermDebt], [CurrentNetReceivables], [DeferredRevenue], [FiscalDateEnding], [Goodwill], [IntangibleAssets], [IntangibleAssetsExcludingGoodwill], [Inventory], [Investments], [LongTermDebt], [LongTermDebtNoncurrent], [LongTermInvestments], [OtherCurrentAssets], [OtherCurrentLiabilities], [OtherNonCurrentAssets], [OtherNonCurrentLiabilities], [PropertyPlantEquipment], [ReportedCurrency], [RetainedEarnings], [ShortLongTermDebtTotal], [ShortTermDebt], [ShortTermInvestments], [Symbol], [TotalAssets], [TotalCurrentAssets], [TotalCurrentLiabilities], [TotalLiabilities], [TotalNonCurrentAssets], [TotalNonCurrentLiabilities], [TotalShareholderEquity], [TreasuryStock])
VALUES (i.[AccumulatedDepreciationAmortizationPPE], i.[CapitalLeaseObligations], i.[CashAndCashEquivalentsAtCarryingValue], i.[CashAndShortTermInvestments], i.[CommonStock], i.[CommonStockSharesOutstanding], i.[CurrentAccountsPayable], i.[CurrentDebt], i.[CurrentLongTermDebt], i.[CurrentNetReceivables], i.[DeferredRevenue], i.[FiscalDateEnding], i.[Goodwill], i.[IntangibleAssets], i.[IntangibleAssetsExcludingGoodwill], i.[Inventory], i.[Investments], i.[LongTermDebt], i.[LongTermDebtNoncurrent], i.[LongTermInvestments], i.[OtherCurrentAssets], i.[OtherCurrentLiabilities], i.[OtherNonCurrentAssets], i.[OtherNonCurrentLiabilities], i.[PropertyPlantEquipment], i.[ReportedCurrency], i.[RetainedEarnings], i.[ShortLongTermDebtTotal], i.[ShortTermDebt], i.[ShortTermInvestments], i.[Symbol], i.[TotalAssets], i.[TotalCurrentAssets], i.[TotalCurrentLiabilities], i.[TotalLiabilities], i.[TotalNonCurrentAssets], i.[TotalNonCurrentLiabilities], i.[TotalShareholderEquity], i.[TreasuryStock])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted5;

SELECT [i].[Id] FROM @inserted5 i
ORDER BY [i].[_Position];
2022-05-12 01:15:24.116 +03:00 [INF] AddOrUpdate run successful.
2022-05-12 01:15:25.904 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CashFlow with Symbol AVDE
2022-05-12 01:15:25.908 +03:00 [INF] Generating URI for CASH_FLOW with params: symbol: AVDE
2022-05-12 01:15:25.908 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=CASH_FLOW&symbol=AVDE
2022-05-12 01:15:25.909 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=CASH_FLOW&symbol=AVDE".
2022-05-12 01:15:26.141 +03:00 [INF] Response has success status code
2022-05-12 01:15:26.142 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 01:15:26.153 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__symbol_0
2022-05-12 01:15:26.156 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.CashFlow.
2022-05-12 01:15:26.165 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[ExistInApi], [c].[LastApiRefresh], [c].[LastLocalRefresh]
FROM [CashFlows] AS [c]
WHERE [c].[Symbol] = @__entity_Symbol_0
2022-05-12 01:15:26.166 +03:00 [INF] Entity does not exist. Adding to DB.
2022-05-12 01:15:26.179 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = Boolean), @p2='?' (DbType = DateTime2), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [CashFlows] ([Symbol], [ExistInApi], [LastApiRefresh], [LastLocalRefresh])
VALUES (@p0, @p1, @p2, @p3);
2022-05-12 01:15:26.187 +03:00 [INF] AddOrUpdate run successful.
2022-05-12 01:15:26.187 +03:00 [WRN] Alpha Vantage has no SaluteStocksAPI.Models.FundamentalData.CashFlow for symbol AVDE
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageEmptyResponse: Response was empty.
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCashFlow(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 96
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:15:43.519 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CompanyOverview with Symbol BLBX
2022-05-12 01:15:43.520 +03:00 [INF] Generating URI for OVERVIEW with params: symbol: BLBX
2022-05-12 01:15:43.521 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=OVERVIEW&symbol=BLBX
2022-05-12 01:15:43.521 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=OVERVIEW&symbol=BLBX".
2022-05-12 01:15:44.685 +03:00 [INF] Response has success status code
2022-05-12 01:15:44.686 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.CompanyOverview for symbol BLBX
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyOverview(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 116
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:15:49.004 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.Earnings with Symbol AXTI
2022-05-12 01:15:49.005 +03:00 [INF] Generating URI for EARNINGS with params: symbol: AXTI
2022-05-12 01:15:49.005 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=EARNINGS&symbol=AXTI
2022-05-12 01:15:49.006 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=EARNINGS&symbol=AXTI".
2022-05-12 01:15:49.231 +03:00 [INF] Response has success status code
2022-05-12 01:15:49.231 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.Earnings for symbol AXTI
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyEarnings(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 142
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:15:49.284 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.IncomeStatement with Symbol AVGR
2022-05-12 01:15:49.285 +03:00 [INF] Generating URI for INCOME_STATEMENT with params: symbol: AVGR
2022-05-12 01:15:49.286 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=INCOME_STATEMENT&symbol=AVGR
2022-05-12 01:15:49.286 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=INCOME_STATEMENT&symbol=AVGR".
2022-05-12 01:15:49.647 +03:00 [INF] Response has success status code
2022-05-12 01:15:49.647 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.IncomeStatement for symbol AVGR
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetIncomeStatement(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 69
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:15:54.130 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.BalanceSheet with Symbol BFIIW
2022-05-12 01:15:54.132 +03:00 [INF] Generating URI for BALANCE_SHEET with params: symbol: BFIIW
2022-05-12 01:15:54.132 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BFIIW
2022-05-12 01:15:54.133 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BFIIW".
2022-05-12 01:15:54.541 +03:00 [INF] Response has success status code
2022-05-12 01:15:54.542 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.BalanceSheet for symbol BFIIW
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetBalanceSheet(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 82
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:15:56.191 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CashFlow with Symbol AVDG
2022-05-12 01:15:56.193 +03:00 [INF] Generating URI for CASH_FLOW with params: symbol: AVDG
2022-05-12 01:15:56.193 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=CASH_FLOW&symbol=AVDG
2022-05-12 01:15:56.194 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=CASH_FLOW&symbol=AVDG".
2022-05-12 01:15:56.412 +03:00 [INF] Response has success status code
2022-05-12 01:15:56.413 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.CashFlow for symbol AVDG
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCashFlow(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 96
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:16:14.708 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CompanyOverview with Symbol BLCM
2022-05-12 01:16:14.711 +03:00 [INF] Generating URI for OVERVIEW with params: symbol: BLCM
2022-05-12 01:16:14.712 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=OVERVIEW&symbol=BLCM
2022-05-12 01:16:14.712 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=OVERVIEW&symbol=BLCM".
2022-05-12 01:16:16.602 +03:00 [INF] Response has success status code
2022-05-12 01:16:16.602 +03:00 [INF] Trying to deserialize response.
2022-05-12 01:16:16.603 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.CompanyOverview.
2022-05-12 01:16:16.603 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 01:16:16.614 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__entity_Symbol_0
2022-05-12 01:16:16.615 +03:00 [INF] Entity does not exist. Adding to DB.
2022-05-12 01:16:16.632 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (Size = 4000), @p2='?' (DbType = Double), @p3='?' (Size = 4000), @p4='?' (DbType = Double), @p5='?' (DbType = Double), @p6='?' (DbType = Int64), @p7='?' (Size = 4000), @p8='?' (Size = 4000), @p9='?' (Size = 4000), @p10='?' (DbType = Double), @p11='?' (DbType = DateTime2), @p12='?' (DbType = Double), @p13='?' (DbType = Double), @p14='?' (DbType = Int64), @p15='?' (DbType = Double), @p16='?' (DbType = Double), @p17='?' (DbType = Double), @p18='?' (DbType = DateTime2), @p19='?' (Size = 4000), @p20='?' (DbType = Boolean), @p21='?' (Size = 4000), @p22='?' (DbType = Double), @p23='?' (DbType = Int64), @p24='?' (Size = 4000), @p25='?' (DbType = DateTime2), @p26='?' (DbType = DateTime2), @p27='?' (DbType = DateTime2), @p28='?' (DbType = Int64), @p29='?' (Size = 4000), @p30='?' (DbType = Double), @p31='?' (DbType = Double), @p32='?' (DbType = Double), @p33='?' (DbType = Double), @p34='?' (DbType = Double), @p35='?' (DbType = Double), @p36='?' (DbType = Double), @p37='?' (DbType = Double), @p38='?' (DbType = Double), @p39='?' (DbType = Double), @p40='?' (DbType = Double), @p41='?' (DbType = Int64), @p42='?' (Size = 4000), @p43='?' (DbType = Int64), @p44='?' (DbType = Double), @p45='?' (DbType = Double), @p46='?' (DbType = Double), @p47='?' (DbType = Double), @p48='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [CompanyOverviews] ([Symbol], [Address], [AnalystTargetPrice], [AssetType], [Beta], [BookValue], [CIK], [Country], [Currency], [Description], [DilutedEPSTTM], [DividendDate], [DividendPerShare], [DividendYield], [EBITDA], [EPS], [EVToEBITDA], [EVToRevenue], [ExDividendDate], [Exchange], [ExistInApi], [FiscalYearEnd], [ForwardPE], [GrossProfitTTM], [Industry], [LastApiRefresh], [LastLocalRefresh], [LatestQuarter], [MarketCapitalization], [Name], [OperatingMarginTTM], [PEGRatio], [PERatio], [PriceToBookRatio], [PriceToSalesRatioTTM], [ProfitMargin], [QuarterlyEarningsGrowthYOY], [QuarterlyRevenueGrowthYOY], [ReturnOnAssetsTTM], [ReturnOnEquityTTM], [RevenuePerShareTTM], [RevenueTTM], [Sector], [SharesOutstanding], [TrailingPE], [_200DayMovingAverage], [_50DayMovingAverage], [_52WeekHigh], [_52WeekLow])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21, @p22, @p23, @p24, @p25, @p26, @p27, @p28, @p29, @p30, @p31, @p32, @p33, @p34, @p35, @p36, @p37, @p38, @p39, @p40, @p41, @p42, @p43, @p44, @p45, @p46, @p47, @p48);
2022-05-12 01:16:16.639 +03:00 [INF] AddOrUpdate run successful.
2022-05-12 01:16:19.238 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.Earnings with Symbol AXU
2022-05-12 01:16:19.241 +03:00 [INF] Generating URI for EARNINGS with params: symbol: AXU
2022-05-12 01:16:19.242 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=EARNINGS&symbol=AXU
2022-05-12 01:16:19.242 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=EARNINGS&symbol=AXU".
2022-05-12 01:16:19.658 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.IncomeStatement with Symbol AVHI
2022-05-12 01:16:19.659 +03:00 [INF] Generating URI for INCOME_STATEMENT with params: symbol: AVHI
2022-05-12 01:16:19.660 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=INCOME_STATEMENT&symbol=AVHI
2022-05-12 01:16:19.660 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=INCOME_STATEMENT&symbol=AVHI".
2022-05-12 01:16:20.628 +03:00 [INF] Response has success status code
2022-05-12 01:16:20.629 +03:00 [INF] Trying to deserialize response.
2022-05-12 01:16:20.630 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 01:16:20.640 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__symbol_0
2022-05-12 01:16:20.641 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.Earnings.
2022-05-12 01:16:20.650 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [e].[Symbol], [e].[ExistInApi], [e].[LastApiRefresh], [e].[LastLocalRefresh]
FROM [Earnings] AS [e]
WHERE [e].[Symbol] = @__entity_Symbol_0
2022-05-12 01:16:20.654 +03:00 [INF] Entity does not exist. Adding to DB.
2022-05-12 01:16:20.668 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = Boolean), @p2='?' (DbType = DateTime2), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Earnings] ([Symbol], [ExistInApi], [LastApiRefresh], [LastLocalRefresh])
VALUES (@p0, @p1, @p2, @p3);
2022-05-12 01:16:20.688 +03:00 [INF] Executed DbCommand (19ms) [Parameters=[@p4='?' (DbType = DateTime2), @p5='?' (DbType = Double), @p6='?' (Size = 450), @p7='?' (DbType = DateTime2), @p8='?' (DbType = Double), @p9='?' (Size = 450), @p10='?' (DbType = DateTime2), @p11='?' (DbType = Double), @p12='?' (Size = 450), @p13='?' (DbType = DateTime2), @p14='?' (DbType = Double), @p15='?' (Size = 450), @p16='?' (DbType = DateTime2), @p17='?' (DbType = Double), @p18='?' (Size = 450), @p19='?' (DbType = DateTime2), @p20='?' (DbType = Double), @p21='?' (Size = 450), @p22='?' (DbType = DateTime2), @p23='?' (DbType = Double), @p24='?' (Size = 450), @p25='?' (DbType = DateTime2), @p26='?' (DbType = Double), @p27='?' (Size = 450), @p28='?' (DbType = DateTime2), @p29='?' (DbType = Double), @p30='?' (Size = 450), @p31='?' (DbType = DateTime2), @p32='?' (DbType = Double), @p33='?' (Size = 450), @p34='?' (DbType = DateTime2), @p35='?' (DbType = Double), @p36='?' (Size = 450), @p37='?' (DbType = DateTime2), @p38='?' (DbType = Double), @p39='?' (Size = 450), @p40='?' (DbType = DateTime2), @p41='?' (DbType = Double), @p42='?' (Size = 450), @p43='?' (DbType = DateTime2), @p44='?' (DbType = Double), @p45='?' (Size = 450), @p46='?' (DbType = DateTime2), @p47='?' (DbType = Double), @p48='?' (Size = 450), @p49='?' (DbType = DateTime2), @p50='?' (DbType = Double), @p51='?' (Size = 450), @p52='?' (DbType = Double), @p53='?' (DbType = DateTime2), @p54='?' (DbType = DateTime2), @p55='?' (DbType = Double), @p56='?' (DbType = Double), @p57='?' (DbType = Double), @p58='?' (Size = 450), @p59='?' (DbType = Double), @p60='?' (DbType = DateTime2), @p61='?' (DbType = DateTime2), @p62='?' (DbType = Double), @p63='?' (DbType = Double), @p64='?' (DbType = Double), @p65='?' (Size = 450), @p66='?' (DbType = Double), @p67='?' (DbType = DateTime2), @p68='?' (DbType = DateTime2), @p69='?' (DbType = Double), @p70='?' (DbType = Double), @p71='?' (DbType = Double), @p72='?' (Size = 450), @p73='?' (DbType = Double), @p74='?' (DbType = DateTime2), @p75='?' (DbType = DateTime2), @p76='?' (DbType = Double), @p77='?' (DbType = Double), @p78='?' (DbType = Double), @p79='?' (Size = 450), @p80='?' (DbType = Double), @p81='?' (DbType = DateTime2), @p82='?' (DbType = DateTime2), @p83='?' (DbType = Double), @p84='?' (DbType = Double), @p85='?' (DbType = Double), @p86='?' (Size = 450), @p87='?' (DbType = Double), @p88='?' (DbType = DateTime2), @p89='?' (DbType = DateTime2), @p90='?' (DbType = Double), @p91='?' (DbType = Double), @p92='?' (DbType = Double), @p93='?' (Size = 450), @p94='?' (DbType = Double), @p95='?' (DbType = DateTime2), @p96='?' (DbType = DateTime2), @p97='?' (DbType = Double), @p98='?' (DbType = Double), @p99='?' (DbType = Double), @p100='?' (Size = 450), @p101='?' (DbType = Double), @p102='?' (DbType = DateTime2), @p103='?' (DbType = DateTime2), @p104='?' (DbType = Double), @p105='?' (DbType = Double), @p106='?' (DbType = Double), @p107='?' (Size = 450), @p108='?' (DbType = Double), @p109='?' (DbType = DateTime2), @p110='?' (DbType = DateTime2), @p111='?' (DbType = Double), @p112='?' (DbType = Double), @p113='?' (DbType = Double), @p114='?' (Size = 450), @p115='?' (DbType = Double), @p116='?' (DbType = DateTime2), @p117='?' (DbType = DateTime2), @p118='?' (DbType = Double), @p119='?' (DbType = Double), @p120='?' (DbType = Double), @p121='?' (Size = 450), @p122='?' (DbType = Double), @p123='?' (DbType = DateTime2), @p124='?' (DbType = DateTime2), @p125='?' (DbType = Double), @p126='?' (DbType = Double), @p127='?' (DbType = Double), @p128='?' (Size = 450), @p129='?' (DbType = Double), @p130='?' (DbType = DateTime2), @p131='?' (DbType = DateTime2), @p132='?' (DbType = Double), @p133='?' (DbType = Double), @p134='?' (DbType = Double), @p135='?' (Size = 450), @p136='?' (DbType = Double), @p137='?' (DbType = DateTime2), @p138='?' (DbType = DateTime2), @p139='?' (DbType = Double), @p140='?' (DbType = Double), @p141='?' (DbType = Double), @p142='?' (Size = 450), @p143='?' (DbType = Double), @p144='?' (DbType = DateTime2), @p145='?' (DbType = DateTime2), @p146='?' (DbType = Double), @p147='?' (DbType = Double), @p148='?' (DbType = Double), @p149='?' (Size = 450), @p150='?' (DbType = Double), @p151='?' (DbType = DateTime2), @p152='?' (DbType = DateTime2), @p153='?' (DbType = Double), @p154='?' (DbType = Double), @p155='?' (DbType = Double), @p156='?' (Size = 450), @p157='?' (DbType = Double), @p158='?' (DbType = DateTime2), @p159='?' (DbType = DateTime2), @p160='?' (DbType = Double), @p161='?' (DbType = Double), @p162='?' (DbType = Double), @p163='?' (Size = 450), @p164='?' (DbType = Double), @p165='?' (DbType = DateTime2), @p166='?' (DbType = DateTime2), @p167='?' (DbType = Double), @p168='?' (DbType = Double), @p169='?' (DbType = Double), @p170='?' (Size = 450), @p171='?' (DbType = Double), @p172='?' (DbType = DateTime2), @p173='?' (DbType = DateTime2), @p174='?' (DbType = Double), @p175='?' (DbType = Double), @p176='?' (DbType = Double), @p177='?' (Size = 450), @p178='?' (DbType = Double), @p179='?' (DbType = DateTime2), @p180='?' (DbType = DateTime2), @p181='?' (DbType = Double), @p182='?' (DbType = Double), @p183='?' (DbType = Double), @p184='?' (Size = 450), @p185='?' (DbType = Double), @p186='?' (DbType = DateTime2), @p187='?' (DbType = DateTime2), @p188='?' (DbType = Double), @p189='?' (DbType = Double), @p190='?' (DbType = Double), @p191='?' (Size = 450), @p192='?' (DbType = Double), @p193='?' (DbType = DateTime2), @p194='?' (DbType = DateTime2), @p195='?' (DbType = Double), @p196='?' (DbType = Double), @p197='?' (DbType = Double), @p198='?' (Size = 450), @p199='?' (DbType = Double), @p200='?' (DbType = DateTime2), @p201='?' (DbType = DateTime2), @p202='?' (DbType = Double), @p203='?' (DbType = Double), @p204='?' (DbType = Double), @p205='?' (Size = 450), @p206='?' (DbType = Double), @p207='?' (DbType = DateTime2), @p208='?' (DbType = DateTime2), @p209='?' (DbType = Double), @p210='?' (DbType = Double), @p211='?' (DbType = Double), @p212='?' (Size = 450), @p213='?' (DbType = Double), @p214='?' (DbType = DateTime2), @p215='?' (DbType = DateTime2), @p216='?' (DbType = Double), @p217='?' (DbType = Double), @p218='?' (DbType = Double), @p219='?' (Size = 450), @p220='?' (DbType = Double), @p221='?' (DbType = DateTime2), @p222='?' (DbType = DateTime2), @p223='?' (DbType = Double), @p224='?' (DbType = Double), @p225='?' (DbType = Double), @p226='?' (Size = 450), @p227='?' (DbType = Double), @p228='?' (DbType = DateTime2), @p229='?' (DbType = DateTime2), @p230='?' (DbType = Double), @p231='?' (DbType = Double), @p232='?' (DbType = Double), @p233='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
DECLARE @inserted0 TABLE ([Id] int, [_Position] [int]);
MERGE [AnnualEarning] USING (
VALUES (@p4, @p5, @p6, 0),
(@p7, @p8, @p9, 1),
(@p10, @p11, @p12, 2),
(@p13, @p14, @p15, 3),
(@p16, @p17, @p18, 4),
(@p19, @p20, @p21, 5),
(@p22, @p23, @p24, 6),
(@p25, @p26, @p27, 7),
(@p28, @p29, @p30, 8),
(@p31, @p32, @p33, 9),
(@p34, @p35, @p36, 10),
(@p37, @p38, @p39, 11),
(@p40, @p41, @p42, 12),
(@p43, @p44, @p45, 13),
(@p46, @p47, @p48, 14),
(@p49, @p50, @p51, 15)) AS i ([FiscalDateEnding], [ReportedEPS], [Symbol], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([FiscalDateEnding], [ReportedEPS], [Symbol])
VALUES (i.[FiscalDateEnding], i.[ReportedEPS], i.[Symbol])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted0;

SELECT [i].[Id] FROM @inserted0 i
ORDER BY [i].[_Position];

DECLARE @inserted16 TABLE ([Id] int, [_Position] [int]);
MERGE [QuarterlyEarning] USING (
VALUES (@p52, @p53, @p54, @p55, @p56, @p57, @p58, 0),
(@p59, @p60, @p61, @p62, @p63, @p64, @p65, 1),
(@p66, @p67, @p68, @p69, @p70, @p71, @p72, 2),
(@p73, @p74, @p75, @p76, @p77, @p78, @p79, 3),
(@p80, @p81, @p82, @p83, @p84, @p85, @p86, 4),
(@p87, @p88, @p89, @p90, @p91, @p92, @p93, 5),
(@p94, @p95, @p96, @p97, @p98, @p99, @p100, 6),
(@p101, @p102, @p103, @p104, @p105, @p106, @p107, 7),
(@p108, @p109, @p110, @p111, @p112, @p113, @p114, 8),
(@p115, @p116, @p117, @p118, @p119, @p120, @p121, 9),
(@p122, @p123, @p124, @p125, @p126, @p127, @p128, 10),
(@p129, @p130, @p131, @p132, @p133, @p134, @p135, 11),
(@p136, @p137, @p138, @p139, @p140, @p141, @p142, 12),
(@p143, @p144, @p145, @p146, @p147, @p148, @p149, 13),
(@p150, @p151, @p152, @p153, @p154, @p155, @p156, 14),
(@p157, @p158, @p159, @p160, @p161, @p162, @p163, 15),
(@p164, @p165, @p166, @p167, @p168, @p169, @p170, 16),
(@p171, @p172, @p173, @p174, @p175, @p176, @p177, 17),
(@p178, @p179, @p180, @p181, @p182, @p183, @p184, 18),
(@p185, @p186, @p187, @p188, @p189, @p190, @p191, 19),
(@p192, @p193, @p194, @p195, @p196, @p197, @p198, 20),
(@p199, @p200, @p201, @p202, @p203, @p204, @p205, 21),
(@p206, @p207, @p208, @p209, @p210, @p211, @p212, 22),
(@p213, @p214, @p215, @p216, @p217, @p218, @p219, 23),
(@p220, @p221, @p222, @p223, @p224, @p225, @p226, 24),
(@p227, @p228, @p229, @p230, @p231, @p232, @p233, 25)) AS i ([EstimatedEPS], [FiscalDateEnding], [ReportedDate], [ReportedEPS], [Surprise], [SurprisePercentage], [Symbol], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([EstimatedEPS], [FiscalDateEnding], [ReportedDate], [ReportedEPS], [Surprise], [SurprisePercentage], [Symbol])
VALUES (i.[EstimatedEPS], i.[FiscalDateEnding], i.[ReportedDate], i.[ReportedEPS], i.[Surprise], i.[SurprisePercentage], i.[Symbol])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted16;

SELECT [i].[Id] FROM @inserted16 i
ORDER BY [i].[_Position];
2022-05-12 01:16:20.708 +03:00 [INF] Executed DbCommand (17ms) [Parameters=[@p0='?' (DbType = Double), @p1='?' (DbType = DateTime2), @p2='?' (DbType = DateTime2), @p3='?' (DbType = Double), @p4='?' (DbType = Double), @p5='?' (DbType = Double), @p6='?' (Size = 450), @p7='?' (DbType = Double), @p8='?' (DbType = DateTime2), @p9='?' (DbType = DateTime2), @p10='?' (DbType = Double), @p11='?' (DbType = Double), @p12='?' (DbType = Double), @p13='?' (Size = 450), @p14='?' (DbType = Double), @p15='?' (DbType = DateTime2), @p16='?' (DbType = DateTime2), @p17='?' (DbType = Double), @p18='?' (DbType = Double), @p19='?' (DbType = Double), @p20='?' (Size = 450), @p21='?' (DbType = Double), @p22='?' (DbType = DateTime2), @p23='?' (DbType = DateTime2), @p24='?' (DbType = Double), @p25='?' (DbType = Double), @p26='?' (DbType = Double), @p27='?' (Size = 450), @p28='?' (DbType = Double), @p29='?' (DbType = DateTime2), @p30='?' (DbType = DateTime2), @p31='?' (DbType = Double), @p32='?' (DbType = Double), @p33='?' (DbType = Double), @p34='?' (Size = 450), @p35='?' (DbType = Double), @p36='?' (DbType = DateTime2), @p37='?' (DbType = DateTime2), @p38='?' (DbType = Double), @p39='?' (DbType = Double), @p40='?' (DbType = Double), @p41='?' (Size = 450), @p42='?' (DbType = Double), @p43='?' (DbType = DateTime2), @p44='?' (DbType = DateTime2), @p45='?' (DbType = Double), @p46='?' (DbType = Double), @p47='?' (DbType = Double), @p48='?' (Size = 450), @p49='?' (DbType = Double), @p50='?' (DbType = DateTime2), @p51='?' (DbType = DateTime2), @p52='?' (DbType = Double), @p53='?' (DbType = Double), @p54='?' (DbType = Double), @p55='?' (Size = 450), @p56='?' (DbType = Double), @p57='?' (DbType = DateTime2), @p58='?' (DbType = DateTime2), @p59='?' (DbType = Double), @p60='?' (DbType = Double), @p61='?' (DbType = Double), @p62='?' (Size = 450), @p63='?' (DbType = Double), @p64='?' (DbType = DateTime2), @p65='?' (DbType = DateTime2), @p66='?' (DbType = Double), @p67='?' (DbType = Double), @p68='?' (DbType = Double), @p69='?' (Size = 450), @p70='?' (DbType = Double), @p71='?' (DbType = DateTime2), @p72='?' (DbType = DateTime2), @p73='?' (DbType = Double), @p74='?' (DbType = Double), @p75='?' (DbType = Double), @p76='?' (Size = 450), @p77='?' (DbType = Double), @p78='?' (DbType = DateTime2), @p79='?' (DbType = DateTime2), @p80='?' (DbType = Double), @p81='?' (DbType = Double), @p82='?' (DbType = Double), @p83='?' (Size = 450), @p84='?' (DbType = Double), @p85='?' (DbType = DateTime2), @p86='?' (DbType = DateTime2), @p87='?' (DbType = Double), @p88='?' (DbType = Double), @p89='?' (DbType = Double), @p90='?' (Size = 450), @p91='?' (DbType = Double), @p92='?' (DbType = DateTime2), @p93='?' (DbType = DateTime2), @p94='?' (DbType = Double), @p95='?' (DbType = Double), @p96='?' (DbType = Double), @p97='?' (Size = 450), @p98='?' (DbType = Double), @p99='?' (DbType = DateTime2), @p100='?' (DbType = DateTime2), @p101='?' (DbType = Double), @p102='?' (DbType = Double), @p103='?' (DbType = Double), @p104='?' (Size = 450), @p105='?' (DbType = Double), @p106='?' (DbType = DateTime2), @p107='?' (DbType = DateTime2), @p108='?' (DbType = Double), @p109='?' (DbType = Double), @p110='?' (DbType = Double), @p111='?' (Size = 450), @p112='?' (DbType = Double), @p113='?' (DbType = DateTime2), @p114='?' (DbType = DateTime2), @p115='?' (DbType = Double), @p116='?' (DbType = Double), @p117='?' (DbType = Double), @p118='?' (Size = 450), @p119='?' (DbType = Double), @p120='?' (DbType = DateTime2), @p121='?' (DbType = DateTime2), @p122='?' (DbType = Double), @p123='?' (DbType = Double), @p124='?' (DbType = Double), @p125='?' (Size = 450), @p126='?' (DbType = Double), @p127='?' (DbType = DateTime2), @p128='?' (DbType = DateTime2), @p129='?' (DbType = Double), @p130='?' (DbType = Double), @p131='?' (DbType = Double), @p132='?' (Size = 450), @p133='?' (DbType = Double), @p134='?' (DbType = DateTime2), @p135='?' (DbType = DateTime2), @p136='?' (DbType = Double), @p137='?' (DbType = Double), @p138='?' (DbType = Double), @p139='?' (Size = 450), @p140='?' (DbType = Double), @p141='?' (DbType = DateTime2), @p142='?' (DbType = DateTime2), @p143='?' (DbType = Double), @p144='?' (DbType = Double), @p145='?' (DbType = Double), @p146='?' (Size = 450), @p147='?' (DbType = Double), @p148='?' (DbType = DateTime2), @p149='?' (DbType = DateTime2), @p150='?' (DbType = Double), @p151='?' (DbType = Double), @p152='?' (DbType = Double), @p153='?' (Size = 450), @p154='?' (DbType = Double), @p155='?' (DbType = DateTime2), @p156='?' (DbType = DateTime2), @p157='?' (DbType = Double), @p158='?' (DbType = Double), @p159='?' (DbType = Double), @p160='?' (Size = 450), @p161='?' (DbType = Double), @p162='?' (DbType = DateTime2), @p163='?' (DbType = DateTime2), @p164='?' (DbType = Double), @p165='?' (DbType = Double), @p166='?' (DbType = Double), @p167='?' (Size = 450), @p168='?' (DbType = Double), @p169='?' (DbType = DateTime2), @p170='?' (DbType = DateTime2), @p171='?' (DbType = Double), @p172='?' (DbType = Double), @p173='?' (DbType = Double), @p174='?' (Size = 450), @p175='?' (DbType = Double), @p176='?' (DbType = DateTime2), @p177='?' (DbType = DateTime2), @p178='?' (DbType = Double), @p179='?' (DbType = Double), @p180='?' (DbType = Double), @p181='?' (Size = 450), @p182='?' (DbType = Double), @p183='?' (DbType = DateTime2), @p184='?' (DbType = DateTime2), @p185='?' (DbType = Double), @p186='?' (DbType = Double), @p187='?' (DbType = Double), @p188='?' (Size = 450), @p189='?' (DbType = Double), @p190='?' (DbType = DateTime2), @p191='?' (DbType = DateTime2), @p192='?' (DbType = Double), @p193='?' (DbType = Double), @p194='?' (DbType = Double), @p195='?' (Size = 450), @p196='?' (DbType = Double), @p197='?' (DbType = DateTime2), @p198='?' (DbType = DateTime2), @p199='?' (DbType = Double), @p200='?' (DbType = Double), @p201='?' (DbType = Double), @p202='?' (Size = 450), @p203='?' (DbType = Double), @p204='?' (DbType = DateTime2), @p205='?' (DbType = DateTime2), @p206='?' (DbType = Double), @p207='?' (DbType = Double), @p208='?' (DbType = Double), @p209='?' (Size = 450), @p210='?' (DbType = Double), @p211='?' (DbType = DateTime2), @p212='?' (DbType = DateTime2), @p213='?' (DbType = Double), @p214='?' (DbType = Double), @p215='?' (DbType = Double), @p216='?' (Size = 450), @p217='?' (DbType = Double), @p218='?' (DbType = DateTime2), @p219='?' (DbType = DateTime2), @p220='?' (DbType = Double), @p221='?' (DbType = Double), @p222='?' (DbType = Double), @p223='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
DECLARE @inserted0 TABLE ([Id] int, [_Position] [int]);
MERGE [QuarterlyEarning] USING (
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, 0),
(@p7, @p8, @p9, @p10, @p11, @p12, @p13, 1),
(@p14, @p15, @p16, @p17, @p18, @p19, @p20, 2),
(@p21, @p22, @p23, @p24, @p25, @p26, @p27, 3),
(@p28, @p29, @p30, @p31, @p32, @p33, @p34, 4),
(@p35, @p36, @p37, @p38, @p39, @p40, @p41, 5),
(@p42, @p43, @p44, @p45, @p46, @p47, @p48, 6),
(@p49, @p50, @p51, @p52, @p53, @p54, @p55, 7),
(@p56, @p57, @p58, @p59, @p60, @p61, @p62, 8),
(@p63, @p64, @p65, @p66, @p67, @p68, @p69, 9),
(@p70, @p71, @p72, @p73, @p74, @p75, @p76, 10),
(@p77, @p78, @p79, @p80, @p81, @p82, @p83, 11),
(@p84, @p85, @p86, @p87, @p88, @p89, @p90, 12),
(@p91, @p92, @p93, @p94, @p95, @p96, @p97, 13),
(@p98, @p99, @p100, @p101, @p102, @p103, @p104, 14),
(@p105, @p106, @p107, @p108, @p109, @p110, @p111, 15),
(@p112, @p113, @p114, @p115, @p116, @p117, @p118, 16),
(@p119, @p120, @p121, @p122, @p123, @p124, @p125, 17),
(@p126, @p127, @p128, @p129, @p130, @p131, @p132, 18),
(@p133, @p134, @p135, @p136, @p137, @p138, @p139, 19),
(@p140, @p141, @p142, @p143, @p144, @p145, @p146, 20),
(@p147, @p148, @p149, @p150, @p151, @p152, @p153, 21),
(@p154, @p155, @p156, @p157, @p158, @p159, @p160, 22),
(@p161, @p162, @p163, @p164, @p165, @p166, @p167, 23),
(@p168, @p169, @p170, @p171, @p172, @p173, @p174, 24),
(@p175, @p176, @p177, @p178, @p179, @p180, @p181, 25),
(@p182, @p183, @p184, @p185, @p186, @p187, @p188, 26),
(@p189, @p190, @p191, @p192, @p193, @p194, @p195, 27),
(@p196, @p197, @p198, @p199, @p200, @p201, @p202, 28),
(@p203, @p204, @p205, @p206, @p207, @p208, @p209, 29),
(@p210, @p211, @p212, @p213, @p214, @p215, @p216, 30),
(@p217, @p218, @p219, @p220, @p221, @p222, @p223, 31)) AS i ([EstimatedEPS], [FiscalDateEnding], [ReportedDate], [ReportedEPS], [Surprise], [SurprisePercentage], [Symbol], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([EstimatedEPS], [FiscalDateEnding], [ReportedDate], [ReportedEPS], [Surprise], [SurprisePercentage], [Symbol])
VALUES (i.[EstimatedEPS], i.[FiscalDateEnding], i.[ReportedDate], i.[ReportedEPS], i.[Surprise], i.[SurprisePercentage], i.[Symbol])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted0;

SELECT [i].[Id] FROM @inserted0 i
ORDER BY [i].[_Position];
2022-05-12 01:16:20.717 +03:00 [INF] AddOrUpdate run successful.
2022-05-12 01:16:21.905 +03:00 [INF] Response has success status code
2022-05-12 01:16:21.906 +03:00 [INF] Trying to deserialize response.
2022-05-12 01:16:21.906 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 01:16:21.917 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__symbol_0
2022-05-12 01:16:21.918 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.IncomeStatement.
2022-05-12 01:16:21.925 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [i].[Symbol], [i].[ExistInApi], [i].[LastApiRefresh], [i].[LastLocalRefresh]
FROM [IncomeStatements] AS [i]
WHERE [i].[Symbol] = @__entity_Symbol_0
2022-05-12 01:16:21.926 +03:00 [INF] Entity does not exist. Adding to DB.
2022-05-12 01:16:21.939 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = Boolean), @p2='?' (DbType = DateTime2), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [IncomeStatements] ([Symbol], [ExistInApi], [LastApiRefresh], [LastLocalRefresh])
VALUES (@p0, @p1, @p2, @p3);
2022-05-12 01:16:21.950 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@p0='?' (DbType = Int64), @p1='?' (DbType = Double), @p2='?' (DbType = Double), @p3='?' (DbType = Int64), @p4='?' (DbType = Int64), @p5='?' (DbType = Int64), @p6='?' (DbType = Double), @p7='?' (DbType = DateTime2), @p8='?' (DbType = Double), @p9='?' (DbType = Double), @p10='?' (DbType = Int64), @p11='?' (DbType = Int64), @p12='?' (DbType = Double), @p13='?' (DbType = Int64), @p14='?' (DbType = Int64), @p15='?' (DbType = Double), @p16='?' (DbType = Double), @p17='?' (DbType = Double), @p18='?' (DbType = Int64), @p19='?' (DbType = Double), @p20='?' (DbType = Double), @p21='?' (DbType = Int64), @p22='?' (Size = 4000), @p23='?' (DbType = Int64), @p24='?' (DbType = Double), @p25='?' (Size = 450), @p26='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [IncomeStatementAnnualReport] ([ComprehensiveIncomeNetOfTax], [CostOfRevenue], [CostofGoodsAndServicesSold], [Depreciation], [DepreciationAndAmortization], [Ebit], [Ebitda], [FiscalDateEnding], [GrossProfit], [IncomeBeforeTax], [IncomeTaxExpense], [InterestAndDebtExpense], [InterestExpense], [InterestIncome], [InvestmentIncomeNet], [NetIncome], [NetIncomeFromContinuingOperations], [NetInterestIncome], [NonInterestIncome], [OperatingExpenses], [OperatingIncome], [OtherNonOperatingIncome], [ReportedCurrency], [ResearchAndDevelopment], [SellingGeneralAndAdministrative], [Symbol], [TotalRevenue])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21, @p22, @p23, @p24, @p25, @p26);
SELECT [Id]
FROM [IncomeStatementAnnualReport]
WHERE @@ROWCOUNT = 1 AND [Id] = scope_identity();
2022-05-12 01:16:21.962 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@p0='?' (DbType = Int64), @p1='?' (DbType = Double), @p2='?' (DbType = Double), @p3='?' (DbType = Int64), @p4='?' (DbType = Int64), @p5='?' (DbType = Int64), @p6='?' (DbType = Double), @p7='?' (DbType = DateTime2), @p8='?' (DbType = Double), @p9='?' (DbType = Double), @p10='?' (DbType = Int64), @p11='?' (DbType = Int64), @p12='?' (DbType = Double), @p13='?' (DbType = Int64), @p14='?' (DbType = Int64), @p15='?' (DbType = Double), @p16='?' (DbType = Double), @p17='?' (DbType = Double), @p18='?' (DbType = Int64), @p19='?' (DbType = Double), @p20='?' (DbType = Double), @p21='?' (DbType = Int64), @p22='?' (Size = 4000), @p23='?' (DbType = Int64), @p24='?' (DbType = Double), @p25='?' (Size = 450), @p26='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [IncomeStatementQuarterlyReport] ([ComprehensiveIncomeNetOfTax], [CostOfRevenue], [CostofGoodsAndServicesSold], [Depreciation], [DepreciationAndAmortization], [Ebit], [Ebitda], [FiscalDateEnding], [GrossProfit], [IncomeBeforeTax], [IncomeTaxExpense], [InterestAndDebtExpense], [InterestExpense], [InterestIncome], [InvestmentIncomeNet], [NetIncome], [NetIncomeFromContinuingOperations], [NetInterestIncome], [NonInterestIncome], [OperatingExpenses], [OperatingIncome], [OtherNonOperatingIncome], [ReportedCurrency], [ResearchAndDevelopment], [SellingGeneralAndAdministrative], [Symbol], [TotalRevenue])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21, @p22, @p23, @p24, @p25, @p26);
SELECT [Id]
FROM [IncomeStatementQuarterlyReport]
WHERE @@ROWCOUNT = 1 AND [Id] = scope_identity();
2022-05-12 01:16:21.974 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@p0='?' (DbType = Int64), @p1='?' (DbType = Double), @p2='?' (DbType = Double), @p3='?' (DbType = Int64), @p4='?' (DbType = Int64), @p5='?' (DbType = Int64), @p6='?' (DbType = Double), @p7='?' (DbType = DateTime2), @p8='?' (DbType = Double), @p9='?' (DbType = Double), @p10='?' (DbType = Int64), @p11='?' (DbType = Int64), @p12='?' (DbType = Double), @p13='?' (DbType = Int64), @p14='?' (DbType = Int64), @p15='?' (DbType = Double), @p16='?' (DbType = Double), @p17='?' (DbType = Double), @p18='?' (DbType = Int64), @p19='?' (DbType = Double), @p20='?' (DbType = Double), @p21='?' (DbType = Int64), @p22='?' (Size = 4000), @p23='?' (DbType = Int64), @p24='?' (DbType = Double), @p25='?' (Size = 450), @p26='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [IncomeStatementQuarterlyReport] ([ComprehensiveIncomeNetOfTax], [CostOfRevenue], [CostofGoodsAndServicesSold], [Depreciation], [DepreciationAndAmortization], [Ebit], [Ebitda], [FiscalDateEnding], [GrossProfit], [IncomeBeforeTax], [IncomeTaxExpense], [InterestAndDebtExpense], [InterestExpense], [InterestIncome], [InvestmentIncomeNet], [NetIncome], [NetIncomeFromContinuingOperations], [NetInterestIncome], [NonInterestIncome], [OperatingExpenses], [OperatingIncome], [OtherNonOperatingIncome], [ReportedCurrency], [ResearchAndDevelopment], [SellingGeneralAndAdministrative], [Symbol], [TotalRevenue])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21, @p22, @p23, @p24, @p25, @p26);
SELECT [Id]
FROM [IncomeStatementQuarterlyReport]
WHERE @@ROWCOUNT = 1 AND [Id] = scope_identity();
2022-05-12 01:16:21.985 +03:00 [INF] AddOrUpdate run successful.
2022-05-12 01:16:24.554 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.BalanceSheet with Symbol BFIN
2022-05-12 01:16:24.557 +03:00 [INF] Generating URI for BALANCE_SHEET with params: symbol: BFIN
2022-05-12 01:16:24.558 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BFIN
2022-05-12 01:16:24.558 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BFIN".
2022-05-12 01:16:25.958 +03:00 [INF] Response has success status code
2022-05-12 01:16:25.959 +03:00 [INF] Trying to deserialize response.
2022-05-12 01:16:25.960 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 01:16:25.971 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__symbol_0
2022-05-12 01:16:25.972 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.BalanceSheet.
2022-05-12 01:16:25.980 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [b].[Symbol], [b].[ExistInApi], [b].[LastApiRefresh], [b].[LastLocalRefresh]
FROM [BalanceSheets] AS [b]
WHERE [b].[Symbol] = @__entity_Symbol_0
2022-05-12 01:16:25.981 +03:00 [INF] Entity does not exist. Adding to DB.
2022-05-12 01:16:25.994 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = Boolean), @p2='?' (DbType = DateTime2), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [BalanceSheets] ([Symbol], [ExistInApi], [LastApiRefresh], [LastLocalRefresh])
VALUES (@p0, @p1, @p2, @p3);
2022-05-12 01:16:26.112 +03:00 [INF] Executed DbCommand (116ms) [Parameters=[@p4='?' (DbType = Int64), @p5='?' (DbType = Double), @p6='?' (DbType = Double), @p7='?' (DbType = Double), @p8='?' (DbType = Double), @p9='?' (DbType = Int64), @p10='?' (DbType = Int64), @p11='?' (DbType = Int64), @p12='?' (DbType = Double), @p13='?' (DbType = Int64), @p14='?' (DbType = Int64), @p15='?' (DbType = DateTime2), @p16='?' (DbType = Double), @p17='?' (DbType = Double), @p18='?' (DbType = Double), @p19='?' (DbType = Double), @p20='?' (DbType = Int64), @p21='?' (DbType = Double), @p22='?' (DbType = Int64), @p23='?' (DbType = Double), @p24='?' (DbType = Double), @p25='?' (DbType = Double), @p26='?' (DbType = Double), @p27='?' (DbType = Double), @p28='?' (DbType = Int64), @p29='?' (Size = 4000), @p30='?' (DbType = Double), @p31='?' (DbType = Double), @p32='?' (DbType = Double), @p33='?' (DbType = Double), @p34='?' (Size = 450), @p35='?' (DbType = Double), @p36='?' (DbType = Double), @p37='?' (DbType = Double), @p38='?' (DbType = Double), @p39='?' (DbType = Double), @p40='?' (DbType = Double), @p41='?' (DbType = Double), @p42='?' (DbType = Double), @p43='?' (DbType = Int64), @p44='?' (DbType = Double), @p45='?' (DbType = Double), @p46='?' (DbType = Double), @p47='?' (DbType = Double), @p48='?' (DbType = Int64), @p49='?' (DbType = Int64), @p50='?' (DbType = Int64), @p51='?' (DbType = Double), @p52='?' (DbType = Int64), @p53='?' (DbType = Int64), @p54='?' (DbType = DateTime2), @p55='?' (DbType = Double), @p56='?' (DbType = Double), @p57='?' (DbType = Double), @p58='?' (DbType = Double), @p59='?' (DbType = Int64), @p60='?' (DbType = Double), @p61='?' (DbType = Int64), @p62='?' (DbType = Double), @p63='?' (DbType = Double), @p64='?' (DbType = Double), @p65='?' (DbType = Double), @p66='?' (DbType = Double), @p67='?' (DbType = Int64), @p68='?' (Size = 4000), @p69='?' (DbType = Double), @p70='?' (DbType = Double), @p71='?' (DbType = Double), @p72='?' (DbType = Double), @p73='?' (Size = 450), @p74='?' (DbType = Double), @p75='?' (DbType = Double), @p76='?' (DbType = Double), @p77='?' (DbType = Double), @p78='?' (DbType = Double), @p79='?' (DbType = Double), @p80='?' (DbType = Double), @p81='?' (DbType = Double), @p82='?' (DbType = Int64), @p83='?' (DbType = Double), @p84='?' (DbType = Double), @p85='?' (DbType = Double), @p86='?' (DbType = Double), @p87='?' (DbType = Int64), @p88='?' (DbType = Int64), @p89='?' (DbType = Int64), @p90='?' (DbType = Double), @p91='?' (DbType = Int64), @p92='?' (DbType = Int64), @p93='?' (DbType = DateTime2), @p94='?' (DbType = Double), @p95='?' (DbType = Double), @p96='?' (DbType = Double), @p97='?' (DbType = Double), @p98='?' (DbType = Int64), @p99='?' (DbType = Double), @p100='?' (DbType = Int64), @p101='?' (DbType = Double), @p102='?' (DbType = Double), @p103='?' (DbType = Double), @p104='?' (DbType = Double), @p105='?' (DbType = Double), @p106='?' (DbType = Int64), @p107='?' (Size = 4000), @p108='?' (DbType = Double), @p109='?' (DbType = Double), @p110='?' (DbType = Double), @p111='?' (DbType = Double), @p112='?' (Size = 450), @p113='?' (DbType = Double), @p114='?' (DbType = Double), @p115='?' (DbType = Double), @p116='?' (DbType = Double), @p117='?' (DbType = Double), @p118='?' (DbType = Double), @p119='?' (DbType = Double), @p120='?' (DbType = Double), @p121='?' (DbType = Int64), @p122='?' (DbType = Double), @p123='?' (DbType = Double), @p124='?' (DbType = Double), @p125='?' (DbType = Double), @p126='?' (DbType = Int64), @p127='?' (DbType = Int64), @p128='?' (DbType = Int64), @p129='?' (DbType = Double), @p130='?' (DbType = Int64), @p131='?' (DbType = Int64), @p132='?' (DbType = DateTime2), @p133='?' (DbType = Double), @p134='?' (DbType = Double), @p135='?' (DbType = Double), @p136='?' (DbType = Double), @p137='?' (DbType = Int64), @p138='?' (DbType = Double), @p139='?' (DbType = Int64), @p140='?' (DbType = Double), @p141='?' (DbType = Double), @p142='?' (DbType = Double), @p143='?' (DbType = Double), @p144='?' (DbType = Double), @p145='?' (DbType = Int64), @p146='?' (Size = 4000), @p147='?' (DbType = Double), @p148='?' (DbType = Double), @p149='?' (DbType = Double), @p150='?' (DbType = Double), @p151='?' (Size = 450), @p152='?' (DbType = Double), @p153='?' (DbType = Double), @p154='?' (DbType = Double), @p155='?' (DbType = Double), @p156='?' (DbType = Double), @p157='?' (DbType = Double), @p158='?' (DbType = Double), @p159='?' (DbType = Double), @p160='?' (DbType = Int64), @p161='?' (DbType = Double), @p162='?' (DbType = Double), @p163='?' (DbType = Double), @p164='?' (DbType = Double), @p165='?' (DbType = Int64), @p166='?' (DbType = Int64), @p167='?' (DbType = Int64), @p168='?' (DbType = Double), @p169='?' (DbType = Int64), @p170='?' (DbType = Int64), @p171='?' (DbType = DateTime2), @p172='?' (DbType = Double), @p173='?' (DbType = Double), @p174='?' (DbType = Double), @p175='?' (DbType = Double), @p176='?' (DbType = Int64), @p177='?' (DbType = Double), @p178='?' (DbType = Int64), @p179='?' (DbType = Double), @p180='?' (DbType = Double), @p181='?' (DbType = Double), @p182='?' (DbType = Double), @p183='?' (DbType = Double), @p184='?' (DbType = Int64), @p185='?' (Size = 4000), @p186='?' (DbType = Double), @p187='?' (DbType = Double), @p188='?' (DbType = Double), @p189='?' (DbType = Double), @p190='?' (Size = 450), @p191='?' (DbType = Double), @p192='?' (DbType = Double), @p193='?' (DbType = Double), @p194='?' (DbType = Double), @p195='?' (DbType = Double), @p196='?' (DbType = Double), @p197='?' (DbType = Double), @p198='?' (DbType = Double), @p199='?' (DbType = Int64), @p200='?' (DbType = Double), @p201='?' (DbType = Double), @p202='?' (DbType = Double), @p203='?' (DbType = Double), @p204='?' (DbType = Int64), @p205='?' (DbType = Int64), @p206='?' (DbType = Int64), @p207='?' (DbType = Double), @p208='?' (DbType = Int64), @p209='?' (DbType = Int64), @p210='?' (DbType = DateTime2), @p211='?' (DbType = Double), @p212='?' (DbType = Double), @p213='?' (DbType = Double), @p214='?' (DbType = Double), @p215='?' (DbType = Int64), @p216='?' (DbType = Double), @p217='?' (DbType = Int64), @p218='?' (DbType = Double), @p219='?' (DbType = Double), @p220='?' (DbType = Double), @p221='?' (DbType = Double), @p222='?' (DbType = Double), @p223='?' (DbType = Int64), @p224='?' (Size = 4000), @p225='?' (DbType = Double), @p226='?' (DbType = Double), @p227='?' (DbType = Double), @p228='?' (DbType = Double), @p229='?' (Size = 450), @p230='?' (DbType = Double), @p231='?' (DbType = Double), @p232='?' (DbType = Double), @p233='?' (DbType = Double), @p234='?' (DbType = Double), @p235='?' (DbType = Double), @p236='?' (DbType = Double), @p237='?' (DbType = Double), @p238='?' (DbType = Int64), @p239='?' (DbType = Double), @p240='?' (DbType = Double), @p241='?' (DbType = Double), @p242='?' (DbType = Double), @p243='?' (DbType = Int64), @p244='?' (DbType = Int64), @p245='?' (DbType = Int64), @p246='?' (DbType = Double), @p247='?' (DbType = Int64), @p248='?' (DbType = Int64), @p249='?' (DbType = DateTime2), @p250='?' (DbType = Double), @p251='?' (DbType = Double), @p252='?' (DbType = Double), @p253='?' (DbType = Double), @p254='?' (DbType = Int64), @p255='?' (DbType = Double), @p256='?' (DbType = Int64), @p257='?' (DbType = Double), @p258='?' (DbType = Double), @p259='?' (DbType = Double), @p260='?' (DbType = Double), @p261='?' (DbType = Double), @p262='?' (DbType = Int64), @p263='?' (Size = 4000), @p264='?' (DbType = Double), @p265='?' (DbType = Double), @p266='?' (DbType = Double), @p267='?' (DbType = Double), @p268='?' (Size = 450), @p269='?' (DbType = Double), @p270='?' (DbType = Double), @p271='?' (DbType = Double), @p272='?' (DbType = Double), @p273='?' (DbType = Double), @p274='?' (DbType = Double), @p275='?' (DbType = Double), @p276='?' (DbType = Double), @p277='?' (DbType = Int64), @p278='?' (DbType = Double), @p279='?' (DbType = Double), @p280='?' (DbType = Double), @p281='?' (DbType = Double), @p282='?' (DbType = Int64), @p283='?' (DbType = Int64), @p284='?' (DbType = Int64), @p285='?' (DbType = Double), @p286='?' (DbType = Int64), @p287='?' (DbType = Int64), @p288='?' (DbType = DateTime2), @p289='?' (DbType = Double), @p290='?' (DbType = Double), @p291='?' (DbType = Double), @p292='?' (DbType = Double), @p293='?' (DbType = Int64), @p294='?' (DbType = Double), @p295='?' (DbType = Int64), @p296='?' (DbType = Double), @p297='?' (DbType = Double), @p298='?' (DbType = Double), @p299='?' (DbType = Double), @p300='?' (DbType = Double), @p301='?' (DbType = Int64), @p302='?' (Size = 4000), @p303='?' (DbType = Double), @p304='?' (DbType = Double), @p305='?' (DbType = Double), @p306='?' (DbType = Double), @p307='?' (Size = 450), @p308='?' (DbType = Double), @p309='?' (DbType = Double), @p310='?' (DbType = Double), @p311='?' (DbType = Double), @p312='?' (DbType = Double), @p313='?' (DbType = Double), @p314='?' (DbType = Double), @p315='?' (DbType = Double), @p316='?' (DbType = Int64), @p317='?' (DbType = Double), @p318='?' (DbType = Double), @p319='?' (DbType = Double), @p320='?' (DbType = Double), @p321='?' (DbType = Int64), @p322='?' (DbType = Int64), @p323='?' (DbType = Int64), @p324='?' (DbType = Double), @p325='?' (DbType = Int64), @p326='?' (DbType = Int64), @p327='?' (DbType = DateTime2), @p328='?' (DbType = Double), @p329='?' (DbType = Double), @p330='?' (DbType = Double), @p331='?' (DbType = Double), @p332='?' (DbType = Int64), @p333='?' (DbType = Double), @p334='?' (DbType = Int64), @p335='?' (DbType = Double), @p336='?' (DbType = Double), @p337='?' (DbType = Double), @p338='?' (DbType = Double), @p339='?' (DbType = Double), @p340='?' (DbType = Int64), @p341='?' (Size = 4000), @p342='?' (DbType = Double), @p343='?' (DbType = Double), @p344='?' (DbType = Double), @p345='?' (DbType = Double), @p346='?' (Size = 450), @p347='?' (DbType = Double), @p348='?' (DbType = Double), @p349='?' (DbType = Double), @p350='?' (DbType = Double), @p351='?' (DbType = Double), @p352='?' (DbType = Double), @p353='?' (DbType = Double), @p354='?' (DbType = Double), @p355='?' (DbType = Int64), @p356='?' (DbType = Double), @p357='?' (DbType = Double), @p358='?' (DbType = Double), @p359='?' (DbType = Double), @p360='?' (DbType = Int64), @p361='?' (DbType = Int64), @p362='?' (DbType = Int64), @p363='?' (DbType = Double), @p364='?' (DbType = Int64), @p365='?' (DbType = Int64), @p366='?' (DbType = DateTime2), @p367='?' (DbType = Double), @p368='?' (DbType = Double), @p369='?' (DbType = Double), @p370='?' (DbType = Double), @p371='?' (DbType = Int64), @p372='?' (DbType = Double), @p373='?' (DbType = Int64), @p374='?' (DbType = Double), @p375='?' (DbType = Double), @p376='?' (DbType = Double), @p377='?' (DbType = Double), @p378='?' (DbType = Double), @p379='?' (DbType = Int64), @p380='?' (Size = 4000), @p381='?' (DbType = Double), @p382='?' (DbType = Double), @p383='?' (DbType = Double), @p384='?' (DbType = Double), @p385='?' (Size = 450), @p386='?' (DbType = Double), @p387='?' (DbType = Double), @p388='?' (DbType = Double), @p389='?' (DbType = Double), @p390='?' (DbType = Double), @p391='?' (DbType = Double), @p392='?' (DbType = Double), @p393='?' (DbType = Double), @p394='?' (DbType = Int64), @p395='?' (DbType = Double), @p396='?' (DbType = Double), @p397='?' (DbType = Double), @p398='?' (DbType = Double), @p399='?' (DbType = Int64), @p400='?' (DbType = Int64), @p401='?' (DbType = Int64), @p402='?' (DbType = Double), @p403='?' (DbType = Int64), @p404='?' (DbType = Int64), @p405='?' (DbType = DateTime2), @p406='?' (DbType = Double), @p407='?' (DbType = Double), @p408='?' (DbType = Double), @p409='?' (DbType = Double), @p410='?' (DbType = Int64), @p411='?' (DbType = Double), @p412='?' (DbType = Int64), @p413='?' (DbType = Double), @p414='?' (DbType = Double), @p415='?' (DbType = Double), @p416='?' (DbType = Double), @p417='?' (DbType = Double), @p418='?' (DbType = Int64), @p419='?' (Size = 4000), @p420='?' (DbType = Double), @p421='?' (DbType = Double), @p422='?' (DbType = Double), @p423='?' (DbType = Double), @p424='?' (Size = 450), @p425='?' (DbType = Double), @p426='?' (DbType = Double), @p427='?' (DbType = Double), @p428='?' (DbType = Double), @p429='?' (DbType = Double), @p430='?' (DbType = Double), @p431='?' (DbType = Double), @p432='?' (DbType = Double), @p433='?' (DbType = Int64), @p434='?' (DbType = Double), @p435='?' (DbType = Double), @p436='?' (DbType = Double), @p437='?' (DbType = Double), @p438='?' (DbType = Int64), @p439='?' (DbType = Int64), @p440='?' (DbType = Int64), @p441='?' (DbType = Double), @p442='?' (DbType = Int64), @p443='?' (DbType = Int64), @p444='?' (DbType = DateTime2), @p445='?' (DbType = Double), @p446='?' (DbType = Double), @p447='?' (DbType = Double), @p448='?' (DbType = Double), @p449='?' (DbType = Int64), @p450='?' (DbType = Double), @p451='?' (DbType = Int64), @p452='?' (DbType = Double), @p453='?' (DbType = Double), @p454='?' (DbType = Double), @p455='?' (DbType = Double), @p456='?' (DbType = Double), @p457='?' (DbType = Int64), @p458='?' (Size = 4000), @p459='?' (DbType = Double), @p460='?' (DbType = Double), @p461='?' (DbType = Double), @p462='?' (DbType = Double), @p463='?' (Size = 450), @p464='?' (DbType = Double), @p465='?' (DbType = Double), @p466='?' (DbType = Double), @p467='?' (DbType = Double), @p468='?' (DbType = Double), @p469='?' (DbType = Double), @p470='?' (DbType = Double), @p471='?' (DbType = Double), @p472='?' (DbType = Int64), @p473='?' (DbType = Double), @p474='?' (DbType = Double), @p475='?' (DbType = Double), @p476='?' (DbType = Double), @p477='?' (DbType = Int64), @p478='?' (DbType = Int64), @p479='?' (DbType = Int64), @p480='?' (DbType = Double), @p481='?' (DbType = Int64), @p482='?' (DbType = Int64), @p483='?' (DbType = DateTime2), @p484='?' (DbType = Double), @p485='?' (DbType = Double), @p486='?' (DbType = Double), @p487='?' (DbType = Double), @p488='?' (DbType = Int64), @p489='?' (DbType = Double), @p490='?' (DbType = Int64), @p491='?' (DbType = Double), @p492='?' (DbType = Double), @p493='?' (DbType = Double), @p494='?' (DbType = Double), @p495='?' (DbType = Double), @p496='?' (DbType = Int64), @p497='?' (Size = 4000), @p498='?' (DbType = Double), @p499='?' (DbType = Double), @p500='?' (DbType = Double), @p501='?' (DbType = Double), @p502='?' (Size = 450), @p503='?' (DbType = Double), @p504='?' (DbType = Double), @p505='?' (DbType = Double), @p506='?' (DbType = Double), @p507='?' (DbType = Double), @p508='?' (DbType = Double), @p509='?' (DbType = Double), @p510='?' (DbType = Double), @p511='?' (DbType = Int64), @p512='?' (DbType = Double), @p513='?' (DbType = Double), @p514='?' (DbType = Double), @p515='?' (DbType = Double), @p516='?' (DbType = Int64), @p517='?' (DbType = Int64), @p518='?' (DbType = Int64), @p519='?' (DbType = Double), @p520='?' (DbType = Int64), @p521='?' (DbType = Int64), @p522='?' (DbType = DateTime2), @p523='?' (DbType = Double), @p524='?' (DbType = Double), @p525='?' (DbType = Double), @p526='?' (DbType = Double), @p527='?' (DbType = Int64), @p528='?' (DbType = Double), @p529='?' (DbType = Int64), @p530='?' (DbType = Double), @p531='?' (DbType = Double), @p532='?' (DbType = Double), @p533='?' (DbType = Double), @p534='?' (DbType = Double), @p535='?' (DbType = Int64), @p536='?' (Size = 4000), @p537='?' (DbType = Double), @p538='?' (DbType = Double), @p539='?' (DbType = Double), @p540='?' (DbType = Double), @p541='?' (Size = 450), @p542='?' (DbType = Double), @p543='?' (DbType = Double), @p544='?' (DbType = Double), @p545='?' (DbType = Double), @p546='?' (DbType = Double), @p547='?' (DbType = Double), @p548='?' (DbType = Double), @p549='?' (DbType = Double), @p550='?' (DbType = Int64), @p551='?' (DbType = Double), @p552='?' (DbType = Double), @p553='?' (DbType = Double), @p554='?' (DbType = Double), @p555='?' (DbType = Int64), @p556='?' (DbType = Int64), @p557='?' (DbType = Int64), @p558='?' (DbType = Double), @p559='?' (DbType = Int64), @p560='?' (DbType = Int64), @p561='?' (DbType = DateTime2), @p562='?' (DbType = Double), @p563='?' (DbType = Double), @p564='?' (DbType = Double), @p565='?' (DbType = Double), @p566='?' (DbType = Int64), @p567='?' (DbType = Double), @p568='?' (DbType = Int64), @p569='?' (DbType = Double), @p570='?' (DbType = Double), @p571='?' (DbType = Double), @p572='?' (DbType = Double), @p573='?' (DbType = Double), @p574='?' (DbType = Int64), @p575='?' (Size = 4000), @p576='?' (DbType = Double), @p577='?' (DbType = Double), @p578='?' (DbType = Double), @p579='?' (DbType = Double), @p580='?' (Size = 450), @p581='?' (DbType = Double), @p582='?' (DbType = Double), @p583='?' (DbType = Double), @p584='?' (DbType = Double), @p585='?' (DbType = Double), @p586='?' (DbType = Double), @p587='?' (DbType = Double), @p588='?' (DbType = Double), @p589='?' (DbType = Int64), @p590='?' (DbType = Double), @p591='?' (DbType = Double), @p592='?' (DbType = Double), @p593='?' (DbType = Double), @p594='?' (DbType = Int64), @p595='?' (DbType = Int64), @p596='?' (DbType = Int64), @p597='?' (DbType = Double), @p598='?' (DbType = Int64), @p599='?' (DbType = Int64), @p600='?' (DbType = DateTime2), @p601='?' (DbType = Double), @p602='?' (DbType = Double), @p603='?' (DbType = Double), @p604='?' (DbType = Double), @p605='?' (DbType = Int64), @p606='?' (DbType = Double), @p607='?' (DbType = Int64), @p608='?' (DbType = Double), @p609='?' (DbType = Double), @p610='?' (DbType = Double), @p611='?' (DbType = Double), @p612='?' (DbType = Double), @p613='?' (DbType = Int64), @p614='?' (Size = 4000), @p615='?' (DbType = Double), @p616='?' (DbType = Double), @p617='?' (DbType = Double), @p618='?' (DbType = Double), @p619='?' (Size = 450), @p620='?' (DbType = Double), @p621='?' (DbType = Double), @p622='?' (DbType = Double), @p623='?' (DbType = Double), @p624='?' (DbType = Double), @p625='?' (DbType = Double), @p626='?' (DbType = Double), @p627='?' (DbType = Double), @p628='?' (DbType = Int64), @p629='?' (DbType = Double), @p630='?' (DbType = Double), @p631='?' (DbType = Double), @p632='?' (DbType = Double), @p633='?' (DbType = Int64), @p634='?' (DbType = Int64), @p635='?' (DbType = Int64), @p636='?' (DbType = Double), @p637='?' (DbType = Int64), @p638='?' (DbType = Int64), @p639='?' (DbType = DateTime2), @p640='?' (DbType = Double), @p641='?' (DbType = Double), @p642='?' (DbType = Double), @p643='?' (DbType = Double), @p644='?' (DbType = Int64), @p645='?' (DbType = Double), @p646='?' (DbType = Int64), @p647='?' (DbType = Double), @p648='?' (DbType = Double), @p649='?' (DbType = Double), @p650='?' (DbType = Double), @p651='?' (DbType = Double), @p652='?' (DbType = Int64), @p653='?' (Size = 4000), @p654='?' (DbType = Double), @p655='?' (DbType = Double), @p656='?' (DbType = Double), @p657='?' (DbType = Double), @p658='?' (Size = 450), @p659='?' (DbType = Double), @p660='?' (DbType = Double), @p661='?' (DbType = Double), @p662='?' (DbType = Double), @p663='?' (DbType = Double), @p664='?' (DbType = Double), @p665='?' (DbType = Double), @p666='?' (DbType = Double), @p667='?' (DbType = Int64), @p668='?' (DbType = Double), @p669='?' (DbType = Double), @p670='?' (DbType = Double), @p671='?' (DbType = Double), @p672='?' (DbType = Int64), @p673='?' (DbType = Int64), @p674='?' (DbType = Int64), @p675='?' (DbType = Double), @p676='?' (DbType = Int64), @p677='?' (DbType = Int64), @p678='?' (DbType = DateTime2), @p679='?' (DbType = Double), @p680='?' (DbType = Double), @p681='?' (DbType = Double), @p682='?' (DbType = Double), @p683='?' (DbType = Int64), @p684='?' (DbType = Double), @p685='?' (DbType = Int64), @p686='?' (DbType = Double), @p687='?' (DbType = Double), @p688='?' (DbType = Double), @p689='?' (DbType = Double), @p690='?' (DbType = Double), @p691='?' (DbType = Int64), @p692='?' (Size = 4000), @p693='?' (DbType = Double), @p694='?' (DbType = Double), @p695='?' (DbType = Double), @p696='?' (DbType = Double), @p697='?' (Size = 450), @p698='?' (DbType = Double), @p699='?' (DbType = Double), @p700='?' (DbType = Double), @p701='?' (DbType = Double), @p702='?' (DbType = Double), @p703='?' (DbType = Double), @p704='?' (DbType = Double), @p705='?' (DbType = Double), @p706='?' (DbType = Int64), @p707='?' (DbType = Double), @p708='?' (DbType = Double), @p709='?' (DbType = Double), @p710='?' (DbType = Double), @p711='?' (DbType = Int64), @p712='?' (DbType = Int64), @p713='?' (DbType = Int64), @p714='?' (DbType = Double), @p715='?' (DbType = Int64), @p716='?' (DbType = Int64), @p717='?' (DbType = DateTime2), @p718='?' (DbType = Double), @p719='?' (DbType = Double), @p720='?' (DbType = Double), @p721='?' (DbType = Double), @p722='?' (DbType = Int64), @p723='?' (DbType = Double), @p724='?' (DbType = Int64), @p725='?' (DbType = Double), @p726='?' (DbType = Double), @p727='?' (DbType = Double), @p728='?' (DbType = Double), @p729='?' (DbType = Double), @p730='?' (DbType = Int64), @p731='?' (Size = 4000), @p732='?' (DbType = Double), @p733='?' (DbType = Double), @p734='?' (DbType = Double), @p735='?' (DbType = Double), @p736='?' (Size = 450), @p737='?' (DbType = Double), @p738='?' (DbType = Double), @p739='?' (DbType = Double), @p740='?' (DbType = Double), @p741='?' (DbType = Double), @p742='?' (DbType = Double), @p743='?' (DbType = Double), @p744='?' (DbType = Double), @p745='?' (DbType = Int64), @p746='?' (DbType = Double), @p747='?' (DbType = Double), @p748='?' (DbType = Double), @p749='?' (DbType = Double), @p750='?' (DbType = Int64), @p751='?' (DbType = Int64), @p752='?' (DbType = Int64), @p753='?' (DbType = Double), @p754='?' (DbType = Int64), @p755='?' (DbType = Int64), @p756='?' (DbType = DateTime2), @p757='?' (DbType = Double), @p758='?' (DbType = Double), @p759='?' (DbType = Double), @p760='?' (DbType = Double), @p761='?' (DbType = Int64), @p762='?' (DbType = Double), @p763='?' (DbType = Int64), @p764='?' (DbType = Double), @p765='?' (DbType = Double), @p766='?' (DbType = Double), @p767='?' (DbType = Double), @p768='?' (DbType = Double), @p769='?' (DbType = Int64), @p770='?' (Size = 4000), @p771='?' (DbType = Double), @p772='?' (DbType = Double), @p773='?' (DbType = Double), @p774='?' (DbType = Double), @p775='?' (Size = 450), @p776='?' (DbType = Double), @p777='?' (DbType = Double), @p778='?' (DbType = Double), @p779='?' (DbType = Double), @p780='?' (DbType = Double), @p781='?' (DbType = Double), @p782='?' (DbType = Double), @p783='?' (DbType = Double), @p784='?' (DbType = Int64), @p785='?' (DbType = Double), @p786='?' (DbType = Double), @p787='?' (DbType = Double), @p788='?' (DbType = Double), @p789='?' (DbType = Int64), @p790='?' (DbType = Int64), @p791='?' (DbType = Int64), @p792='?' (DbType = Double), @p793='?' (DbType = Int64), @p794='?' (DbType = Int64), @p795='?' (DbType = DateTime2), @p796='?' (DbType = Double), @p797='?' (DbType = Double), @p798='?' (DbType = Double), @p799='?' (DbType = Double), @p800='?' (DbType = Int64), @p801='?' (DbType = Double), @p802='?' (DbType = Int64), @p803='?' (DbType = Double), @p804='?' (DbType = Double), @p805='?' (DbType = Double), @p806='?' (DbType = Double), @p807='?' (DbType = Double), @p808='?' (DbType = Int64), @p809='?' (Size = 4000), @p810='?' (DbType = Double), @p811='?' (DbType = Double), @p812='?' (DbType = Double), @p813='?' (DbType = Double), @p814='?' (Size = 450), @p815='?' (DbType = Double), @p816='?' (DbType = Double), @p817='?' (DbType = Double), @p818='?' (DbType = Double), @p819='?' (DbType = Double), @p820='?' (DbType = Double), @p821='?' (DbType = Double), @p822='?' (DbType = Double), @p823='?' (DbType = Int64), @p824='?' (DbType = Double), @p825='?' (DbType = Double), @p826='?' (DbType = Double), @p827='?' (DbType = Double), @p828='?' (DbType = Int64), @p829='?' (DbType = Int64), @p830='?' (DbType = Int64), @p831='?' (DbType = Double), @p832='?' (DbType = Int64), @p833='?' (DbType = Int64), @p834='?' (DbType = DateTime2), @p835='?' (DbType = Double), @p836='?' (DbType = Double), @p837='?' (DbType = Double), @p838='?' (DbType = Double), @p839='?' (DbType = Int64), @p840='?' (DbType = Double), @p841='?' (DbType = Int64), @p842='?' (DbType = Double), @p843='?' (DbType = Double), @p844='?' (DbType = Double), @p845='?' (DbType = Double), @p846='?' (DbType = Double), @p847='?' (DbType = Int64), @p848='?' (Size = 4000), @p849='?' (DbType = Double), @p850='?' (DbType = Double), @p851='?' (DbType = Double), @p852='?' (DbType = Double), @p853='?' (Size = 450), @p854='?' (DbType = Double), @p855='?' (DbType = Double), @p856='?' (DbType = Double), @p857='?' (DbType = Double), @p858='?' (DbType = Double), @p859='?' (DbType = Double), @p860='?' (DbType = Double), @p861='?' (DbType = Double), @p862='?' (DbType = Int64), @p863='?' (DbType = Double), @p864='?' (DbType = Double), @p865='?' (DbType = Double), @p866='?' (DbType = Double), @p867='?' (DbType = Int64), @p868='?' (DbType = Int64), @p869='?' (DbType = Int64), @p870='?' (DbType = Double), @p871='?' (DbType = Int64), @p872='?' (DbType = Int64), @p873='?' (DbType = DateTime2), @p874='?' (DbType = Double), @p875='?' (DbType = Double), @p876='?' (DbType = Double), @p877='?' (DbType = Double), @p878='?' (DbType = Int64), @p879='?' (DbType = Double), @p880='?' (DbType = Int64), @p881='?' (DbType = Double), @p882='?' (DbType = Double), @p883='?' (DbType = Double), @p884='?' (DbType = Double), @p885='?' (DbType = Double), @p886='?' (DbType = Int64), @p887='?' (Size = 4000), @p888='?' (DbType = Double), @p889='?' (DbType = Double), @p890='?' (DbType = Double), @p891='?' (DbType = Double), @p892='?' (Size = 450), @p893='?' (DbType = Double), @p894='?' (DbType = Double), @p895='?' (DbType = Double), @p896='?' (DbType = Double), @p897='?' (DbType = Double), @p898='?' (DbType = Double), @p899='?' (DbType = Double), @p900='?' (DbType = Double), @p901='?' (DbType = Int64), @p902='?' (DbType = Double), @p903='?' (DbType = Double), @p904='?' (DbType = Double), @p905='?' (DbType = Double), @p906='?' (DbType = Int64), @p907='?' (DbType = Int64), @p908='?' (DbType = Int64), @p909='?' (DbType = Double), @p910='?' (DbType = Int64), @p911='?' (DbType = Int64), @p912='?' (DbType = DateTime2), @p913='?' (DbType = Double), @p914='?' (DbType = Double), @p915='?' (DbType = Double), @p916='?' (DbType = Double), @p917='?' (DbType = Int64), @p918='?' (DbType = Double), @p919='?' (DbType = Int64), @p920='?' (DbType = Double), @p921='?' (DbType = Double), @p922='?' (DbType = Double), @p923='?' (DbType = Double), @p924='?' (DbType = Double), @p925='?' (DbType = Int64), @p926='?' (Size = 4000), @p927='?' (DbType = Double), @p928='?' (DbType = Double), @p929='?' (DbType = Double), @p930='?' (DbType = Double), @p931='?' (Size = 450), @p932='?' (DbType = Double), @p933='?' (DbType = Double), @p934='?' (DbType = Double), @p935='?' (DbType = Double), @p936='?' (DbType = Double), @p937='?' (DbType = Double), @p938='?' (DbType = Double), @p939='?' (DbType = Double), @p940='?' (DbType = Int64), @p941='?' (DbType = Double), @p942='?' (DbType = Double), @p943='?' (DbType = Double), @p944='?' (DbType = Double), @p945='?' (DbType = Int64), @p946='?' (DbType = Int64), @p947='?' (DbType = Int64), @p948='?' (DbType = Double), @p949='?' (DbType = Int64), @p950='?' (DbType = Int64), @p951='?' (DbType = DateTime2), @p952='?' (DbType = Double), @p953='?' (DbType = Double), @p954='?' (DbType = Double), @p955='?' (DbType = Double), @p956='?' (DbType = Int64), @p957='?' (DbType = Double), @p958='?' (DbType = Int64), @p959='?' (DbType = Double), @p960='?' (DbType = Double), @p961='?' (DbType = Double), @p962='?' (DbType = Double), @p963='?' (DbType = Double), @p964='?' (DbType = Int64), @p965='?' (Size = 4000), @p966='?' (DbType = Double), @p967='?' (DbType = Double), @p968='?' (DbType = Double), @p969='?' (DbType = Double), @p970='?' (Size = 450), @p971='?' (DbType = Double), @p972='?' (DbType = Double), @p973='?' (DbType = Double), @p974='?' (DbType = Double), @p975='?' (DbType = Double), @p976='?' (DbType = Double), @p977='?' (DbType = Double), @p978='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
DECLARE @inserted0 TABLE ([Id] int, [_Position] [int]);
MERGE [BalanceSheetAnnualReport] USING (
VALUES (@p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21, @p22, @p23, @p24, @p25, @p26, @p27, @p28, @p29, @p30, @p31, @p32, @p33, @p34, @p35, @p36, @p37, @p38, @p39, @p40, @p41, @p42, 0),
(@p43, @p44, @p45, @p46, @p47, @p48, @p49, @p50, @p51, @p52, @p53, @p54, @p55, @p56, @p57, @p58, @p59, @p60, @p61, @p62, @p63, @p64, @p65, @p66, @p67, @p68, @p69, @p70, @p71, @p72, @p73, @p74, @p75, @p76, @p77, @p78, @p79, @p80, @p81, 1),
(@p82, @p83, @p84, @p85, @p86, @p87, @p88, @p89, @p90, @p91, @p92, @p93, @p94, @p95, @p96, @p97, @p98, @p99, @p100, @p101, @p102, @p103, @p104, @p105, @p106, @p107, @p108, @p109, @p110, @p111, @p112, @p113, @p114, @p115, @p116, @p117, @p118, @p119, @p120, 2),
(@p121, @p122, @p123, @p124, @p125, @p126, @p127, @p128, @p129, @p130, @p131, @p132, @p133, @p134, @p135, @p136, @p137, @p138, @p139, @p140, @p141, @p142, @p143, @p144, @p145, @p146, @p147, @p148, @p149, @p150, @p151, @p152, @p153, @p154, @p155, @p156, @p157, @p158, @p159, 3),
(@p160, @p161, @p162, @p163, @p164, @p165, @p166, @p167, @p168, @p169, @p170, @p171, @p172, @p173, @p174, @p175, @p176, @p177, @p178, @p179, @p180, @p181, @p182, @p183, @p184, @p185, @p186, @p187, @p188, @p189, @p190, @p191, @p192, @p193, @p194, @p195, @p196, @p197, @p198, 4)) AS i ([AccumulatedDepreciationAmortizationPPE], [CapitalLeaseObligations], [CashAndCashEquivalentsAtCarryingValue], [CashAndShortTermInvestments], [CommonStock], [CommonStockSharesOutstanding], [CurrentAccountsPayable], [CurrentDebt], [CurrentLongTermDebt], [CurrentNetReceivables], [DeferredRevenue], [FiscalDateEnding], [Goodwill], [IntangibleAssets], [IntangibleAssetsExcludingGoodwill], [Inventory], [Investments], [LongTermDebt], [LongTermDebtNoncurrent], [LongTermInvestments], [OtherCurrentAssets], [OtherCurrentLiabilities], [OtherNonCurrentAssets], [OtherNonCurrentLiabilities], [PropertyPlantEquipment], [ReportedCurrency], [RetainedEarnings], [ShortLongTermDebtTotal], [ShortTermDebt], [ShortTermInvestments], [Symbol], [TotalAssets], [TotalCurrentAssets], [TotalCurrentLiabilities], [TotalLiabilities], [TotalNonCurrentAssets], [TotalNonCurrentLiabilities], [TotalShareholderEquity], [TreasuryStock], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([AccumulatedDepreciationAmortizationPPE], [CapitalLeaseObligations], [CashAndCashEquivalentsAtCarryingValue], [CashAndShortTermInvestments], [CommonStock], [CommonStockSharesOutstanding], [CurrentAccountsPayable], [CurrentDebt], [CurrentLongTermDebt], [CurrentNetReceivables], [DeferredRevenue], [FiscalDateEnding], [Goodwill], [IntangibleAssets], [IntangibleAssetsExcludingGoodwill], [Inventory], [Investments], [LongTermDebt], [LongTermDebtNoncurrent], [LongTermInvestments], [OtherCurrentAssets], [OtherCurrentLiabilities], [OtherNonCurrentAssets], [OtherNonCurrentLiabilities], [PropertyPlantEquipment], [ReportedCurrency], [RetainedEarnings], [ShortLongTermDebtTotal], [ShortTermDebt], [ShortTermInvestments], [Symbol], [TotalAssets], [TotalCurrentAssets], [TotalCurrentLiabilities], [TotalLiabilities], [TotalNonCurrentAssets], [TotalNonCurrentLiabilities], [TotalShareholderEquity], [TreasuryStock])
VALUES (i.[AccumulatedDepreciationAmortizationPPE], i.[CapitalLeaseObligations], i.[CashAndCashEquivalentsAtCarryingValue], i.[CashAndShortTermInvestments], i.[CommonStock], i.[CommonStockSharesOutstanding], i.[CurrentAccountsPayable], i.[CurrentDebt], i.[CurrentLongTermDebt], i.[CurrentNetReceivables], i.[DeferredRevenue], i.[FiscalDateEnding], i.[Goodwill], i.[IntangibleAssets], i.[IntangibleAssetsExcludingGoodwill], i.[Inventory], i.[Investments], i.[LongTermDebt], i.[LongTermDebtNoncurrent], i.[LongTermInvestments], i.[OtherCurrentAssets], i.[OtherCurrentLiabilities], i.[OtherNonCurrentAssets], i.[OtherNonCurrentLiabilities], i.[PropertyPlantEquipment], i.[ReportedCurrency], i.[RetainedEarnings], i.[ShortLongTermDebtTotal], i.[ShortTermDebt], i.[ShortTermInvestments], i.[Symbol], i.[TotalAssets], i.[TotalCurrentAssets], i.[TotalCurrentLiabilities], i.[TotalLiabilities], i.[TotalNonCurrentAssets], i.[TotalNonCurrentLiabilities], i.[TotalShareholderEquity], i.[TreasuryStock])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted0;

SELECT [i].[Id] FROM @inserted0 i
ORDER BY [i].[_Position];

DECLARE @inserted5 TABLE ([Id] int, [_Position] [int]);
MERGE [BalanceSheetQuarterlyReports] USING (
VALUES (@p199, @p200, @p201, @p202, @p203, @p204, @p205, @p206, @p207, @p208, @p209, @p210, @p211, @p212, @p213, @p214, @p215, @p216, @p217, @p218, @p219, @p220, @p221, @p222, @p223, @p224, @p225, @p226, @p227, @p228, @p229, @p230, @p231, @p232, @p233, @p234, @p235, @p236, @p237, 0),
(@p238, @p239, @p240, @p241, @p242, @p243, @p244, @p245, @p246, @p247, @p248, @p249, @p250, @p251, @p252, @p253, @p254, @p255, @p256, @p257, @p258, @p259, @p260, @p261, @p262, @p263, @p264, @p265, @p266, @p267, @p268, @p269, @p270, @p271, @p272, @p273, @p274, @p275, @p276, 1),
(@p277, @p278, @p279, @p280, @p281, @p282, @p283, @p284, @p285, @p286, @p287, @p288, @p289, @p290, @p291, @p292, @p293, @p294, @p295, @p296, @p297, @p298, @p299, @p300, @p301, @p302, @p303, @p304, @p305, @p306, @p307, @p308, @p309, @p310, @p311, @p312, @p313, @p314, @p315, 2),
(@p316, @p317, @p318, @p319, @p320, @p321, @p322, @p323, @p324, @p325, @p326, @p327, @p328, @p329, @p330, @p331, @p332, @p333, @p334, @p335, @p336, @p337, @p338, @p339, @p340, @p341, @p342, @p343, @p344, @p345, @p346, @p347, @p348, @p349, @p350, @p351, @p352, @p353, @p354, 3),
(@p355, @p356, @p357, @p358, @p359, @p360, @p361, @p362, @p363, @p364, @p365, @p366, @p367, @p368, @p369, @p370, @p371, @p372, @p373, @p374, @p375, @p376, @p377, @p378, @p379, @p380, @p381, @p382, @p383, @p384, @p385, @p386, @p387, @p388, @p389, @p390, @p391, @p392, @p393, 4),
(@p394, @p395, @p396, @p397, @p398, @p399, @p400, @p401, @p402, @p403, @p404, @p405, @p406, @p407, @p408, @p409, @p410, @p411, @p412, @p413, @p414, @p415, @p416, @p417, @p418, @p419, @p420, @p421, @p422, @p423, @p424, @p425, @p426, @p427, @p428, @p429, @p430, @p431, @p432, 5),
(@p433, @p434, @p435, @p436, @p437, @p438, @p439, @p440, @p441, @p442, @p443, @p444, @p445, @p446, @p447, @p448, @p449, @p450, @p451, @p452, @p453, @p454, @p455, @p456, @p457, @p458, @p459, @p460, @p461, @p462, @p463, @p464, @p465, @p466, @p467, @p468, @p469, @p470, @p471, 6),
(@p472, @p473, @p474, @p475, @p476, @p477, @p478, @p479, @p480, @p481, @p482, @p483, @p484, @p485, @p486, @p487, @p488, @p489, @p490, @p491, @p492, @p493, @p494, @p495, @p496, @p497, @p498, @p499, @p500, @p501, @p502, @p503, @p504, @p505, @p506, @p507, @p508, @p509, @p510, 7),
(@p511, @p512, @p513, @p514, @p515, @p516, @p517, @p518, @p519, @p520, @p521, @p522, @p523, @p524, @p525, @p526, @p527, @p528, @p529, @p530, @p531, @p532, @p533, @p534, @p535, @p536, @p537, @p538, @p539, @p540, @p541, @p542, @p543, @p544, @p545, @p546, @p547, @p548, @p549, 8),
(@p550, @p551, @p552, @p553, @p554, @p555, @p556, @p557, @p558, @p559, @p560, @p561, @p562, @p563, @p564, @p565, @p566, @p567, @p568, @p569, @p570, @p571, @p572, @p573, @p574, @p575, @p576, @p577, @p578, @p579, @p580, @p581, @p582, @p583, @p584, @p585, @p586, @p587, @p588, 9),
(@p589, @p590, @p591, @p592, @p593, @p594, @p595, @p596, @p597, @p598, @p599, @p600, @p601, @p602, @p603, @p604, @p605, @p606, @p607, @p608, @p609, @p610, @p611, @p612, @p613, @p614, @p615, @p616, @p617, @p618, @p619, @p620, @p621, @p622, @p623, @p624, @p625, @p626, @p627, 10),
(@p628, @p629, @p630, @p631, @p632, @p633, @p634, @p635, @p636, @p637, @p638, @p639, @p640, @p641, @p642, @p643, @p644, @p645, @p646, @p647, @p648, @p649, @p650, @p651, @p652, @p653, @p654, @p655, @p656, @p657, @p658, @p659, @p660, @p661, @p662, @p663, @p664, @p665, @p666, 11),
(@p667, @p668, @p669, @p670, @p671, @p672, @p673, @p674, @p675, @p676, @p677, @p678, @p679, @p680, @p681, @p682, @p683, @p684, @p685, @p686, @p687, @p688, @p689, @p690, @p691, @p692, @p693, @p694, @p695, @p696, @p697, @p698, @p699, @p700, @p701, @p702, @p703, @p704, @p705, 12),
(@p706, @p707, @p708, @p709, @p710, @p711, @p712, @p713, @p714, @p715, @p716, @p717, @p718, @p719, @p720, @p721, @p722, @p723, @p724, @p725, @p726, @p727, @p728, @p729, @p730, @p731, @p732, @p733, @p734, @p735, @p736, @p737, @p738, @p739, @p740, @p741, @p742, @p743, @p744, 13),
(@p745, @p746, @p747, @p748, @p749, @p750, @p751, @p752, @p753, @p754, @p755, @p756, @p757, @p758, @p759, @p760, @p761, @p762, @p763, @p764, @p765, @p766, @p767, @p768, @p769, @p770, @p771, @p772, @p773, @p774, @p775, @p776, @p777, @p778, @p779, @p780, @p781, @p782, @p783, 14),
(@p784, @p785, @p786, @p787, @p788, @p789, @p790, @p791, @p792, @p793, @p794, @p795, @p796, @p797, @p798, @p799, @p800, @p801, @p802, @p803, @p804, @p805, @p806, @p807, @p808, @p809, @p810, @p811, @p812, @p813, @p814, @p815, @p816, @p817, @p818, @p819, @p820, @p821, @p822, 15),
(@p823, @p824, @p825, @p826, @p827, @p828, @p829, @p830, @p831, @p832, @p833, @p834, @p835, @p836, @p837, @p838, @p839, @p840, @p841, @p842, @p843, @p844, @p845, @p846, @p847, @p848, @p849, @p850, @p851, @p852, @p853, @p854, @p855, @p856, @p857, @p858, @p859, @p860, @p861, 16),
(@p862, @p863, @p864, @p865, @p866, @p867, @p868, @p869, @p870, @p871, @p872, @p873, @p874, @p875, @p876, @p877, @p878, @p879, @p880, @p881, @p882, @p883, @p884, @p885, @p886, @p887, @p888, @p889, @p890, @p891, @p892, @p893, @p894, @p895, @p896, @p897, @p898, @p899, @p900, 17),
(@p901, @p902, @p903, @p904, @p905, @p906, @p907, @p908, @p909, @p910, @p911, @p912, @p913, @p914, @p915, @p916, @p917, @p918, @p919, @p920, @p921, @p922, @p923, @p924, @p925, @p926, @p927, @p928, @p929, @p930, @p931, @p932, @p933, @p934, @p935, @p936, @p937, @p938, @p939, 18),
(@p940, @p941, @p942, @p943, @p944, @p945, @p946, @p947, @p948, @p949, @p950, @p951, @p952, @p953, @p954, @p955, @p956, @p957, @p958, @p959, @p960, @p961, @p962, @p963, @p964, @p965, @p966, @p967, @p968, @p969, @p970, @p971, @p972, @p973, @p974, @p975, @p976, @p977, @p978, 19)) AS i ([AccumulatedDepreciationAmortizationPPE], [CapitalLeaseObligations], [CashAndCashEquivalentsAtCarryingValue], [CashAndShortTermInvestments], [CommonStock], [CommonStockSharesOutstanding], [CurrentAccountsPayable], [CurrentDebt], [CurrentLongTermDebt], [CurrentNetReceivables], [DeferredRevenue], [FiscalDateEnding], [Goodwill], [IntangibleAssets], [IntangibleAssetsExcludingGoodwill], [Inventory], [Investments], [LongTermDebt], [LongTermDebtNoncurrent], [LongTermInvestments], [OtherCurrentAssets], [OtherCurrentLiabilities], [OtherNonCurrentAssets], [OtherNonCurrentLiabilities], [PropertyPlantEquipment], [ReportedCurrency], [RetainedEarnings], [ShortLongTermDebtTotal], [ShortTermDebt], [ShortTermInvestments], [Symbol], [TotalAssets], [TotalCurrentAssets], [TotalCurrentLiabilities], [TotalLiabilities], [TotalNonCurrentAssets], [TotalNonCurrentLiabilities], [TotalShareholderEquity], [TreasuryStock], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([AccumulatedDepreciationAmortizationPPE], [CapitalLeaseObligations], [CashAndCashEquivalentsAtCarryingValue], [CashAndShortTermInvestments], [CommonStock], [CommonStockSharesOutstanding], [CurrentAccountsPayable], [CurrentDebt], [CurrentLongTermDebt], [CurrentNetReceivables], [DeferredRevenue], [FiscalDateEnding], [Goodwill], [IntangibleAssets], [IntangibleAssetsExcludingGoodwill], [Inventory], [Investments], [LongTermDebt], [LongTermDebtNoncurrent], [LongTermInvestments], [OtherCurrentAssets], [OtherCurrentLiabilities], [OtherNonCurrentAssets], [OtherNonCurrentLiabilities], [PropertyPlantEquipment], [ReportedCurrency], [RetainedEarnings], [ShortLongTermDebtTotal], [ShortTermDebt], [ShortTermInvestments], [Symbol], [TotalAssets], [TotalCurrentAssets], [TotalCurrentLiabilities], [TotalLiabilities], [TotalNonCurrentAssets], [TotalNonCurrentLiabilities], [TotalShareholderEquity], [TreasuryStock])
VALUES (i.[AccumulatedDepreciationAmortizationPPE], i.[CapitalLeaseObligations], i.[CashAndCashEquivalentsAtCarryingValue], i.[CashAndShortTermInvestments], i.[CommonStock], i.[CommonStockSharesOutstanding], i.[CurrentAccountsPayable], i.[CurrentDebt], i.[CurrentLongTermDebt], i.[CurrentNetReceivables], i.[DeferredRevenue], i.[FiscalDateEnding], i.[Goodwill], i.[IntangibleAssets], i.[IntangibleAssetsExcludingGoodwill], i.[Inventory], i.[Investments], i.[LongTermDebt], i.[LongTermDebtNoncurrent], i.[LongTermInvestments], i.[OtherCurrentAssets], i.[OtherCurrentLiabilities], i.[OtherNonCurrentAssets], i.[OtherNonCurrentLiabilities], i.[PropertyPlantEquipment], i.[ReportedCurrency], i.[RetainedEarnings], i.[ShortLongTermDebtTotal], i.[ShortTermDebt], i.[ShortTermInvestments], i.[Symbol], i.[TotalAssets], i.[TotalCurrentAssets], i.[TotalCurrentLiabilities], i.[TotalLiabilities], i.[TotalNonCurrentAssets], i.[TotalNonCurrentLiabilities], i.[TotalShareholderEquity], i.[TreasuryStock])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted5;

SELECT [i].[Id] FROM @inserted5 i
ORDER BY [i].[_Position];
2022-05-12 01:16:26.126 +03:00 [INF] AddOrUpdate run successful.
2022-05-12 01:16:26.432 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CashFlow with Symbol AVDL
2022-05-12 01:16:26.434 +03:00 [INF] Generating URI for CASH_FLOW with params: symbol: AVDL
2022-05-12 01:16:26.434 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=CASH_FLOW&symbol=AVDL
2022-05-12 01:16:26.434 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=CASH_FLOW&symbol=AVDL".
2022-05-12 01:16:28.206 +03:00 [INF] Response has success status code
2022-05-12 01:16:28.206 +03:00 [INF] Trying to deserialize response.
2022-05-12 01:16:28.207 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 01:16:28.217 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__symbol_0
2022-05-12 01:16:28.218 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.CashFlow.
2022-05-12 01:16:28.225 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[ExistInApi], [c].[LastApiRefresh], [c].[LastLocalRefresh]
FROM [CashFlows] AS [c]
WHERE [c].[Symbol] = @__entity_Symbol_0
2022-05-12 01:16:28.226 +03:00 [INF] Entity does not exist. Adding to DB.
2022-05-12 01:16:28.239 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = Boolean), @p2='?' (DbType = DateTime2), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [CashFlows] ([Symbol], [ExistInApi], [LastApiRefresh], [LastLocalRefresh])
VALUES (@p0, @p1, @p2, @p3);
2022-05-12 01:16:28.286 +03:00 [INF] Executed DbCommand (45ms) [Parameters=[@p4='?' (DbType = Double), @p5='?' (DbType = Double), @p6='?' (DbType = Int64), @p7='?' (DbType = Int64), @p8='?' (DbType = Int64), @p9='?' (DbType = Int64), @p10='?' (DbType = Int64), @p11='?' (DbType = Int64), @p12='?' (DbType = Int64), @p13='?' (DbType = Double), @p14='?' (DbType = Int64), @p15='?' (DbType = Double), @p16='?' (DbType = Int64), @p17='?' (Size = 4000), @p18='?' (DbType = Double), @p19='?' (DbType = Double), @p20='?' (DbType = Int64), @p21='?' (DbType = Int64), @p22='?' (DbType = Int64), @p23='?' (DbType = Int64), @p24='?' (DbType = Int64), @p25='?' (DbType = Int64), @p26='?' (DbType = Int64), @p27='?' (DbType = Int64), @p28='?' (DbType = Int64), @p29='?' (DbType = Double), @p30='?' (DbType = Int64), @p31='?' (DbType = Int64), @p32='?' (Size = 4000), @p33='?' (Size = 450), @p34='?' (DbType = Double), @p35='?' (DbType = Double), @p36='?' (DbType = Int64), @p37='?' (DbType = Int64), @p38='?' (DbType = Int64), @p39='?' (DbType = Int64), @p40='?' (DbType = Int64), @p41='?' (DbType = Int64), @p42='?' (DbType = Int64), @p43='?' (DbType = Double), @p44='?' (DbType = Int64), @p45='?' (DbType = Double), @p46='?' (DbType = Int64), @p47='?' (Size = 4000), @p48='?' (DbType = Double), @p49='?' (DbType = Double), @p50='?' (DbType = Int64), @p51='?' (DbType = Int64), @p52='?' (DbType = Int64), @p53='?' (DbType = Int64), @p54='?' (DbType = Int64), @p55='?' (DbType = Int64), @p56='?' (DbType = Int64), @p57='?' (DbType = Int64), @p58='?' (DbType = Int64), @p59='?' (DbType = Double), @p60='?' (DbType = Int64), @p61='?' (DbType = Int64), @p62='?' (Size = 4000), @p63='?' (Size = 450), @p64='?' (DbType = Double), @p65='?' (DbType = Double), @p66='?' (DbType = Int64), @p67='?' (DbType = Int64), @p68='?' (DbType = Int64), @p69='?' (DbType = Int64), @p70='?' (DbType = Int64), @p71='?' (DbType = Int64), @p72='?' (DbType = Int64), @p73='?' (DbType = Double), @p74='?' (DbType = Int64), @p75='?' (DbType = Double), @p76='?' (DbType = Int64), @p77='?' (Size = 4000), @p78='?' (DbType = Double), @p79='?' (DbType = Double), @p80='?' (DbType = Int64), @p81='?' (DbType = Int64), @p82='?' (DbType = Int64), @p83='?' (DbType = Int64), @p84='?' (DbType = Int64), @p85='?' (DbType = Int64), @p86='?' (DbType = Int64), @p87='?' (DbType = Int64), @p88='?' (DbType = Int64), @p89='?' (DbType = Double), @p90='?' (DbType = Int64), @p91='?' (DbType = Int64), @p92='?' (Size = 4000), @p93='?' (Size = 450), @p94='?' (DbType = Double), @p95='?' (DbType = Double), @p96='?' (DbType = Int64), @p97='?' (DbType = Int64), @p98='?' (DbType = Int64), @p99='?' (DbType = Int64), @p100='?' (DbType = Int64), @p101='?' (DbType = Int64), @p102='?' (DbType = Int64), @p103='?' (DbType = Double), @p104='?' (DbType = Int64), @p105='?' (DbType = Double), @p106='?' (DbType = Int64), @p107='?' (Size = 4000), @p108='?' (DbType = Double), @p109='?' (DbType = Double), @p110='?' (DbType = Int64), @p111='?' (DbType = Int64), @p112='?' (DbType = Int64), @p113='?' (DbType = Int64), @p114='?' (DbType = Int64), @p115='?' (DbType = Int64), @p116='?' (DbType = Int64), @p117='?' (DbType = Int64), @p118='?' (DbType = Int64), @p119='?' (DbType = Double), @p120='?' (DbType = Int64), @p121='?' (DbType = Int64), @p122='?' (Size = 4000), @p123='?' (Size = 450), @p124='?' (DbType = Double), @p125='?' (DbType = Double), @p126='?' (DbType = Int64), @p127='?' (DbType = Int64), @p128='?' (DbType = Int64), @p129='?' (DbType = Int64), @p130='?' (DbType = Int64), @p131='?' (DbType = Int64), @p132='?' (DbType = Int64), @p133='?' (DbType = Double), @p134='?' (DbType = Int64), @p135='?' (DbType = Double), @p136='?' (DbType = Int64), @p137='?' (Size = 4000), @p138='?' (DbType = Double), @p139='?' (DbType = Double), @p140='?' (DbType = Int64), @p141='?' (DbType = Int64), @p142='?' (DbType = Int64), @p143='?' (DbType = Int64), @p144='?' (DbType = Int64), @p145='?' (DbType = Int64), @p146='?' (DbType = Int64), @p147='?' (DbType = Int64), @p148='?' (DbType = Int64), @p149='?' (DbType = Double), @p150='?' (DbType = Int64), @p151='?' (DbType = Int64), @p152='?' (Size = 4000), @p153='?' (Size = 450), @p154='?' (DbType = Double), @p155='?' (DbType = Double), @p156='?' (DbType = Int64), @p157='?' (DbType = Int64), @p158='?' (DbType = Int64), @p159='?' (DbType = Int64), @p160='?' (DbType = Int64), @p161='?' (DbType = Int64), @p162='?' (DbType = Int64), @p163='?' (DbType = Double), @p164='?' (DbType = Int64), @p165='?' (DbType = Double), @p166='?' (DbType = Int64), @p167='?' (Size = 4000), @p168='?' (DbType = Double), @p169='?' (DbType = Double), @p170='?' (DbType = Int64), @p171='?' (DbType = Int64), @p172='?' (DbType = Int64), @p173='?' (DbType = Int64), @p174='?' (DbType = Int64), @p175='?' (DbType = Int64), @p176='?' (DbType = Int64), @p177='?' (DbType = Int64), @p178='?' (DbType = Int64), @p179='?' (DbType = Double), @p180='?' (DbType = Int64), @p181='?' (DbType = Int64), @p182='?' (Size = 4000), @p183='?' (Size = 450), @p184='?' (DbType = Double), @p185='?' (DbType = Double), @p186='?' (DbType = Int64), @p187='?' (DbType = Int64), @p188='?' (DbType = Int64), @p189='?' (DbType = Int64), @p190='?' (DbType = Int64), @p191='?' (DbType = Int64), @p192='?' (DbType = Int64), @p193='?' (DbType = Double), @p194='?' (DbType = Int64), @p195='?' (DbType = Double), @p196='?' (DbType = Int64), @p197='?' (Size = 4000), @p198='?' (DbType = Double), @p199='?' (DbType = Double), @p200='?' (DbType = Int64), @p201='?' (DbType = Int64), @p202='?' (DbType = Int64), @p203='?' (DbType = Int64), @p204='?' (DbType = Int64), @p205='?' (DbType = Int64), @p206='?' (DbType = Int64), @p207='?' (DbType = Int64), @p208='?' (DbType = Int64), @p209='?' (DbType = Double), @p210='?' (DbType = Int64), @p211='?' (DbType = Int64), @p212='?' (Size = 4000), @p213='?' (Size = 450), @p214='?' (DbType = Double), @p215='?' (DbType = Double), @p216='?' (DbType = Int64), @p217='?' (DbType = Int64), @p218='?' (DbType = Int64), @p219='?' (DbType = Int64), @p220='?' (DbType = Int64), @p221='?' (DbType = Int64), @p222='?' (DbType = Int64), @p223='?' (DbType = Double), @p224='?' (DbType = Int64), @p225='?' (DbType = Double), @p226='?' (DbType = Int64), @p227='?' (Size = 4000), @p228='?' (DbType = Double), @p229='?' (DbType = Double), @p230='?' (DbType = Int64), @p231='?' (DbType = Int64), @p232='?' (DbType = Int64), @p233='?' (DbType = Int64), @p234='?' (DbType = Int64), @p235='?' (DbType = Int64), @p236='?' (DbType = Int64), @p237='?' (DbType = Int64), @p238='?' (DbType = Int64), @p239='?' (DbType = Double), @p240='?' (DbType = Int64), @p241='?' (DbType = Int64), @p242='?' (Size = 4000), @p243='?' (Size = 450), @p244='?' (DbType = Double), @p245='?' (DbType = Double), @p246='?' (DbType = Int64), @p247='?' (DbType = Int64), @p248='?' (DbType = Int64), @p249='?' (DbType = Int64), @p250='?' (DbType = Int64), @p251='?' (DbType = Int64), @p252='?' (DbType = Int64), @p253='?' (DbType = Double), @p254='?' (DbType = Int64), @p255='?' (DbType = Double), @p256='?' (DbType = Int64), @p257='?' (Size = 4000), @p258='?' (DbType = Double), @p259='?' (DbType = Double), @p260='?' (DbType = Int64), @p261='?' (DbType = Int64), @p262='?' (DbType = Int64), @p263='?' (DbType = Int64), @p264='?' (DbType = Int64), @p265='?' (DbType = Int64), @p266='?' (DbType = Int64), @p267='?' (DbType = Int64), @p268='?' (DbType = Int64), @p269='?' (DbType = Double), @p270='?' (DbType = Int64), @p271='?' (DbType = Int64), @p272='?' (Size = 4000), @p273='?' (Size = 450), @p274='?' (DbType = Double), @p275='?' (DbType = Double), @p276='?' (DbType = Int64), @p277='?' (DbType = Int64), @p278='?' (DbType = Int64), @p279='?' (DbType = Int64), @p280='?' (DbType = Int64), @p281='?' (DbType = Int64), @p282='?' (DbType = Int64), @p283='?' (DbType = Double), @p284='?' (DbType = Int64), @p285='?' (DbType = Double), @p286='?' (DbType = Int64), @p287='?' (Size = 4000), @p288='?' (DbType = Double), @p289='?' (DbType = Double), @p290='?' (DbType = Int64), @p291='?' (DbType = Int64), @p292='?' (DbType = Int64), @p293='?' (DbType = Int64), @p294='?' (DbType = Int64), @p295='?' (DbType = Int64), @p296='?' (DbType = Int64), @p297='?' (DbType = Int64), @p298='?' (DbType = Int64), @p299='?' (DbType = Double), @p300='?' (DbType = Int64), @p301='?' (DbType = Int64), @p302='?' (Size = 4000), @p303='?' (Size = 450), @p304='?' (DbType = Double), @p305='?' (DbType = Double), @p306='?' (DbType = Int64), @p307='?' (DbType = Int64), @p308='?' (DbType = Int64), @p309='?' (DbType = Int64), @p310='?' (DbType = Int64), @p311='?' (DbType = Int64), @p312='?' (DbType = Int64), @p313='?' (DbType = Double), @p314='?' (DbType = Int64), @p315='?' (DbType = Double), @p316='?' (DbType = Int64), @p317='?' (Size = 4000), @p318='?' (DbType = Double), @p319='?' (DbType = Double), @p320='?' (DbType = Int64), @p321='?' (DbType = Int64), @p322='?' (DbType = Int64), @p323='?' (DbType = Int64), @p324='?' (DbType = Int64), @p325='?' (DbType = Int64), @p326='?' (DbType = Int64), @p327='?' (DbType = Int64), @p328='?' (DbType = Int64), @p329='?' (DbType = Double), @p330='?' (DbType = Int64), @p331='?' (DbType = Int64), @p332='?' (Size = 4000), @p333='?' (Size = 450), @p334='?' (DbType = Double), @p335='?' (DbType = Double), @p336='?' (DbType = Int64), @p337='?' (DbType = Int64), @p338='?' (DbType = Int64), @p339='?' (DbType = Int64), @p340='?' (DbType = Int64), @p341='?' (DbType = Int64), @p342='?' (DbType = Int64), @p343='?' (DbType = Double), @p344='?' (DbType = Int64), @p345='?' (DbType = Double), @p346='?' (DbType = Int64), @p347='?' (Size = 4000), @p348='?' (DbType = Double), @p349='?' (DbType = Double), @p350='?' (DbType = Int64), @p351='?' (DbType = Int64), @p352='?' (DbType = Int64), @p353='?' (DbType = Int64), @p354='?' (DbType = Int64), @p355='?' (DbType = Int64), @p356='?' (DbType = Int64), @p357='?' (DbType = Int64), @p358='?' (DbType = Int64), @p359='?' (DbType = Double), @p360='?' (DbType = Int64), @p361='?' (DbType = Int64), @p362='?' (Size = 4000), @p363='?' (Size = 450), @p364='?' (DbType = Double), @p365='?' (DbType = Double), @p366='?' (DbType = Int64), @p367='?' (DbType = Int64), @p368='?' (DbType = Int64), @p369='?' (DbType = Int64), @p370='?' (DbType = Int64), @p371='?' (DbType = Int64), @p372='?' (DbType = Int64), @p373='?' (DbType = Double), @p374='?' (DbType = Int64), @p375='?' (DbType = Double), @p376='?' (DbType = Int64), @p377='?' (Size = 4000), @p378='?' (DbType = Double), @p379='?' (DbType = Double), @p380='?' (DbType = Int64), @p381='?' (DbType = Int64), @p382='?' (DbType = Int64), @p383='?' (DbType = Int64), @p384='?' (DbType = Int64), @p385='?' (DbType = Int64), @p386='?' (DbType = Int64), @p387='?' (DbType = Int64), @p388='?' (DbType = Int64), @p389='?' (DbType = Double), @p390='?' (DbType = Int64), @p391='?' (DbType = Int64), @p392='?' (Size = 4000), @p393='?' (Size = 450), @p394='?' (DbType = Double), @p395='?' (DbType = Double), @p396='?' (DbType = Int64), @p397='?' (DbType = Int64), @p398='?' (DbType = Int64), @p399='?' (DbType = Int64), @p400='?' (DbType = Int64), @p401='?' (DbType = Int64), @p402='?' (DbType = Int64), @p403='?' (DbType = Double), @p404='?' (DbType = Int64), @p405='?' (DbType = Double), @p406='?' (DbType = Int64), @p407='?' (Size = 4000), @p408='?' (DbType = Double), @p409='?' (DbType = Double), @p410='?' (DbType = Int64), @p411='?' (DbType = Int64), @p412='?' (DbType = Int64), @p413='?' (DbType = Int64), @p414='?' (DbType = Int64), @p415='?' (DbType = Int64), @p416='?' (DbType = Int64), @p417='?' (DbType = Int64), @p418='?' (DbType = Int64), @p419='?' (DbType = Double), @p420='?' (DbType = Int64), @p421='?' (DbType = Int64), @p422='?' (Size = 4000), @p423='?' (Size = 450), @p424='?' (DbType = Double), @p425='?' (DbType = Double), @p426='?' (DbType = Int64), @p427='?' (DbType = Int64), @p428='?' (DbType = Int64), @p429='?' (DbType = Int64), @p430='?' (DbType = Int64), @p431='?' (DbType = Int64), @p432='?' (DbType = Int64), @p433='?' (DbType = Double), @p434='?' (DbType = Int64), @p435='?' (DbType = Double), @p436='?' (DbType = Int64), @p437='?' (Size = 4000), @p438='?' (DbType = Double), @p439='?' (DbType = Double), @p440='?' (DbType = Int64), @p441='?' (DbType = Int64), @p442='?' (DbType = Int64), @p443='?' (DbType = Int64), @p444='?' (DbType = Int64), @p445='?' (DbType = Int64), @p446='?' (DbType = Int64), @p447='?' (DbType = Int64), @p448='?' (DbType = Int64), @p449='?' (DbType = Double), @p450='?' (DbType = Int64), @p451='?' (DbType = Int64), @p452='?' (Size = 4000), @p453='?' (Size = 450), @p454='?' (DbType = Double), @p455='?' (DbType = Double), @p456='?' (DbType = Int64), @p457='?' (DbType = Int64), @p458='?' (DbType = Int64), @p459='?' (DbType = Int64), @p460='?' (DbType = Int64), @p461='?' (DbType = Int64), @p462='?' (DbType = Int64), @p463='?' (DbType = Double), @p464='?' (DbType = Int64), @p465='?' (DbType = Double), @p466='?' (DbType = Int64), @p467='?' (Size = 4000), @p468='?' (DbType = Double), @p469='?' (DbType = Double), @p470='?' (DbType = Int64), @p471='?' (DbType = Int64), @p472='?' (DbType = Int64), @p473='?' (DbType = Int64), @p474='?' (DbType = Int64), @p475='?' (DbType = Int64), @p476='?' (DbType = Int64), @p477='?' (DbType = Int64), @p478='?' (DbType = Int64), @p479='?' (DbType = Double), @p480='?' (DbType = Int64), @p481='?' (DbType = Int64), @p482='?' (Size = 4000), @p483='?' (Size = 450), @p484='?' (DbType = Double), @p485='?' (DbType = Double), @p486='?' (DbType = Int64), @p487='?' (DbType = Int64), @p488='?' (DbType = Int64), @p489='?' (DbType = Int64), @p490='?' (DbType = Int64), @p491='?' (DbType = Int64), @p492='?' (DbType = Int64), @p493='?' (DbType = Double), @p494='?' (DbType = Int64), @p495='?' (DbType = Double), @p496='?' (DbType = Int64), @p497='?' (Size = 4000), @p498='?' (DbType = Double), @p499='?' (DbType = Double), @p500='?' (DbType = Int64), @p501='?' (DbType = Int64), @p502='?' (DbType = Int64), @p503='?' (DbType = Int64), @p504='?' (DbType = Int64), @p505='?' (DbType = Int64), @p506='?' (DbType = Int64), @p507='?' (DbType = Int64), @p508='?' (DbType = Int64), @p509='?' (DbType = Double), @p510='?' (DbType = Int64), @p511='?' (DbType = Int64), @p512='?' (Size = 4000), @p513='?' (Size = 450), @p514='?' (DbType = Double), @p515='?' (DbType = Double), @p516='?' (DbType = Int64), @p517='?' (DbType = Int64), @p518='?' (DbType = Int64), @p519='?' (DbType = Int64), @p520='?' (DbType = Int64), @p521='?' (DbType = Int64), @p522='?' (DbType = Int64), @p523='?' (DbType = Double), @p524='?' (DbType = Int64), @p525='?' (DbType = Double), @p526='?' (DbType = Int64), @p527='?' (Size = 4000), @p528='?' (DbType = Double), @p529='?' (DbType = Double), @p530='?' (DbType = Int64), @p531='?' (DbType = Int64), @p532='?' (DbType = Int64), @p533='?' (DbType = Int64), @p534='?' (DbType = Int64), @p535='?' (DbType = Int64), @p536='?' (DbType = Int64), @p537='?' (DbType = Int64), @p538='?' (DbType = Int64), @p539='?' (DbType = Double), @p540='?' (DbType = Int64), @p541='?' (DbType = Int64), @p542='?' (Size = 4000), @p543='?' (Size = 450), @p544='?' (DbType = Double), @p545='?' (DbType = Double), @p546='?' (DbType = Int64), @p547='?' (DbType = Int64), @p548='?' (DbType = Int64), @p549='?' (DbType = Int64), @p550='?' (DbType = Int64), @p551='?' (DbType = Int64), @p552='?' (DbType = Int64), @p553='?' (DbType = Double), @p554='?' (DbType = Int64), @p555='?' (DbType = Double), @p556='?' (DbType = Int64), @p557='?' (Size = 4000), @p558='?' (DbType = Double), @p559='?' (DbType = Double), @p560='?' (DbType = Int64), @p561='?' (DbType = Int64), @p562='?' (DbType = Int64), @p563='?' (DbType = Int64), @p564='?' (DbType = Int64), @p565='?' (DbType = Int64), @p566='?' (DbType = Int64), @p567='?' (DbType = Int64), @p568='?' (DbType = Int64), @p569='?' (DbType = Double), @p570='?' (DbType = Int64), @p571='?' (DbType = Int64), @p572='?' (Size = 4000), @p573='?' (Size = 450), @p574='?' (DbType = Double), @p575='?' (DbType = Double), @p576='?' (DbType = Int64), @p577='?' (DbType = Int64), @p578='?' (DbType = Int64), @p579='?' (DbType = Int64), @p580='?' (DbType = Int64), @p581='?' (DbType = Int64), @p582='?' (DbType = Int64), @p583='?' (DbType = Double), @p584='?' (DbType = Int64), @p585='?' (DbType = Double), @p586='?' (DbType = Int64), @p587='?' (Size = 4000), @p588='?' (DbType = Double), @p589='?' (DbType = Double), @p590='?' (DbType = Int64), @p591='?' (DbType = Int64), @p592='?' (DbType = Int64), @p593='?' (DbType = Int64), @p594='?' (DbType = Int64), @p595='?' (DbType = Int64), @p596='?' (DbType = Int64), @p597='?' (DbType = Int64), @p598='?' (DbType = Int64), @p599='?' (DbType = Double), @p600='?' (DbType = Int64), @p601='?' (DbType = Int64), @p602='?' (Size = 4000), @p603='?' (Size = 450), @p604='?' (DbType = Double), @p605='?' (DbType = Double), @p606='?' (DbType = Int64), @p607='?' (DbType = Int64), @p608='?' (DbType = Int64), @p609='?' (DbType = Int64), @p610='?' (DbType = Int64), @p611='?' (DbType = Int64), @p612='?' (DbType = Int64), @p613='?' (DbType = Double), @p614='?' (DbType = Int64), @p615='?' (DbType = Double), @p616='?' (DbType = Int64), @p617='?' (Size = 4000), @p618='?' (DbType = Double), @p619='?' (DbType = Double), @p620='?' (DbType = Int64), @p621='?' (DbType = Int64), @p622='?' (DbType = Int64), @p623='?' (DbType = Int64), @p624='?' (DbType = Int64), @p625='?' (DbType = Int64), @p626='?' (DbType = Int64), @p627='?' (DbType = Int64), @p628='?' (DbType = Int64), @p629='?' (DbType = Double), @p630='?' (DbType = Int64), @p631='?' (DbType = Int64), @p632='?' (Size = 4000), @p633='?' (Size = 450), @p634='?' (DbType = Double), @p635='?' (DbType = Double), @p636='?' (DbType = Int64), @p637='?' (DbType = Int64), @p638='?' (DbType = Int64), @p639='?' (DbType = Int64), @p640='?' (DbType = Int64), @p641='?' (DbType = Int64), @p642='?' (DbType = Int64), @p643='?' (DbType = Double), @p644='?' (DbType = Int64), @p645='?' (DbType = Double), @p646='?' (DbType = Int64), @p647='?' (Size = 4000), @p648='?' (DbType = Double), @p649='?' (DbType = Double), @p650='?' (DbType = Int64), @p651='?' (DbType = Int64), @p652='?' (DbType = Int64), @p653='?' (DbType = Int64), @p654='?' (DbType = Int64), @p655='?' (DbType = Int64), @p656='?' (DbType = Int64), @p657='?' (DbType = Int64), @p658='?' (DbType = Int64), @p659='?' (DbType = Double), @p660='?' (DbType = Int64), @p661='?' (DbType = Int64), @p662='?' (Size = 4000), @p663='?' (Size = 450), @p664='?' (DbType = Double), @p665='?' (DbType = Double), @p666='?' (DbType = Int64), @p667='?' (DbType = Int64), @p668='?' (DbType = Int64), @p669='?' (DbType = Int64), @p670='?' (DbType = Int64), @p671='?' (DbType = Int64), @p672='?' (DbType = Int64), @p673='?' (DbType = Double), @p674='?' (DbType = Int64), @p675='?' (DbType = Double), @p676='?' (DbType = Int64), @p677='?' (Size = 4000), @p678='?' (DbType = Double), @p679='?' (DbType = Double), @p680='?' (DbType = Int64), @p681='?' (DbType = Int64), @p682='?' (DbType = Int64), @p683='?' (DbType = Int64), @p684='?' (DbType = Int64), @p685='?' (DbType = Int64), @p686='?' (DbType = Int64), @p687='?' (DbType = Int64), @p688='?' (DbType = Int64), @p689='?' (DbType = Double), @p690='?' (DbType = Int64), @p691='?' (DbType = Int64), @p692='?' (Size = 4000), @p693='?' (Size = 450), @p694='?' (DbType = Double), @p695='?' (DbType = Double), @p696='?' (DbType = Int64), @p697='?' (DbType = Int64), @p698='?' (DbType = Int64), @p699='?' (DbType = Int64), @p700='?' (DbType = Int64), @p701='?' (DbType = Int64), @p702='?' (DbType = Int64), @p703='?' (DbType = Double), @p704='?' (DbType = Int64), @p705='?' (DbType = Double), @p706='?' (DbType = Int64), @p707='?' (Size = 4000), @p708='?' (DbType = Double), @p709='?' (DbType = Double), @p710='?' (DbType = Int64), @p711='?' (DbType = Int64), @p712='?' (DbType = Int64), @p713='?' (DbType = Int64), @p714='?' (DbType = Int64), @p715='?' (DbType = Int64), @p716='?' (DbType = Int64), @p717='?' (DbType = Int64), @p718='?' (DbType = Int64), @p719='?' (DbType = Double), @p720='?' (DbType = Int64), @p721='?' (DbType = Int64), @p722='?' (Size = 4000), @p723='?' (Size = 450), @p724='?' (DbType = Double), @p725='?' (DbType = Double), @p726='?' (DbType = Int64), @p727='?' (DbType = Int64), @p728='?' (DbType = Int64), @p729='?' (DbType = Int64), @p730='?' (DbType = Int64), @p731='?' (DbType = Int64), @p732='?' (DbType = Int64), @p733='?' (DbType = Double), @p734='?' (DbType = Int64), @p735='?' (DbType = Double), @p736='?' (DbType = Int64), @p737='?' (Size = 4000), @p738='?' (DbType = Double), @p739='?' (DbType = Double), @p740='?' (DbType = Int64), @p741='?' (DbType = Int64), @p742='?' (DbType = Int64), @p743='?' (DbType = Int64), @p744='?' (DbType = Int64), @p745='?' (DbType = Int64), @p746='?' (DbType = Int64), @p747='?' (DbType = Int64), @p748='?' (DbType = Int64), @p749='?' (DbType = Double), @p750='?' (DbType = Int64), @p751='?' (DbType = Int64), @p752='?' (Size = 4000), @p753='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
DECLARE @inserted0 TABLE ([Id] int, [_Position] [int]);
MERGE [CashFlowAnnualReport] USING (
VALUES (@p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21, @p22, @p23, @p24, @p25, @p26, @p27, @p28, @p29, @p30, @p31, @p32, @p33, 0),
(@p34, @p35, @p36, @p37, @p38, @p39, @p40, @p41, @p42, @p43, @p44, @p45, @p46, @p47, @p48, @p49, @p50, @p51, @p52, @p53, @p54, @p55, @p56, @p57, @p58, @p59, @p60, @p61, @p62, @p63, 1),
(@p64, @p65, @p66, @p67, @p68, @p69, @p70, @p71, @p72, @p73, @p74, @p75, @p76, @p77, @p78, @p79, @p80, @p81, @p82, @p83, @p84, @p85, @p86, @p87, @p88, @p89, @p90, @p91, @p92, @p93, 2),
(@p94, @p95, @p96, @p97, @p98, @p99, @p100, @p101, @p102, @p103, @p104, @p105, @p106, @p107, @p108, @p109, @p110, @p111, @p112, @p113, @p114, @p115, @p116, @p117, @p118, @p119, @p120, @p121, @p122, @p123, 3),
(@p124, @p125, @p126, @p127, @p128, @p129, @p130, @p131, @p132, @p133, @p134, @p135, @p136, @p137, @p138, @p139, @p140, @p141, @p142, @p143, @p144, @p145, @p146, @p147, @p148, @p149, @p150, @p151, @p152, @p153, 4)) AS i ([CapitalExpenditures], [CashflowFromFinancing], [CashflowFromInvestment], [ChangeInCashAndCashEquivalents], [ChangeInExchangeRate], [ChangeInInventory], [ChangeInOperatingAssets], [ChangeInOperatingLiabilities], [ChangeInReceivables], [DepreciationDepletionAndAmortization], [DividendPayout], [DividendPayoutCommonStock], [DividendPayoutPreferredStock], [FiscalDateEnding], [NetIncome], [OperatingCashFlow], [PaymentsForOperatingActivities], [PaymentsForRepurchaseOfCommonStock], [PaymentsForRepurchaseOfEquity], [PaymentsForRepurchaseOfPreferredStock], [ProceedsFromIssuanceOfCommonStock], [ProceedsFromIssuanceOfLongTermDebtAndCapitalSecuritiesNet], [ProceedsFromIssuanceOfPreferredStock], [ProceedsFromOperatingActivities], [ProceedsFromRepaymentsOfShortTermDebt], [ProceedsFromRepurchaseOfEquity], [ProceedsFromSaleOfTreasuryStock], [ProfitLoss], [ReportedCurrency], [Symbol], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([CapitalExpenditures], [CashflowFromFinancing], [CashflowFromInvestment], [ChangeInCashAndCashEquivalents], [ChangeInExchangeRate], [ChangeInInventory], [ChangeInOperatingAssets], [ChangeInOperatingLiabilities], [ChangeInReceivables], [DepreciationDepletionAndAmortization], [DividendPayout], [DividendPayoutCommonStock], [DividendPayoutPreferredStock], [FiscalDateEnding], [NetIncome], [OperatingCashFlow], [PaymentsForOperatingActivities], [PaymentsForRepurchaseOfCommonStock], [PaymentsForRepurchaseOfEquity], [PaymentsForRepurchaseOfPreferredStock], [ProceedsFromIssuanceOfCommonStock], [ProceedsFromIssuanceOfLongTermDebtAndCapitalSecuritiesNet], [ProceedsFromIssuanceOfPreferredStock], [ProceedsFromOperatingActivities], [ProceedsFromRepaymentsOfShortTermDebt], [ProceedsFromRepurchaseOfEquity], [ProceedsFromSaleOfTreasuryStock], [ProfitLoss], [ReportedCurrency], [Symbol])
VALUES (i.[CapitalExpenditures], i.[CashflowFromFinancing], i.[CashflowFromInvestment], i.[ChangeInCashAndCashEquivalents], i.[ChangeInExchangeRate], i.[ChangeInInventory], i.[ChangeInOperatingAssets], i.[ChangeInOperatingLiabilities], i.[ChangeInReceivables], i.[DepreciationDepletionAndAmortization], i.[DividendPayout], i.[DividendPayoutCommonStock], i.[DividendPayoutPreferredStock], i.[FiscalDateEnding], i.[NetIncome], i.[OperatingCashFlow], i.[PaymentsForOperatingActivities], i.[PaymentsForRepurchaseOfCommonStock], i.[PaymentsForRepurchaseOfEquity], i.[PaymentsForRepurchaseOfPreferredStock], i.[ProceedsFromIssuanceOfCommonStock], i.[ProceedsFromIssuanceOfLongTermDebtAndCapitalSecuritiesNet], i.[ProceedsFromIssuanceOfPreferredStock], i.[ProceedsFromOperatingActivities], i.[ProceedsFromRepaymentsOfShortTermDebt], i.[ProceedsFromRepurchaseOfEquity], i.[ProceedsFromSaleOfTreasuryStock], i.[ProfitLoss], i.[ReportedCurrency], i.[Symbol])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted0;

SELECT [i].[Id] FROM @inserted0 i
ORDER BY [i].[_Position];

DECLARE @inserted5 TABLE ([Id] int, [_Position] [int]);
MERGE [CashFlowQuarterlyReport] USING (
VALUES (@p154, @p155, @p156, @p157, @p158, @p159, @p160, @p161, @p162, @p163, @p164, @p165, @p166, @p167, @p168, @p169, @p170, @p171, @p172, @p173, @p174, @p175, @p176, @p177, @p178, @p179, @p180, @p181, @p182, @p183, 0),
(@p184, @p185, @p186, @p187, @p188, @p189, @p190, @p191, @p192, @p193, @p194, @p195, @p196, @p197, @p198, @p199, @p200, @p201, @p202, @p203, @p204, @p205, @p206, @p207, @p208, @p209, @p210, @p211, @p212, @p213, 1),
(@p214, @p215, @p216, @p217, @p218, @p219, @p220, @p221, @p222, @p223, @p224, @p225, @p226, @p227, @p228, @p229, @p230, @p231, @p232, @p233, @p234, @p235, @p236, @p237, @p238, @p239, @p240, @p241, @p242, @p243, 2),
(@p244, @p245, @p246, @p247, @p248, @p249, @p250, @p251, @p252, @p253, @p254, @p255, @p256, @p257, @p258, @p259, @p260, @p261, @p262, @p263, @p264, @p265, @p266, @p267, @p268, @p269, @p270, @p271, @p272, @p273, 3),
(@p274, @p275, @p276, @p277, @p278, @p279, @p280, @p281, @p282, @p283, @p284, @p285, @p286, @p287, @p288, @p289, @p290, @p291, @p292, @p293, @p294, @p295, @p296, @p297, @p298, @p299, @p300, @p301, @p302, @p303, 4),
(@p304, @p305, @p306, @p307, @p308, @p309, @p310, @p311, @p312, @p313, @p314, @p315, @p316, @p317, @p318, @p319, @p320, @p321, @p322, @p323, @p324, @p325, @p326, @p327, @p328, @p329, @p330, @p331, @p332, @p333, 5),
(@p334, @p335, @p336, @p337, @p338, @p339, @p340, @p341, @p342, @p343, @p344, @p345, @p346, @p347, @p348, @p349, @p350, @p351, @p352, @p353, @p354, @p355, @p356, @p357, @p358, @p359, @p360, @p361, @p362, @p363, 6),
(@p364, @p365, @p366, @p367, @p368, @p369, @p370, @p371, @p372, @p373, @p374, @p375, @p376, @p377, @p378, @p379, @p380, @p381, @p382, @p383, @p384, @p385, @p386, @p387, @p388, @p389, @p390, @p391, @p392, @p393, 7),
(@p394, @p395, @p396, @p397, @p398, @p399, @p400, @p401, @p402, @p403, @p404, @p405, @p406, @p407, @p408, @p409, @p410, @p411, @p412, @p413, @p414, @p415, @p416, @p417, @p418, @p419, @p420, @p421, @p422, @p423, 8),
(@p424, @p425, @p426, @p427, @p428, @p429, @p430, @p431, @p432, @p433, @p434, @p435, @p436, @p437, @p438, @p439, @p440, @p441, @p442, @p443, @p444, @p445, @p446, @p447, @p448, @p449, @p450, @p451, @p452, @p453, 9),
(@p454, @p455, @p456, @p457, @p458, @p459, @p460, @p461, @p462, @p463, @p464, @p465, @p466, @p467, @p468, @p469, @p470, @p471, @p472, @p473, @p474, @p475, @p476, @p477, @p478, @p479, @p480, @p481, @p482, @p483, 10),
(@p484, @p485, @p486, @p487, @p488, @p489, @p490, @p491, @p492, @p493, @p494, @p495, @p496, @p497, @p498, @p499, @p500, @p501, @p502, @p503, @p504, @p505, @p506, @p507, @p508, @p509, @p510, @p511, @p512, @p513, 11),
(@p514, @p515, @p516, @p517, @p518, @p519, @p520, @p521, @p522, @p523, @p524, @p525, @p526, @p527, @p528, @p529, @p530, @p531, @p532, @p533, @p534, @p535, @p536, @p537, @p538, @p539, @p540, @p541, @p542, @p543, 12),
(@p544, @p545, @p546, @p547, @p548, @p549, @p550, @p551, @p552, @p553, @p554, @p555, @p556, @p557, @p558, @p559, @p560, @p561, @p562, @p563, @p564, @p565, @p566, @p567, @p568, @p569, @p570, @p571, @p572, @p573, 13),
(@p574, @p575, @p576, @p577, @p578, @p579, @p580, @p581, @p582, @p583, @p584, @p585, @p586, @p587, @p588, @p589, @p590, @p591, @p592, @p593, @p594, @p595, @p596, @p597, @p598, @p599, @p600, @p601, @p602, @p603, 14),
(@p604, @p605, @p606, @p607, @p608, @p609, @p610, @p611, @p612, @p613, @p614, @p615, @p616, @p617, @p618, @p619, @p620, @p621, @p622, @p623, @p624, @p625, @p626, @p627, @p628, @p629, @p630, @p631, @p632, @p633, 15),
(@p634, @p635, @p636, @p637, @p638, @p639, @p640, @p641, @p642, @p643, @p644, @p645, @p646, @p647, @p648, @p649, @p650, @p651, @p652, @p653, @p654, @p655, @p656, @p657, @p658, @p659, @p660, @p661, @p662, @p663, 16),
(@p664, @p665, @p666, @p667, @p668, @p669, @p670, @p671, @p672, @p673, @p674, @p675, @p676, @p677, @p678, @p679, @p680, @p681, @p682, @p683, @p684, @p685, @p686, @p687, @p688, @p689, @p690, @p691, @p692, @p693, 17),
(@p694, @p695, @p696, @p697, @p698, @p699, @p700, @p701, @p702, @p703, @p704, @p705, @p706, @p707, @p708, @p709, @p710, @p711, @p712, @p713, @p714, @p715, @p716, @p717, @p718, @p719, @p720, @p721, @p722, @p723, 18),
(@p724, @p725, @p726, @p727, @p728, @p729, @p730, @p731, @p732, @p733, @p734, @p735, @p736, @p737, @p738, @p739, @p740, @p741, @p742, @p743, @p744, @p745, @p746, @p747, @p748, @p749, @p750, @p751, @p752, @p753, 19)) AS i ([CapitalExpenditures], [CashflowFromFinancing], [CashflowFromInvestment], [ChangeInCashAndCashEquivalents], [ChangeInExchangeRate], [ChangeInInventory], [ChangeInOperatingAssets], [ChangeInOperatingLiabilities], [ChangeInReceivables], [DepreciationDepletionAndAmortization], [DividendPayout], [DividendPayoutCommonStock], [DividendPayoutPreferredStock], [FiscalDateEnding], [NetIncome], [OperatingCashFlow], [PaymentsForOperatingActivities], [PaymentsForRepurchaseOfCommonStock], [PaymentsForRepurchaseOfEquity], [PaymentsForRepurchaseOfPreferredStock], [ProceedsFromIssuanceOfCommonStock], [ProceedsFromIssuanceOfLongTermDebtAndCapitalSecuritiesNet], [ProceedsFromIssuanceOfPreferredStock], [ProceedsFromOperatingActivities], [ProceedsFromRepaymentsOfShortTermDebt], [ProceedsFromRepurchaseOfEquity], [ProceedsFromSaleOfTreasuryStock], [ProfitLoss], [ReportedCurrency], [Symbol], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([CapitalExpenditures], [CashflowFromFinancing], [CashflowFromInvestment], [ChangeInCashAndCashEquivalents], [ChangeInExchangeRate], [ChangeInInventory], [ChangeInOperatingAssets], [ChangeInOperatingLiabilities], [ChangeInReceivables], [DepreciationDepletionAndAmortization], [DividendPayout], [DividendPayoutCommonStock], [DividendPayoutPreferredStock], [FiscalDateEnding], [NetIncome], [OperatingCashFlow], [PaymentsForOperatingActivities], [PaymentsForRepurchaseOfCommonStock], [PaymentsForRepurchaseOfEquity], [PaymentsForRepurchaseOfPreferredStock], [ProceedsFromIssuanceOfCommonStock], [ProceedsFromIssuanceOfLongTermDebtAndCapitalSecuritiesNet], [ProceedsFromIssuanceOfPreferredStock], [ProceedsFromOperatingActivities], [ProceedsFromRepaymentsOfShortTermDebt], [ProceedsFromRepurchaseOfEquity], [ProceedsFromSaleOfTreasuryStock], [ProfitLoss], [ReportedCurrency], [Symbol])
VALUES (i.[CapitalExpenditures], i.[CashflowFromFinancing], i.[CashflowFromInvestment], i.[ChangeInCashAndCashEquivalents], i.[ChangeInExchangeRate], i.[ChangeInInventory], i.[ChangeInOperatingAssets], i.[ChangeInOperatingLiabilities], i.[ChangeInReceivables], i.[DepreciationDepletionAndAmortization], i.[DividendPayout], i.[DividendPayoutCommonStock], i.[DividendPayoutPreferredStock], i.[FiscalDateEnding], i.[NetIncome], i.[OperatingCashFlow], i.[PaymentsForOperatingActivities], i.[PaymentsForRepurchaseOfCommonStock], i.[PaymentsForRepurchaseOfEquity], i.[PaymentsForRepurchaseOfPreferredStock], i.[ProceedsFromIssuanceOfCommonStock], i.[ProceedsFromIssuanceOfLongTermDebtAndCapitalSecuritiesNet], i.[ProceedsFromIssuanceOfPreferredStock], i.[ProceedsFromOperatingActivities], i.[ProceedsFromRepaymentsOfShortTermDebt], i.[ProceedsFromRepurchaseOfEquity], i.[ProceedsFromSaleOfTreasuryStock], i.[ProfitLoss], i.[ReportedCurrency], i.[Symbol])
OUTPUT INSERTED.[Id], i._Position
INTO @inserted5;

SELECT [i].[Id] FROM @inserted5 i
ORDER BY [i].[_Position];
2022-05-12 01:16:28.297 +03:00 [INF] AddOrUpdate run successful.
2022-05-12 01:16:46.655 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CompanyOverview with Symbol BLCN
2022-05-12 01:16:46.658 +03:00 [INF] Generating URI for OVERVIEW with params: symbol: BLCN
2022-05-12 01:16:46.659 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=OVERVIEW&symbol=BLCN
2022-05-12 01:16:46.659 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=OVERVIEW&symbol=BLCN".
2022-05-12 01:16:48.600 +03:00 [INF] Response has success status code
2022-05-12 01:16:48.600 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.CompanyOverview for symbol BLCN
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyOverview(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 116
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:16:50.733 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.Earnings with Symbol AY
2022-05-12 01:16:50.735 +03:00 [INF] Generating URI for EARNINGS with params: symbol: AY
2022-05-12 01:16:50.735 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=EARNINGS&symbol=AY
2022-05-12 01:16:50.736 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=EARNINGS&symbol=AY".
2022-05-12 01:16:51.990 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.IncomeStatement with Symbol AVHIU
2022-05-12 01:16:51.991 +03:00 [INF] Generating URI for INCOME_STATEMENT with params: symbol: AVHIU
2022-05-12 01:16:51.992 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=INCOME_STATEMENT&symbol=AVHIU
2022-05-12 01:16:51.993 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=INCOME_STATEMENT&symbol=AVHIU".
2022-05-12 01:16:52.206 +03:00 [INF] Response has success status code
2022-05-12 01:16:52.207 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.Earnings for symbol AY
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyEarnings(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 142
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:16:53.407 +03:00 [INF] Response has success status code
2022-05-12 01:16:53.408 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.IncomeStatement for symbol AVHIU
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetIncomeStatement(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 69
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:16:56.130 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.BalanceSheet with Symbol BFIT
2022-05-12 01:16:56.131 +03:00 [INF] Generating URI for BALANCE_SHEET with params: symbol: BFIT
2022-05-12 01:16:56.132 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BFIT
2022-05-12 01:16:56.132 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BFIT".
2022-05-12 01:16:58.034 +03:00 [INF] Response has success status code
2022-05-12 01:16:58.035 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.BalanceSheet for symbol BFIT
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetBalanceSheet(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 82
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:16:58.308 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CashFlow with Symbol AVDR
2022-05-12 01:16:58.311 +03:00 [INF] Generating URI for CASH_FLOW with params: symbol: AVDR
2022-05-12 01:16:58.312 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=CASH_FLOW&symbol=AVDR
2022-05-12 01:16:58.312 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=CASH_FLOW&symbol=AVDR".
2022-05-12 01:17:00.662 +03:00 [INF] Response has success status code
2022-05-12 01:17:00.663 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 01:17:00.674 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__symbol_0
2022-05-12 01:17:00.676 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.CashFlow.
2022-05-12 01:17:00.684 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[ExistInApi], [c].[LastApiRefresh], [c].[LastLocalRefresh]
FROM [CashFlows] AS [c]
WHERE [c].[Symbol] = @__entity_Symbol_0
2022-05-12 01:17:00.685 +03:00 [INF] Entity does not exist. Adding to DB.
2022-05-12 01:17:00.698 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = Boolean), @p2='?' (DbType = DateTime2), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [CashFlows] ([Symbol], [ExistInApi], [LastApiRefresh], [LastLocalRefresh])
VALUES (@p0, @p1, @p2, @p3);
2022-05-12 01:17:00.704 +03:00 [INF] AddOrUpdate run successful.
2022-05-12 01:17:00.705 +03:00 [WRN] Alpha Vantage has no SaluteStocksAPI.Models.FundamentalData.CashFlow for symbol AVDR
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageEmptyResponse: Response was empty.
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCashFlow(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 96
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:17:18.611 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CompanyOverview with Symbol BLCO
2022-05-12 01:17:18.614 +03:00 [INF] Generating URI for OVERVIEW with params: symbol: BLCO
2022-05-12 01:17:18.615 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=OVERVIEW&symbol=BLCO
2022-05-12 01:17:18.615 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=OVERVIEW&symbol=BLCO".
2022-05-12 01:17:22.214 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.Earnings with Symbol AYI
2022-05-12 01:17:22.217 +03:00 [INF] Generating URI for EARNINGS with params: symbol: AYI
2022-05-12 01:17:22.218 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=EARNINGS&symbol=AYI
2022-05-12 01:17:22.218 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=EARNINGS&symbol=AYI".
2022-05-12 01:17:23.431 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.IncomeStatement with Symbol AVHIW
2022-05-12 01:17:23.432 +03:00 [INF] Generating URI for INCOME_STATEMENT with params: symbol: AVHIW
2022-05-12 01:17:23.433 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=INCOME_STATEMENT&symbol=AVHIW
2022-05-12 01:17:23.433 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=INCOME_STATEMENT&symbol=AVHIW".
2022-05-12 01:17:26.648 +03:00 [INF] Response has success status code
2022-05-12 01:17:26.648 +03:00 [INF] Start AddOrUpdate for SaluteStocksAPI.Models.FundamentalData.CompanyOverview.
2022-05-12 01:17:26.649 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 01:17:26.660 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__entity_Symbol_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Symbol], [c].[Address], [c].[AnalystTargetPrice], [c].[AssetType], [c].[Beta], [c].[BookValue], [c].[CIK], [c].[Country], [c].[Currency], [c].[Description], [c].[DilutedEPSTTM], [c].[DividendDate], [c].[DividendPerShare], [c].[DividendYield], [c].[EBITDA], [c].[EPS], [c].[EVToEBITDA], [c].[EVToRevenue], [c].[ExDividendDate], [c].[Exchange], [c].[ExistInApi], [c].[FiscalYearEnd], [c].[ForwardPE], [c].[GrossProfitTTM], [c].[Industry], [c].[LastApiRefresh], [c].[LastLocalRefresh], [c].[LatestQuarter], [c].[MarketCapitalization], [c].[Name], [c].[OperatingMarginTTM], [c].[PEGRatio], [c].[PERatio], [c].[PriceToBookRatio], [c].[PriceToSalesRatioTTM], [c].[ProfitMargin], [c].[QuarterlyEarningsGrowthYOY], [c].[QuarterlyRevenueGrowthYOY], [c].[ReturnOnAssetsTTM], [c].[ReturnOnEquityTTM], [c].[RevenuePerShareTTM], [c].[RevenueTTM], [c].[Sector], [c].[SharesOutstanding], [c].[TrailingPE], [c].[_200DayMovingAverage], [c].[_50DayMovingAverage], [c].[_52WeekHigh], [c].[_52WeekLow]
FROM [CompanyOverviews] AS [c]
WHERE [c].[Symbol] = @__entity_Symbol_0
2022-05-12 01:17:26.661 +03:00 [INF] Entity does not exist. Adding to DB.
2022-05-12 01:17:26.677 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (Size = 4000), @p2='?' (DbType = Double), @p3='?' (Size = 4000), @p4='?' (DbType = Double), @p5='?' (DbType = Double), @p6='?' (DbType = Int64), @p7='?' (Size = 4000), @p8='?' (Size = 4000), @p9='?' (Size = 4000), @p10='?' (DbType = Double), @p11='?' (DbType = DateTime2), @p12='?' (DbType = Double), @p13='?' (DbType = Double), @p14='?' (DbType = Int64), @p15='?' (DbType = Double), @p16='?' (DbType = Double), @p17='?' (DbType = Double), @p18='?' (DbType = DateTime2), @p19='?' (Size = 4000), @p20='?' (DbType = Boolean), @p21='?' (Size = 4000), @p22='?' (DbType = Double), @p23='?' (DbType = Int64), @p24='?' (Size = 4000), @p25='?' (DbType = DateTime2), @p26='?' (DbType = DateTime2), @p27='?' (DbType = DateTime2), @p28='?' (DbType = Int64), @p29='?' (Size = 4000), @p30='?' (DbType = Double), @p31='?' (DbType = Double), @p32='?' (DbType = Double), @p33='?' (DbType = Double), @p34='?' (DbType = Double), @p35='?' (DbType = Double), @p36='?' (DbType = Double), @p37='?' (DbType = Double), @p38='?' (DbType = Double), @p39='?' (DbType = Double), @p40='?' (DbType = Double), @p41='?' (DbType = Int64), @p42='?' (Size = 4000), @p43='?' (DbType = Int64), @p44='?' (DbType = Double), @p45='?' (DbType = Double), @p46='?' (DbType = Double), @p47='?' (DbType = Double), @p48='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [CompanyOverviews] ([Symbol], [Address], [AnalystTargetPrice], [AssetType], [Beta], [BookValue], [CIK], [Country], [Currency], [Description], [DilutedEPSTTM], [DividendDate], [DividendPerShare], [DividendYield], [EBITDA], [EPS], [EVToEBITDA], [EVToRevenue], [ExDividendDate], [Exchange], [ExistInApi], [FiscalYearEnd], [ForwardPE], [GrossProfitTTM], [Industry], [LastApiRefresh], [LastLocalRefresh], [LatestQuarter], [MarketCapitalization], [Name], [OperatingMarginTTM], [PEGRatio], [PERatio], [PriceToBookRatio], [PriceToSalesRatioTTM], [ProfitMargin], [QuarterlyEarningsGrowthYOY], [QuarterlyRevenueGrowthYOY], [ReturnOnAssetsTTM], [ReturnOnEquityTTM], [RevenuePerShareTTM], [RevenueTTM], [Sector], [SharesOutstanding], [TrailingPE], [_200DayMovingAverage], [_50DayMovingAverage], [_52WeekHigh], [_52WeekLow])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21, @p22, @p23, @p24, @p25, @p26, @p27, @p28, @p29, @p30, @p31, @p32, @p33, @p34, @p35, @p36, @p37, @p38, @p39, @p40, @p41, @p42, @p43, @p44, @p45, @p46, @p47, @p48);
2022-05-12 01:17:26.684 +03:00 [INF] AddOrUpdate run successful.
2022-05-12 01:17:26.684 +03:00 [WRN] Alpha Vantage has no SaluteStocksAPI.Models.FundamentalData.CompanyOverview for symbol BLCO
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageEmptyResponse: Response was empty.
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyOverview(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 116
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:17:28.051 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.BalanceSheet with Symbol BFIX
2022-05-12 01:17:28.054 +03:00 [INF] Generating URI for BALANCE_SHEET with params: symbol: BFIX
2022-05-12 01:17:28.055 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BFIX
2022-05-12 01:17:28.055 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BFIX".
2022-05-12 01:17:29.501 +03:00 [INF] Response has success status code
2022-05-12 01:17:29.501 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.Earnings for symbol AYI
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Information": "Thank you for using Alpha Vantage! You have reached the 500 requests/day limit and there are multiple ways to remove this rate limit: (1) become a holder of Alpha Vantage Coin (AVC), an Ethereum-based cryptocurrency that provides various utility & governance functions within the Alpha Vantage ecosystem (AVC mining guide: https://www.alphatournament.com/avc_mining_guide/) to remove the 500 requests/day rate limit, (2) subscribe to any of the premium plans at https://www.alphavantage.co/premium/ to instantly remove all daily rate limits"
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyEarnings(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 142
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:17:30.715 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CashFlow with Symbol AVDV
2022-05-12 01:17:30.718 +03:00 [INF] Generating URI for CASH_FLOW with params: symbol: AVDV
2022-05-12 01:17:30.719 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=CASH_FLOW&symbol=AVDV
2022-05-12 01:17:30.719 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=CASH_FLOW&symbol=AVDV".
2022-05-12 01:17:30.847 +03:00 [INF] Response has success status code
2022-05-12 01:17:30.848 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.IncomeStatement for symbol AVHIW
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Information": "Thank you for using Alpha Vantage! You have reached the 500 requests/day limit and there are multiple ways to remove this rate limit: (1) become a holder of Alpha Vantage Coin (AVC), an Ethereum-based cryptocurrency that provides various utility & governance functions within the Alpha Vantage ecosystem (AVC mining guide: https://www.alphatournament.com/avc_mining_guide/) to remove the 500 requests/day rate limit, (2) subscribe to any of the premium plans at https://www.alphavantage.co/premium/ to instantly remove all daily rate limits"
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetIncomeStatement(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 69
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:17:36.285 +03:00 [INF] Response has success status code
2022-05-12 01:17:36.286 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.BalanceSheet for symbol BFIX
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Information": "Thank you for using Alpha Vantage! You have reached the 500 requests/day limit and there are multiple ways to remove this rate limit: (1) become a holder of Alpha Vantage Coin (AVC), an Ethereum-based cryptocurrency that provides various utility & governance functions within the Alpha Vantage ecosystem (AVC mining guide: https://www.alphatournament.com/avc_mining_guide/) to remove the 500 requests/day rate limit, (2) subscribe to any of the premium plans at https://www.alphavantage.co/premium/ to instantly remove all daily rate limits"
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetBalanceSheet(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 82
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:17:39.126 +03:00 [INF] Response has success status code
2022-05-12 01:17:39.127 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.CashFlow for symbol AVDV
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Information": "Thank you for using Alpha Vantage! You have reached the 500 requests/day limit and there are multiple ways to remove this rate limit: (1) become a holder of Alpha Vantage Coin (AVC), an Ethereum-based cryptocurrency that provides various utility & governance functions within the Alpha Vantage ecosystem (AVC mining guide: https://www.alphatournament.com/avc_mining_guide/) to remove the 500 requests/day rate limit, (2) subscribe to any of the premium plans at https://www.alphavantage.co/premium/ to instantly remove all daily rate limits"
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCashFlow(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 96
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:17:56.698 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CompanyOverview with Symbol BLCT
2022-05-12 01:17:56.700 +03:00 [INF] Generating URI for OVERVIEW with params: symbol: BLCT
2022-05-12 01:17:56.701 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=OVERVIEW&symbol=BLCT
2022-05-12 01:17:56.701 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=OVERVIEW&symbol=BLCT".
2022-05-12 01:17:59.507 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.Earnings with Symbol AYLA
2022-05-12 01:17:59.510 +03:00 [INF] Generating URI for EARNINGS with params: symbol: AYLA
2022-05-12 01:17:59.510 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=EARNINGS&symbol=AYLA
2022-05-12 01:17:59.511 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=EARNINGS&symbol=AYLA".
2022-05-12 01:18:00.304 +03:00 [INF] Response has success status code
2022-05-12 01:18:00.304 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.CompanyOverview for symbol BLCT
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Information": "Thank you for using Alpha Vantage! You have reached the 500 requests/day limit and there are multiple ways to remove this rate limit: (1) become a holder of Alpha Vantage Coin (AVC), an Ethereum-based cryptocurrency that provides various utility & governance functions within the Alpha Vantage ecosystem (AVC mining guide: https://www.alphatournament.com/avc_mining_guide/) to remove the 500 requests/day rate limit, (2) subscribe to any of the premium plans at https://www.alphavantage.co/premium/ to instantly remove all daily rate limits"
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyOverview(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 116
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:18:00.855 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.IncomeStatement with Symbol AVID
2022-05-12 01:18:00.857 +03:00 [INF] Generating URI for INCOME_STATEMENT with params: symbol: AVID
2022-05-12 01:18:00.857 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=INCOME_STATEMENT&symbol=AVID
2022-05-12 01:18:00.858 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=INCOME_STATEMENT&symbol=AVID".
2022-05-12 01:18:06.295 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.BalanceSheet with Symbol BFK
2022-05-12 01:18:06.299 +03:00 [INF] Generating URI for BALANCE_SHEET with params: symbol: BFK
2022-05-12 01:18:06.300 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BFK
2022-05-12 01:18:06.300 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BFK".
2022-05-12 01:18:09.133 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CashFlow with Symbol AVDX
2022-05-12 01:18:09.135 +03:00 [INF] Generating URI for CASH_FLOW with params: symbol: AVDX
2022-05-12 01:18:09.135 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=CASH_FLOW&symbol=AVDX
2022-05-12 01:18:09.136 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=CASH_FLOW&symbol=AVDX".
2022-05-12 01:18:16.749 +03:00 [INF] Response has success status code
2022-05-12 01:18:16.750 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.Earnings for symbol AYLA
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Information": "Thank you for using Alpha Vantage! You have reached the 500 requests/day limit and there are multiple ways to remove this rate limit: (1) become a holder of Alpha Vantage Coin (AVC), an Ethereum-based cryptocurrency that provides various utility & governance functions within the Alpha Vantage ecosystem (AVC mining guide: https://www.alphatournament.com/avc_mining_guide/) to remove the 500 requests/day rate limit, (2) subscribe to any of the premium plans at https://www.alphavantage.co/premium/ to instantly remove all daily rate limits"
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyEarnings(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 142
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:18:19.447 +03:00 [INF] Response has success status code
2022-05-12 01:18:19.448 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.IncomeStatement for symbol AVID
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Information": "Thank you for using Alpha Vantage! You have reached the 500 requests/day limit and there are multiple ways to remove this rate limit: (1) become a holder of Alpha Vantage Coin (AVC), an Ethereum-based cryptocurrency that provides various utility & governance functions within the Alpha Vantage ecosystem (AVC mining guide: https://www.alphatournament.com/avc_mining_guide/) to remove the 500 requests/day rate limit, (2) subscribe to any of the premium plans at https://www.alphavantage.co/premium/ to instantly remove all daily rate limits"
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetIncomeStatement(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 69
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:18:26.609 +03:00 [INF] Response has success status code
2022-05-12 01:18:26.609 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.CashFlow for symbol AVDX
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Information": "Thank you for using Alpha Vantage! You have reached the 500 requests/day limit and there are multiple ways to remove this rate limit: (1) become a holder of Alpha Vantage Coin (AVC), an Ethereum-based cryptocurrency that provides various utility & governance functions within the Alpha Vantage ecosystem (AVC mining guide: https://www.alphatournament.com/avc_mining_guide/) to remove the 500 requests/day rate limit, (2) subscribe to any of the premium plans at https://www.alphavantage.co/premium/ to instantly remove all daily rate limits"
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCashFlow(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 96
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:18:26.627 +03:00 [INF] Response has success status code
2022-05-12 01:18:26.628 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.BalanceSheet for symbol BFK
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Information": "Thank you for using Alpha Vantage! You have reached the 500 requests/day limit and there are multiple ways to remove this rate limit: (1) become a holder of Alpha Vantage Coin (AVC), an Ethereum-based cryptocurrency that provides various utility & governance functions within the Alpha Vantage ecosystem (AVC mining guide: https://www.alphatournament.com/avc_mining_guide/) to remove the 500 requests/day rate limit, (2) subscribe to any of the premium plans at https://www.alphavantage.co/premium/ to instantly remove all daily rate limits"
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetBalanceSheet(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 82
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:18:30.319 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CompanyOverview with Symbol BLD
2022-05-12 01:18:30.322 +03:00 [INF] Generating URI for OVERVIEW with params: symbol: BLD
2022-05-12 01:18:30.323 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=OVERVIEW&symbol=BLD
2022-05-12 01:18:30.323 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=OVERVIEW&symbol=BLD".
2022-05-12 01:18:36.531 +03:00 [INF] Response has success status code
2022-05-12 01:18:36.531 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.CompanyOverview for symbol BLD
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Information": "Thank you for using Alpha Vantage! You have reached the 500 requests/day limit and there are multiple ways to remove this rate limit: (1) become a holder of Alpha Vantage Coin (AVC), an Ethereum-based cryptocurrency that provides various utility & governance functions within the Alpha Vantage ecosystem (AVC mining guide: https://www.alphatournament.com/avc_mining_guide/) to remove the 500 requests/day rate limit, (2) subscribe to any of the premium plans at https://www.alphavantage.co/premium/ to instantly remove all daily rate limits"
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyOverview(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 116
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:18:46.764 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.Earnings with Symbol AYRO
2022-05-12 01:18:46.768 +03:00 [INF] Generating URI for EARNINGS with params: symbol: AYRO
2022-05-12 01:18:46.768 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=EARNINGS&symbol=AYRO
2022-05-12 01:18:46.769 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=EARNINGS&symbol=AYRO".
2022-05-12 01:18:46.996 +03:00 [INF] Response has success status code
2022-05-12 01:18:46.997 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.Earnings for symbol AYRO
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyEarnings(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 142
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:18:49.450 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.IncomeStatement with Symbol AVIG
2022-05-12 01:18:49.452 +03:00 [INF] Generating URI for INCOME_STATEMENT with params: symbol: AVIG
2022-05-12 01:18:49.452 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=INCOME_STATEMENT&symbol=AVIG
2022-05-12 01:18:49.453 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=INCOME_STATEMENT&symbol=AVIG".
2022-05-12 01:18:50.246 +03:00 [INF] Response has success status code
2022-05-12 01:18:50.247 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.IncomeStatement for symbol AVIG
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetIncomeStatement(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 69
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:18:56.619 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CashFlow with Symbol AVEO
2022-05-12 01:18:56.621 +03:00 [INF] Generating URI for CASH_FLOW with params: symbol: AVEO
2022-05-12 01:18:56.621 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=CASH_FLOW&symbol=AVEO
2022-05-12 01:18:56.621 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=CASH_FLOW&symbol=AVEO".
2022-05-12 01:18:56.635 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.BalanceSheet with Symbol BFLY
2022-05-12 01:18:56.639 +03:00 [INF] Generating URI for BALANCE_SHEET with params: symbol: BFLY
2022-05-12 01:18:56.640 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BFLY
2022-05-12 01:18:56.640 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BFLY".
2022-05-12 01:18:56.873 +03:00 [INF] Response has success status code
2022-05-12 01:18:56.874 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.CashFlow for symbol AVEO
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCashFlow(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 96
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:18:57.164 +03:00 [INF] Response has success status code
2022-05-12 01:18:57.164 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.BalanceSheet for symbol BFLY
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetBalanceSheet(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 82
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:18:59.605 +03:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/screener-model - -
2022-05-12 01:18:59.605 +03:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/distribution/market-cap/100 - -
2022-05-12 01:18:59.606 +03:00 [INF] CORS policy execution successful.
2022-05-12 01:18:59.607 +03:00 [INF] CORS policy execution successful.
2022-05-12 01:18:59.607 +03:00 [INF] Executing endpoint 'SaluteStocksAPI.Controllers.ApiController.GetScreenerModel (SaluteStocksAPI)'
2022-05-12 01:18:59.608 +03:00 [INF] Executing endpoint 'SaluteStocksAPI.Controllers.ApiController.GetMarketCapDistribution (SaluteStocksAPI)'
2022-05-12 01:18:59.609 +03:00 [INF] Route matched with {action = "GetScreenerModel", controller = "Api"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetScreenerModel() on controller SaluteStocksAPI.Controllers.ApiController (SaluteStocksAPI).
2022-05-12 01:18:59.610 +03:00 [INF] Route matched with {action = "GetMarketCapDistribution", controller = "Api"}. Executing controller action with signature System.Threading.Tasks.Task`1[System.String] GetMarketCapDistribution(Int32) on controller SaluteStocksAPI.Controllers.ApiController (SaluteStocksAPI).
2022-05-12 01:18:59.613 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 01:18:59.614 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 01:18:59.624 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[MarketCapitalization])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 01:18:59.637 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[MarketCapitalization])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 01:18:59.647 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[EBITDA])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 01:18:59.658 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[EBITDA])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 01:18:59.670 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[PERatio])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 01:18:59.672 +03:00 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[MarketCapitalization])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 01:18:59.681 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[PERatio])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 01:18:59.683 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2022-05-12 01:18:59.684 +03:00 [INF] Executed action SaluteStocksAPI.Controllers.ApiController.GetScreenerModel (SaluteStocksAPI) in 71.4613ms
2022-05-12 01:18:59.684 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[MarketCapitalization])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 01:18:59.685 +03:00 [INF] Executed endpoint 'SaluteStocksAPI.Controllers.ApiController.GetScreenerModel (SaluteStocksAPI)'
2022-05-12 01:18:59.687 +03:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/screener-model - - - 200 - text/plain;+charset=utf-8 81.7267ms
2022-05-12 01:18:59.698 +03:00 [INF] Executed DbCommand (12ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:18:59.709 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:18:59.721 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:18:59.736 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:18:59.751 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:18:59.767 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:18:59.778 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:18:59.788 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:18:59.800 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:18:59.811 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:18:59.823 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:18:59.833 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:18:59.844 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:18:59.855 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:18:59.865 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:18:59.877 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:18:59.889 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:18:59.899 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:18:59.908 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:18:59.919 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:18:59.931 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:18:59.944 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:18:59.955 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:18:59.967 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:18:59.979 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:18:59.991 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:00.003 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:00.016 +03:00 [INF] Executed DbCommand (12ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:00.027 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:00.037 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:00.047 +03:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/screener-model - -
2022-05-12 01:19:00.047 +03:00 [INF] CORS policy execution successful.
2022-05-12 01:19:00.048 +03:00 [INF] Executing endpoint 'SaluteStocksAPI.Controllers.ApiController.GetScreenerModel (SaluteStocksAPI)'
2022-05-12 01:19:00.049 +03:00 [INF] Route matched with {action = "GetScreenerModel", controller = "Api"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetScreenerModel() on controller SaluteStocksAPI.Controllers.ApiController (SaluteStocksAPI).
2022-05-12 01:19:00.051 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 01:19:00.053 +03:00 [INF] Executed DbCommand (12ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:00.062 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[MarketCapitalization])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 01:19:00.064 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:00.074 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[MarketCapitalization])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 01:19:00.076 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:00.085 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[EBITDA])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 01:19:00.088 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:00.095 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[EBITDA])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 01:19:00.099 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:00.104 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[PERatio])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 01:19:00.112 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:00.113 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[PERatio])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 01:19:00.114 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2022-05-12 01:19:00.116 +03:00 [INF] Executed action SaluteStocksAPI.Controllers.ApiController.GetScreenerModel (SaluteStocksAPI) in 65.4ms
2022-05-12 01:19:00.116 +03:00 [INF] Executed endpoint 'SaluteStocksAPI.Controllers.ApiController.GetScreenerModel (SaluteStocksAPI)'
2022-05-12 01:19:00.117 +03:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/screener-model - - - 200 - text/plain;+charset=utf-8 70.7077ms
2022-05-12 01:19:00.122 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:00.132 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:00.144 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:00.156 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:00.166 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:00.176 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:00.186 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:00.196 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:00.205 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:00.217 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:00.227 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:00.237 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:00.247 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:00.258 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:00.270 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:00.282 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:00.293 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:00.304 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:00.314 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:00.324 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:00.335 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:00.346 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:00.356 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:00.365 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:00.375 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:00.386 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:00.396 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:00.407 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:00.417 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:00.427 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:00.437 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:00.447 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:00.457 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:00.467 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:00.477 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:00.487 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:00.497 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:00.506 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:00.516 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:00.526 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:00.537 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:00.549 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:00.562 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:00.573 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:00.585 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:00.597 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:00.609 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:00.621 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:00.632 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:00.646 +03:00 [INF] Executed DbCommand (12ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:00.659 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:00.669 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:00.681 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:00.691 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:00.700 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:00.710 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:00.719 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:00.729 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:00.739 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:00.749 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:00.760 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:00.770 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:00.779 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:00.781 +03:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2022-05-12 01:19:00.782 +03:00 [INF] Executed action SaluteStocksAPI.Controllers.ApiController.GetMarketCapDistribution (SaluteStocksAPI) in 1168.1349ms
2022-05-12 01:19:00.782 +03:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/distribution/market-cap/100 - -
2022-05-12 01:19:00.782 +03:00 [INF] Executed endpoint 'SaluteStocksAPI.Controllers.ApiController.GetMarketCapDistribution (SaluteStocksAPI)'
2022-05-12 01:19:00.783 +03:00 [INF] CORS policy execution successful.
2022-05-12 01:19:00.783 +03:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/distribution/market-cap/100 - - - 200 - text/plain;+charset=utf-8 1178.2592ms
2022-05-12 01:19:00.784 +03:00 [INF] Executing endpoint 'SaluteStocksAPI.Controllers.ApiController.GetMarketCapDistribution (SaluteStocksAPI)'
2022-05-12 01:19:00.785 +03:00 [INF] Route matched with {action = "GetMarketCapDistribution", controller = "Api"}. Executing controller action with signature System.Threading.Tasks.Task`1[System.String] GetMarketCapDistribution(Int32) on controller SaluteStocksAPI.Controllers.ApiController (SaluteStocksAPI).
2022-05-12 01:19:00.786 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 01:19:00.795 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[MarketCapitalization])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 01:19:00.805 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[MarketCapitalization])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 01:19:00.814 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:00.825 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:00.835 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:00.845 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:00.855 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:00.865 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:00.875 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:00.885 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:00.895 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:00.904 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:00.914 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:00.924 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:00.934 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:00.946 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:00.956 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:00.966 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:00.976 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:00.986 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:00.996 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:01.005 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:01.015 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:01.025 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:01.035 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:01.050 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:01.061 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:01.071 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:01.081 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:01.092 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:01.102 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:01.113 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:01.123 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:01.133 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:01.144 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:01.155 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:01.166 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:01.177 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:01.185 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:01.196 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:01.207 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:01.219 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:01.231 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:01.243 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:01.252 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:01.265 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:01.274 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:01.284 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:01.298 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:01.310 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:01.320 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:01.332 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:01.342 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:01.354 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:01.364 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:01.373 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:01.383 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:01.393 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:01.403 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:01.413 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:01.423 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:01.435 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:01.445 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:01.458 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:01.470 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:01.480 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:01.490 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:01.500 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:01.510 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:01.520 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:01.530 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:01.540 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:01.549 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:01.560 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:01.571 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:01.583 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:01.593 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:01.603 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:01.613 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:01.623 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:01.633 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:01.643 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:01.653 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:01.663 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:01.676 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:01.688 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:01.697 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:01.708 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:01.717 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:01.728 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:01.737 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:01.747 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:01.758 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:01.767 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:01.777 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:01.787 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:01.797 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:01.806 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:01.816 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:01.828 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:01.841 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:01.842 +03:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2022-05-12 01:19:01.843 +03:00 [INF] Executed action SaluteStocksAPI.Controllers.ApiController.GetMarketCapDistribution (SaluteStocksAPI) in 1057.0165ms
2022-05-12 01:19:01.843 +03:00 [INF] Executed endpoint 'SaluteStocksAPI.Controllers.ApiController.GetMarketCapDistribution (SaluteStocksAPI)'
2022-05-12 01:19:01.844 +03:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/distribution/market-cap/100 - - - 200 - text/plain;+charset=utf-8 1061.9718ms
2022-05-12 01:19:06.561 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CompanyOverview with Symbol BLDE
2022-05-12 01:19:06.564 +03:00 [INF] Generating URI for OVERVIEW with params: symbol: BLDE
2022-05-12 01:19:06.565 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=OVERVIEW&symbol=BLDE
2022-05-12 01:19:06.565 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=OVERVIEW&symbol=BLDE".
2022-05-12 01:19:07.418 +03:00 [INF] Response has success status code
2022-05-12 01:19:07.419 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.CompanyOverview for symbol BLDE
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Information": "Thank you for using Alpha Vantage! You have reached the 500 requests/day limit and there are multiple ways to remove this rate limit: (1) become a holder of Alpha Vantage Coin (AVC), an Ethereum-based cryptocurrency that provides various utility & governance functions within the Alpha Vantage ecosystem (AVC mining guide: https://www.alphatournament.com/avc_mining_guide/) to remove the 500 requests/day rate limit, (2) subscribe to any of the premium plans at https://www.alphavantage.co/premium/ to instantly remove all daily rate limits"
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyOverview(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 116
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:19:12.831 +03:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/distribution/market-cap/100 - -
2022-05-12 01:19:12.831 +03:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/screener-model - -
2022-05-12 01:19:12.831 +03:00 [INF] CORS policy execution successful.
2022-05-12 01:19:12.832 +03:00 [INF] CORS policy execution successful.
2022-05-12 01:19:12.832 +03:00 [INF] Executing endpoint 'SaluteStocksAPI.Controllers.ApiController.GetMarketCapDistribution (SaluteStocksAPI)'
2022-05-12 01:19:12.833 +03:00 [INF] Executing endpoint 'SaluteStocksAPI.Controllers.ApiController.GetScreenerModel (SaluteStocksAPI)'
2022-05-12 01:19:12.833 +03:00 [INF] Route matched with {action = "GetMarketCapDistribution", controller = "Api"}. Executing controller action with signature System.Threading.Tasks.Task`1[System.String] GetMarketCapDistribution(Int32) on controller SaluteStocksAPI.Controllers.ApiController (SaluteStocksAPI).
2022-05-12 01:19:12.834 +03:00 [INF] Route matched with {action = "GetScreenerModel", controller = "Api"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetScreenerModel() on controller SaluteStocksAPI.Controllers.ApiController (SaluteStocksAPI).
2022-05-12 01:19:12.835 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 01:19:12.836 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 01:19:12.848 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[MarketCapitalization])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 01:19:12.849 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[MarketCapitalization])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 01:19:12.861 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[MarketCapitalization])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 01:19:12.864 +03:00 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[MarketCapitalization])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 01:19:12.876 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[EBITDA])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 01:19:12.880 +03:00 [INF] Executed DbCommand (12ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:12.886 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[EBITDA])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 01:19:12.892 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:12.893 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[PERatio])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 01:19:12.904 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[PERatio])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 01:19:12.905 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2022-05-12 01:19:12.905 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:12.906 +03:00 [INF] Executed action SaluteStocksAPI.Controllers.ApiController.GetScreenerModel (SaluteStocksAPI) in 69.9471ms
2022-05-12 01:19:12.908 +03:00 [INF] Executed endpoint 'SaluteStocksAPI.Controllers.ApiController.GetScreenerModel (SaluteStocksAPI)'
2022-05-12 01:19:12.909 +03:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/screener-model - - - 200 - text/plain;+charset=utf-8 78.3548ms
2022-05-12 01:19:12.917 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:12.929 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:12.941 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:12.955 +03:00 [INF] Executed DbCommand (13ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:12.969 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:12.981 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:12.993 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:13.003 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:13.015 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:13.024 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:13.034 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:13.046 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:13.056 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:13.066 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:13.080 +03:00 [INF] Executed DbCommand (13ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:13.093 +03:00 [INF] Executed DbCommand (12ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:13.105 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:13.115 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:13.125 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:13.135 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:13.145 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:13.159 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:13.169 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:13.181 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:13.190 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:13.200 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:13.210 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:13.222 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:13.232 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:13.244 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:13.254 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:13.266 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:13.278 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:13.288 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:13.297 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:13.308 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:13.321 +03:00 [INF] Executed DbCommand (12ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:13.333 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:13.349 +03:00 [INF] Executed DbCommand (12ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:13.361 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:13.373 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:13.383 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:13.392 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:13.402 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:13.413 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:13.422 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:13.432 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:13.442 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:13.452 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:13.462 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:13.472 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:13.484 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:13.493 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:13.503 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:13.513 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:13.523 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:13.533 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:13.545 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:13.557 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:13.567 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:13.579 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:13.590 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:13.600 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:13.612 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:13.624 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:13.636 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:13.648 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:13.664 +03:00 [INF] Executed DbCommand (12ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:13.678 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:13.691 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:13.703 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:13.715 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:13.725 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:13.738 +03:00 [INF] Executed DbCommand (12ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:13.751 +03:00 [INF] Executed DbCommand (12ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:13.765 +03:00 [INF] Executed DbCommand (12ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:13.775 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:13.788 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:13.798 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:13.808 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:13.818 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:13.828 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:13.838 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:13.848 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:13.858 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:13.868 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:13.884 +03:00 [INF] Executed DbCommand (12ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:13.893 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:13.903 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:13.913 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:13.923 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:13.933 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:13.943 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:13.955 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:13.965 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:13.974 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:13.976 +03:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2022-05-12 01:19:13.977 +03:00 [INF] Executed action SaluteStocksAPI.Controllers.ApiController.GetMarketCapDistribution (SaluteStocksAPI) in 1142.622ms
2022-05-12 01:19:13.978 +03:00 [INF] Executed endpoint 'SaluteStocksAPI.Controllers.ApiController.GetMarketCapDistribution (SaluteStocksAPI)'
2022-05-12 01:19:13.979 +03:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/distribution/market-cap/100 - - - 200 - text/plain;+charset=utf-8 1147.8453ms
2022-05-12 01:19:17.009 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.Earnings with Symbol AYTU
2022-05-12 01:19:17.013 +03:00 [INF] Generating URI for EARNINGS with params: symbol: AYTU
2022-05-12 01:19:17.013 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=EARNINGS&symbol=AYTU
2022-05-12 01:19:17.014 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=EARNINGS&symbol=AYTU".
2022-05-12 01:19:17.244 +03:00 [INF] Response has success status code
2022-05-12 01:19:17.244 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.Earnings for symbol AYTU
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Information": "Thank you for using Alpha Vantage! You have reached the 500 requests/day limit and there are multiple ways to remove this rate limit: (1) become a holder of Alpha Vantage Coin (AVC), an Ethereum-based cryptocurrency that provides various utility & governance functions within the Alpha Vantage ecosystem (AVC mining guide: https://www.alphatournament.com/avc_mining_guide/) to remove the 500 requests/day rate limit, (2) subscribe to any of the premium plans at https://www.alphavantage.co/premium/ to instantly remove all daily rate limits"
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyEarnings(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 142
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:19:20.272 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.IncomeStatement with Symbol AVIR
2022-05-12 01:19:20.276 +03:00 [INF] Generating URI for INCOME_STATEMENT with params: symbol: AVIR
2022-05-12 01:19:20.276 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=INCOME_STATEMENT&symbol=AVIR
2022-05-12 01:19:20.277 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=INCOME_STATEMENT&symbol=AVIR".
2022-05-12 01:19:20.534 +03:00 [INF] Response has success status code
2022-05-12 01:19:20.535 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.IncomeStatement for symbol AVIR
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Information": "Thank you for using Alpha Vantage! You have reached the 500 requests/day limit and there are multiple ways to remove this rate limit: (1) become a holder of Alpha Vantage Coin (AVC), an Ethereum-based cryptocurrency that provides various utility & governance functions within the Alpha Vantage ecosystem (AVC mining guide: https://www.alphatournament.com/avc_mining_guide/) to remove the 500 requests/day rate limit, (2) subscribe to any of the premium plans at https://www.alphavantage.co/premium/ to instantly remove all daily rate limits"
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetIncomeStatement(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 69
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:19:26.877 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CashFlow with Symbol AVGO
2022-05-12 01:19:26.882 +03:00 [INF] Generating URI for CASH_FLOW with params: symbol: AVGO
2022-05-12 01:19:26.883 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=CASH_FLOW&symbol=AVGO
2022-05-12 01:19:26.884 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=CASH_FLOW&symbol=AVGO".
2022-05-12 01:19:27.055 +03:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/screener-model - -
2022-05-12 01:19:27.055 +03:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/distribution/market-cap/100 - -
2022-05-12 01:19:27.056 +03:00 [INF] CORS policy execution successful.
2022-05-12 01:19:27.056 +03:00 [INF] CORS policy execution successful.
2022-05-12 01:19:27.056 +03:00 [INF] Executing endpoint 'SaluteStocksAPI.Controllers.ApiController.GetScreenerModel (SaluteStocksAPI)'
2022-05-12 01:19:27.057 +03:00 [INF] Executing endpoint 'SaluteStocksAPI.Controllers.ApiController.GetMarketCapDistribution (SaluteStocksAPI)'
2022-05-12 01:19:27.057 +03:00 [INF] Route matched with {action = "GetScreenerModel", controller = "Api"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetScreenerModel() on controller SaluteStocksAPI.Controllers.ApiController (SaluteStocksAPI).
2022-05-12 01:19:27.058 +03:00 [INF] Route matched with {action = "GetMarketCapDistribution", controller = "Api"}. Executing controller action with signature System.Threading.Tasks.Task`1[System.String] GetMarketCapDistribution(Int32) on controller SaluteStocksAPI.Controllers.ApiController (SaluteStocksAPI).
2022-05-12 01:19:27.059 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 01:19:27.060 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-12 01:19:27.070 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[MarketCapitalization])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 01:19:27.071 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[MarketCapitalization])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 01:19:27.084 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[MarketCapitalization])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 01:19:27.085 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[MarketCapitalization])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 01:19:27.098 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[EBITDA])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 01:19:27.099 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:27.106 +03:00 [INF] Response has success status code
2022-05-12 01:19:27.107 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.CashFlow for symbol AVGO
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Information": "Thank you for using Alpha Vantage! You have reached the 500 requests/day limit and there are multiple ways to remove this rate limit: (1) become a holder of Alpha Vantage Coin (AVC), an Ethereum-based cryptocurrency that provides various utility & governance functions within the Alpha Vantage ecosystem (AVC mining guide: https://www.alphatournament.com/avc_mining_guide/) to remove the 500 requests/day rate limit, (2) subscribe to any of the premium plans at https://www.alphavantage.co/premium/ to instantly remove all daily rate limits"
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCashFlow(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 96
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:19:27.114 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[EBITDA])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 01:19:27.116 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:27.127 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[PERatio])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 01:19:27.128 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:27.140 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[PERatio])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-12 01:19:27.141 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:27.141 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2022-05-12 01:19:27.143 +03:00 [INF] Executed action SaluteStocksAPI.Controllers.ApiController.GetScreenerModel (SaluteStocksAPI) in 84.5371ms
2022-05-12 01:19:27.144 +03:00 [INF] Executed endpoint 'SaluteStocksAPI.Controllers.ApiController.GetScreenerModel (SaluteStocksAPI)'
2022-05-12 01:19:27.144 +03:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/screener-model - - - 200 - text/plain;+charset=utf-8 89.4817ms
2022-05-12 01:19:27.151 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:27.161 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:27.171 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:27.175 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.BalanceSheet with Symbol BFLY-WS
2022-05-12 01:19:27.177 +03:00 [INF] Generating URI for BALANCE_SHEET with params: symbol: BFLY-WS
2022-05-12 01:19:27.178 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BFLY-WS
2022-05-12 01:19:27.178 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BFLY-WS".
2022-05-12 01:19:27.183 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:27.193 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:27.205 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:27.217 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:27.229 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:27.237 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:27.248 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:27.258 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:27.268 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:27.278 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:27.289 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:27.303 +03:00 [INF] Executed DbCommand (12ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:27.316 +03:00 [INF] Executed DbCommand (12ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:27.328 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:27.340 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:27.356 +03:00 [INF] Executed DbCommand (14ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:27.370 +03:00 [INF] Executed DbCommand (13ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:27.381 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:27.391 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:27.398 +03:00 [INF] Response has success status code
2022-05-12 01:19:27.399 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.BalanceSheet for symbol BFLY-WS
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Information": "Thank you for using Alpha Vantage! You have reached the 500 requests/day limit and there are multiple ways to remove this rate limit: (1) become a holder of Alpha Vantage Coin (AVC), an Ethereum-based cryptocurrency that provides various utility & governance functions within the Alpha Vantage ecosystem (AVC mining guide: https://www.alphatournament.com/avc_mining_guide/) to remove the 500 requests/day rate limit, (2) subscribe to any of the premium plans at https://www.alphavantage.co/premium/ to instantly remove all daily rate limits"
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetBalanceSheet(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 82
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:19:27.400 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:27.413 +03:00 [INF] Executed DbCommand (12ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:27.425 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:27.436 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:27.447 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:27.457 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:27.469 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:27.482 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:27.492 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:27.502 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:27.516 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:27.528 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:27.543 +03:00 [INF] Executed DbCommand (13ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:27.556 +03:00 [INF] Executed DbCommand (12ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:27.568 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:27.581 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:27.593 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:27.605 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:27.616 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:27.629 +03:00 [INF] Executed DbCommand (12ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:27.639 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:27.653 +03:00 [INF] Executed DbCommand (12ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:27.665 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:27.679 +03:00 [INF] Executed DbCommand (12ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:27.693 +03:00 [INF] Executed DbCommand (12ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:27.707 +03:00 [INF] Executed DbCommand (12ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:27.720 +03:00 [INF] Executed DbCommand (12ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:27.732 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:27.745 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:27.755 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:27.765 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:27.775 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:27.785 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:27.800 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:27.811 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:27.821 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:27.833 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:27.845 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:27.854 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:27.864 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:27.876 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:27.888 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:27.900 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:27.910 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:27.920 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:27.930 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:27.941 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:27.951 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:27.964 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:27.975 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:27.991 +03:00 [INF] Executed DbCommand (12ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:28.003 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:28.014 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:28.025 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:28.037 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:28.051 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:28.064 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:28.075 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:28.087 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:28.100 +03:00 [INF] Executed DbCommand (12ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:28.114 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:28.126 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:28.138 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:28.149 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:28.159 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:28.169 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:28.184 +03:00 [INF] Executed DbCommand (13ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:28.196 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:28.208 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:28.219 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:28.232 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:28.243 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:28.254 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) > @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) < @__to_1))
2022-05-12 01:19:28.258 +03:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2022-05-12 01:19:28.259 +03:00 [INF] Executed action SaluteStocksAPI.Controllers.ApiController.GetMarketCapDistribution (SaluteStocksAPI) in 1199.5345ms
2022-05-12 01:19:28.260 +03:00 [INF] Executed endpoint 'SaluteStocksAPI.Controllers.ApiController.GetMarketCapDistribution (SaluteStocksAPI)'
2022-05-12 01:19:28.260 +03:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/distribution/market-cap/100 - - - 200 - text/plain;+charset=utf-8 1205.2963ms
2022-05-12 01:19:37.422 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CompanyOverview with Symbol BLDEW
2022-05-12 01:19:37.425 +03:00 [INF] Generating URI for OVERVIEW with params: symbol: BLDEW
2022-05-12 01:19:37.426 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=OVERVIEW&symbol=BLDEW
2022-05-12 01:19:37.426 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=OVERVIEW&symbol=BLDEW".
2022-05-12 01:19:37.652 +03:00 [INF] Response has success status code
2022-05-12 01:19:37.652 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.CompanyOverview for symbol BLDEW
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyOverview(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 116
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:19:47.254 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.Earnings with Symbol AYX
2022-05-12 01:19:47.255 +03:00 [INF] Generating URI for EARNINGS with params: symbol: AYX
2022-05-12 01:19:47.256 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=EARNINGS&symbol=AYX
2022-05-12 01:19:47.256 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=EARNINGS&symbol=AYX".
2022-05-12 01:19:47.718 +03:00 [INF] Response has success status code
2022-05-12 01:19:47.719 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.Earnings for symbol AYX
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyEarnings(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 142
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:19:50.548 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.IncomeStatement with Symbol AVIV
2022-05-12 01:19:50.552 +03:00 [INF] Generating URI for INCOME_STATEMENT with params: symbol: AVIV
2022-05-12 01:19:50.552 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=INCOME_STATEMENT&symbol=AVIV
2022-05-12 01:19:50.553 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=INCOME_STATEMENT&symbol=AVIV".
2022-05-12 01:19:50.787 +03:00 [INF] Response has success status code
2022-05-12 01:19:50.788 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.IncomeStatement for symbol AVIV
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetIncomeStatement(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 69
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:19:56.370 +03:00 [INF] Application is shutting down...
2022-05-12 01:19:57.108 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CashFlow with Symbol AVGR
2022-05-12 01:19:57.112 +03:00 [INF] Generating URI for CASH_FLOW with params: symbol: AVGR
2022-05-12 01:19:57.112 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=CASH_FLOW&symbol=AVGR
2022-05-12 01:19:57.113 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=CASH_FLOW&symbol=AVGR".
2022-05-12 01:19:57.351 +03:00 [INF] Response has success status code
2022-05-12 01:19:57.352 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.CashFlow for symbol AVGR
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCashFlow(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 96
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
2022-05-12 01:19:57.405 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.BalanceSheet with Symbol BFO
2022-05-12 01:19:57.407 +03:00 [INF] Generating URI for BALANCE_SHEET with params: symbol: BFO
2022-05-12 01:19:57.407 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BFO
2022-05-12 01:19:57.408 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BFO".
2022-05-12 01:19:57.629 +03:00 [INF] Response has success status code
2022-05-12 01:19:57.630 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.BalanceSheet for symbol BFO
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 336
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetBalanceSheet(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 82
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 252
