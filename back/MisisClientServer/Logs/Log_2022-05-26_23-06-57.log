2022-05-26 23:06:57.957 +03:00 [INF] Generating URI for LISTING_STATUS with params: state: active
2022-05-26 23:06:57.982 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=demo&function=LISTING_STATUS&state=active
2022-05-26 23:06:57.985 +03:00 [INF] Starting to get and parse CSV from "https://www.alphavantage.co/query?apikey=demo&function=LISTING_STATUS&state=active".
2022-05-26 23:06:58.060 +03:00 [INF] Now listening on: https://localhost:5001
2022-05-26 23:06:58.061 +03:00 [INF] Now listening on: http://localhost:5000
2022-05-26 23:06:58.064 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2022-05-26 23:06:58.064 +03:00 [INF] Hosting environment: Development
2022-05-26 23:06:58.065 +03:00 [INF] Content root path: D:\repo\SaluteStocks\SaluteStocksAPI\
2022-05-26 23:06:58.205 +03:00 [INF] Request starting HTTP/2 GET https://localhost:5001/swagger/index.html - -
2022-05-26 23:06:58.288 +03:00 [INF] Request finished HTTP/2 GET https://localhost:5001/swagger/index.html - - - 200 - text/html;charset=utf-8 85.7063ms
2022-05-26 23:06:58.388 +03:00 [INF] Request starting HTTP/2 GET https://localhost:5001/swagger/v1/swagger.json - -
2022-05-26 23:06:58.402 +03:00 [ERR] An unhandled exception has occurred while executing the request.
Swashbuckle.AspNetCore.SwaggerGen.SwaggerGeneratorException: Ambiguous HTTP method for action - SaluteStocksAPI.Controllers.ApiController.Ping (SaluteStocksAPI). Actions require an explicit HttpMethod binding for Swagger/OpenAPI 3.0
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GenerateOperations(IEnumerable`1 apiDescriptions, SchemaRepository schemaRepository)
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GeneratePaths(IEnumerable`1 apiDescriptions, SchemaRepository schemaRepository)
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GetSwagger(String documentName, String host, String basePath)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2022-05-26 23:06:58.413 +03:00 [INF] Request finished HTTP/2 GET https://localhost:5001/swagger/v1/swagger.json - - - 500 - text/plain;+charset=utf-8 24.9960ms
2022-05-26 23:06:58.643 +03:00 [INF] Response has success status code
2022-05-26 23:06:58.646 +03:00 [INF] Trying to deserialize response.
2022-05-26 23:06:58.697 +03:00 [INF] Loading missing data.
2022-05-26 23:06:59.454 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-26 23:06:59.911 +03:00 [INF] Executed DbCommand (32ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [l].[Symbol]
FROM [Listing] AS [l]
2022-05-26 23:06:59.952 +03:00 [INF] Loading missing entities for SaluteStocksAPI.Models.FundamentalData.BalanceSheet
2022-05-26 23:06:59.954 +03:00 [INF] Getting already loaded entities
2022-05-26 23:06:59.957 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-26 23:06:59.976 +03:00 [INF] Loading missing entities for SaluteStocksAPI.Models.FundamentalData.CashFlow
2022-05-26 23:06:59.976 +03:00 [INF] Getting already loaded entities
2022-05-26 23:06:59.984 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT DISTINCT [b].[Symbol]
FROM [BalanceSheets] AS [b]
WHERE [b].[ExistInApi] IS NOT NULL
2022-05-26 23:06:59.988 +03:00 [INF] Already loaded: 1607
2022-05-26 23:06:59.994 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.BalanceSheet with Symbol BBD
2022-05-26 23:06:59.998 +03:00 [INF] Generating URI for BALANCE_SHEET with params: symbol: BBD
2022-05-26 23:06:59.999 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BBD
2022-05-26 23:07:00.000 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BBD".
2022-05-26 23:07:00.009 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-26 23:07:00.013 +03:00 [INF] Loading missing entities for SaluteStocksAPI.Models.FundamentalData.CompanyOverview
2022-05-26 23:07:00.013 +03:00 [INF] Getting already loaded entities
2022-05-26 23:07:00.014 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-26 23:07:00.018 +03:00 [INF] Loading missing entities for SaluteStocksAPI.Models.FundamentalData.Earnings
2022-05-26 23:07:00.018 +03:00 [INF] Getting already loaded entities
2022-05-26 23:07:00.019 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-26 23:07:00.022 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT DISTINCT [c].[Symbol]
FROM [CashFlows] AS [c]
WHERE [c].[ExistInApi] IS NOT NULL
2022-05-26 23:07:00.022 +03:00 [INF] Loading missing entities for SaluteStocksAPI.Models.FundamentalData.IncomeStatement
2022-05-26 23:07:00.023 +03:00 [INF] Getting already loaded entities
2022-05-26 23:07:00.024 +03:00 [INF] Already loaded: 1236
2022-05-26 23:07:00.024 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-26 23:07:00.026 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CashFlow with Symbol ASLN
2022-05-26 23:07:00.029 +03:00 [INF] Generating URI for CASH_FLOW with params: symbol: ASLN
2022-05-26 23:07:00.030 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=KBO0R5WJR4O4UIHS&function=CASH_FLOW&symbol=ASLN
2022-05-26 23:07:00.031 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=KBO0R5WJR4O4UIHS&function=CASH_FLOW&symbol=ASLN".
2022-05-26 23:07:00.034 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT DISTINCT [i].[Symbol]
FROM [IncomeStatements] AS [i]
WHERE [i].[ExistInApi] IS NOT NULL
2022-05-26 23:07:00.037 +03:00 [INF] Already loaded: 1269
2022-05-26 23:07:00.039 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.IncomeStatement with Symbol ASLN
2022-05-26 23:07:00.042 +03:00 [INF] Generating URI for INCOME_STATEMENT with params: symbol: ASLN
2022-05-26 23:07:00.043 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=WS75BM33XB6FUU6O&function=INCOME_STATEMENT&symbol=ASLN
2022-05-26 23:07:00.044 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=WS75BM33XB6FUU6O&function=INCOME_STATEMENT&symbol=ASLN".
2022-05-26 23:07:00.052 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT DISTINCT [e].[Symbol]
FROM [Earnings] AS [e]
WHERE [e].[ExistInApi] IS NOT NULL
2022-05-26 23:07:00.054 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT DISTINCT [c].[Symbol]
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] IS NOT NULL
2022-05-26 23:07:00.055 +03:00 [INF] Already loaded: 1757
2022-05-26 23:07:00.061 +03:00 [INF] Already loaded: 2141
2022-05-26 23:07:00.065 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.Earnings with Symbol BSTP
2022-05-26 23:07:00.068 +03:00 [INF] Generating URI for EARNINGS with params: symbol: BSTP
2022-05-26 23:07:00.068 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=WS75BM33XB6FUU6O&function=EARNINGS&symbol=BSTP
2022-05-26 23:07:00.069 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=WS75BM33XB6FUU6O&function=EARNINGS&symbol=BSTP".
2022-05-26 23:07:00.074 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CompanyOverview with Symbol CGW
2022-05-26 23:07:00.076 +03:00 [INF] Generating URI for OVERVIEW with params: symbol: CGW
2022-05-26 23:07:00.077 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=XJ1HZGKIN0D10RIF&function=OVERVIEW&symbol=CGW
2022-05-26 23:07:00.077 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=XJ1HZGKIN0D10RIF&function=OVERVIEW&symbol=CGW".
2022-05-26 23:07:00.326 +03:00 [INF] Response has success status code
2022-05-26 23:07:00.329 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.CompanyOverview for symbol CGW
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Information": "Thank you for using Alpha Vantage! You have reached the 500 requests/day limit and there are multiple ways to remove this rate limit: (1) become a holder of Alpha Vantage Coin (AVC), an Ethereum-based cryptocurrency that provides various utility & governance functions within the Alpha Vantage ecosystem (AVC mining guide: https://www.alphatournament.com/avc_mining_guide/) to remove the 500 requests/day rate limit, (2) subscribe to any of the premium plans at https://www.alphavantage.co/premium/ to instantly remove all daily rate limits"
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 319
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyOverview(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 112
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 179
2022-05-26 23:07:00.444 +03:00 [INF] Response has success status code
2022-05-26 23:07:00.445 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.IncomeStatement for symbol ASLN
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Information": "Thank you for using Alpha Vantage! You have reached the 500 requests/day limit and there are multiple ways to remove this rate limit: (1) become a holder of Alpha Vantage Coin (AVC), an Ethereum-based cryptocurrency that provides various utility & governance functions within the Alpha Vantage ecosystem (AVC mining guide: https://www.alphatournament.com/avc_mining_guide/) to remove the 500 requests/day rate limit, (2) subscribe to any of the premium plans at https://www.alphavantage.co/premium/ to instantly remove all daily rate limits"
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 319
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetIncomeStatement(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 72
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 181
2022-05-26 23:07:00.557 +03:00 [INF] Response has success status code
2022-05-26 23:07:00.558 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.CashFlow for symbol ASLN
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Information": "Thank you for using Alpha Vantage! You have reached the 500 requests/day limit and there are multiple ways to remove this rate limit: (1) become a holder of Alpha Vantage Coin (AVC), an Ethereum-based cryptocurrency that provides various utility & governance functions within the Alpha Vantage ecosystem (AVC mining guide: https://www.alphatournament.com/avc_mining_guide/) to remove the 500 requests/day rate limit, (2) subscribe to any of the premium plans at https://www.alphavantage.co/premium/ to instantly remove all daily rate limits"
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 319
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCashFlow(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 99
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 178
2022-05-26 23:07:00.562 +03:00 [INF] Response has success status code
2022-05-26 23:07:00.563 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.Earnings for symbol BSTP
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Information": "Thank you for using Alpha Vantage! You have reached the 500 requests/day limit and there are multiple ways to remove this rate limit: (1) become a holder of Alpha Vantage Coin (AVC), an Ethereum-based cryptocurrency that provides various utility & governance functions within the Alpha Vantage ecosystem (AVC mining guide: https://www.alphatournament.com/avc_mining_guide/) to remove the 500 requests/day rate limit, (2) subscribe to any of the premium plans at https://www.alphavantage.co/premium/ to instantly remove all daily rate limits"
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 319
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyEarnings(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 145
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 180
2022-05-26 23:07:00.580 +03:00 [INF] Response has success status code
2022-05-26 23:07:00.581 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.BalanceSheet for symbol BBD
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Information": "Thank you for using Alpha Vantage! You have reached the 500 requests/day limit and there are multiple ways to remove this rate limit: (1) become a holder of Alpha Vantage Coin (AVC), an Ethereum-based cryptocurrency that provides various utility & governance functions within the Alpha Vantage ecosystem (AVC mining guide: https://www.alphatournament.com/avc_mining_guide/) to remove the 500 requests/day rate limit, (2) subscribe to any of the premium plans at https://www.alphavantage.co/premium/ to instantly remove all daily rate limits"
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 319
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetBalanceSheet(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 85
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 176
2022-05-26 23:07:30.346 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CompanyOverview with Symbol CHCI
2022-05-26 23:07:30.348 +03:00 [INF] Generating URI for OVERVIEW with params: symbol: CHCI
2022-05-26 23:07:30.348 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=CR1WTHZN5EBATF3M&function=OVERVIEW&symbol=CHCI
2022-05-26 23:07:30.350 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=CR1WTHZN5EBATF3M&function=OVERVIEW&symbol=CHCI".
2022-05-26 23:07:30.456 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.IncomeStatement with Symbol ATIF
2022-05-26 23:07:30.457 +03:00 [INF] Generating URI for INCOME_STATEMENT with params: symbol: ATIF
2022-05-26 23:07:30.458 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=XVZ0LFWBYDX16M5H&function=INCOME_STATEMENT&symbol=ATIF
2022-05-26 23:07:30.459 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=XVZ0LFWBYDX16M5H&function=INCOME_STATEMENT&symbol=ATIF".
2022-05-26 23:07:30.563 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CashFlow with Symbol ASML
2022-05-26 23:07:30.565 +03:00 [INF] Generating URI for CASH_FLOW with params: symbol: ASML
2022-05-26 23:07:30.566 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=XJ1HZGKIN0D10RIF&function=CASH_FLOW&symbol=ASML
2022-05-26 23:07:30.567 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=XJ1HZGKIN0D10RIF&function=CASH_FLOW&symbol=ASML".
2022-05-26 23:07:30.579 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.Earnings with Symbol BTBD
2022-05-26 23:07:30.582 +03:00 [INF] Generating URI for EARNINGS with params: symbol: BTBD
2022-05-26 23:07:30.582 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=HC6APPA2EWCQ1YMW&function=EARNINGS&symbol=BTBD
2022-05-26 23:07:30.583 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=HC6APPA2EWCQ1YMW&function=EARNINGS&symbol=BTBD".
2022-05-26 23:07:30.587 +03:00 [INF] Response has success status code
2022-05-26 23:07:30.588 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.CompanyOverview for symbol CHCI
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Information": "Thank you for using Alpha Vantage! You have reached the 500 requests/day limit and there are multiple ways to remove this rate limit: (1) become a holder of Alpha Vantage Coin (AVC), an Ethereum-based cryptocurrency that provides various utility & governance functions within the Alpha Vantage ecosystem (AVC mining guide: https://www.alphatournament.com/avc_mining_guide/) to remove the 500 requests/day rate limit, (2) subscribe to any of the premium plans at https://www.alphavantage.co/premium/ to instantly remove all daily rate limits"
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 319
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyOverview(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 112
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 179
2022-05-26 23:07:30.594 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.BalanceSheet with Symbol BBVA
2022-05-26 23:07:30.596 +03:00 [INF] Generating URI for BALANCE_SHEET with params: symbol: BBVA
2022-05-26 23:07:30.597 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BBVA
2022-05-26 23:07:30.598 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BBVA".
2022-05-26 23:07:30.698 +03:00 [INF] Response has success status code
2022-05-26 23:07:30.699 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.IncomeStatement for symbol ATIF
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Information": "Thank you for using Alpha Vantage! You have reached the 500 requests/day limit and there are multiple ways to remove this rate limit: (1) become a holder of Alpha Vantage Coin (AVC), an Ethereum-based cryptocurrency that provides various utility & governance functions within the Alpha Vantage ecosystem (AVC mining guide: https://www.alphatournament.com/avc_mining_guide/) to remove the 500 requests/day rate limit, (2) subscribe to any of the premium plans at https://www.alphavantage.co/premium/ to instantly remove all daily rate limits"
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 319
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetIncomeStatement(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 72
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 181
2022-05-26 23:07:30.819 +03:00 [INF] Response has success status code
2022-05-26 23:07:30.820 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.Earnings for symbol BTBD
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Information": "Thank you for using Alpha Vantage! You have reached the 500 requests/day limit and there are multiple ways to remove this rate limit: (1) become a holder of Alpha Vantage Coin (AVC), an Ethereum-based cryptocurrency that provides various utility & governance functions within the Alpha Vantage ecosystem (AVC mining guide: https://www.alphatournament.com/avc_mining_guide/) to remove the 500 requests/day rate limit, (2) subscribe to any of the premium plans at https://www.alphavantage.co/premium/ to instantly remove all daily rate limits"
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 319
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyEarnings(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 145
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 180
2022-05-26 23:07:31.075 +03:00 [INF] Response has success status code
2022-05-26 23:07:31.077 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.CashFlow for symbol ASML
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Information": "Thank you for using Alpha Vantage! You have reached the 500 requests/day limit and there are multiple ways to remove this rate limit: (1) become a holder of Alpha Vantage Coin (AVC), an Ethereum-based cryptocurrency that provides various utility & governance functions within the Alpha Vantage ecosystem (AVC mining guide: https://www.alphatournament.com/avc_mining_guide/) to remove the 500 requests/day rate limit, (2) subscribe to any of the premium plans at https://www.alphavantage.co/premium/ to instantly remove all daily rate limits"
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 319
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCashFlow(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 99
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 178
2022-05-26 23:07:31.082 +03:00 [INF] Response has success status code
2022-05-26 23:07:31.083 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.BalanceSheet for symbol BBVA
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 319
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetBalanceSheet(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 85
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 176
2022-05-26 23:08:00.606 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CompanyOverview with Symbol CHCT
2022-05-26 23:08:00.607 +03:00 [INF] Generating URI for OVERVIEW with params: symbol: CHCT
2022-05-26 23:08:00.608 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=HC6APPA2EWCQ1YMW&function=OVERVIEW&symbol=CHCT
2022-05-26 23:08:00.608 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=HC6APPA2EWCQ1YMW&function=OVERVIEW&symbol=CHCT".
2022-05-26 23:08:00.702 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.IncomeStatement with Symbol ATY
2022-05-26 23:08:00.703 +03:00 [INF] Generating URI for INCOME_STATEMENT with params: symbol: ATY
2022-05-26 23:08:00.704 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=XJ1HZGKIN0D10RIF&function=INCOME_STATEMENT&symbol=ATY
2022-05-26 23:08:00.704 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=XJ1HZGKIN0D10RIF&function=INCOME_STATEMENT&symbol=ATY".
2022-05-26 23:08:00.828 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.Earnings with Symbol BTCS
2022-05-26 23:08:00.829 +03:00 [INF] Generating URI for EARNINGS with params: symbol: BTCS
2022-05-26 23:08:00.830 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=HC6APPA2EWCQ1YMW&function=EARNINGS&symbol=BTCS
2022-05-26 23:08:00.830 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=HC6APPA2EWCQ1YMW&function=EARNINGS&symbol=BTCS".
2022-05-26 23:08:00.859 +03:00 [INF] Response has success status code
2022-05-26 23:08:00.859 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.CompanyOverview for symbol CHCT
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Information": "Thank you for using Alpha Vantage! You have reached the 500 requests/day limit and there are multiple ways to remove this rate limit: (1) become a holder of Alpha Vantage Coin (AVC), an Ethereum-based cryptocurrency that provides various utility & governance functions within the Alpha Vantage ecosystem (AVC mining guide: https://www.alphatournament.com/avc_mining_guide/) to remove the 500 requests/day rate limit, (2) subscribe to any of the premium plans at https://www.alphavantage.co/premium/ to instantly remove all daily rate limits"
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 319
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyOverview(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 112
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 179
2022-05-26 23:08:00.940 +03:00 [INF] Response has success status code
2022-05-26 23:08:00.941 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.IncomeStatement for symbol ATY
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Information": "Thank you for using Alpha Vantage! You have reached the 500 requests/day limit and there are multiple ways to remove this rate limit: (1) become a holder of Alpha Vantage Coin (AVC), an Ethereum-based cryptocurrency that provides various utility & governance functions within the Alpha Vantage ecosystem (AVC mining guide: https://www.alphatournament.com/avc_mining_guide/) to remove the 500 requests/day rate limit, (2) subscribe to any of the premium plans at https://www.alphavantage.co/premium/ to instantly remove all daily rate limits"
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 319
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetIncomeStatement(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 72
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 181
2022-05-26 23:08:01.098 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CashFlow with Symbol ASND
2022-05-26 23:08:01.098 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.BalanceSheet with Symbol BCE
2022-05-26 23:08:01.099 +03:00 [INF] Generating URI for CASH_FLOW with params: symbol: ASND
2022-05-26 23:08:01.100 +03:00 [INF] Generating URI for BALANCE_SHEET with params: symbol: BCE
2022-05-26 23:08:01.100 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=XVZ0LFWBYDX16M5H&function=CASH_FLOW&symbol=ASND
2022-05-26 23:08:01.101 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=XJ1HZGKIN0D10RIF&function=BALANCE_SHEET&symbol=BCE
2022-05-26 23:08:01.101 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=XVZ0LFWBYDX16M5H&function=CASH_FLOW&symbol=ASND".
2022-05-26 23:08:01.102 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=XJ1HZGKIN0D10RIF&function=BALANCE_SHEET&symbol=BCE".
2022-05-26 23:08:01.116 +03:00 [INF] Response has success status code
2022-05-26 23:08:01.116 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.Earnings for symbol BTCS
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Information": "Thank you for using Alpha Vantage! You have reached the 500 requests/day limit and there are multiple ways to remove this rate limit: (1) become a holder of Alpha Vantage Coin (AVC), an Ethereum-based cryptocurrency that provides various utility & governance functions within the Alpha Vantage ecosystem (AVC mining guide: https://www.alphatournament.com/avc_mining_guide/) to remove the 500 requests/day rate limit, (2) subscribe to any of the premium plans at https://www.alphavantage.co/premium/ to instantly remove all daily rate limits"
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 319
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyEarnings(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 145
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 180
2022-05-26 23:08:01.339 +03:00 [INF] Response has success status code
2022-05-26 23:08:01.340 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.BalanceSheet for symbol BCE
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Information": "Thank you for using Alpha Vantage! You have reached the 500 requests/day limit and there are multiple ways to remove this rate limit: (1) become a holder of Alpha Vantage Coin (AVC), an Ethereum-based cryptocurrency that provides various utility & governance functions within the Alpha Vantage ecosystem (AVC mining guide: https://www.alphatournament.com/avc_mining_guide/) to remove the 500 requests/day rate limit, (2) subscribe to any of the premium plans at https://www.alphavantage.co/premium/ to instantly remove all daily rate limits"
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 319
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetBalanceSheet(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 85
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 254
2022-05-26 23:08:01.363 +03:00 [INF] Response has success status code
2022-05-26 23:08:01.364 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.CashFlow for symbol ASND
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Information": "Thank you for using Alpha Vantage! You have reached the 500 requests/day limit and there are multiple ways to remove this rate limit: (1) become a holder of Alpha Vantage Coin (AVC), an Ethereum-based cryptocurrency that provides various utility & governance functions within the Alpha Vantage ecosystem (AVC mining guide: https://www.alphatournament.com/avc_mining_guide/) to remove the 500 requests/day rate limit, (2) subscribe to any of the premium plans at https://www.alphavantage.co/premium/ to instantly remove all daily rate limits"
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 319
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCashFlow(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 99
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 254
2022-05-26 23:08:30.876 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CompanyOverview with Symbol CHDN
2022-05-26 23:08:30.877 +03:00 [INF] Generating URI for OVERVIEW with params: symbol: CHDN
2022-05-26 23:08:30.878 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=XJ1HZGKIN0D10RIF&function=OVERVIEW&symbol=CHDN
2022-05-26 23:08:30.879 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=XJ1HZGKIN0D10RIF&function=OVERVIEW&symbol=CHDN".
2022-05-26 23:08:30.955 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.IncomeStatement with Symbol AYRO
2022-05-26 23:08:30.957 +03:00 [INF] Generating URI for INCOME_STATEMENT with params: symbol: AYRO
2022-05-26 23:08:30.957 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=P63Z59GLLCNSB849&function=INCOME_STATEMENT&symbol=AYRO
2022-05-26 23:08:30.958 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=P63Z59GLLCNSB849&function=INCOME_STATEMENT&symbol=AYRO".
2022-05-26 23:08:31.128 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.Earnings with Symbol BTEC
2022-05-26 23:08:31.130 +03:00 [INF] Generating URI for EARNINGS with params: symbol: BTEC
2022-05-26 23:08:31.130 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=P63Z59GLLCNSB849&function=EARNINGS&symbol=BTEC
2022-05-26 23:08:31.131 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=P63Z59GLLCNSB849&function=EARNINGS&symbol=BTEC".
2022-05-26 23:08:31.144 +03:00 [INF] Response has success status code
2022-05-26 23:08:31.145 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.CompanyOverview for symbol CHDN
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Information": "Thank you for using Alpha Vantage! You have reached the 500 requests/day limit and there are multiple ways to remove this rate limit: (1) become a holder of Alpha Vantage Coin (AVC), an Ethereum-based cryptocurrency that provides various utility & governance functions within the Alpha Vantage ecosystem (AVC mining guide: https://www.alphatournament.com/avc_mining_guide/) to remove the 500 requests/day rate limit, (2) subscribe to any of the premium plans at https://www.alphavantage.co/premium/ to instantly remove all daily rate limits"
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 319
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyOverview(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 112
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 254
2022-05-26 23:08:31.190 +03:00 [INF] Response has success status code
2022-05-26 23:08:31.191 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.IncomeStatement for symbol AYRO
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 319
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetIncomeStatement(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 72
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 254
2022-05-26 23:08:31.349 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.BalanceSheet with Symbol BCH
2022-05-26 23:08:31.350 +03:00 [INF] Generating URI for BALANCE_SHEET with params: symbol: BCH
2022-05-26 23:08:31.351 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=CR1WTHZN5EBATF3M&function=BALANCE_SHEET&symbol=BCH
2022-05-26 23:08:31.351 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=CR1WTHZN5EBATF3M&function=BALANCE_SHEET&symbol=BCH".
2022-05-26 23:08:31.368 +03:00 [INF] Response has success status code
2022-05-26 23:08:31.368 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.Earnings for symbol BTEC
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 339
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyEarnings(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 145
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 254
2022-05-26 23:08:31.380 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CashFlow with Symbol ASX
2022-05-26 23:08:31.383 +03:00 [INF] Generating URI for CASH_FLOW with params: symbol: ASX
2022-05-26 23:08:31.383 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=HC6APPA2EWCQ1YMW&function=CASH_FLOW&symbol=ASX
2022-05-26 23:08:31.384 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=HC6APPA2EWCQ1YMW&function=CASH_FLOW&symbol=ASX".
2022-05-26 23:08:31.591 +03:00 [INF] Response has success status code
2022-05-26 23:08:31.591 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.BalanceSheet for symbol BCH
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 339
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetBalanceSheet(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 85
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 254
2022-05-26 23:08:31.636 +03:00 [INF] Response has success status code
2022-05-26 23:08:31.636 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.CashFlow for symbol ASX
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 339
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCashFlow(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 99
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 254
2022-05-26 23:09:01.177 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CompanyOverview with Symbol CHEAU
2022-05-26 23:09:01.178 +03:00 [INF] Generating URI for OVERVIEW with params: symbol: CHEAU
2022-05-26 23:09:01.179 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=P63Z59GLLCNSB849&function=OVERVIEW&symbol=CHEAU
2022-05-26 23:09:01.179 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=P63Z59GLLCNSB849&function=OVERVIEW&symbol=CHEAU".
2022-05-26 23:09:01.209 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.IncomeStatement with Symbol BAK
2022-05-26 23:09:01.212 +03:00 [INF] Generating URI for INCOME_STATEMENT with params: symbol: BAK
2022-05-26 23:09:01.213 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=XVZ0LFWBYDX16M5H&function=INCOME_STATEMENT&symbol=BAK
2022-05-26 23:09:01.213 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=XVZ0LFWBYDX16M5H&function=INCOME_STATEMENT&symbol=BAK".
2022-05-26 23:09:01.385 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.Earnings with Symbol BTF
2022-05-26 23:09:01.386 +03:00 [INF] Generating URI for EARNINGS with params: symbol: BTF
2022-05-26 23:09:01.387 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=XVZ0LFWBYDX16M5H&function=EARNINGS&symbol=BTF
2022-05-26 23:09:01.387 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=XVZ0LFWBYDX16M5H&function=EARNINGS&symbol=BTF".
2022-05-26 23:09:01.411 +03:00 [INF] Response has success status code
2022-05-26 23:09:01.411 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.CompanyOverview for symbol CHEAU
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Information": "Thank you for using Alpha Vantage! You have reached the 500 requests/day limit and there are multiple ways to remove this rate limit: (1) become a holder of Alpha Vantage Coin (AVC), an Ethereum-based cryptocurrency that provides various utility & governance functions within the Alpha Vantage ecosystem (AVC mining guide: https://www.alphatournament.com/avc_mining_guide/) to remove the 500 requests/day rate limit, (2) subscribe to any of the premium plans at https://www.alphavantage.co/premium/ to instantly remove all daily rate limits"
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 339
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyOverview(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 112
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 254
2022-05-26 23:09:01.448 +03:00 [INF] Response has success status code
2022-05-26 23:09:01.449 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.IncomeStatement for symbol BAK
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Information": "Thank you for using Alpha Vantage! You have reached the 500 requests/day limit and there are multiple ways to remove this rate limit: (1) become a holder of Alpha Vantage Coin (AVC), an Ethereum-based cryptocurrency that provides various utility & governance functions within the Alpha Vantage ecosystem (AVC mining guide: https://www.alphatournament.com/avc_mining_guide/) to remove the 500 requests/day rate limit, (2) subscribe to any of the premium plans at https://www.alphavantage.co/premium/ to instantly remove all daily rate limits"
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 339
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetIncomeStatement(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 72
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 254
2022-05-26 23:09:01.607 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.BalanceSheet with Symbol BCS
2022-05-26 23:09:01.608 +03:00 [INF] Generating URI for BALANCE_SHEET with params: symbol: BCS
2022-05-26 23:09:01.609 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=KBO0R5WJR4O4UIHS&function=BALANCE_SHEET&symbol=BCS
2022-05-26 23:09:01.610 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=KBO0R5WJR4O4UIHS&function=BALANCE_SHEET&symbol=BCS".
2022-05-26 23:09:01.626 +03:00 [INF] Response has success status code
2022-05-26 23:09:01.627 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.Earnings for symbol BTF
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Information": "Thank you for using Alpha Vantage! You have reached the 500 requests/day limit and there are multiple ways to remove this rate limit: (1) become a holder of Alpha Vantage Coin (AVC), an Ethereum-based cryptocurrency that provides various utility & governance functions within the Alpha Vantage ecosystem (AVC mining guide: https://www.alphatournament.com/avc_mining_guide/) to remove the 500 requests/day rate limit, (2) subscribe to any of the premium plans at https://www.alphavantage.co/premium/ to instantly remove all daily rate limits"
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 339
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyEarnings(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 145
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 254
2022-05-26 23:09:01.653 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CashFlow with Symbol ATHE
2022-05-26 23:09:01.655 +03:00 [INF] Generating URI for CASH_FLOW with params: symbol: ATHE
2022-05-26 23:09:01.655 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=XJ1HZGKIN0D10RIF&function=CASH_FLOW&symbol=ATHE
2022-05-26 23:09:01.656 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=XJ1HZGKIN0D10RIF&function=CASH_FLOW&symbol=ATHE".
2022-05-26 23:09:01.906 +03:00 [INF] Response has success status code
2022-05-26 23:09:01.906 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.CashFlow for symbol ATHE
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Information": "Thank you for using Alpha Vantage! You have reached the 500 requests/day limit and there are multiple ways to remove this rate limit: (1) become a holder of Alpha Vantage Coin (AVC), an Ethereum-based cryptocurrency that provides various utility & governance functions within the Alpha Vantage ecosystem (AVC mining guide: https://www.alphatournament.com/avc_mining_guide/) to remove the 500 requests/day rate limit, (2) subscribe to any of the premium plans at https://www.alphavantage.co/premium/ to instantly remove all daily rate limits"
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 339
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCashFlow(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 99
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 254
2022-05-26 23:09:02.098 +03:00 [INF] Response has success status code
2022-05-26 23:09:02.099 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.BalanceSheet for symbol BCS
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Information": "Thank you for using Alpha Vantage! You have reached the 500 requests/day limit and there are multiple ways to remove this rate limit: (1) become a holder of Alpha Vantage Coin (AVC), an Ethereum-based cryptocurrency that provides various utility & governance functions within the Alpha Vantage ecosystem (AVC mining guide: https://www.alphatournament.com/avc_mining_guide/) to remove the 500 requests/day rate limit, (2) subscribe to any of the premium plans at https://www.alphavantage.co/premium/ to instantly remove all daily rate limits"
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 339
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetBalanceSheet(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 85
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 254
2022-05-26 23:09:31.421 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CompanyOverview with Symbol CHEKZ
2022-05-26 23:09:31.422 +03:00 [INF] Generating URI for OVERVIEW with params: symbol: CHEKZ
2022-05-26 23:09:31.423 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=WS75BM33XB6FUU6O&function=OVERVIEW&symbol=CHEKZ
2022-05-26 23:09:31.424 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=WS75BM33XB6FUU6O&function=OVERVIEW&symbol=CHEKZ".
2022-05-26 23:09:31.452 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.IncomeStatement with Symbol BBAR
2022-05-26 23:09:31.454 +03:00 [INF] Generating URI for INCOME_STATEMENT with params: symbol: BBAR
2022-05-26 23:09:31.454 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=XJ1HZGKIN0D10RIF&function=INCOME_STATEMENT&symbol=BBAR
2022-05-26 23:09:31.455 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=XJ1HZGKIN0D10RIF&function=INCOME_STATEMENT&symbol=BBAR".
2022-05-26 23:09:31.641 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.Earnings with Symbol BTI
2022-05-26 23:09:31.642 +03:00 [INF] Generating URI for EARNINGS with params: symbol: BTI
2022-05-26 23:09:31.643 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=EARNINGS&symbol=BTI
2022-05-26 23:09:31.643 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=EARNINGS&symbol=BTI".
2022-05-26 23:09:31.668 +03:00 [INF] Response has success status code
2022-05-26 23:09:31.668 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.CompanyOverview for symbol CHEKZ
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 339
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyOverview(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 112
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 254
2022-05-26 23:09:31.685 +03:00 [INF] Response has success status code
2022-05-26 23:09:31.686 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.IncomeStatement for symbol BBAR
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 339
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetIncomeStatement(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 72
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 254
2022-05-26 23:09:31.882 +03:00 [INF] Response has success status code
2022-05-26 23:09:31.883 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.Earnings for symbol BTI
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 339
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyEarnings(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 145
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 254
2022-05-26 23:09:31.926 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CashFlow with Symbol ATSG
2022-05-26 23:09:31.927 +03:00 [INF] Generating URI for CASH_FLOW with params: symbol: ATSG
2022-05-26 23:09:31.928 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=CASH_FLOW&symbol=ATSG
2022-05-26 23:09:31.928 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=CASH_FLOW&symbol=ATSG".
2022-05-26 23:09:32.116 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.BalanceSheet with Symbol BEDU
2022-05-26 23:09:32.117 +03:00 [INF] Generating URI for BALANCE_SHEET with params: symbol: BEDU
2022-05-26 23:09:32.118 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=HC6APPA2EWCQ1YMW&function=BALANCE_SHEET&symbol=BEDU
2022-05-26 23:09:32.118 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=HC6APPA2EWCQ1YMW&function=BALANCE_SHEET&symbol=BEDU".
2022-05-26 23:09:32.168 +03:00 [INF] Response has success status code
2022-05-26 23:09:32.168 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.CashFlow for symbol ATSG
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 339
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCashFlow(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 99
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 254
2022-05-26 23:09:32.354 +03:00 [INF] Response has success status code
2022-05-26 23:09:32.355 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.BalanceSheet for symbol BEDU
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 339
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetBalanceSheet(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 85
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 254
2022-05-26 23:10:01.681 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CompanyOverview with Symbol CHGX
2022-05-26 23:10:01.682 +03:00 [INF] Generating URI for OVERVIEW with params: symbol: CHGX
2022-05-26 23:10:01.683 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=OVERVIEW&symbol=CHGX
2022-05-26 23:10:01.684 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=OVERVIEW&symbol=CHGX".
2022-05-26 23:10:01.697 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.IncomeStatement with Symbol BBD
2022-05-26 23:10:01.706 +03:00 [INF] Generating URI for INCOME_STATEMENT with params: symbol: BBD
2022-05-26 23:10:01.706 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=CR1WTHZN5EBATF3M&function=INCOME_STATEMENT&symbol=BBD
2022-05-26 23:10:01.707 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=CR1WTHZN5EBATF3M&function=INCOME_STATEMENT&symbol=BBD".
2022-05-26 23:10:01.887 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.Earnings with Symbol BTN
2022-05-26 23:10:01.888 +03:00 [INF] Generating URI for EARNINGS with params: symbol: BTN
2022-05-26 23:10:01.889 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=P63Z59GLLCNSB849&function=EARNINGS&symbol=BTN
2022-05-26 23:10:01.889 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=P63Z59GLLCNSB849&function=EARNINGS&symbol=BTN".
2022-05-26 23:10:02.172 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CashFlow with Symbol AXU
2022-05-26 23:10:02.174 +03:00 [INF] Generating URI for CASH_FLOW with params: symbol: AXU
2022-05-26 23:10:02.174 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=P63Z59GLLCNSB849&function=CASH_FLOW&symbol=AXU
2022-05-26 23:10:02.175 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=P63Z59GLLCNSB849&function=CASH_FLOW&symbol=AXU".
2022-05-26 23:10:02.361 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.BalanceSheet with Symbol BEST
2022-05-26 23:10:02.362 +03:00 [INF] Generating URI for BALANCE_SHEET with params: symbol: BEST
2022-05-26 23:10:02.363 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=HC6APPA2EWCQ1YMW&function=BALANCE_SHEET&symbol=BEST
2022-05-26 23:10:02.363 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=HC6APPA2EWCQ1YMW&function=BALANCE_SHEET&symbol=BEST".
2022-05-26 23:10:19.615 +03:00 [INF] Response has success status code
2022-05-26 23:10:19.615 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.IncomeStatement for symbol BBD
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Information": "Thank you for using Alpha Vantage! You have reached the 500 requests/day limit and there are multiple ways to remove this rate limit: (1) become a holder of Alpha Vantage Coin (AVC), an Ethereum-based cryptocurrency that provides various utility & governance functions within the Alpha Vantage ecosystem (AVC mining guide: https://www.alphatournament.com/avc_mining_guide/) to remove the 500 requests/day rate limit, (2) subscribe to any of the premium plans at https://www.alphavantage.co/premium/ to instantly remove all daily rate limits"
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 339
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetIncomeStatement(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 72
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 254
2022-05-26 23:10:25.606 +03:00 [ERR] Response is not successful. Status code is "ServiceUnavailable". Response: StatusCode: 503, ReasonPhrase: 'Service Unavailable', Version: 1.1, Content: System.Net.Http.HttpConnectionResponseContent, Headers:
{
  Date: Thu, 26 May 2022 20:10:25 GMT
  Transfer-Encoding: chunked
  Connection: keep-alive
  Cache-Control: no-cache, no-store
  CF-Cache-Status: DYNAMIC
  Expect-CT: max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"
  Server: cloudflare
  CF-RAY: 711926dfaf789d9c-DME
  Content-Type: text/html; charset=utf-8
}
2022-05-26 23:10:25.609 +03:00 [ERR] Failed to refresh  entity SaluteStocksAPI.Models.FundamentalData.CompanyOverview with Symbol CHGX
System.Exception: Service Unavailable
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 339
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyOverview(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 112
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 254
2022-05-26 23:10:31.898 +03:00 [INF] Response has success status code
2022-05-26 23:10:31.899 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.CashFlow for symbol AXU
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Information": "Thank you for using Alpha Vantage! You have reached the 500 requests/day limit and there are multiple ways to remove this rate limit: (1) become a holder of Alpha Vantage Coin (AVC), an Ethereum-based cryptocurrency that provides various utility & governance functions within the Alpha Vantage ecosystem (AVC mining guide: https://www.alphatournament.com/avc_mining_guide/) to remove the 500 requests/day rate limit, (2) subscribe to any of the premium plans at https://www.alphavantage.co/premium/ to instantly remove all daily rate limits"
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 339
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCashFlow(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 99
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 254
2022-05-26 23:10:32.362 +03:00 [ERR] Response is not successful. Status code is "ServiceUnavailable". Response: StatusCode: 503, ReasonPhrase: 'Service Unavailable', Version: 1.1, Content: System.Net.Http.HttpConnectionResponseContent, Headers:
{
  Date: Thu, 26 May 2022 20:10:32 GMT
  Transfer-Encoding: chunked
  Connection: keep-alive
  Cache-Control: no-cache, no-store
  CF-Cache-Status: DYNAMIC
  Expect-CT: max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"
  Server: cloudflare
  CF-RAY: 711926e0f9969dae-DME
  Content-Type: text/html; charset=utf-8
}
2022-05-26 23:10:32.363 +03:00 [ERR] Failed to refresh  entity SaluteStocksAPI.Models.FundamentalData.Earnings with Symbol BTN
System.Exception: Service Unavailable
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 339
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyEarnings(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 145
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 254
2022-05-26 23:10:49.636 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.IncomeStatement with Symbol BBDC
2022-05-26 23:10:49.638 +03:00 [INF] Generating URI for INCOME_STATEMENT with params: symbol: BBDC
2022-05-26 23:10:49.638 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=INCOME_STATEMENT&symbol=BBDC
2022-05-26 23:10:49.639 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=INCOME_STATEMENT&symbol=BBDC".
2022-05-26 23:10:55.624 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CompanyOverview with Symbol CHH
2022-05-26 23:10:55.625 +03:00 [INF] Generating URI for OVERVIEW with params: symbol: CHH
2022-05-26 23:10:55.626 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=WS75BM33XB6FUU6O&function=OVERVIEW&symbol=CHH
2022-05-26 23:10:55.627 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=WS75BM33XB6FUU6O&function=OVERVIEW&symbol=CHH".
2022-05-26 23:11:00.330 +03:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/distribution/ebitda/100 - -
2022-05-26 23:11:00.330 +03:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/screener-model - -
2022-05-26 23:11:00.330 +03:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/distribution/beta/100 - -
2022-05-26 23:11:00.330 +03:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/distribution/pe/100 - -
2022-05-26 23:11:00.331 +03:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/distribution/eps/100 - -
2022-05-26 23:11:00.331 +03:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/distribution/market-cap/100 - -
2022-05-26 23:11:00.334 +03:00 [INF] CORS policy execution successful.
2022-05-26 23:11:00.334 +03:00 [INF] CORS policy execution successful.
2022-05-26 23:11:00.334 +03:00 [INF] CORS policy execution successful.
2022-05-26 23:11:00.334 +03:00 [INF] CORS policy execution successful.
2022-05-26 23:11:00.334 +03:00 [INF] CORS policy execution successful.
2022-05-26 23:11:00.336 +03:00 [INF] CORS policy execution successful.
2022-05-26 23:11:00.337 +03:00 [INF] Executing endpoint 'SaluteStocksAPI.Controllers.ApiController.GetBetaDistribution (SaluteStocksAPI)'
2022-05-26 23:11:00.337 +03:00 [INF] Executing endpoint 'SaluteStocksAPI.Controllers.ApiController.GetPeRatioDistribution (SaluteStocksAPI)'
2022-05-26 23:11:00.337 +03:00 [INF] Executing endpoint 'SaluteStocksAPI.Controllers.ApiController.GetEbitdaDistribution (SaluteStocksAPI)'
2022-05-26 23:11:00.338 +03:00 [INF] Executing endpoint 'SaluteStocksAPI.Controllers.ApiController.GetEpsDistribution (SaluteStocksAPI)'
2022-05-26 23:11:00.338 +03:00 [INF] Executing endpoint 'SaluteStocksAPI.Controllers.ApiController.GetScreenerModel (SaluteStocksAPI)'
2022-05-26 23:11:00.339 +03:00 [INF] Executing endpoint 'SaluteStocksAPI.Controllers.ApiController.GetMarketCapDistribution (SaluteStocksAPI)'
2022-05-26 23:11:00.349 +03:00 [INF] Route matched with {action = "GetScreenerModel", controller = "Api"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetScreenerModel() on controller SaluteStocksAPI.Controllers.ApiController (SaluteStocksAPI).
2022-05-26 23:11:00.353 +03:00 [INF] Route matched with {action = "GetEpsDistribution", controller = "Api"}. Executing controller action with signature System.Threading.Tasks.Task`1[System.String] GetEpsDistribution(Int32) on controller SaluteStocksAPI.Controllers.ApiController (SaluteStocksAPI).
2022-05-26 23:11:00.353 +03:00 [INF] Route matched with {action = "GetPeRatioDistribution", controller = "Api"}. Executing controller action with signature System.Threading.Tasks.Task`1[System.String] GetPeRatioDistribution(Int32) on controller SaluteStocksAPI.Controllers.ApiController (SaluteStocksAPI).
2022-05-26 23:11:00.353 +03:00 [INF] Route matched with {action = "GetEbitdaDistribution", controller = "Api"}. Executing controller action with signature System.Threading.Tasks.Task`1[System.String] GetEbitdaDistribution(Int32) on controller SaluteStocksAPI.Controllers.ApiController (SaluteStocksAPI).
2022-05-26 23:11:00.353 +03:00 [INF] Route matched with {action = "GetBetaDistribution", controller = "Api"}. Executing controller action with signature System.Threading.Tasks.Task`1[System.String] GetBetaDistribution(Int32) on controller SaluteStocksAPI.Controllers.ApiController (SaluteStocksAPI).
2022-05-26 23:11:00.353 +03:00 [INF] Route matched with {action = "GetMarketCapDistribution", controller = "Api"}. Executing controller action with signature System.Threading.Tasks.Task`1[System.String] GetMarketCapDistribution(Int32) on controller SaluteStocksAPI.Controllers.ApiController (SaluteStocksAPI).
2022-05-26 23:11:00.356 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-26 23:11:00.368 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-26 23:11:00.368 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-26 23:11:00.368 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-26 23:11:00.368 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-26 23:11:00.368 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-26 23:11:00.410 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[MarketCapitalization])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-26 23:11:00.410 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[PERatio])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-26 23:11:00.426 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[PERatio])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-26 23:11:00.427 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[MarketCapitalization])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-26 23:11:00.442 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[Beta])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-26 23:11:00.444 +03:00 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[EPS])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-26 23:11:00.444 +03:00 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[MarketCapitalization])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-26 23:11:00.456 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[Beta])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-26 23:11:00.458 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[EPS])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-26 23:11:00.458 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[MarketCapitalization])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-26 23:11:00.471 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[EBITDA])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-26 23:11:00.473 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[EBITDA])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-26 23:11:00.483 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[EBITDA])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-26 23:11:00.483 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[EBITDA])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-26 23:11:00.491 +03:00 [INF] Executed DbCommand (26ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:11:00.491 +03:00 [INF] Executed DbCommand (27ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:11:00.494 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:00.503 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:11:00.503 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:00.504 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:11:00.505 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:11:00.507 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:00.514 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:11:00.515 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:00.516 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:11:00.516 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:11:00.518 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:00.523 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:11:00.524 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:00.524 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:11:00.526 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:11:00.527 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[PERatio])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-26 23:11:00.528 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:00.533 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:11:00.534 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:00.536 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:11:00.538 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:11:00.540 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:00.546 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:11:00.548 +03:00 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[PERatio])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-26 23:11:00.549 +03:00 [INF] Executed DbCommand (13ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:00.550 +03:00 [INF] Executed DbCommand (12ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:11:00.552 +03:00 [INF] Executed DbCommand (13ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:11:00.554 +03:00 [INF] Executed DbCommand (13ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:00.559 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:11:00.560 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:00.563 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:11:00.563 +03:00 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[EPS])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-26 23:11:00.564 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:11:00.565 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:00.571 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:00.571 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:11:00.572 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:11:00.574 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:11:00.575 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[EPS])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-26 23:11:00.576 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:00.582 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:00.583 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:11:00.585 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:11:00.585 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:11:00.587 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:00.588 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[Beta])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-26 23:11:00.591 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:00.593 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:11:00.593 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:11:00.596 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:11:00.603 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:00.605 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:00.605 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:11:00.606 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:11:00.608 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[Beta])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-26 23:11:00.608 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:11:00.615 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:00.616 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:00.616 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:11:00.617 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:11:00.622 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:11:00.623 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:00.626 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:00.632 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:11:00.633 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:11:00.635 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:00.635 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:00.636 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:11:00.642 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:11:00.644 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:11:00.645 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:00.645 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:00.648 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:11:00.654 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:11:00.655 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:11:00.657 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:00.660 +03:00 [INF] Executed DbCommand (12ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:00.661 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:11:00.665 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:11:00.666 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:11:00.667 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:00.669 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:00.671 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:11:00.677 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:11:00.678 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:11:00.679 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:00.680 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:00.681 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:11:00.687 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:11:00.689 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:11:00.694 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:00.696 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:11:00.697 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:11:00.697 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:00.699 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:11:00.702 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:00.705 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:11:00.708 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:11:00.710 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:00.710 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:11:00.712 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:00.712 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:11:00.716 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:11:00.719 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:00.722 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2022-05-26 23:11:00.726 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:11:00.728 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:00.728 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:11:00.730 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:11:00.731 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:00.731 +03:00 [INF] Executed action SaluteStocksAPI.Controllers.ApiController.GetScreenerModel (SaluteStocksAPI) in 376.0188ms
2022-05-26 23:11:00.736 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:11:00.741 +03:00 [INF] Executed endpoint 'SaluteStocksAPI.Controllers.ApiController.GetScreenerModel (SaluteStocksAPI)'
2022-05-26 23:11:00.741 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:00.743 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:11:00.744 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:11:00.745 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:00.754 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:11:00.754 +03:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/screener-model - - - 200 - text/plain;+charset=utf-8 423.8302ms
2022-05-26 23:11:00.759 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:00.761 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:11:00.761 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:11:00.764 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:00.765 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:11:00.771 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:00.772 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:11:00.774 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:11:00.777 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:00.779 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:11:00.780 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:00.789 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:11:00.790 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:11:00.792 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:00.793 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:11:00.801 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:00.803 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:11:00.803 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:11:00.803 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:00.805 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:11:00.813 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:00.814 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:11:00.816 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:11:00.819 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:00.821 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:11:00.821 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:00.824 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:11:00.825 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:11:00.827 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:00.829 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:11:00.832 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:00.833 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:11:00.835 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:11:00.837 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:00.839 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:11:00.840 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:00.842 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:11:00.843 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:11:00.851 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:00.852 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:11:00.853 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:00.853 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:11:00.855 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:11:00.859 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:00.862 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:11:00.865 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:00.866 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:11:00.867 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:11:00.869 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:00.871 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:11:00.873 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:00.874 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:11:00.877 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:11:00.884 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:00.885 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:11:00.886 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:00.887 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:11:00.889 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:11:00.894 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:00.895 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:11:00.899 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:00.900 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:11:00.901 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:11:00.903 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:00.909 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:00.903 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:11:00.910 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:11:00.916 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:11:00.918 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:00.918 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:00.920 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:11:00.920 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:11:00.926 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:11:00.927 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:00.930 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:00.931 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:11:00.934 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:11:00.934 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:11:00.937 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:00.941 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:00.941 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:11:00.949 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:11:00.951 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:11:00.952 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:00.953 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:00.953 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:11:00.960 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:11:00.962 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:11:00.963 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:00.964 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:00.965 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:11:00.968 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:11:00.972 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:11:00.973 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:00.981 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:00.982 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:11:00.982 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:11:00.983 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:11:00.986 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:00.994 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:00.994 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:11:00.995 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:11:01.005 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:11:00.998 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:11:01.001 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:01.004 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:01.014 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:11:01.017 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:11:01.018 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:11:01.018 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:01.020 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:01.027 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:11:01.027 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:11:01.029 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:11:01.031 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:01.031 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:01.037 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:11:01.038 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:11:01.045 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:11:01.047 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:01.047 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:11:01.047 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:11:01.047 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:01.057 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:11:01.059 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:11:01.059 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:01.059 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:11:01.060 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:01.067 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:11:01.068 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:11:01.071 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:01.072 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:11:01.075 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:11:01.075 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:01.077 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:11:01.079 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:01.081 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:11:01.083 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:11:01.086 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:01.086 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:11:01.088 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:01.090 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:11:01.091 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:11:01.094 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:01.095 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:11:01.097 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:01.098 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:11:01.103 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:11:01.105 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:01.106 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:11:01.107 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:01.109 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:11:01.111 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:11:01.113 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:01.117 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:11:01.118 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:01.120 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:11:01.120 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:11:01.122 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:01.124 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:11:01.126 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:01.128 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:11:01.130 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:11:01.137 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:01.137 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:11:01.138 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:01.139 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:11:01.140 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:11:01.148 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:01.149 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:11:01.150 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:01.150 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:11:01.152 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:11:01.159 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:01.159 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:11:01.160 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:01.161 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:11:01.168 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:11:01.169 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:01.169 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:11:01.171 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:01.171 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:11:01.179 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:11:01.180 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:01.181 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:01.182 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:11:01.182 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:11:01.188 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:11:01.190 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:01.192 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:11:01.192 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:01.194 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:11:01.198 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:11:01.199 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:01.200 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:11:01.201 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:01.204 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:11:01.206 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:11:01.209 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:01.210 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:11:01.212 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:01.214 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:11:01.214 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:11:01.217 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:01.218 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:11:01.221 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:01.222 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:11:01.224 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:11:01.227 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:01.232 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:11:01.233 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:01.233 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:11:01.235 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:11:01.236 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:01.243 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:11:01.244 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:01.245 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:11:01.246 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:11:01.247 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:01.251 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:11:01.254 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:01.254 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:11:01.256 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:11:01.257 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:01.264 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:11:01.265 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:01.265 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:11:01.266 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:11:01.267 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:01.276 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:11:01.276 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:11:01.276 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:01.279 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:11:01.279 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:01.285 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:11:01.287 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:11:01.288 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:01.291 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:11:01.294 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:01.295 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:11:01.296 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:11:01.297 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:01.299 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:11:01.302 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:01.304 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:11:01.305 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:11:01.308 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:01.309 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:11:01.310 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:01.312 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:11:01.314 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:11:01.316 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:01.318 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:11:01.327 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:01.327 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:11:01.327 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:11:01.329 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:01.332 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:11:01.339 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:11:01.339 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:01.340 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:11:01.341 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:01.343 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:11:01.348 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:11:01.350 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:01.356 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:11:01.357 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:01.358 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:11:01.359 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:11:01.360 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:01.363 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:11:01.366 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:01.369 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:11:01.371 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:11:01.372 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:01.374 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:11:01.375 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:01.376 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:11:01.379 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:11:01.388 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:01.388 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:11:01.389 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:01.389 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:11:01.391 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:11:01.399 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:01.400 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:11:01.401 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:11:01.402 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:01.403 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:11:01.409 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:01.410 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:11:01.410 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:11:01.412 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:01.413 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:11:01.421 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:11:01.421 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:01.422 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:11:01.423 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:01.425 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:11:01.432 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:11:01.434 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:01.434 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:11:01.435 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:01.436 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:11:01.442 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:11:01.444 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:11:01.444 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:01.447 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:01.452 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:11:01.452 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:11:01.452 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:11:01.455 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:01.456 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:01.459 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:11:01.462 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:11:01.464 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:11:01.466 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:01.466 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:01.468 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:11:01.469 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:11:01.471 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:11:01.475 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:01.477 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:01.478 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:11:01.480 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:11:01.480 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:11:01.484 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:01.486 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:01.487 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:11:01.488 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:11:01.488 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:11:01.492 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:01.499 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:01.499 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:11:01.500 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:11:01.500 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:11:01.501 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:01.510 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:01.511 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:11:01.511 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:11:01.512 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:11:01.513 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:01.523 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:11:01.523 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:01.523 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:11:01.523 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:11:01.531 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:01.533 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:11:01.533 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:11:01.533 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:01.533 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:11:01.541 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:01.543 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:11:01.543 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:11:01.545 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:01.545 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:11:01.551 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:01.551 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:11:01.553 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:11:01.554 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:01.554 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:11:01.561 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:01.561 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:11:01.563 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:11:01.563 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:01.564 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:11:01.571 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:01.572 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:11:01.573 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:11:01.581 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:01.581 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:11:01.581 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:01.582 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:11:01.583 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:11:01.593 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:11:01.594 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:01.594 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:01.595 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:11:01.597 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:11:01.607 +03:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2022-05-26 23:11:01.607 +03:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2022-05-26 23:11:01.607 +03:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2022-05-26 23:11:01.608 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:01.608 +03:00 [INF] Executed action SaluteStocksAPI.Controllers.ApiController.GetEpsDistribution (SaluteStocksAPI) in 1253.6998ms
2022-05-26 23:11:01.608 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:01.608 +03:00 [INF] Executed action SaluteStocksAPI.Controllers.ApiController.GetBetaDistribution (SaluteStocksAPI) in 1250.9669ms
2022-05-26 23:11:01.609 +03:00 [INF] Executed action SaluteStocksAPI.Controllers.ApiController.GetPeRatioDistribution (SaluteStocksAPI) in 1254.3827ms
2022-05-26 23:11:01.611 +03:00 [INF] Executed endpoint 'SaluteStocksAPI.Controllers.ApiController.GetEpsDistribution (SaluteStocksAPI)'
2022-05-26 23:11:01.611 +03:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2022-05-26 23:11:01.617 +03:00 [INF] Executed endpoint 'SaluteStocksAPI.Controllers.ApiController.GetBetaDistribution (SaluteStocksAPI)'
2022-05-26 23:11:01.618 +03:00 [INF] Executed endpoint 'SaluteStocksAPI.Controllers.ApiController.GetPeRatioDistribution (SaluteStocksAPI)'
2022-05-26 23:11:01.619 +03:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/distribution/eps/100 - - - 200 - text/plain;+charset=utf-8 1287.9206ms
2022-05-26 23:11:01.619 +03:00 [INF] Executed action SaluteStocksAPI.Controllers.ApiController.GetEbitdaDistribution (SaluteStocksAPI) in 1263.1094ms
2022-05-26 23:11:01.620 +03:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/distribution/beta/100 - - - 200 - text/plain;+charset=utf-8 1289.6279ms
2022-05-26 23:11:01.621 +03:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/distribution/pe/100 - - - 200 - text/plain;+charset=utf-8 1290.2124ms
2022-05-26 23:11:01.622 +03:00 [INF] Executed endpoint 'SaluteStocksAPI.Controllers.ApiController.GetEbitdaDistribution (SaluteStocksAPI)'
2022-05-26 23:11:01.623 +03:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/distribution/ebitda/100 - - - 200 - text/plain;+charset=utf-8 1293.1949ms
2022-05-26 23:11:01.628 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:01.639 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:01.651 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:11:01.654 +03:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2022-05-26 23:11:01.654 +03:00 [INF] Executed action SaluteStocksAPI.Controllers.ApiController.GetMarketCapDistribution (SaluteStocksAPI) in 1295.6541ms
2022-05-26 23:11:01.655 +03:00 [INF] Executed endpoint 'SaluteStocksAPI.Controllers.ApiController.GetMarketCapDistribution (SaluteStocksAPI)'
2022-05-26 23:11:01.656 +03:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/distribution/market-cap/100 - - - 200 - text/plain;+charset=utf-8 1325.1900ms
2022-05-26 23:11:01.914 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CashFlow with Symbol AYRO
2022-05-26 23:11:01.917 +03:00 [INF] Generating URI for CASH_FLOW with params: symbol: AYRO
2022-05-26 23:11:01.918 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=HC6APPA2EWCQ1YMW&function=CASH_FLOW&symbol=AYRO
2022-05-26 23:11:01.919 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=HC6APPA2EWCQ1YMW&function=CASH_FLOW&symbol=AYRO".
2022-05-26 23:11:02.372 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.Earnings with Symbol BTO
2022-05-26 23:11:02.373 +03:00 [INF] Generating URI for EARNINGS with params: symbol: BTO
2022-05-26 23:11:02.374 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=CR1WTHZN5EBATF3M&function=EARNINGS&symbol=BTO
2022-05-26 23:11:02.375 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=CR1WTHZN5EBATF3M&function=EARNINGS&symbol=BTO".
2022-05-26 23:11:02.957 +03:00 [ERR] Response is not successful. Status code is "ServiceUnavailable". Response: StatusCode: 503, ReasonPhrase: 'Service Unavailable', Version: 1.1, Content: System.Net.Http.HttpConnectionResponseContent, Headers:
{
  Date: Thu, 26 May 2022 20:11:02 GMT
  Transfer-Encoding: chunked
  Connection: keep-alive
  Cache-Control: no-cache, no-store
  CF-Cache-Status: DYNAMIC
  Expect-CT: max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"
  Server: cloudflare
  CF-RAY: 711926e3e9a99d3d-DME
  Content-Type: text/html; charset=utf-8
}
2022-05-26 23:11:02.958 +03:00 [ERR] Failed to refresh  entity SaluteStocksAPI.Models.FundamentalData.BalanceSheet with Symbol BEST
System.Exception: Service Unavailable
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 339
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetBalanceSheet(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 85
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 254
2022-05-26 23:11:15.041 +03:00 [INF] Response has success status code
2022-05-26 23:11:15.042 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.IncomeStatement for symbol BBDC
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Information": "Thank you for using Alpha Vantage! You have reached the 500 requests/day limit and there are multiple ways to remove this rate limit: (1) become a holder of Alpha Vantage Coin (AVC), an Ethereum-based cryptocurrency that provides various utility & governance functions within the Alpha Vantage ecosystem (AVC mining guide: https://www.alphatournament.com/avc_mining_guide/) to remove the 500 requests/day rate limit, (2) subscribe to any of the premium plans at https://www.alphavantage.co/premium/ to instantly remove all daily rate limits"
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 339
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetIncomeStatement(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 72
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 254
2022-05-26 23:11:16.115 +03:00 [INF] Response has success status code
2022-05-26 23:11:16.115 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.CashFlow for symbol AYRO
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Information": "Thank you for using Alpha Vantage! You have reached the 500 requests/day limit and there are multiple ways to remove this rate limit: (1) become a holder of Alpha Vantage Coin (AVC), an Ethereum-based cryptocurrency that provides various utility & governance functions within the Alpha Vantage ecosystem (AVC mining guide: https://www.alphatournament.com/avc_mining_guide/) to remove the 500 requests/day rate limit, (2) subscribe to any of the premium plans at https://www.alphavantage.co/premium/ to instantly remove all daily rate limits"
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 339
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCashFlow(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 99
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 254
2022-05-26 23:11:16.186 +03:00 [INF] Response has success status code
2022-05-26 23:11:16.187 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.Earnings for symbol BTO
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Information": "Thank you for using Alpha Vantage! You have reached the 500 requests/day limit and there are multiple ways to remove this rate limit: (1) become a holder of Alpha Vantage Coin (AVC), an Ethereum-based cryptocurrency that provides various utility & governance functions within the Alpha Vantage ecosystem (AVC mining guide: https://www.alphatournament.com/avc_mining_guide/) to remove the 500 requests/day rate limit, (2) subscribe to any of the premium plans at https://www.alphavantage.co/premium/ to instantly remove all daily rate limits"
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 339
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyEarnings(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 145
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 254
2022-05-26 23:11:17.357 +03:00 [INF] Response has success status code
2022-05-26 23:11:17.357 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.CompanyOverview for symbol CHH
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Information": "Thank you for using Alpha Vantage! You have reached the 500 requests/day limit and there are multiple ways to remove this rate limit: (1) become a holder of Alpha Vantage Coin (AVC), an Ethereum-based cryptocurrency that provides various utility & governance functions within the Alpha Vantage ecosystem (AVC mining guide: https://www.alphatournament.com/avc_mining_guide/) to remove the 500 requests/day rate limit, (2) subscribe to any of the premium plans at https://www.alphavantage.co/premium/ to instantly remove all daily rate limits"
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 339
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyOverview(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 112
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 254
2022-05-26 23:11:32.986 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.BalanceSheet with Symbol BGI
2022-05-26 23:11:32.988 +03:00 [INF] Generating URI for BALANCE_SHEET with params: symbol: BGI
2022-05-26 23:11:32.988 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=XJ1HZGKIN0D10RIF&function=BALANCE_SHEET&symbol=BGI
2022-05-26 23:11:32.989 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=XJ1HZGKIN0D10RIF&function=BALANCE_SHEET&symbol=BGI".
2022-05-26 23:11:33.330 +03:00 [INF] Response has success status code
2022-05-26 23:11:33.330 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.BalanceSheet for symbol BGI
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 339
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetBalanceSheet(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 85
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 254
2022-05-26 23:11:45.044 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.IncomeStatement with Symbol BBDO
2022-05-26 23:11:45.047 +03:00 [INF] Generating URI for INCOME_STATEMENT with params: symbol: BBDO
2022-05-26 23:11:45.048 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=KBO0R5WJR4O4UIHS&function=INCOME_STATEMENT&symbol=BBDO
2022-05-26 23:11:45.049 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=KBO0R5WJR4O4UIHS&function=INCOME_STATEMENT&symbol=BBDO".
2022-05-26 23:11:45.275 +03:00 [INF] Response has success status code
2022-05-26 23:11:45.276 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.IncomeStatement for symbol BBDO
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 339
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetIncomeStatement(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 72
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 254
2022-05-26 23:11:46.127 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CashFlow with Symbol AZRE
2022-05-26 23:11:46.129 +03:00 [INF] Generating URI for CASH_FLOW with params: symbol: AZRE
2022-05-26 23:11:46.130 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=CASH_FLOW&symbol=AZRE
2022-05-26 23:11:46.130 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=CASH_FLOW&symbol=AZRE".
2022-05-26 23:11:46.190 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.Earnings with Symbol BTOG
2022-05-26 23:11:46.191 +03:00 [INF] Generating URI for EARNINGS with params: symbol: BTOG
2022-05-26 23:11:46.192 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=CR1WTHZN5EBATF3M&function=EARNINGS&symbol=BTOG
2022-05-26 23:11:46.192 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=CR1WTHZN5EBATF3M&function=EARNINGS&symbol=BTOG".
2022-05-26 23:11:46.667 +03:00 [INF] Response has success status code
2022-05-26 23:11:46.668 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.Earnings for symbol BTOG
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 339
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyEarnings(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 145
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 254
2022-05-26 23:11:47.371 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CompanyOverview with Symbol CHI
2022-05-26 23:11:47.373 +03:00 [INF] Generating URI for OVERVIEW with params: symbol: CHI
2022-05-26 23:11:47.373 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=CR1WTHZN5EBATF3M&function=OVERVIEW&symbol=CHI
2022-05-26 23:11:47.374 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=CR1WTHZN5EBATF3M&function=OVERVIEW&symbol=CHI".
2022-05-26 23:11:48.036 +03:00 [INF] Response has success status code
2022-05-26 23:11:48.036 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.CashFlow for symbol AZRE
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 339
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCashFlow(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 99
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 254
2022-05-26 23:11:55.047 +03:00 [INF] Response has success status code
2022-05-26 23:11:55.047 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.CompanyOverview for symbol CHI
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 339
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyOverview(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 112
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 254
2022-05-26 23:12:03.341 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.BalanceSheet with Symbol BIDU
2022-05-26 23:12:03.343 +03:00 [INF] Generating URI for BALANCE_SHEET with params: symbol: BIDU
2022-05-26 23:12:03.343 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=XJ1HZGKIN0D10RIF&function=BALANCE_SHEET&symbol=BIDU
2022-05-26 23:12:03.344 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=XJ1HZGKIN0D10RIF&function=BALANCE_SHEET&symbol=BIDU".
2022-05-26 23:12:07.534 +03:00 [INF] Response has success status code
2022-05-26 23:12:07.534 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.BalanceSheet for symbol BIDU
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 339
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetBalanceSheet(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 85
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 254
2022-05-26 23:12:15.290 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.IncomeStatement with Symbol BBVA
2022-05-26 23:12:15.293 +03:00 [INF] Generating URI for INCOME_STATEMENT with params: symbol: BBVA
2022-05-26 23:12:15.293 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=HC6APPA2EWCQ1YMW&function=INCOME_STATEMENT&symbol=BBVA
2022-05-26 23:12:15.294 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=HC6APPA2EWCQ1YMW&function=INCOME_STATEMENT&symbol=BBVA".
2022-05-26 23:12:15.536 +03:00 [INF] Response has success status code
2022-05-26 23:12:15.536 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.IncomeStatement for symbol BBVA
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 339
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetIncomeStatement(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 72
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 254
2022-05-26 23:12:16.687 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.Earnings with Symbol BTRS
2022-05-26 23:12:16.688 +03:00 [INF] Generating URI for EARNINGS with params: symbol: BTRS
2022-05-26 23:12:16.689 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=WS75BM33XB6FUU6O&function=EARNINGS&symbol=BTRS
2022-05-26 23:12:16.689 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=WS75BM33XB6FUU6O&function=EARNINGS&symbol=BTRS".
2022-05-26 23:12:18.038 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CashFlow with Symbol BAK
2022-05-26 23:12:18.041 +03:00 [INF] Generating URI for CASH_FLOW with params: symbol: BAK
2022-05-26 23:12:18.042 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=WS75BM33XB6FUU6O&function=CASH_FLOW&symbol=BAK
2022-05-26 23:12:18.044 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=WS75BM33XB6FUU6O&function=CASH_FLOW&symbol=BAK".
2022-05-26 23:12:18.110 +03:00 [INF] Response has success status code
2022-05-26 23:12:18.111 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.Earnings for symbol BTRS
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 339
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyEarnings(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 145
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 254
2022-05-26 23:12:18.279 +03:00 [INF] Response has success status code
2022-05-26 23:12:18.280 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.CashFlow for symbol BAK
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 339
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCashFlow(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 99
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 254
2022-05-26 23:12:25.056 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CompanyOverview with Symbol CHIC
2022-05-26 23:12:25.058 +03:00 [INF] Generating URI for OVERVIEW with params: symbol: CHIC
2022-05-26 23:12:25.058 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=OVERVIEW&symbol=CHIC
2022-05-26 23:12:25.059 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=OVERVIEW&symbol=CHIC".
2022-05-26 23:12:25.289 +03:00 [INF] Response has success status code
2022-05-26 23:12:25.290 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.CompanyOverview for symbol CHIC
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 339
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyOverview(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 112
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 254
2022-05-26 23:12:37.549 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.BalanceSheet with Symbol BILI
2022-05-26 23:12:37.551 +03:00 [INF] Generating URI for BALANCE_SHEET with params: symbol: BILI
2022-05-26 23:12:37.551 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=CR1WTHZN5EBATF3M&function=BALANCE_SHEET&symbol=BILI
2022-05-26 23:12:37.552 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=CR1WTHZN5EBATF3M&function=BALANCE_SHEET&symbol=BILI".
2022-05-26 23:12:38.082 +03:00 [INF] Response has success status code
2022-05-26 23:12:38.082 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.BalanceSheet for symbol BILI
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 339
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetBalanceSheet(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 85
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 254
2022-05-26 23:12:45.542 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.IncomeStatement with Symbol BCE
2022-05-26 23:12:45.545 +03:00 [INF] Generating URI for INCOME_STATEMENT with params: symbol: BCE
2022-05-26 23:12:45.545 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=XVZ0LFWBYDX16M5H&function=INCOME_STATEMENT&symbol=BCE
2022-05-26 23:12:45.546 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=XVZ0LFWBYDX16M5H&function=INCOME_STATEMENT&symbol=BCE".
2022-05-26 23:12:45.772 +03:00 [INF] Response has success status code
2022-05-26 23:12:45.773 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.IncomeStatement for symbol BCE
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 339
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetIncomeStatement(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 72
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 254
2022-05-26 23:12:48.121 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.Earnings with Symbol BTT
2022-05-26 23:12:48.124 +03:00 [INF] Generating URI for EARNINGS with params: symbol: BTT
2022-05-26 23:12:48.125 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=CR1WTHZN5EBATF3M&function=EARNINGS&symbol=BTT
2022-05-26 23:12:48.125 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=CR1WTHZN5EBATF3M&function=EARNINGS&symbol=BTT".
2022-05-26 23:12:48.296 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CashFlow with Symbol BBD
2022-05-26 23:12:48.297 +03:00 [INF] Generating URI for CASH_FLOW with params: symbol: BBD
2022-05-26 23:12:48.298 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=XJ1HZGKIN0D10RIF&function=CASH_FLOW&symbol=BBD
2022-05-26 23:12:48.298 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=XJ1HZGKIN0D10RIF&function=CASH_FLOW&symbol=BBD".
2022-05-26 23:12:48.390 +03:00 [INF] Response has success status code
2022-05-26 23:12:48.390 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.Earnings for symbol BTT
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 339
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyEarnings(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 145
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 254
2022-05-26 23:12:48.539 +03:00 [INF] Response has success status code
2022-05-26 23:12:48.539 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.CashFlow for symbol BBD
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 339
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCashFlow(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 99
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 254
2022-05-26 23:12:55.298 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CompanyOverview with Symbol CHIE
2022-05-26 23:12:55.300 +03:00 [INF] Generating URI for OVERVIEW with params: symbol: CHIE
2022-05-26 23:12:55.300 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=XVZ0LFWBYDX16M5H&function=OVERVIEW&symbol=CHIE
2022-05-26 23:12:55.301 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=XVZ0LFWBYDX16M5H&function=OVERVIEW&symbol=CHIE".
2022-05-26 23:12:55.526 +03:00 [INF] Response has success status code
2022-05-26 23:12:55.527 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.CompanyOverview for symbol CHIE
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 339
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyOverview(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 112
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 254
2022-05-26 23:13:08.084 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.BalanceSheet with Symbol BMI
2022-05-26 23:13:08.086 +03:00 [INF] Generating URI for BALANCE_SHEET with params: symbol: BMI
2022-05-26 23:13:08.086 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=P63Z59GLLCNSB849&function=BALANCE_SHEET&symbol=BMI
2022-05-26 23:13:08.087 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=P63Z59GLLCNSB849&function=BALANCE_SHEET&symbol=BMI".
2022-05-26 23:13:08.328 +03:00 [INF] Response has success status code
2022-05-26 23:13:08.329 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.BalanceSheet for symbol BMI
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Information": "Thank you for using Alpha Vantage! You have reached the 500 requests/day limit and there are multiple ways to remove this rate limit: (1) become a holder of Alpha Vantage Coin (AVC), an Ethereum-based cryptocurrency that provides various utility & governance functions within the Alpha Vantage ecosystem (AVC mining guide: https://www.alphatournament.com/avc_mining_guide/) to remove the 500 requests/day rate limit, (2) subscribe to any of the premium plans at https://www.alphavantage.co/premium/ to instantly remove all daily rate limits"
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 339
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetBalanceSheet(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 85
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 254
2022-05-26 23:13:15.796 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.IncomeStatement with Symbol BCH
2022-05-26 23:13:15.799 +03:00 [INF] Generating URI for INCOME_STATEMENT with params: symbol: BCH
2022-05-26 23:13:15.799 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=WS75BM33XB6FUU6O&function=INCOME_STATEMENT&symbol=BCH
2022-05-26 23:13:15.800 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=WS75BM33XB6FUU6O&function=INCOME_STATEMENT&symbol=BCH".
2022-05-26 23:13:16.030 +03:00 [INF] Response has success status code
2022-05-26 23:13:16.031 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.IncomeStatement for symbol BCH
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Information": "Thank you for using Alpha Vantage! You have reached the 500 requests/day limit and there are multiple ways to remove this rate limit: (1) become a holder of Alpha Vantage Coin (AVC), an Ethereum-based cryptocurrency that provides various utility & governance functions within the Alpha Vantage ecosystem (AVC mining guide: https://www.alphatournament.com/avc_mining_guide/) to remove the 500 requests/day rate limit, (2) subscribe to any of the premium plans at https://www.alphavantage.co/premium/ to instantly remove all daily rate limits"
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 339
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetIncomeStatement(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 72
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 254
2022-05-26 23:13:18.396 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.Earnings with Symbol BTTR
2022-05-26 23:13:18.397 +03:00 [INF] Generating URI for EARNINGS with params: symbol: BTTR
2022-05-26 23:13:18.398 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=WS75BM33XB6FUU6O&function=EARNINGS&symbol=BTTR
2022-05-26 23:13:18.398 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=WS75BM33XB6FUU6O&function=EARNINGS&symbol=BTTR".
2022-05-26 23:13:18.567 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CashFlow with Symbol BBDO
2022-05-26 23:13:18.570 +03:00 [INF] Generating URI for CASH_FLOW with params: symbol: BBDO
2022-05-26 23:13:18.571 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=CR1WTHZN5EBATF3M&function=CASH_FLOW&symbol=BBDO
2022-05-26 23:13:18.571 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=CR1WTHZN5EBATF3M&function=CASH_FLOW&symbol=BBDO".
2022-05-26 23:13:18.664 +03:00 [INF] Response has success status code
2022-05-26 23:13:18.665 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.Earnings for symbol BTTR
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Information": "Thank you for using Alpha Vantage! You have reached the 500 requests/day limit and there are multiple ways to remove this rate limit: (1) become a holder of Alpha Vantage Coin (AVC), an Ethereum-based cryptocurrency that provides various utility & governance functions within the Alpha Vantage ecosystem (AVC mining guide: https://www.alphatournament.com/avc_mining_guide/) to remove the 500 requests/day rate limit, (2) subscribe to any of the premium plans at https://www.alphavantage.co/premium/ to instantly remove all daily rate limits"
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 339
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyEarnings(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 145
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 254
2022-05-26 23:13:18.903 +03:00 [INF] Response has success status code
2022-05-26 23:13:18.903 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.CashFlow for symbol BBDO
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Information": "Thank you for using Alpha Vantage! You have reached the 500 requests/day limit and there are multiple ways to remove this rate limit: (1) become a holder of Alpha Vantage Coin (AVC), an Ethereum-based cryptocurrency that provides various utility & governance functions within the Alpha Vantage ecosystem (AVC mining guide: https://www.alphatournament.com/avc_mining_guide/) to remove the 500 requests/day rate limit, (2) subscribe to any of the premium plans at https://www.alphavantage.co/premium/ to instantly remove all daily rate limits"
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 339
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCashFlow(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 99
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 254
2022-05-26 23:13:25.539 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CompanyOverview with Symbol CHIH
2022-05-26 23:13:25.542 +03:00 [INF] Generating URI for OVERVIEW with params: symbol: CHIH
2022-05-26 23:13:25.542 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=XJ1HZGKIN0D10RIF&function=OVERVIEW&symbol=CHIH
2022-05-26 23:13:25.543 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=XJ1HZGKIN0D10RIF&function=OVERVIEW&symbol=CHIH".
2022-05-26 23:13:25.790 +03:00 [INF] Response has success status code
2022-05-26 23:13:25.791 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.CompanyOverview for symbol CHIH
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Information": "Thank you for using Alpha Vantage! You have reached the 500 requests/day limit and there are multiple ways to remove this rate limit: (1) become a holder of Alpha Vantage Coin (AVC), an Ethereum-based cryptocurrency that provides various utility & governance functions within the Alpha Vantage ecosystem (AVC mining guide: https://www.alphatournament.com/avc_mining_guide/) to remove the 500 requests/day rate limit, (2) subscribe to any of the premium plans at https://www.alphavantage.co/premium/ to instantly remove all daily rate limits"
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 339
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyOverview(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 112
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 254
2022-05-26 23:13:38.348 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.BalanceSheet with Symbol BNIXR
2022-05-26 23:13:38.351 +03:00 [INF] Generating URI for BALANCE_SHEET with params: symbol: BNIXR
2022-05-26 23:13:38.351 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BNIXR
2022-05-26 23:13:38.352 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BNIXR".
2022-05-26 23:13:38.888 +03:00 [INF] Response has success status code
2022-05-26 23:13:38.889 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.BalanceSheet for symbol BNIXR
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 339
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetBalanceSheet(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 85
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 254
2022-05-26 23:13:46.048 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.IncomeStatement with Symbol BCTX
2022-05-26 23:13:46.051 +03:00 [INF] Generating URI for INCOME_STATEMENT with params: symbol: BCTX
2022-05-26 23:13:46.051 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=KBO0R5WJR4O4UIHS&function=INCOME_STATEMENT&symbol=BCTX
2022-05-26 23:13:46.052 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=KBO0R5WJR4O4UIHS&function=INCOME_STATEMENT&symbol=BCTX".
2022-05-26 23:13:46.543 +03:00 [INF] Response has success status code
2022-05-26 23:13:46.543 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.IncomeStatement for symbol BCTX
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 339
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetIncomeStatement(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 72
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 254
2022-05-26 23:13:48.674 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.Earnings with Symbol BTTX
2022-05-26 23:13:48.675 +03:00 [INF] Generating URI for EARNINGS with params: symbol: BTTX
2022-05-26 23:13:48.676 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=KBO0R5WJR4O4UIHS&function=EARNINGS&symbol=BTTX
2022-05-26 23:13:48.676 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=KBO0R5WJR4O4UIHS&function=EARNINGS&symbol=BTTX".
2022-05-26 23:13:48.910 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CashFlow with Symbol BBVA
2022-05-26 23:13:48.913 +03:00 [INF] Generating URI for CASH_FLOW with params: symbol: BBVA
2022-05-26 23:13:48.914 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=P63Z59GLLCNSB849&function=CASH_FLOW&symbol=BBVA
2022-05-26 23:13:48.914 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=P63Z59GLLCNSB849&function=CASH_FLOW&symbol=BBVA".
2022-05-26 23:13:48.920 +03:00 [INF] Response has success status code
2022-05-26 23:13:48.921 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.Earnings for symbol BTTX
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 339
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyEarnings(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 145
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 254
2022-05-26 23:13:49.415 +03:00 [INF] Response has success status code
2022-05-26 23:13:49.416 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.CashFlow for symbol BBVA
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 339
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCashFlow(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 99
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 254
2022-05-26 23:13:55.800 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CompanyOverview with Symbol CHII
2022-05-26 23:13:55.801 +03:00 [INF] Generating URI for OVERVIEW with params: symbol: CHII
2022-05-26 23:13:55.802 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=WS75BM33XB6FUU6O&function=OVERVIEW&symbol=CHII
2022-05-26 23:13:55.803 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=WS75BM33XB6FUU6O&function=OVERVIEW&symbol=CHII".
2022-05-26 23:13:56.040 +03:00 [INF] Response has success status code
2022-05-26 23:13:56.040 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.CompanyOverview for symbol CHII
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 339
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyOverview(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 112
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 254
2022-05-26 23:14:08.895 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.BalanceSheet with Symbol BNSO
2022-05-26 23:14:08.896 +03:00 [INF] Generating URI for BALANCE_SHEET with params: symbol: BNSO
2022-05-26 23:14:08.897 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=HC6APPA2EWCQ1YMW&function=BALANCE_SHEET&symbol=BNSO
2022-05-26 23:14:08.898 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=HC6APPA2EWCQ1YMW&function=BALANCE_SHEET&symbol=BNSO".
2022-05-26 23:14:09.126 +03:00 [INF] Response has success status code
2022-05-26 23:14:09.127 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.BalanceSheet for symbol BNSO
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Information": "Thank you for using Alpha Vantage! You have reached the 500 requests/day limit and there are multiple ways to remove this rate limit: (1) become a holder of Alpha Vantage Coin (AVC), an Ethereum-based cryptocurrency that provides various utility & governance functions within the Alpha Vantage ecosystem (AVC mining guide: https://www.alphatournament.com/avc_mining_guide/) to remove the 500 requests/day rate limit, (2) subscribe to any of the premium plans at https://www.alphavantage.co/premium/ to instantly remove all daily rate limits"
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 339
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetBalanceSheet(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 85
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 254
2022-05-26 23:14:13.864 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:5001/api/screener/companies - -
2022-05-26 23:14:13.868 +03:00 [INF] CORS policy execution successful.
2022-05-26 23:14:13.869 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:5001/api/screener/companies - - - 204 - - 5.0603ms
2022-05-26 23:14:13.870 +03:00 [INF] Request starting HTTP/2 POST https://localhost:5001/api/screener/companies application/json 82
2022-05-26 23:14:13.871 +03:00 [INF] CORS policy execution successful.
2022-05-26 23:14:13.871 +03:00 [INF] Executing endpoint 'SaluteStocksAPI.Controllers.ApiController.GetCompanies (SaluteStocksAPI)'
2022-05-26 23:14:13.874 +03:00 [INF] Route matched with {action = "GetCompanies", controller = "Api"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCompanies(System.Object) on controller SaluteStocksAPI.Controllers.ApiController (SaluteStocksAPI).
2022-05-26 23:14:14.000 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-26 23:14:14.093 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__rangedValue_Value_Max_1='?' (DbType = Double), @__rangedValue_Value_Min_2='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Symbol]
FROM [CompanyOverviews] AS [c]
WHERE (([c].[ExistInApi] = CAST(1 AS bit)) AND ([c].[Sector] = N'TECHNOLOGY')) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (@__rangedValue_Value_Max_1 >= CAST([c].[MarketCapitalization] AS float))) AND (@__rangedValue_Value_Min_2 <= CAST([c].[MarketCapitalization] AS float)))
2022-05-26 23:14:14.117 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Name], [c].[Symbol] AS [Ticker], [c].[Description], [c].[Country], [c].[Sector], N'' AS [Price]
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND [c].[Symbol] IN (N'AAPL', N'ADBE', N'ADP', N'AMOV', N'AMX', N'ASML', N'ATVI', N'BCE', N'CAT', N'CCZ')
2022-05-26 23:14:14.121 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[SaluteStocksAPI.ViewModels.CompanyIndexViewModel, SaluteStocksAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2022-05-26 23:14:14.124 +03:00 [INF] Executed action SaluteStocksAPI.Controllers.ApiController.GetCompanies (SaluteStocksAPI) in 248.3586ms
2022-05-26 23:14:14.124 +03:00 [INF] Executed endpoint 'SaluteStocksAPI.Controllers.ApiController.GetCompanies (SaluteStocksAPI)'
2022-05-26 23:14:14.125 +03:00 [INF] Request finished HTTP/2 POST https://localhost:5001/api/screener/companies application/json 82 - 200 - application/json;+charset=utf-8 255.5370ms
2022-05-26 23:14:16.545 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.IncomeStatement with Symbol BCTXW
2022-05-26 23:14:16.546 +03:00 [INF] Generating URI for INCOME_STATEMENT with params: symbol: BCTXW
2022-05-26 23:14:16.547 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=XJ1HZGKIN0D10RIF&function=INCOME_STATEMENT&symbol=BCTXW
2022-05-26 23:14:16.547 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=XJ1HZGKIN0D10RIF&function=INCOME_STATEMENT&symbol=BCTXW".
2022-05-26 23:14:16.786 +03:00 [INF] Response has success status code
2022-05-26 23:14:16.787 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.IncomeStatement for symbol BCTXW
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Information": "Thank you for using Alpha Vantage! You have reached the 500 requests/day limit and there are multiple ways to remove this rate limit: (1) become a holder of Alpha Vantage Coin (AVC), an Ethereum-based cryptocurrency that provides various utility & governance functions within the Alpha Vantage ecosystem (AVC mining guide: https://www.alphatournament.com/avc_mining_guide/) to remove the 500 requests/day rate limit, (2) subscribe to any of the premium plans at https://www.alphavantage.co/premium/ to instantly remove all daily rate limits"
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 339
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetIncomeStatement(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 72
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 254
2022-05-26 23:14:18.926 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.Earnings with Symbol BTU
2022-05-26 23:14:18.929 +03:00 [INF] Generating URI for EARNINGS with params: symbol: BTU
2022-05-26 23:14:18.929 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=EARNINGS&symbol=BTU
2022-05-26 23:14:18.930 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=EARNINGS&symbol=BTU".
2022-05-26 23:14:19.168 +03:00 [INF] Response has success status code
2022-05-26 23:14:19.169 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.Earnings for symbol BTU
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Information": "Thank you for using Alpha Vantage! You have reached the 500 requests/day limit and there are multiple ways to remove this rate limit: (1) become a holder of Alpha Vantage Coin (AVC), an Ethereum-based cryptocurrency that provides various utility & governance functions within the Alpha Vantage ecosystem (AVC mining guide: https://www.alphatournament.com/avc_mining_guide/) to remove the 500 requests/day rate limit, (2) subscribe to any of the premium plans at https://www.alphavantage.co/premium/ to instantly remove all daily rate limits"
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 339
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyEarnings(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 145
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 254
2022-05-26 23:14:19.430 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CashFlow with Symbol BCACU
2022-05-26 23:14:19.433 +03:00 [INF] Generating URI for CASH_FLOW with params: symbol: BCACU
2022-05-26 23:14:19.433 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=XJ1HZGKIN0D10RIF&function=CASH_FLOW&symbol=BCACU
2022-05-26 23:14:19.434 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=XJ1HZGKIN0D10RIF&function=CASH_FLOW&symbol=BCACU".
2022-05-26 23:14:19.671 +03:00 [INF] Response has success status code
2022-05-26 23:14:19.672 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.CashFlow for symbol BCACU
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Information": "Thank you for using Alpha Vantage! You have reached the 500 requests/day limit and there are multiple ways to remove this rate limit: (1) become a holder of Alpha Vantage Coin (AVC), an Ethereum-based cryptocurrency that provides various utility & governance functions within the Alpha Vantage ecosystem (AVC mining guide: https://www.alphatournament.com/avc_mining_guide/) to remove the 500 requests/day rate limit, (2) subscribe to any of the premium plans at https://www.alphavantage.co/premium/ to instantly remove all daily rate limits"
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 339
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCashFlow(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 99
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 254
2022-05-26 23:14:21.434 +03:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/distribution/market-cap/100 - -
2022-05-26 23:14:21.434 +03:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/screener-model - -
2022-05-26 23:14:21.434 +03:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/distribution/ebitda/100 - -
2022-05-26 23:14:21.434 +03:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/distribution/pe/100 - -
2022-05-26 23:14:21.434 +03:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/distribution/eps/100 - -
2022-05-26 23:14:21.434 +03:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/distribution/beta/100 - -
2022-05-26 23:14:21.435 +03:00 [INF] CORS policy execution successful.
2022-05-26 23:14:21.435 +03:00 [INF] CORS policy execution successful.
2022-05-26 23:14:21.435 +03:00 [INF] CORS policy execution successful.
2022-05-26 23:14:21.436 +03:00 [INF] CORS policy execution successful.
2022-05-26 23:14:21.436 +03:00 [INF] CORS policy execution successful.
2022-05-26 23:14:21.436 +03:00 [INF] CORS policy execution successful.
2022-05-26 23:14:21.437 +03:00 [INF] Executing endpoint 'SaluteStocksAPI.Controllers.ApiController.GetScreenerModel (SaluteStocksAPI)'
2022-05-26 23:14:21.437 +03:00 [INF] Executing endpoint 'SaluteStocksAPI.Controllers.ApiController.GetMarketCapDistribution (SaluteStocksAPI)'
2022-05-26 23:14:21.437 +03:00 [INF] Executing endpoint 'SaluteStocksAPI.Controllers.ApiController.GetEbitdaDistribution (SaluteStocksAPI)'
2022-05-26 23:14:21.440 +03:00 [INF] Executing endpoint 'SaluteStocksAPI.Controllers.ApiController.GetPeRatioDistribution (SaluteStocksAPI)'
2022-05-26 23:14:21.440 +03:00 [INF] Executing endpoint 'SaluteStocksAPI.Controllers.ApiController.GetEpsDistribution (SaluteStocksAPI)'
2022-05-26 23:14:21.441 +03:00 [INF] Executing endpoint 'SaluteStocksAPI.Controllers.ApiController.GetBetaDistribution (SaluteStocksAPI)'
2022-05-26 23:14:21.441 +03:00 [INF] Route matched with {action = "GetScreenerModel", controller = "Api"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetScreenerModel() on controller SaluteStocksAPI.Controllers.ApiController (SaluteStocksAPI).
2022-05-26 23:14:21.442 +03:00 [INF] Route matched with {action = "GetMarketCapDistribution", controller = "Api"}. Executing controller action with signature System.Threading.Tasks.Task`1[System.String] GetMarketCapDistribution(Int32) on controller SaluteStocksAPI.Controllers.ApiController (SaluteStocksAPI).
2022-05-26 23:14:21.442 +03:00 [INF] Route matched with {action = "GetEbitdaDistribution", controller = "Api"}. Executing controller action with signature System.Threading.Tasks.Task`1[System.String] GetEbitdaDistribution(Int32) on controller SaluteStocksAPI.Controllers.ApiController (SaluteStocksAPI).
2022-05-26 23:14:21.443 +03:00 [INF] Route matched with {action = "GetPeRatioDistribution", controller = "Api"}. Executing controller action with signature System.Threading.Tasks.Task`1[System.String] GetPeRatioDistribution(Int32) on controller SaluteStocksAPI.Controllers.ApiController (SaluteStocksAPI).
2022-05-26 23:14:21.443 +03:00 [INF] Route matched with {action = "GetEpsDistribution", controller = "Api"}. Executing controller action with signature System.Threading.Tasks.Task`1[System.String] GetEpsDistribution(Int32) on controller SaluteStocksAPI.Controllers.ApiController (SaluteStocksAPI).
2022-05-26 23:14:21.444 +03:00 [INF] Route matched with {action = "GetBetaDistribution", controller = "Api"}. Executing controller action with signature System.Threading.Tasks.Task`1[System.String] GetBetaDistribution(Int32) on controller SaluteStocksAPI.Controllers.ApiController (SaluteStocksAPI).
2022-05-26 23:14:21.446 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-26 23:14:21.447 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-26 23:14:21.447 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-26 23:14:21.448 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-26 23:14:21.449 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-26 23:14:21.450 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-26 23:14:21.460 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[MarketCapitalization])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-26 23:14:21.460 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[EBITDA])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-26 23:14:21.462 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[PERatio])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-26 23:14:21.463 +03:00 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[MarketCapitalization])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-26 23:14:21.464 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[EPS])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-26 23:14:21.468 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[Beta])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-26 23:14:21.471 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[PERatio])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-26 23:14:21.472 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[MarketCapitalization])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-26 23:14:21.472 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[EBITDA])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-26 23:14:21.473 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[EPS])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-26 23:14:21.475 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[MarketCapitalization])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-26 23:14:21.476 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[Beta])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-26 23:14:21.485 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:14:21.486 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[EBITDA])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-26 23:14:21.486 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:21.486 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:14:21.488 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:14:21.488 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:21.495 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:14:21.497 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:14:21.497 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:14:21.498 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:21.498 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[EBITDA])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-26 23:14:21.499 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:21.502 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:14:21.504 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:14:21.505 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:14:21.508 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:21.508 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[PERatio])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-26 23:14:21.510 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:21.511 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:14:21.513 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:14:21.513 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:14:21.516 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:21.518 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[PERatio])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-26 23:14:21.519 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:21.520 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:14:21.522 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:14:21.522 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:14:21.524 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:21.535 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:21.536 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[EPS])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-26 23:14:21.536 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:14:21.536 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:14:21.538 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:14:21.538 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:21.545 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:21.545 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[EPS])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-26 23:14:21.546 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:14:21.547 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:14:21.547 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:21.548 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:14:21.555 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:21.556 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:14:21.556 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[Beta])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-26 23:14:21.556 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:14:21.557 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:21.558 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:14:21.566 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:21.567 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:14:21.567 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[Beta])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-26 23:14:21.568 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:14:21.569 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:21.569 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:14:21.571 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2022-05-26 23:14:21.575 +03:00 [INF] Executed action SaluteStocksAPI.Controllers.ApiController.GetScreenerModel (SaluteStocksAPI) in 129.3645ms
2022-05-26 23:14:21.576 +03:00 [INF] Executed endpoint 'SaluteStocksAPI.Controllers.ApiController.GetScreenerModel (SaluteStocksAPI)'
2022-05-26 23:14:21.576 +03:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/screener-model - - - 200 - text/plain;+charset=utf-8 142.1618ms
2022-05-26 23:14:21.578 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:21.580 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:14:21.580 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:14:21.582 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:21.582 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:14:21.591 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:21.591 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:14:21.591 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:14:21.592 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:14:21.594 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:21.602 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:14:21.602 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:21.603 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:14:21.603 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:14:21.604 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:21.611 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:14:21.613 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:14:21.613 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:14:21.613 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:21.615 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:21.625 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:14:21.625 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:14:21.627 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:14:21.628 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:21.628 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:21.635 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:14:21.636 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:14:21.637 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:14:21.638 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:21.639 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:21.645 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:14:21.646 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:14:21.647 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:14:21.648 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:21.648 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:21.655 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:14:21.656 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:14:21.657 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:14:21.659 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:21.660 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:21.665 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:14:21.669 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:14:21.671 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:14:21.673 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:14:21.673 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:21.674 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:21.677 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:14:21.679 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:14:21.681 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:14:21.682 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:21.684 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:21.685 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:14:21.686 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:14:21.688 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:14:21.692 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:21.693 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:21.697 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:14:21.697 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:14:21.701 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:21.702 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:21.705 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:14:21.705 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:14:21.707 +03:00 [INF] Executed DbCommand (17ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:14:21.712 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:21.716 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:21.717 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:14:21.718 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:14:21.720 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:21.720 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:14:21.727 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:21.727 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:14:21.728 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:14:21.730 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:21.730 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:14:21.738 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:14:21.738 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:21.738 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:14:21.739 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:21.740 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:14:21.748 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:14:21.749 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:14:21.751 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:21.751 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:21.751 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:14:21.759 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:14:21.759 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:14:21.761 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:14:21.762 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:21.762 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:21.769 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:14:21.770 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:14:21.771 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:14:21.773 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:21.774 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:21.780 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:14:21.781 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:14:21.782 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:14:21.784 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:21.785 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:21.790 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:14:21.791 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:14:21.792 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:14:21.793 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:21.795 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:21.801 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:14:21.801 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:14:21.802 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:14:21.804 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:21.805 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:21.811 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:14:21.811 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:14:21.812 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:14:21.814 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:21.815 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:21.821 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:14:21.823 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:14:21.823 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:14:21.824 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:21.826 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:21.831 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:14:21.833 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:14:21.833 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:14:21.834 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:21.834 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:21.843 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:14:21.844 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:14:21.846 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:14:21.846 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:21.847 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:21.853 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:14:21.855 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:14:21.855 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:14:21.857 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:21.858 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:21.859 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:14:21.863 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:14:21.864 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:14:21.866 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:14:21.866 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:21.868 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:21.870 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:14:21.871 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:14:21.872 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:14:21.874 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:21.877 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:14:21.879 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:14:21.879 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:14:21.880 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:21.891 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:21.892 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:14:21.893 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:14:21.894 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:14:21.895 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:21.902 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:21.903 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:14:21.904 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:14:21.905 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:14:21.906 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:21.911 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:21.912 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:14:21.913 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:14:21.914 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:14:21.915 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:21.921 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:21.922 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:14:21.923 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:14:21.924 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:14:21.925 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:21.936 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:21.937 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:14:21.938 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:14:21.939 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:14:21.940 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:21.948 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:21.948 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:14:21.948 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:14:21.950 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:14:21.951 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:21.958 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:21.959 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:14:21.960 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:14:21.961 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:14:21.962 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:21.969 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:21.969 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:14:21.970 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:14:21.970 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:14:21.972 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:21.983 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:14:21.984 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:21.984 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:14:21.985 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:14:21.986 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:21.995 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:14:21.996 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:21.996 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:14:21.997 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:14:21.998 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:22.005 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:14:22.006 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:22.006 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:14:22.007 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:14:22.014 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:14:22.015 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:22.015 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:22.016 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:14:22.016 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:14:22.024 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:14:22.026 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:14:22.026 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:22.027 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:14:22.028 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:22.030 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:14:22.033 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:14:22.036 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:22.036 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:14:22.037 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:22.045 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:14:22.046 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:14:22.048 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:22.049 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:22.055 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:14:22.055 +03:00 [INF] Executed DbCommand (16ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:14:22.057 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:14:22.058 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:22.059 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:22.065 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:14:22.066 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:14:22.067 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:14:22.068 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:22.068 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:22.075 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:14:22.076 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:14:22.076 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:14:22.078 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:22.079 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:22.085 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:14:22.086 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:14:22.086 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:14:22.088 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:22.090 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:22.094 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:14:22.095 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:14:22.095 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:14:22.097 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:22.098 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:22.105 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:14:22.106 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:14:22.107 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:14:22.109 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:22.109 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:22.116 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:14:22.117 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:14:22.118 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:14:22.119 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:22.119 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:22.125 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:14:22.126 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:14:22.127 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:14:22.129 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:22.129 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:22.135 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:14:22.136 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:14:22.137 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:14:22.139 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:22.140 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:22.145 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:14:22.145 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:14:22.146 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:14:22.149 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:22.149 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:22.154 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:14:22.155 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:14:22.156 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:14:22.158 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:22.158 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:22.170 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:14:22.170 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:14:22.171 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:14:22.173 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:22.174 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:22.182 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:14:22.182 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:14:22.183 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:14:22.185 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:22.185 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:22.191 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:14:22.193 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:14:22.193 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:14:22.196 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:22.201 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:14:22.202 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:14:22.203 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:22.203 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:14:22.206 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:22.211 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:14:22.212 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:14:22.213 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:14:22.215 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:22.216 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:22.221 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:14:22.222 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:14:22.223 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:14:22.225 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:22.225 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:22.232 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:14:22.233 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:14:22.234 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:14:22.237 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:22.238 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:22.241 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:14:22.244 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:14:22.244 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:14:22.247 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:22.247 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:22.248 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:14:22.252 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:14:22.252 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:14:22.256 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:22.263 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:14:22.265 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:14:22.265 +03:00 [INF] Executed DbCommand (12ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:22.266 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:14:22.268 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:22.275 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:14:22.276 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:14:22.277 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:14:22.279 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:22.279 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:22.286 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:14:22.287 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:14:22.287 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:14:22.293 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:14:22.294 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:22.294 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:22.295 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:14:22.295 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:14:22.301 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:14:22.302 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:22.304 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:14:22.305 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:22.305 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:14:22.308 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:14:22.312 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:22.312 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:14:22.314 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:14:22.315 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:22.316 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:14:22.326 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:22.326 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:14:22.327 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:14:22.328 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:14:22.330 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:22.338 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:22.338 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:14:22.339 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:14:22.340 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:14:22.341 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:22.348 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:22.349 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:14:22.349 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:14:22.351 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:14:22.354 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:22.359 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:22.359 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:14:22.359 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:14:22.361 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:14:22.362 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:22.370 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:14:22.370 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:22.370 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:14:22.371 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:14:22.373 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:22.380 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:14:22.382 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:14:22.384 +03:00 [INF] Executed DbCommand (12ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:22.385 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:14:22.386 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:22.388 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:14:22.390 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:14:22.392 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:14:22.393 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:22.393 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:22.395 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:14:22.398 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:14:22.401 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:14:22.403 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:22.403 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:14:22.404 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:22.406 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:14:22.409 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:14:22.419 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:22.420 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:14:22.420 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:22.422 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:14:22.422 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:14:22.430 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:22.430 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:14:22.431 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:22.431 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:14:22.432 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:14:22.439 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:22.440 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:14:22.441 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:22.442 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:14:22.442 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:14:22.451 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:22.451 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:14:22.453 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:22.454 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:14:22.454 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:14:22.464 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:22.464 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:14:22.466 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:14:22.466 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:22.466 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:14:22.476 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:14:22.476 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:14:22.477 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:22.482 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:22.482 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:14:22.484 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:14:22.485 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:14:22.487 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:22.492 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:22.493 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:14:22.494 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:14:22.494 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:14:22.495 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:22.502 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:14:22.502 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:22.504 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:14:22.504 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:14:22.505 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:22.506 +03:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2022-05-26 23:14:22.509 +03:00 [INF] Executed action SaluteStocksAPI.Controllers.ApiController.GetEpsDistribution (SaluteStocksAPI) in 1059.9258ms
2022-05-26 23:14:22.509 +03:00 [INF] Executed endpoint 'SaluteStocksAPI.Controllers.ApiController.GetEpsDistribution (SaluteStocksAPI)'
2022-05-26 23:14:22.510 +03:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/distribution/eps/100 - - - 200 - text/plain;+charset=utf-8 1075.9706ms
2022-05-26 23:14:22.512 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:14:22.513 +03:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2022-05-26 23:14:22.513 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:22.514 +03:00 [INF] Executed action SaluteStocksAPI.Controllers.ApiController.GetPeRatioDistribution (SaluteStocksAPI) in 1066.1532ms
2022-05-26 23:14:22.514 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:14:22.515 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:22.517 +03:00 [INF] Executed endpoint 'SaluteStocksAPI.Controllers.ApiController.GetPeRatioDistribution (SaluteStocksAPI)'
2022-05-26 23:14:22.520 +03:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/distribution/pe/100 - - - 200 - text/plain;+charset=utf-8 1086.3066ms
2022-05-26 23:14:22.526 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:22.526 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:14:22.527 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:22.529 +03:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2022-05-26 23:14:22.536 +03:00 [INF] Executed action SaluteStocksAPI.Controllers.ApiController.GetBetaDistribution (SaluteStocksAPI) in 1086.1049ms
2022-05-26 23:14:22.536 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:22.536 +03:00 [INF] Executed endpoint 'SaluteStocksAPI.Controllers.ApiController.GetBetaDistribution (SaluteStocksAPI)'
2022-05-26 23:14:22.537 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:22.539 +03:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/distribution/beta/100 - - - 200 - text/plain;+charset=utf-8 1104.4408ms
2022-05-26 23:14:22.548 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:22.549 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:22.558 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:22.559 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:22.568 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:22.569 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:22.578 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:22.580 +03:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2022-05-26 23:14:22.581 +03:00 [INF] Executed action SaluteStocksAPI.Controllers.ApiController.GetEbitdaDistribution (SaluteStocksAPI) in 1133.8535ms
2022-05-26 23:14:22.582 +03:00 [INF] Executed endpoint 'SaluteStocksAPI.Controllers.ApiController.GetEbitdaDistribution (SaluteStocksAPI)'
2022-05-26 23:14:22.582 +03:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/distribution/ebitda/100 - - - 200 - text/plain;+charset=utf-8 1148.3401ms
2022-05-26 23:14:22.583 +03:00 [INF] Executed DbCommand (12ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:14:22.584 +03:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2022-05-26 23:14:22.585 +03:00 [INF] Executed action SaluteStocksAPI.Controllers.ApiController.GetMarketCapDistribution (SaluteStocksAPI) in 1138.6917ms
2022-05-26 23:14:22.586 +03:00 [INF] Executed endpoint 'SaluteStocksAPI.Controllers.ApiController.GetMarketCapDistribution (SaluteStocksAPI)'
2022-05-26 23:14:22.587 +03:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/distribution/market-cap/100 - - - 200 - text/plain;+charset=utf-8 1152.6235ms
2022-05-26 23:14:26.045 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CompanyOverview with Symbol CHIK
2022-05-26 23:14:26.048 +03:00 [INF] Generating URI for OVERVIEW with params: symbol: CHIK
2022-05-26 23:14:26.049 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=HC6APPA2EWCQ1YMW&function=OVERVIEW&symbol=CHIK
2022-05-26 23:14:26.049 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=HC6APPA2EWCQ1YMW&function=OVERVIEW&symbol=CHIK".
2022-05-26 23:14:26.286 +03:00 [INF] Response has success status code
2022-05-26 23:14:26.287 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.CompanyOverview for symbol CHIK
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Information": "Thank you for using Alpha Vantage! You have reached the 500 requests/day limit and there are multiple ways to remove this rate limit: (1) become a holder of Alpha Vantage Coin (AVC), an Ethereum-based cryptocurrency that provides various utility & governance functions within the Alpha Vantage ecosystem (AVC mining guide: https://www.alphatournament.com/avc_mining_guide/) to remove the 500 requests/day rate limit, (2) subscribe to any of the premium plans at https://www.alphavantage.co/premium/ to instantly remove all daily rate limits"
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 339
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyOverview(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 112
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 254
2022-05-26 23:14:34.731 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:5001/api/screener/companies - -
2022-05-26 23:14:34.735 +03:00 [INF] CORS policy execution successful.
2022-05-26 23:14:34.735 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:5001/api/screener/companies - - - 204 - - 4.0715ms
2022-05-26 23:14:34.736 +03:00 [INF] Request starting HTTP/2 POST https://localhost:5001/api/screener/companies application/json 108
2022-05-26 23:14:34.736 +03:00 [INF] CORS policy execution successful.
2022-05-26 23:14:34.737 +03:00 [INF] Executing endpoint 'SaluteStocksAPI.Controllers.ApiController.GetCompanies (SaluteStocksAPI)'
2022-05-26 23:14:34.737 +03:00 [INF] Route matched with {action = "GetCompanies", controller = "Api"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCompanies(System.Object) on controller SaluteStocksAPI.Controllers.ApiController (SaluteStocksAPI).
2022-05-26 23:14:34.739 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-26 23:14:34.761 +03:00 [INF] Executed DbCommand (20ms) [Parameters=[@__rangedValue_Value_Max_1='?' (DbType = Double), @__rangedValue_Value_Min_2='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Symbol]
FROM [CompanyOverviews] AS [c]
WHERE (([c].[ExistInApi] = CAST(1 AS bit)) AND [c].[Sector] IN (N'TECHNOLOGY', N'LIFE SCIENCES', N'FINANCE')) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (@__rangedValue_Value_Max_1 >= CAST([c].[MarketCapitalization] AS float))) AND (@__rangedValue_Value_Min_2 <= CAST([c].[MarketCapitalization] AS float)))
2022-05-26 23:14:34.825 +03:00 [INF] Executed DbCommand (62ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Name], [c].[Symbol] AS [Ticker], [c].[Description], [c].[Country], [c].[Sector], N'' AS [Price]
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND [c].[Symbol] IN (N'AAPL', N'ABBV', N'ABT', N'ADBE', N'ADP', N'AIG', N'AMGN', N'AMOV', N'AMX', N'ANTM', N'AON', N'APD', N'ASML', N'ATVI', N'AXP', N'AZN', N'BAC', N'BCE', N'BDX', N'BLK', N'BMO', N'BMY', N'BNS', N'BRK-A', N'BRK-B', N'BSX', N'BX', N'C', N'CAT', N'CB', N'CCZ')
2022-05-26 23:14:34.849 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[SaluteStocksAPI.ViewModels.CompanyIndexViewModel, SaluteStocksAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2022-05-26 23:14:34.850 +03:00 [INF] Executed action SaluteStocksAPI.Controllers.ApiController.GetCompanies (SaluteStocksAPI) in 111.4833ms
2022-05-26 23:14:34.850 +03:00 [INF] Executed endpoint 'SaluteStocksAPI.Controllers.ApiController.GetCompanies (SaluteStocksAPI)'
2022-05-26 23:14:34.851 +03:00 [INF] Request finished HTTP/2 POST https://localhost:5001/api/screener/companies application/json 108 - 200 - application/json;+charset=utf-8 115.1412ms
2022-05-26 23:14:39.133 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.BalanceSheet with Symbol BNTX
2022-05-26 23:14:39.136 +03:00 [INF] Generating URI for BALANCE_SHEET with params: symbol: BNTX
2022-05-26 23:14:39.137 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=HC6APPA2EWCQ1YMW&function=BALANCE_SHEET&symbol=BNTX
2022-05-26 23:14:39.137 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=HC6APPA2EWCQ1YMW&function=BALANCE_SHEET&symbol=BNTX".
2022-05-26 23:14:39.377 +03:00 [INF] Response has success status code
2022-05-26 23:14:39.377 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.BalanceSheet for symbol BNTX
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 339
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetBalanceSheet(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 85
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 254
2022-05-26 23:14:46.795 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.IncomeStatement with Symbol BDC
2022-05-26 23:14:46.796 +03:00 [INF] Generating URI for INCOME_STATEMENT with params: symbol: BDC
2022-05-26 23:14:46.797 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=CR1WTHZN5EBATF3M&function=INCOME_STATEMENT&symbol=BDC
2022-05-26 23:14:46.797 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=CR1WTHZN5EBATF3M&function=INCOME_STATEMENT&symbol=BDC".
2022-05-26 23:14:47.031 +03:00 [INF] Response has success status code
2022-05-26 23:14:47.032 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.IncomeStatement for symbol BDC
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 339
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetIncomeStatement(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 72
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 254
2022-05-26 23:14:49.180 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.Earnings with Symbol BTWN
2022-05-26 23:14:49.182 +03:00 [INF] Generating URI for EARNINGS with params: symbol: BTWN
2022-05-26 23:14:49.182 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=HC6APPA2EWCQ1YMW&function=EARNINGS&symbol=BTWN
2022-05-26 23:14:49.183 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=HC6APPA2EWCQ1YMW&function=EARNINGS&symbol=BTWN".
2022-05-26 23:14:49.410 +03:00 [INF] Response has success status code
2022-05-26 23:14:49.411 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.Earnings for symbol BTWN
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 339
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyEarnings(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 145
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 254
2022-05-26 23:14:49.689 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CashFlow with Symbol BCDAW
2022-05-26 23:14:49.691 +03:00 [INF] Generating URI for CASH_FLOW with params: symbol: BCDAW
2022-05-26 23:14:49.691 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=P63Z59GLLCNSB849&function=CASH_FLOW&symbol=BCDAW
2022-05-26 23:14:49.692 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=P63Z59GLLCNSB849&function=CASH_FLOW&symbol=BCDAW".
2022-05-26 23:14:49.929 +03:00 [INF] Response has success status code
2022-05-26 23:14:49.930 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.CashFlow for symbol BCDAW
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 339
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCashFlow(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 99
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 254
2022-05-26 23:14:56.291 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CompanyOverview with Symbol CHIM
2022-05-26 23:14:56.292 +03:00 [INF] Generating URI for OVERVIEW with params: symbol: CHIM
2022-05-26 23:14:56.293 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=KBO0R5WJR4O4UIHS&function=OVERVIEW&symbol=CHIM
2022-05-26 23:14:56.293 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=KBO0R5WJR4O4UIHS&function=OVERVIEW&symbol=CHIM".
2022-05-26 23:14:56.772 +03:00 [INF] Response has success status code
2022-05-26 23:14:56.774 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.CompanyOverview for symbol CHIM
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 339
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyOverview(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 112
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 254
2022-05-26 23:15:09.392 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.BalanceSheet with Symbol BOAC
2022-05-26 23:15:09.393 +03:00 [INF] Generating URI for BALANCE_SHEET with params: symbol: BOAC
2022-05-26 23:15:09.394 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BOAC
2022-05-26 23:15:09.394 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BOAC".
2022-05-26 23:15:09.719 +03:00 [INF] Response has success status code
2022-05-26 23:15:09.720 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.BalanceSheet for symbol BOAC
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Information": "Thank you for using Alpha Vantage! You have reached the 500 requests/day limit and there are multiple ways to remove this rate limit: (1) become a holder of Alpha Vantage Coin (AVC), an Ethereum-based cryptocurrency that provides various utility & governance functions within the Alpha Vantage ecosystem (AVC mining guide: https://www.alphatournament.com/avc_mining_guide/) to remove the 500 requests/day rate limit, (2) subscribe to any of the premium plans at https://www.alphavantage.co/premium/ to instantly remove all daily rate limits"
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 339
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetBalanceSheet(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 85
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 254
2022-05-26 23:15:17.045 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.IncomeStatement with Symbol BDRY
2022-05-26 23:15:17.048 +03:00 [INF] Generating URI for INCOME_STATEMENT with params: symbol: BDRY
2022-05-26 23:15:17.048 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=HC6APPA2EWCQ1YMW&function=INCOME_STATEMENT&symbol=BDRY
2022-05-26 23:15:17.049 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=HC6APPA2EWCQ1YMW&function=INCOME_STATEMENT&symbol=BDRY".
2022-05-26 23:15:17.290 +03:00 [INF] Response has success status code
2022-05-26 23:15:17.290 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.IncomeStatement for symbol BDRY
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Information": "Thank you for using Alpha Vantage! You have reached the 500 requests/day limit and there are multiple ways to remove this rate limit: (1) become a holder of Alpha Vantage Coin (AVC), an Ethereum-based cryptocurrency that provides various utility & governance functions within the Alpha Vantage ecosystem (AVC mining guide: https://www.alphatournament.com/avc_mining_guide/) to remove the 500 requests/day rate limit, (2) subscribe to any of the premium plans at https://www.alphavantage.co/premium/ to instantly remove all daily rate limits"
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 339
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetIncomeStatement(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 72
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 254
2022-05-26 23:15:19.430 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.Earnings with Symbol BTWNU
2022-05-26 23:15:19.433 +03:00 [INF] Generating URI for EARNINGS with params: symbol: BTWNU
2022-05-26 23:15:19.434 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=XJ1HZGKIN0D10RIF&function=EARNINGS&symbol=BTWNU
2022-05-26 23:15:19.434 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=XJ1HZGKIN0D10RIF&function=EARNINGS&symbol=BTWNU".
2022-05-26 23:15:19.720 +03:00 [INF] Response has success status code
2022-05-26 23:15:19.721 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.Earnings for symbol BTWNU
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Information": "Thank you for using Alpha Vantage! You have reached the 500 requests/day limit and there are multiple ways to remove this rate limit: (1) become a holder of Alpha Vantage Coin (AVC), an Ethereum-based cryptocurrency that provides various utility & governance functions within the Alpha Vantage ecosystem (AVC mining guide: https://www.alphatournament.com/avc_mining_guide/) to remove the 500 requests/day rate limit, (2) subscribe to any of the premium plans at https://www.alphavantage.co/premium/ to instantly remove all daily rate limits"
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 339
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyEarnings(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 145
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 254
2022-05-26 23:15:19.950 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CashFlow with Symbol BCE
2022-05-26 23:15:19.951 +03:00 [INF] Generating URI for CASH_FLOW with params: symbol: BCE
2022-05-26 23:15:19.952 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=CR1WTHZN5EBATF3M&function=CASH_FLOW&symbol=BCE
2022-05-26 23:15:19.952 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=CR1WTHZN5EBATF3M&function=CASH_FLOW&symbol=BCE".
2022-05-26 23:15:20.194 +03:00 [INF] Response has success status code
2022-05-26 23:15:20.194 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.CashFlow for symbol BCE
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Information": "Thank you for using Alpha Vantage! You have reached the 500 requests/day limit and there are multiple ways to remove this rate limit: (1) become a holder of Alpha Vantage Coin (AVC), an Ethereum-based cryptocurrency that provides various utility & governance functions within the Alpha Vantage ecosystem (AVC mining guide: https://www.alphatournament.com/avc_mining_guide/) to remove the 500 requests/day rate limit, (2) subscribe to any of the premium plans at https://www.alphavantage.co/premium/ to instantly remove all daily rate limits"
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 339
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCashFlow(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 99
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 254
2022-05-26 23:15:20.477 +03:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/screener-model - -
2022-05-26 23:15:20.477 +03:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/distribution/ebitda/100 - -
2022-05-26 23:15:20.477 +03:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/distribution/pe/100 - -
2022-05-26 23:15:20.477 +03:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/distribution/market-cap/100 - -
2022-05-26 23:15:20.477 +03:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/distribution/beta/100 - -
2022-05-26 23:15:20.477 +03:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/distribution/eps/100 - -
2022-05-26 23:15:20.478 +03:00 [INF] CORS policy execution successful.
2022-05-26 23:15:20.478 +03:00 [INF] CORS policy execution successful.
2022-05-26 23:15:20.478 +03:00 [INF] CORS policy execution successful.
2022-05-26 23:15:20.479 +03:00 [INF] CORS policy execution successful.
2022-05-26 23:15:20.479 +03:00 [INF] CORS policy execution successful.
2022-05-26 23:15:20.479 +03:00 [INF] CORS policy execution successful.
2022-05-26 23:15:20.480 +03:00 [INF] Executing endpoint 'SaluteStocksAPI.Controllers.ApiController.GetScreenerModel (SaluteStocksAPI)'
2022-05-26 23:15:20.480 +03:00 [INF] Executing endpoint 'SaluteStocksAPI.Controllers.ApiController.GetEbitdaDistribution (SaluteStocksAPI)'
2022-05-26 23:15:20.480 +03:00 [INF] Executing endpoint 'SaluteStocksAPI.Controllers.ApiController.GetPeRatioDistribution (SaluteStocksAPI)'
2022-05-26 23:15:20.481 +03:00 [INF] Executing endpoint 'SaluteStocksAPI.Controllers.ApiController.GetMarketCapDistribution (SaluteStocksAPI)'
2022-05-26 23:15:20.482 +03:00 [INF] Executing endpoint 'SaluteStocksAPI.Controllers.ApiController.GetBetaDistribution (SaluteStocksAPI)'
2022-05-26 23:15:20.482 +03:00 [INF] Executing endpoint 'SaluteStocksAPI.Controllers.ApiController.GetEpsDistribution (SaluteStocksAPI)'
2022-05-26 23:15:20.483 +03:00 [INF] Route matched with {action = "GetScreenerModel", controller = "Api"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetScreenerModel() on controller SaluteStocksAPI.Controllers.ApiController (SaluteStocksAPI).
2022-05-26 23:15:20.483 +03:00 [INF] Route matched with {action = "GetEbitdaDistribution", controller = "Api"}. Executing controller action with signature System.Threading.Tasks.Task`1[System.String] GetEbitdaDistribution(Int32) on controller SaluteStocksAPI.Controllers.ApiController (SaluteStocksAPI).
2022-05-26 23:15:20.484 +03:00 [INF] Route matched with {action = "GetPeRatioDistribution", controller = "Api"}. Executing controller action with signature System.Threading.Tasks.Task`1[System.String] GetPeRatioDistribution(Int32) on controller SaluteStocksAPI.Controllers.ApiController (SaluteStocksAPI).
2022-05-26 23:15:20.484 +03:00 [INF] Route matched with {action = "GetMarketCapDistribution", controller = "Api"}. Executing controller action with signature System.Threading.Tasks.Task`1[System.String] GetMarketCapDistribution(Int32) on controller SaluteStocksAPI.Controllers.ApiController (SaluteStocksAPI).
2022-05-26 23:15:20.484 +03:00 [INF] Route matched with {action = "GetBetaDistribution", controller = "Api"}. Executing controller action with signature System.Threading.Tasks.Task`1[System.String] GetBetaDistribution(Int32) on controller SaluteStocksAPI.Controllers.ApiController (SaluteStocksAPI).
2022-05-26 23:15:20.485 +03:00 [INF] Route matched with {action = "GetEpsDistribution", controller = "Api"}. Executing controller action with signature System.Threading.Tasks.Task`1[System.String] GetEpsDistribution(Int32) on controller SaluteStocksAPI.Controllers.ApiController (SaluteStocksAPI).
2022-05-26 23:15:20.486 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-26 23:15:20.487 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-26 23:15:20.488 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-26 23:15:20.489 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-26 23:15:20.490 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-26 23:15:20.491 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-26 23:15:20.501 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[MarketCapitalization])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-26 23:15:20.502 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[PERatio])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-26 23:15:20.502 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[MarketCapitalization])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-26 23:15:20.502 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[EBITDA])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-26 23:15:20.505 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[Beta])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-26 23:15:20.515 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[MarketCapitalization])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-26 23:15:20.515 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[EPS])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-26 23:15:20.516 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[MarketCapitalization])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-26 23:15:20.516 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[PERatio])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-26 23:15:20.516 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[EBITDA])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-26 23:15:20.517 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[Beta])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-26 23:15:20.525 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[EBITDA])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-26 23:15:20.526 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[EPS])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-26 23:15:20.527 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:15:20.527 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:20.528 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:15:20.529 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:20.535 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[EBITDA])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-26 23:15:20.536 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:15:20.537 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:15:20.538 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:20.539 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:15:20.540 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:20.542 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[PERatio])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-26 23:15:20.546 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:15:20.547 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:15:20.548 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:20.548 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:15:20.550 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:20.557 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[PERatio])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-26 23:15:20.558 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:15:20.558 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:15:20.560 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:20.560 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:15:20.561 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:20.564 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[EPS])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-26 23:15:20.569 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:15:20.570 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:15:20.571 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:20.571 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:15:20.573 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:20.574 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[EPS])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-26 23:15:20.576 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:15:20.580 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:15:20.580 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:20.581 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:15:20.589 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:20.589 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[Beta])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-26 23:15:20.590 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:15:20.592 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:15:20.594 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:15:20.594 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:20.601 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:20.601 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:15:20.601 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[Beta])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-26 23:15:20.602 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:15:20.602 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:15:20.602 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:20.605 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2022-05-26 23:15:20.612 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:15:20.612 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:20.613 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:15:20.613 +03:00 [INF] Executed action SaluteStocksAPI.Controllers.ApiController.GetScreenerModel (SaluteStocksAPI) in 127.356ms
2022-05-26 23:15:20.617 +03:00 [INF] Executed endpoint 'SaluteStocksAPI.Controllers.ApiController.GetScreenerModel (SaluteStocksAPI)'
2022-05-26 23:15:20.617 +03:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/screener-model - - - 200 - text/plain;+charset=utf-8 140.6073ms
2022-05-26 23:15:20.620 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:15:20.622 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:20.623 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:15:20.623 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:20.623 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:15:20.630 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:15:20.633 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:20.633 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:15:20.633 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:15:20.633 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:20.637 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:15:20.645 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:15:20.645 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:20.646 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:15:20.646 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:20.652 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:15:20.653 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:15:20.655 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:20.656 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:15:20.656 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:20.659 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:15:20.661 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:15:20.663 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:20.664 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:15:20.665 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:20.666 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:15:20.668 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:15:20.670 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:20.672 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:15:20.673 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:20.673 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:15:20.676 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:15:20.683 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:20.684 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:15:20.684 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:20.685 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:15:20.685 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:15:20.695 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:20.696 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:15:20.696 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:15:20.697 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:15:20.697 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:20.705 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:20.706 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:15:20.706 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:15:20.710 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:15:20.712 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:20.714 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:15:20.714 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:20.717 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:15:20.715 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:15:20.720 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:20.722 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:15:20.723 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:20.725 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:15:20.726 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:15:20.728 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:20.731 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:15:20.731 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:20.733 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:15:20.734 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:15:20.736 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:20.747 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:15:20.747 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:20.748 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:15:20.748 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:15:20.749 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:20.757 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:15:20.758 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:20.758 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:15:20.759 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:15:20.760 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:20.767 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:15:20.769 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:15:20.770 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:20.772 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:15:20.775 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:20.776 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:15:20.777 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:15:20.779 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:20.779 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:15:20.782 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:20.786 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:15:20.788 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:15:20.789 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:20.789 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:15:20.790 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:20.793 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:15:20.797 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:20.798 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:15:20.798 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:15:20.798 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:20.807 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:15:20.809 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:15:20.809 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:20.810 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:15:20.810 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:20.818 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:15:20.819 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:15:20.820 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:15:20.820 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:20.820 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:20.827 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:15:20.828 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:15:20.829 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:15:20.830 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:20.838 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:20.839 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:15:20.839 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:15:20.840 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:15:20.841 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:20.848 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:20.849 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:15:20.850 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:15:20.850 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:15:20.851 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:20.860 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:15:20.861 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:15:20.861 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:20.862 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:15:20.862 +03:00 [INF] Executed DbCommand (14ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:20.870 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:15:20.870 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:15:20.872 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:15:20.872 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:20.873 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:20.882 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:15:20.883 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:15:20.884 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:15:20.884 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:20.885 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:20.893 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:15:20.894 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:15:20.895 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:15:20.897 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:20.899 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:20.901 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:15:20.902 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:15:20.903 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:15:20.904 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:20.907 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:20.912 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:15:20.912 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:15:20.913 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:15:20.914 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:20.915 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:20.922 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:15:20.922 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:15:20.924 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:15:20.925 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:20.929 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:20.931 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:15:20.931 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:15:20.931 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:15:20.933 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:20.937 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:20.940 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:15:20.941 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:15:20.942 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:15:20.943 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:20.946 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:20.946 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:15:20.949 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:15:20.952 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:15:20.953 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:20.954 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:20.955 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:15:20.963 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:15:20.963 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:15:20.965 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:20.966 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:20.966 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:15:20.972 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:15:20.973 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:15:20.975 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:20.975 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:20.976 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:15:20.982 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:15:20.983 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:15:20.985 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:20.985 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:20.986 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:15:20.992 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:15:20.992 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:15:20.994 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:20.994 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:20.995 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:15:21.002 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:15:21.003 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:15:21.004 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:21.004 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:21.005 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:15:21.010 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:15:21.012 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:15:21.014 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:15:21.014 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:21.014 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:21.025 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:15:21.025 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:15:21.027 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:15:21.028 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:21.028 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:21.035 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:15:21.037 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:15:21.038 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:15:21.038 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:21.039 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:21.046 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:15:21.047 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:15:21.048 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:21.048 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:15:21.049 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:21.057 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:15:21.058 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:15:21.060 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:21.060 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:15:21.062 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:21.068 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:15:21.070 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:15:21.070 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:21.070 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:15:21.071 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:21.076 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:15:21.078 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:15:21.081 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:21.081 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:15:21.082 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:21.085 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:15:21.089 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:15:21.089 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:21.091 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:15:21.093 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:15:21.093 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:21.097 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:15:21.100 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:21.100 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:15:21.102 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:15:21.102 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:21.105 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:15:21.108 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:21.110 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:15:21.110 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:15:21.110 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:21.112 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:15:21.121 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:21.121 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:15:21.122 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:15:21.123 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:21.123 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:15:21.131 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:21.131 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:15:21.132 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:15:21.133 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:21.133 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:15:21.141 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:21.141 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:15:21.142 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:15:21.144 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:21.144 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:15:21.154 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:15:21.154 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:15:21.154 +03:00 [INF] Executed DbCommand (12ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:21.155 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:15:21.155 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:21.167 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:15:21.167 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:15:21.169 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:15:21.169 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:21.170 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:21.179 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:15:21.179 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:15:21.181 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:15:21.184 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:21.185 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:21.188 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:15:21.189 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:15:21.189 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:15:21.195 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:21.196 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:21.197 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:15:21.198 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:15:21.199 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:15:21.207 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:21.208 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:15:21.208 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:15:21.209 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:21.215 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:15:21.218 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:15:21.218 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:15:21.219 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:21.220 +03:00 [INF] Executed DbCommand (12ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:21.227 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:15:21.228 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:15:21.228 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:15:21.229 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:21.234 +03:00 [INF] Executed DbCommand (12ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:21.237 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:15:21.238 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:15:21.239 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:15:21.239 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:21.245 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:21.245 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:15:21.247 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:15:21.247 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:15:21.248 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:21.257 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:21.257 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:15:21.257 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:15:21.258 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:15:21.259 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:21.268 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:15:21.269 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:21.270 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:15:21.270 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:15:21.270 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:21.280 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:15:21.280 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:21.281 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:15:21.282 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:15:21.282 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:21.290 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:15:21.291 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:15:21.292 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:15:21.292 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:21.293 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:21.300 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:15:21.300 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:15:21.302 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:15:21.303 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:21.308 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:21.309 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:15:21.311 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:15:21.311 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:15:21.311 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:21.319 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:15:21.319 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:21.319 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:15:21.321 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:15:21.321 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:21.331 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:15:21.331 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:21.332 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:15:21.333 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:15:21.333 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:21.342 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:15:21.342 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:21.344 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:15:21.345 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:15:21.346 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:21.354 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:15:21.356 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:21.356 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:15:21.357 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:15:21.357 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:21.364 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:15:21.367 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:21.372 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:15:21.372 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:15:21.372 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:21.373 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:15:21.376 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:21.382 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:15:21.384 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:15:21.385 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:21.385 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:15:21.387 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:21.388 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:15:21.391 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:15:21.394 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:21.395 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:15:21.396 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:15:21.398 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:21.400 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:15:21.403 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:15:21.403 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:21.404 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:15:21.407 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:15:21.408 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:21.410 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:15:21.413 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:21.413 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:15:21.415 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:15:21.418 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:21.418 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:15:21.421 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:21.422 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:15:21.423 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:15:21.428 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:15:21.428 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:21.436 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:15:21.436 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:21.437 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:15:21.438 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:15:21.440 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:21.446 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:15:21.447 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:21.448 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:15:21.449 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:15:21.450 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:21.453 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:15:21.455 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:21.457 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:15:21.458 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:15:21.460 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:21.467 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:15:21.468 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:21.468 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:15:21.470 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:15:21.471 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:21.477 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:15:21.478 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:15:21.478 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:21.479 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:15:21.481 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:21.487 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:15:21.487 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:15:21.489 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:21.489 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:15:21.492 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:21.497 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:15:21.497 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:15:21.499 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:21.499 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:15:21.499 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:21.506 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:15:21.507 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:15:21.508 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:21.509 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:15:21.518 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:15:21.518 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:15:21.519 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:21.519 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:21.520 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:15:21.528 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:15:21.528 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:15:21.530 +03:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2022-05-26 23:15:21.530 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:21.531 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:15:21.531 +03:00 [INF] Executed action SaluteStocksAPI.Controllers.ApiController.GetPeRatioDistribution (SaluteStocksAPI) in 1042.9252ms
2022-05-26 23:15:21.531 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:21.535 +03:00 [INF] Executed endpoint 'SaluteStocksAPI.Controllers.ApiController.GetPeRatioDistribution (SaluteStocksAPI)'
2022-05-26 23:15:21.536 +03:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/distribution/pe/100 - - - 200 - text/plain;+charset=utf-8 1059.4665ms
2022-05-26 23:15:21.539 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:15:21.540 +03:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2022-05-26 23:15:21.541 +03:00 [INF] Executed action SaluteStocksAPI.Controllers.ApiController.GetBetaDistribution (SaluteStocksAPI) in 1050.9888ms
2022-05-26 23:15:21.541 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:15:21.541 +03:00 [INF] Executed endpoint 'SaluteStocksAPI.Controllers.ApiController.GetBetaDistribution (SaluteStocksAPI)'
2022-05-26 23:15:21.542 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:21.543 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:21.543 +03:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/distribution/beta/100 - - - 200 - text/plain;+charset=utf-8 1066.0772ms
2022-05-26 23:15:21.553 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:15:21.554 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:21.554 +03:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2022-05-26 23:15:21.555 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:21.556 +03:00 [INF] Executed action SaluteStocksAPI.Controllers.ApiController.GetEpsDistribution (SaluteStocksAPI) in 1065.4106ms
2022-05-26 23:15:21.558 +03:00 [INF] Executed endpoint 'SaluteStocksAPI.Controllers.ApiController.GetEpsDistribution (SaluteStocksAPI)'
2022-05-26 23:15:21.558 +03:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/distribution/eps/100 - - - 200 - text/plain;+charset=utf-8 1080.9126ms
2022-05-26 23:15:21.564 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:21.566 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:21.576 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:21.577 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:21.587 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:21.588 +03:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2022-05-26 23:15:21.588 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:21.589 +03:00 [INF] Executed action SaluteStocksAPI.Controllers.ApiController.GetMarketCapDistribution (SaluteStocksAPI) in 1099.8917ms
2022-05-26 23:15:21.590 +03:00 [INF] Executed endpoint 'SaluteStocksAPI.Controllers.ApiController.GetMarketCapDistribution (SaluteStocksAPI)'
2022-05-26 23:15:21.591 +03:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/distribution/market-cap/100 - - - 200 - text/plain;+charset=utf-8 1113.8528ms
2022-05-26 23:15:21.602 +03:00 [INF] Executed DbCommand (12ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:21.613 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:21.625 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:15:21.626 +03:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2022-05-26 23:15:21.627 +03:00 [INF] Executed action SaluteStocksAPI.Controllers.ApiController.GetEbitdaDistribution (SaluteStocksAPI) in 1140.5488ms
2022-05-26 23:15:21.628 +03:00 [INF] Executed endpoint 'SaluteStocksAPI.Controllers.ApiController.GetEbitdaDistribution (SaluteStocksAPI)'
2022-05-26 23:15:21.629 +03:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/distribution/ebitda/100 - - - 200 - text/plain;+charset=utf-8 1151.5911ms
2022-05-26 23:15:26.790 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CompanyOverview with Symbol CHIQ
2022-05-26 23:15:26.791 +03:00 [INF] Generating URI for OVERVIEW with params: symbol: CHIQ
2022-05-26 23:15:26.792 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=XJ1HZGKIN0D10RIF&function=OVERVIEW&symbol=CHIQ
2022-05-26 23:15:26.792 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=XJ1HZGKIN0D10RIF&function=OVERVIEW&symbol=CHIQ".
2022-05-26 23:15:27.053 +03:00 [INF] Response has success status code
2022-05-26 23:15:27.054 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.CompanyOverview for symbol CHIQ
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Information": "Thank you for using Alpha Vantage! You have reached the 500 requests/day limit and there are multiple ways to remove this rate limit: (1) become a holder of Alpha Vantage Coin (AVC), an Ethereum-based cryptocurrency that provides various utility & governance functions within the Alpha Vantage ecosystem (AVC mining guide: https://www.alphatournament.com/avc_mining_guide/) to remove the 500 requests/day rate limit, (2) subscribe to any of the premium plans at https://www.alphavantage.co/premium/ to instantly remove all daily rate limits"
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 339
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyOverview(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 119
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 254
2022-05-26 23:15:39.732 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.BalanceSheet with Symbol BOCNU
2022-05-26 23:15:39.735 +03:00 [INF] Generating URI for BALANCE_SHEET with params: symbol: BOCNU
2022-05-26 23:15:39.736 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=P63Z59GLLCNSB849&function=BALANCE_SHEET&symbol=BOCNU
2022-05-26 23:15:39.736 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=P63Z59GLLCNSB849&function=BALANCE_SHEET&symbol=BOCNU".
2022-05-26 23:15:39.970 +03:00 [INF] Response has success status code
2022-05-26 23:15:39.971 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.BalanceSheet for symbol BOCNU
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 339
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetBalanceSheet(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 85
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 254
2022-05-26 23:15:47.302 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.IncomeStatement with Symbol BE
2022-05-26 23:15:47.305 +03:00 [INF] Generating URI for INCOME_STATEMENT with params: symbol: BE
2022-05-26 23:15:47.306 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=INCOME_STATEMENT&symbol=BE
2022-05-26 23:15:47.307 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=INCOME_STATEMENT&symbol=BE".
2022-05-26 23:15:47.547 +03:00 [INF] Response has success status code
2022-05-26 23:15:47.548 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.IncomeStatement for symbol BE
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 339
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetIncomeStatement(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 72
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 254
2022-05-26 23:15:49.735 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.Earnings with Symbol BTWNW
2022-05-26 23:15:49.737 +03:00 [INF] Generating URI for EARNINGS with params: symbol: BTWNW
2022-05-26 23:15:49.737 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=HC6APPA2EWCQ1YMW&function=EARNINGS&symbol=BTWNW
2022-05-26 23:15:49.738 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=HC6APPA2EWCQ1YMW&function=EARNINGS&symbol=BTWNW".
2022-05-26 23:15:50.212 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CashFlow with Symbol BCEL
2022-05-26 23:15:50.214 +03:00 [INF] Generating URI for CASH_FLOW with params: symbol: BCEL
2022-05-26 23:15:50.214 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=CR1WTHZN5EBATF3M&function=CASH_FLOW&symbol=BCEL
2022-05-26 23:15:50.215 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=CR1WTHZN5EBATF3M&function=CASH_FLOW&symbol=BCEL".
2022-05-26 23:15:50.223 +03:00 [INF] Response has success status code
2022-05-26 23:15:50.223 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.Earnings for symbol BTWNW
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 339
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyEarnings(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 145
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 254
2022-05-26 23:15:50.447 +03:00 [INF] Response has success status code
2022-05-26 23:15:50.447 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.CashFlow for symbol BCEL
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 339
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCashFlow(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 99
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 254
2022-05-26 23:15:57.057 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CompanyOverview with Symbol CHIR
2022-05-26 23:15:57.060 +03:00 [INF] Generating URI for OVERVIEW with params: symbol: CHIR
2022-05-26 23:15:57.061 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=OVERVIEW&symbol=CHIR
2022-05-26 23:15:57.061 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=OVERVIEW&symbol=CHIR".
2022-05-26 23:15:57.533 +03:00 [INF] Response has success status code
2022-05-26 23:15:57.534 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.CompanyOverview for symbol CHIR
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 339
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyOverview(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 119
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 254
2022-05-26 23:16:09.980 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.BalanceSheet with Symbol BOH-P-A
2022-05-26 23:16:09.981 +03:00 [INF] Generating URI for BALANCE_SHEET with params: symbol: BOH-P-A
2022-05-26 23:16:09.982 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=WS75BM33XB6FUU6O&function=BALANCE_SHEET&symbol=BOH-P-A
2022-05-26 23:16:09.982 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=WS75BM33XB6FUU6O&function=BALANCE_SHEET&symbol=BOH-P-A".
2022-05-26 23:16:10.459 +03:00 [INF] Response has success status code
2022-05-26 23:16:10.459 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.BalanceSheet for symbol BOH-P-A
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Information": "Thank you for using Alpha Vantage! You have reached the 500 requests/day limit and there are multiple ways to remove this rate limit: (1) become a holder of Alpha Vantage Coin (AVC), an Ethereum-based cryptocurrency that provides various utility & governance functions within the Alpha Vantage ecosystem (AVC mining guide: https://www.alphatournament.com/avc_mining_guide/) to remove the 500 requests/day rate limit, (2) subscribe to any of the premium plans at https://www.alphavantage.co/premium/ to instantly remove all daily rate limits"
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 339
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetBalanceSheet(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 85
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 254
2022-05-26 23:16:17.558 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.IncomeStatement with Symbol BEDZ
2022-05-26 23:16:17.559 +03:00 [INF] Generating URI for INCOME_STATEMENT with params: symbol: BEDZ
2022-05-26 23:16:17.560 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=HC6APPA2EWCQ1YMW&function=INCOME_STATEMENT&symbol=BEDZ
2022-05-26 23:16:17.561 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=HC6APPA2EWCQ1YMW&function=INCOME_STATEMENT&symbol=BEDZ".
2022-05-26 23:16:17.832 +03:00 [INF] Response has success status code
2022-05-26 23:16:17.832 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.IncomeStatement for symbol BEDZ
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Information": "Thank you for using Alpha Vantage! You have reached the 500 requests/day limit and there are multiple ways to remove this rate limit: (1) become a holder of Alpha Vantage Coin (AVC), an Ethereum-based cryptocurrency that provides various utility & governance functions within the Alpha Vantage ecosystem (AVC mining guide: https://www.alphatournament.com/avc_mining_guide/) to remove the 500 requests/day rate limit, (2) subscribe to any of the premium plans at https://www.alphavantage.co/premium/ to instantly remove all daily rate limits"
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 339
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetIncomeStatement(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 72
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 254
2022-05-26 23:16:20.234 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.Earnings with Symbol BTX
2022-05-26 23:16:20.238 +03:00 [INF] Generating URI for EARNINGS with params: symbol: BTX
2022-05-26 23:16:20.238 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=EARNINGS&symbol=BTX
2022-05-26 23:16:20.239 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=EARNINGS&symbol=BTX".
2022-05-26 23:16:20.454 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CashFlow with Symbol BCH
2022-05-26 23:16:20.457 +03:00 [INF] Generating URI for CASH_FLOW with params: symbol: BCH
2022-05-26 23:16:20.458 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=XVZ0LFWBYDX16M5H&function=CASH_FLOW&symbol=BCH
2022-05-26 23:16:20.458 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=XVZ0LFWBYDX16M5H&function=CASH_FLOW&symbol=BCH".
2022-05-26 23:16:20.542 +03:00 [INF] Response has success status code
2022-05-26 23:16:20.542 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.Earnings for symbol BTX
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Information": "Thank you for using Alpha Vantage! You have reached the 500 requests/day limit and there are multiple ways to remove this rate limit: (1) become a holder of Alpha Vantage Coin (AVC), an Ethereum-based cryptocurrency that provides various utility & governance functions within the Alpha Vantage ecosystem (AVC mining guide: https://www.alphatournament.com/avc_mining_guide/) to remove the 500 requests/day rate limit, (2) subscribe to any of the premium plans at https://www.alphavantage.co/premium/ to instantly remove all daily rate limits"
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 339
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyEarnings(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 145
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 254
2022-05-26 23:16:20.948 +03:00 [INF] Response has success status code
2022-05-26 23:16:20.948 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.CashFlow for symbol BCH
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Information": "Thank you for using Alpha Vantage! You have reached the 500 requests/day limit and there are multiple ways to remove this rate limit: (1) become a holder of Alpha Vantage Coin (AVC), an Ethereum-based cryptocurrency that provides various utility & governance functions within the Alpha Vantage ecosystem (AVC mining guide: https://www.alphatournament.com/avc_mining_guide/) to remove the 500 requests/day rate limit, (2) subscribe to any of the premium plans at https://www.alphavantage.co/premium/ to instantly remove all daily rate limits"
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 339
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCashFlow(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 99
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 254
2022-05-26 23:16:27.551 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CompanyOverview with Symbol CHIS
2022-05-26 23:16:27.555 +03:00 [INF] Generating URI for OVERVIEW with params: symbol: CHIS
2022-05-26 23:16:27.555 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=P63Z59GLLCNSB849&function=OVERVIEW&symbol=CHIS
2022-05-26 23:16:27.556 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=P63Z59GLLCNSB849&function=OVERVIEW&symbol=CHIS".
2022-05-26 23:16:28.049 +03:00 [INF] Response has success status code
2022-05-26 23:16:28.050 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.CompanyOverview for symbol CHIS
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Information": "Thank you for using Alpha Vantage! You have reached the 500 requests/day limit and there are multiple ways to remove this rate limit: (1) become a holder of Alpha Vantage Coin (AVC), an Ethereum-based cryptocurrency that provides various utility & governance functions within the Alpha Vantage ecosystem (AVC mining guide: https://www.alphatournament.com/avc_mining_guide/) to remove the 500 requests/day rate limit, (2) subscribe to any of the premium plans at https://www.alphavantage.co/premium/ to instantly remove all daily rate limits"
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 339
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyOverview(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 119
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 254
2022-05-26 23:16:40.464 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.BalanceSheet with Symbol BOKF
2022-05-26 23:16:40.465 +03:00 [INF] Generating URI for BALANCE_SHEET with params: symbol: BOKF
2022-05-26 23:16:40.466 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=P63Z59GLLCNSB849&function=BALANCE_SHEET&symbol=BOKF
2022-05-26 23:16:40.466 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=P63Z59GLLCNSB849&function=BALANCE_SHEET&symbol=BOKF".
2022-05-26 23:16:43.590 +03:00 [ERR] Response is not successful. Status code is "ServiceUnavailable". Response: StatusCode: 503, ReasonPhrase: 'Service Unavailable', Version: 1.1, Content: System.Net.Http.HttpConnectionResponseContent, Headers:
{
  Date: Thu, 26 May 2022 20:16:43 GMT
  Transfer-Encoding: chunked
  Connection: keep-alive
  Cache-Control: no-cache, no-store
  CF-Cache-Status: DYNAMIC
  Expect-CT: max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"
  Server: cloudflare
  CF-RAY: 7119309c2da49d99-DME
  Content-Type: text/html; charset=utf-8
}
2022-05-26 23:16:43.591 +03:00 [ERR] Failed to refresh  entity SaluteStocksAPI.Models.FundamentalData.BalanceSheet with Symbol BOKF
System.Exception: Service Unavailable
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 339
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetBalanceSheet(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 85
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 254
2022-05-26 23:16:47.840 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.IncomeStatement with Symbol BEEMW
2022-05-26 23:16:47.841 +03:00 [INF] Generating URI for INCOME_STATEMENT with params: symbol: BEEMW
2022-05-26 23:16:47.842 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=INCOME_STATEMENT&symbol=BEEMW
2022-05-26 23:16:47.843 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=INCOME_STATEMENT&symbol=BEEMW".
2022-05-26 23:16:50.550 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.Earnings with Symbol BTZ
2022-05-26 23:16:50.553 +03:00 [INF] Generating URI for EARNINGS with params: symbol: BTZ
2022-05-26 23:16:50.554 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=P63Z59GLLCNSB849&function=EARNINGS&symbol=BTZ
2022-05-26 23:16:50.555 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=P63Z59GLLCNSB849&function=EARNINGS&symbol=BTZ".
2022-05-26 23:16:50.959 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CashFlow with Symbol BCML
2022-05-26 23:16:50.962 +03:00 [INF] Generating URI for CASH_FLOW with params: symbol: BCML
2022-05-26 23:16:50.963 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=KBO0R5WJR4O4UIHS&function=CASH_FLOW&symbol=BCML
2022-05-26 23:16:50.963 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=KBO0R5WJR4O4UIHS&function=CASH_FLOW&symbol=BCML".
2022-05-26 23:16:54.498 +03:00 [INF] Response has success status code
2022-05-26 23:16:54.499 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.IncomeStatement for symbol BEEMW
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 339
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetIncomeStatement(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 72
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 254
2022-05-26 23:16:55.881 +03:00 [INF] Response has success status code
2022-05-26 23:16:55.882 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.Earnings for symbol BTZ
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 339
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyEarnings(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 145
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 254
2022-05-26 23:16:55.913 +03:00 [INF] Response has success status code
2022-05-26 23:16:55.913 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.CashFlow for symbol BCML
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 339
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCashFlow(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 99
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 254
2022-05-26 23:16:58.061 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CompanyOverview with Symbol CHIU
2022-05-26 23:16:58.062 +03:00 [INF] Generating URI for OVERVIEW with params: symbol: CHIU
2022-05-26 23:16:58.063 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=OVERVIEW&symbol=CHIU
2022-05-26 23:16:58.063 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=OVERVIEW&symbol=CHIU".
2022-05-26 23:16:58.872 +03:00 [INF] Response has success status code
2022-05-26 23:16:58.873 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.CompanyOverview for symbol CHIU
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 339
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyOverview(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 119
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 254
2022-05-26 23:17:13.599 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.BalanceSheet with Symbol BORR
2022-05-26 23:17:13.600 +03:00 [INF] Generating URI for BALANCE_SHEET with params: symbol: BORR
2022-05-26 23:17:13.601 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=WS75BM33XB6FUU6O&function=BALANCE_SHEET&symbol=BORR
2022-05-26 23:17:13.601 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=WS75BM33XB6FUU6O&function=BALANCE_SHEET&symbol=BORR".
2022-05-26 23:17:13.834 +03:00 [INF] Response has success status code
2022-05-26 23:17:13.834 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.BalanceSheet for symbol BORR
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Information": "Thank you for using Alpha Vantage! You have reached the 500 requests/day limit and there are multiple ways to remove this rate limit: (1) become a holder of Alpha Vantage Coin (AVC), an Ethereum-based cryptocurrency that provides various utility & governance functions within the Alpha Vantage ecosystem (AVC mining guide: https://www.alphatournament.com/avc_mining_guide/) to remove the 500 requests/day rate limit, (2) subscribe to any of the premium plans at https://www.alphavantage.co/premium/ to instantly remove all daily rate limits"
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 339
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetBalanceSheet(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 85
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 254
2022-05-26 23:17:24.506 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.IncomeStatement with Symbol BELFA
2022-05-26 23:17:24.510 +03:00 [INF] Generating URI for INCOME_STATEMENT with params: symbol: BELFA
2022-05-26 23:17:24.510 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=WS75BM33XB6FUU6O&function=INCOME_STATEMENT&symbol=BELFA
2022-05-26 23:17:24.511 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=WS75BM33XB6FUU6O&function=INCOME_STATEMENT&symbol=BELFA".
2022-05-26 23:17:24.754 +03:00 [INF] Response has success status code
2022-05-26 23:17:24.754 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.IncomeStatement for symbol BELFA
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Information": "Thank you for using Alpha Vantage! You have reached the 500 requests/day limit and there are multiple ways to remove this rate limit: (1) become a holder of Alpha Vantage Coin (AVC), an Ethereum-based cryptocurrency that provides various utility & governance functions within the Alpha Vantage ecosystem (AVC mining guide: https://www.alphatournament.com/avc_mining_guide/) to remove the 500 requests/day rate limit, (2) subscribe to any of the premium plans at https://www.alphavantage.co/premium/ to instantly remove all daily rate limits"
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 339
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetIncomeStatement(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 72
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 254
2022-05-26 23:17:25.903 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.Earnings with Symbol BUD
2022-05-26 23:17:25.904 +03:00 [INF] Generating URI for EARNINGS with params: symbol: BUD
2022-05-26 23:17:25.905 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=XJ1HZGKIN0D10RIF&function=EARNINGS&symbol=BUD
2022-05-26 23:17:25.905 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=XJ1HZGKIN0D10RIF&function=EARNINGS&symbol=BUD".
2022-05-26 23:17:25.919 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CashFlow with Symbol BCPC
2022-05-26 23:17:25.922 +03:00 [INF] Generating URI for CASH_FLOW with params: symbol: BCPC
2022-05-26 23:17:25.923 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=XVZ0LFWBYDX16M5H&function=CASH_FLOW&symbol=BCPC
2022-05-26 23:17:25.923 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=XVZ0LFWBYDX16M5H&function=CASH_FLOW&symbol=BCPC".
2022-05-26 23:17:26.167 +03:00 [INF] Response has success status code
2022-05-26 23:17:26.168 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.CashFlow for symbol BCPC
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Information": "Thank you for using Alpha Vantage! You have reached the 500 requests/day limit and there are multiple ways to remove this rate limit: (1) become a holder of Alpha Vantage Coin (AVC), an Ethereum-based cryptocurrency that provides various utility & governance functions within the Alpha Vantage ecosystem (AVC mining guide: https://www.alphatournament.com/avc_mining_guide/) to remove the 500 requests/day rate limit, (2) subscribe to any of the premium plans at https://www.alphavantage.co/premium/ to instantly remove all daily rate limits"
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 339
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCashFlow(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 99
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 254
2022-05-26 23:17:26.276 +03:00 [INF] Response has success status code
2022-05-26 23:17:26.277 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.Earnings for symbol BUD
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Information": "Thank you for using Alpha Vantage! You have reached the 500 requests/day limit and there are multiple ways to remove this rate limit: (1) become a holder of Alpha Vantage Coin (AVC), an Ethereum-based cryptocurrency that provides various utility & governance functions within the Alpha Vantage ecosystem (AVC mining guide: https://www.alphatournament.com/avc_mining_guide/) to remove the 500 requests/day rate limit, (2) subscribe to any of the premium plans at https://www.alphavantage.co/premium/ to instantly remove all daily rate limits"
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 339
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyEarnings(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 145
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 254
2022-05-26 23:17:28.886 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CompanyOverview with Symbol CHIX
2022-05-26 23:17:28.888 +03:00 [INF] Generating URI for OVERVIEW with params: symbol: CHIX
2022-05-26 23:17:28.888 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=P63Z59GLLCNSB849&function=OVERVIEW&symbol=CHIX
2022-05-26 23:17:28.889 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=P63Z59GLLCNSB849&function=OVERVIEW&symbol=CHIX".
2022-05-26 23:17:29.134 +03:00 [INF] Response has success status code
2022-05-26 23:17:29.134 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.CompanyOverview for symbol CHIX
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Information": "Thank you for using Alpha Vantage! You have reached the 500 requests/day limit and there are multiple ways to remove this rate limit: (1) become a holder of Alpha Vantage Coin (AVC), an Ethereum-based cryptocurrency that provides various utility & governance functions within the Alpha Vantage ecosystem (AVC mining guide: https://www.alphatournament.com/avc_mining_guide/) to remove the 500 requests/day rate limit, (2) subscribe to any of the premium plans at https://www.alphavantage.co/premium/ to instantly remove all daily rate limits"
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 339
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyOverview(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 119
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 254
2022-05-26 23:17:43.838 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.BalanceSheet with Symbol BOTZ
2022-05-26 23:17:43.841 +03:00 [INF] Generating URI for BALANCE_SHEET with params: symbol: BOTZ
2022-05-26 23:17:43.842 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BOTZ
2022-05-26 23:17:43.842 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BOTZ".
2022-05-26 23:17:44.085 +03:00 [INF] Response has success status code
2022-05-26 23:17:44.086 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.BalanceSheet for symbol BOTZ
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 339
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetBalanceSheet(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 85
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 254
2022-05-26 23:17:54.762 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.IncomeStatement with Symbol BEN
2022-05-26 23:17:54.763 +03:00 [INF] Generating URI for INCOME_STATEMENT with params: symbol: BEN
2022-05-26 23:17:54.764 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=KBO0R5WJR4O4UIHS&function=INCOME_STATEMENT&symbol=BEN
2022-05-26 23:17:54.764 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=KBO0R5WJR4O4UIHS&function=INCOME_STATEMENT&symbol=BEN".
2022-05-26 23:17:54.994 +03:00 [INF] Response has success status code
2022-05-26 23:17:54.994 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.IncomeStatement for symbol BEN
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 339
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetIncomeStatement(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 72
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 254
2022-05-26 23:17:56.189 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CashFlow with Symbol BCRX
2022-05-26 23:17:56.192 +03:00 [INF] Generating URI for CASH_FLOW with params: symbol: BCRX
2022-05-26 23:17:56.193 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=CASH_FLOW&symbol=BCRX
2022-05-26 23:17:56.193 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=CASH_FLOW&symbol=BCRX".
2022-05-26 23:17:56.298 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.Earnings with Symbol BUFB
2022-05-26 23:17:56.299 +03:00 [INF] Generating URI for EARNINGS with params: symbol: BUFB
2022-05-26 23:17:56.300 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=XJ1HZGKIN0D10RIF&function=EARNINGS&symbol=BUFB
2022-05-26 23:17:56.300 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=XJ1HZGKIN0D10RIF&function=EARNINGS&symbol=BUFB".
2022-05-26 23:17:56.425 +03:00 [INF] Response has success status code
2022-05-26 23:17:56.425 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.CashFlow for symbol BCRX
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 339
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCashFlow(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 99
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 254
2022-05-26 23:17:56.540 +03:00 [INF] Response has success status code
2022-05-26 23:17:56.540 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.Earnings for symbol BUFB
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 339
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyEarnings(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 145
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 254
2022-05-26 23:17:59.138 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CompanyOverview with Symbol CHK
2022-05-26 23:17:59.141 +03:00 [INF] Generating URI for OVERVIEW with params: symbol: CHK
2022-05-26 23:17:59.142 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=XVZ0LFWBYDX16M5H&function=OVERVIEW&symbol=CHK
2022-05-26 23:17:59.142 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=XVZ0LFWBYDX16M5H&function=OVERVIEW&symbol=CHK".
2022-05-26 23:17:59.382 +03:00 [INF] Response has success status code
2022-05-26 23:17:59.382 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.CompanyOverview for symbol CHK
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 339
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyOverview(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 119
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 254
2022-05-26 23:18:08.497 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:5001/api/screener/companies - -
2022-05-26 23:18:08.498 +03:00 [INF] CORS policy execution successful.
2022-05-26 23:18:08.498 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:5001/api/screener/companies - - - 204 - - 1.1895ms
2022-05-26 23:18:08.499 +03:00 [INF] Request starting HTTP/2 POST https://localhost:5001/api/screener/companies application/json 116
2022-05-26 23:18:08.500 +03:00 [INF] CORS policy execution successful.
2022-05-26 23:18:08.501 +03:00 [INF] Executing endpoint 'SaluteStocksAPI.Controllers.ApiController.GetCompanies (SaluteStocksAPI)'
2022-05-26 23:18:08.502 +03:00 [INF] Route matched with {action = "GetCompanies", controller = "Api"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCompanies(System.Object) on controller SaluteStocksAPI.Controllers.ApiController (SaluteStocksAPI).
2022-05-26 23:18:08.504 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-26 23:18:08.573 +03:00 [INF] Executed DbCommand (67ms) [Parameters=[@__rangedValue_Value_Max_1='?' (DbType = Double), @__rangedValue_Value_Min_2='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Symbol]
FROM [CompanyOverviews] AS [c]
WHERE (([c].[ExistInApi] = CAST(1 AS bit)) AND [c].[Sector] IN (N'TECHNOLOGY', N'LIFE SCIENCES', N'FINANCE')) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (@__rangedValue_Value_Max_1 >= CAST([c].[MarketCapitalization] AS float))) AND (@__rangedValue_Value_Min_2 <= CAST([c].[MarketCapitalization] AS float)))
2022-05-26 23:18:08.628 +03:00 [INF] Executed DbCommand (52ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Name], [c].[Symbol] AS [Ticker], [c].[Description], [c].[Country], [c].[Sector], N'' AS [Price]
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND [c].[Symbol] IN (N'A', N'AADI', N'AAON', N'AB', N'ABCB', N'ABCL', N'ABCM', N'ABMD', N'ABOS', N'ABST', N'ABTX', N'ABUS', N'AC', N'ACAD', N'ACB', N'ACBI', N'ACET', N'ACGL', N'ACGLN', N'ACGLO', N'ACHC', N'ACIU', N'ACIW', N'ACLS', N'ACLX', N'ACMR', N'ACNB', N'ACRS', N'ACT', N'ADAG', N'ADAP', N'ADCT', N'ADGI', N'ADMA', N'ADP', N'ADPT', N'ADSE', N'ADSK', N'ADTH', N'ADUS', N'AEG', N'AEHR', N'AEL', N'AERI', N'AFG', N'AFGE', N'AFL', N'AFMD', N'AGCO', N'AGEN', N'AGIO', N'AGL', N'AGM', N'AGM-A', N'AGO', N'AGRO', N'AGYS', N'AHCO', N'AHRN', N'AI', N'AIG', N'AIMC', N'AINV', N'AIRS', N'AIRTP', N'AIZ', N'AIZN', N'AJG', N'AKRO', N'AKYA', N'ALB', N'ALBO', N'ALC', N'ALCO', N'ALDX', N'ALEC', N'ALFIW', N'ALG', N'ALGN', N'ALHC', N'ALKS', N'ALKT', N'ALL', N'ALLK', N'ALLO', N'ALLT', N'ALLY', N'ALNY', N'ALOR', N'ALPN', N'ALRM', N'ALRS', N'ALT', N'ALTO', N'ALTR', N'ALVR', N'ALXO', N'ALYA', N'AMAL', N'AMAM', N'AMBC', N'AMCX', N'AME', N'AMED', N'AMG', N'AMK', N'AMLX', N'AMNB', N'AMOT', N'AMOV', N'AMP', N'AMPH', N'AMPL', N'AMRN', N'AMRS', N'AMRX', N'AMSF', N'AMSWA', N'AMTB', N'AMTD', N'AMTI', N'AMTX', N'AMX', N'AMYT', N'ANAB', N'ANAT', N'ANEB', N'ANET', N'ANGH', N'ANGO', N'ANIK', N'ANIP', N'ANSS', N'AON', N'AORT', N'APAM', N'APCA', N'APD', N'APEN', N'API', N'APLS', N'APO', N'APP', N'APPF', N'APPH', N'APPHW', N'APPN', N'APXI', N'APYX', N'AQUA', N'ARAY', N'ARBE', N'ARBK', N'ARCC', N'ARCT', N'AREN', N'ARES', N'ARGO', N'ARGX', N'ARMP', N'AROW', N'ARQQ', N'ARQT', N'ARVN', N'ARYD', N'ASAN', N'ASB', N'ASIX', N'ASND', N'ASTE', N'ASTL', N'ATAI', N'ATAK', N'ATAX', N'ATC', N'ATEC', N'ATEN', N'ATEX', N'ATHA', N'ATHM', N'ATLC', N'ATLCP', N'ATLO', N'ATNFW', N'ATNI', N'ATNM', N'ATRA', N'ATRC', N'ATRI', N'ATRS', N'ATTO', N'ATUS', N'ATVI', N'ATY', N'AUB', N'AUD', N'AUPH', N'AUR', N'AURA', N'AURC', N'AURCU', N'AURCW', N'AUTL', N'AVAH', N'AVAL', N'AVD', N'AVDL', N'AVDX', N'AVEO', N'AVID', N'AVIR', N'AVLR', N'AVNS', N'AVNT', N'AVO', N'AVTE', N'AVTR', N'AX', N'AXAC', N'AXGN', N'AXNX', N'AXS', N'AXSM', N'AXTA', N'AYX', N'AZPN', N'AZTA', N'BAK', N'BAMR', N'BANC', N'BAND', N'BANF', N'BANR', N'BAP', N'BASE', N'BATRA', N'BATRK', N'BAX', N'BB', N'BBAI', N'BBAR', N'BBD', N'BBDC', N'BBDO', N'BBIO', N'BBLN', N'BBVA', N'BC', N'BCAB', N'BCAT', N'BCBP', N'BCE', N'BCH', N'BCML', N'BCOR', N'BCOV', N'BCRX', N'BCS', N'BCSF', N'BCYC', N'BDX', N'BEAM', N'BEN', N'BFC', N'BFST', N'BGCP', N'BGNE', N'BHB', N'BHC', N'BHF', N'BHFAL', N'BHFAP', N'BHG', N'BHLB', N'BHVN', N'BIDU', N'BIGC', N'BIGZ', N'BIIB', N'BILI', N'BILL', N'BIO', N'BIO-B', N'BIOX', N'BITF', N'BK', N'BKCC', N'BKD', N'BKI', N'BKKT', N'BKR', N'BKU', N'BL', N'BLEU', N'BLFS', N'BLFY', N'BLI', N'BLKB', N'BLND', N'BLU', N'BLUE', N'BLX', N'BLZE', N'BMA', N'BMBL', N'BMEZ', N'BMI', N'BMO', N'BMRC', N'BMRN', N'BNFT', N'BNGO', N'BNR', N'BNS', N'BNTX', N'BOCN', N'BOH', N'BOKF', N'BOX', N'BPAC', N'BPMC', N'BPOP', N'BPRN', N'BPT', N'BRBS', N'BRD', N'BRDG', N'BRKH', N'BRKL', N'BRKR', N'BRO', N'BRP', N'BRZE', N'BSAC', N'BSBK', N'BSBR', N'BSIG', N'BSRR', N'BSTZ', N'BSVN', N'BSX', N'BSY', N'BTAI', N'BTRS', N'BUR', N'BUSE', N'BV', N'BVS', N'BWB', N'BWFG', N'BWXT', N'BXSL', N'BY', N'BYN', N'BYNO', N'BZ', N'BZFD', N'CABO', N'CAC', N'CACC', N'CACI', N'CADE', N'CAJ', N'CALB', N'CALM', N'CALT', N'CALX', N'CAMT', N'CANG', N'CARA', N'CARE', N'CARG', N'CARR', N'CARS', N'CASH', N'CATC', N'CATY', N'CB', N'CBAN', N'CBAY', N'CBNK', N'CBOE', N'CBSH', N'CBT', N'CBTX', N'CBU', N'CC', N'CCAP', N'CCB', N'CCBG', N'CCCC', N'CCNE', N'CCOI', N'CCRD', N'CCSI', N'CCXI', N'CCZ', N'CD', N'CDAY', N'CDLX', N'CDMO', N'CDNA', N'CDNS', N'CDRE', N'CDXS', N'CE', N'CECE', N'CERE', N'CERN', N'CERS', N'CERT', N'CF', N'CFB', N'CFFI', N'CFFN', N'CFG', N'CFLT', N'CFR', N'CG', N'CGABL', N'CGBD', N'CGC', N'CGEM', N'CGEN', N'CGNT', N'CGNX', N'CHCO', N'CHD', N'CHE')
2022-05-26 23:18:08.657 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[SaluteStocksAPI.ViewModels.CompanyIndexViewModel, SaluteStocksAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2022-05-26 23:18:08.659 +03:00 [INF] Executed action SaluteStocksAPI.Controllers.ApiController.GetCompanies (SaluteStocksAPI) in 155.1027ms
2022-05-26 23:18:08.660 +03:00 [INF] Executed endpoint 'SaluteStocksAPI.Controllers.ApiController.GetCompanies (SaluteStocksAPI)'
2022-05-26 23:18:08.660 +03:00 [INF] Request finished HTTP/2 POST https://localhost:5001/api/screener/companies application/json 116 - 200 - application/json;+charset=utf-8 160.9920ms
2022-05-26 23:18:14.113 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.BalanceSheet with Symbol BOX
2022-05-26 23:18:14.114 +03:00 [INF] Generating URI for BALANCE_SHEET with params: symbol: BOX
2022-05-26 23:18:14.115 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=KBO0R5WJR4O4UIHS&function=BALANCE_SHEET&symbol=BOX
2022-05-26 23:18:14.115 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=KBO0R5WJR4O4UIHS&function=BALANCE_SHEET&symbol=BOX".
2022-05-26 23:18:14.612 +03:00 [INF] Response has success status code
2022-05-26 23:18:14.613 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.BalanceSheet for symbol BOX
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Information": "Thank you for using Alpha Vantage! You have reached the 500 requests/day limit and there are multiple ways to remove this rate limit: (1) become a holder of Alpha Vantage Coin (AVC), an Ethereum-based cryptocurrency that provides various utility & governance functions within the Alpha Vantage ecosystem (AVC mining guide: https://www.alphatournament.com/avc_mining_guide/) to remove the 500 requests/day rate limit, (2) subscribe to any of the premium plans at https://www.alphavantage.co/premium/ to instantly remove all daily rate limits"
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 339
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetBalanceSheet(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 85
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 254
2022-05-26 23:18:25.005 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.IncomeStatement with Symbol BENER
2022-05-26 23:18:25.008 +03:00 [INF] Generating URI for INCOME_STATEMENT with params: symbol: BENER
2022-05-26 23:18:25.009 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=XJ1HZGKIN0D10RIF&function=INCOME_STATEMENT&symbol=BENER
2022-05-26 23:18:25.009 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=XJ1HZGKIN0D10RIF&function=INCOME_STATEMENT&symbol=BENER".
2022-05-26 23:18:25.492 +03:00 [INF] Response has success status code
2022-05-26 23:18:25.492 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.IncomeStatement for symbol BENER
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Information": "Thank you for using Alpha Vantage! You have reached the 500 requests/day limit and there are multiple ways to remove this rate limit: (1) become a holder of Alpha Vantage Coin (AVC), an Ethereum-based cryptocurrency that provides various utility & governance functions within the Alpha Vantage ecosystem (AVC mining guide: https://www.alphatournament.com/avc_mining_guide/) to remove the 500 requests/day rate limit, (2) subscribe to any of the premium plans at https://www.alphavantage.co/premium/ to instantly remove all daily rate limits"
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 339
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetIncomeStatement(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 72
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 254
2022-05-26 23:18:26.434 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CashFlow with Symbol BCS
2022-05-26 23:18:26.435 +03:00 [INF] Generating URI for CASH_FLOW with params: symbol: BCS
2022-05-26 23:18:26.436 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=XJ1HZGKIN0D10RIF&function=CASH_FLOW&symbol=BCS
2022-05-26 23:18:26.436 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=XJ1HZGKIN0D10RIF&function=CASH_FLOW&symbol=BCS".
2022-05-26 23:18:26.559 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.Earnings with Symbol BUFD
2022-05-26 23:18:26.560 +03:00 [INF] Generating URI for EARNINGS with params: symbol: BUFD
2022-05-26 23:18:26.561 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=KBO0R5WJR4O4UIHS&function=EARNINGS&symbol=BUFD
2022-05-26 23:18:26.561 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=KBO0R5WJR4O4UIHS&function=EARNINGS&symbol=BUFD".
2022-05-26 23:18:26.800 +03:00 [INF] Response has success status code
2022-05-26 23:18:26.801 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.Earnings for symbol BUFD
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Information": "Thank you for using Alpha Vantage! You have reached the 500 requests/day limit and there are multiple ways to remove this rate limit: (1) become a holder of Alpha Vantage Coin (AVC), an Ethereum-based cryptocurrency that provides various utility & governance functions within the Alpha Vantage ecosystem (AVC mining guide: https://www.alphatournament.com/avc_mining_guide/) to remove the 500 requests/day rate limit, (2) subscribe to any of the premium plans at https://www.alphavantage.co/premium/ to instantly remove all daily rate limits"
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 339
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyEarnings(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 145
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 254
2022-05-26 23:18:26.945 +03:00 [INF] Response has success status code
2022-05-26 23:18:26.946 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.CashFlow for symbol BCS
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Information": "Thank you for using Alpha Vantage! You have reached the 500 requests/day limit and there are multiple ways to remove this rate limit: (1) become a holder of Alpha Vantage Coin (AVC), an Ethereum-based cryptocurrency that provides various utility & governance functions within the Alpha Vantage ecosystem (AVC mining guide: https://www.alphatournament.com/avc_mining_guide/) to remove the 500 requests/day rate limit, (2) subscribe to any of the premium plans at https://www.alphavantage.co/premium/ to instantly remove all daily rate limits"
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 339
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCashFlow(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 99
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 254
2022-05-26 23:18:29.391 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CompanyOverview with Symbol CHKEL
2022-05-26 23:18:29.394 +03:00 [INF] Generating URI for OVERVIEW with params: symbol: CHKEL
2022-05-26 23:18:29.394 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=CR1WTHZN5EBATF3M&function=OVERVIEW&symbol=CHKEL
2022-05-26 23:18:29.395 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=CR1WTHZN5EBATF3M&function=OVERVIEW&symbol=CHKEL".
2022-05-26 23:18:29.968 +03:00 [INF] Response has success status code
2022-05-26 23:18:29.969 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.CompanyOverview for symbol CHKEL
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Information": "Thank you for using Alpha Vantage! You have reached the 500 requests/day limit and there are multiple ways to remove this rate limit: (1) become a holder of Alpha Vantage Coin (AVC), an Ethereum-based cryptocurrency that provides various utility & governance functions within the Alpha Vantage ecosystem (AVC mining guide: https://www.alphatournament.com/avc_mining_guide/) to remove the 500 requests/day rate limit, (2) subscribe to any of the premium plans at https://www.alphavantage.co/premium/ to instantly remove all daily rate limits"
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 339
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyOverview(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 119
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 254
2022-05-26 23:18:44.621 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.BalanceSheet with Symbol BOXL
2022-05-26 23:18:44.622 +03:00 [INF] Generating URI for BALANCE_SHEET with params: symbol: BOXL
2022-05-26 23:18:44.623 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=P63Z59GLLCNSB849&function=BALANCE_SHEET&symbol=BOXL
2022-05-26 23:18:44.623 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=P63Z59GLLCNSB849&function=BALANCE_SHEET&symbol=BOXL".
2022-05-26 23:18:45.100 +03:00 [INF] Response has success status code
2022-05-26 23:18:45.100 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.BalanceSheet for symbol BOXL
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 339
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetBalanceSheet(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 85
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 254
2022-05-26 23:18:55.505 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.IncomeStatement with Symbol BENEW
2022-05-26 23:18:55.507 +03:00 [INF] Generating URI for INCOME_STATEMENT with params: symbol: BENEW
2022-05-26 23:18:55.507 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=CR1WTHZN5EBATF3M&function=INCOME_STATEMENT&symbol=BENEW
2022-05-26 23:18:55.508 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=CR1WTHZN5EBATF3M&function=INCOME_STATEMENT&symbol=BENEW".
2022-05-26 23:18:55.742 +03:00 [INF] Response has success status code
2022-05-26 23:18:55.743 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.IncomeStatement for symbol BENEW
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 339
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetIncomeStatement(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 72
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 254
2022-05-26 23:18:56.411 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:5001/api/screener/companies - -
2022-05-26 23:18:56.411 +03:00 [INF] CORS policy execution successful.
2022-05-26 23:18:56.412 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:5001/api/screener/companies - - - 204 - - 1.1519ms
2022-05-26 23:18:56.412 +03:00 [INF] Request starting HTTP/2 POST https://localhost:5001/api/screener/companies application/json 2
2022-05-26 23:18:56.413 +03:00 [INF] CORS policy execution successful.
2022-05-26 23:18:56.414 +03:00 [INF] Executing endpoint 'SaluteStocksAPI.Controllers.ApiController.GetCompanies (SaluteStocksAPI)'
2022-05-26 23:18:56.414 +03:00 [INF] Route matched with {action = "GetCompanies", controller = "Api"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCompanies(System.Object) on controller SaluteStocksAPI.Controllers.ApiController (SaluteStocksAPI).
2022-05-26 23:18:56.416 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-26 23:18:56.463 +03:00 [INF] Executed DbCommand (45ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Symbol]
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-26 23:18:56.691 +03:00 [INF] Executed DbCommand (208ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Name], [c].[Symbol] AS [Ticker], [c].[Description], [c].[Country], [c].[Sector], N'' AS [Price]
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND [c].[Symbol] IN (N'A', N'AA', N'AAC', N'AACG', N'AACI', N'AACIU', N'AACIW', N'AAC-U', N'AAC-WS', N'AADI', N'AAIC', N'AAIC-P-B', N'AAIC-P-C', N'AAIN', N'AAL', N'AAMC', N'AAME', N'AAM-P-A', N'AAM-P-B', N'AAN', N'AAOI', N'AAON', N'AAP', N'AAPL', N'AAQC', N'AAQC-U', N'AAQC-WS', N'AAT', N'AATC', N'AAU', N'AAWW', N'AB', N'ABB', N'ABBV', N'ABC', N'ABCB', N'ABCL', N'ABCM', N'ABEO', N'ABEV', N'ABG', N'ABGI', N'ABIO', N'ABM', N'ABMD', N'ABNB', N'ABOS', N'ABR', N'ABR-P-D', N'ABR-P-E', N'ABR-P-F', N'ABSI', N'ABST', N'ABT', N'ABTX', N'ABUS', N'ABVC', N'AC', N'ACA', N'ACAB', N'ACABU', N'ACABW', N'ACAD', N'ACAH', N'ACAHU', N'ACAHW', N'ACAQ', N'ACAQ-U', N'ACAQ-WS', N'ACAXU', N'ACB', N'ACBA', N'ACBAU', N'ACBAW', N'ACBI', N'ACC', N'ACCD', N'ACCO', N'ACDI', N'ACDI-U', N'ACDI-WS', N'ACEL', N'ACER', N'ACET', N'ACEV', N'ACEVU', N'ACEVW', N'ACGL', N'ACGLN', N'ACGLO', N'ACH', N'ACHC', N'ACHL', N'ACHR', N'ACHR-WS', N'ACHV', N'ACI', N'ACII', N'ACII-U', N'ACII-WS', N'ACIU', N'ACIW', N'ACKIT', N'ACKIU', N'ACKIW', N'ACLS', N'ACLX', N'ACM', N'ACMR', N'ACN', N'ACNB', N'ACONW', N'ACOR', N'ACP-P-A', N'ACQR', N'ACQRU', N'ACQRW', N'ACR', N'ACRE', N'ACRO', N'ACRO-U', N'ACRO-WS', N'ACR-P-C', N'ACR-P-D', N'ACRS', N'ACRX', N'ACST', N'ACT', N'ACTD', N'ACTDU', N'ACTDW', N'ACTG', N'ACU', N'ACVA', N'ACXP', N'ACY', N'ADAG', N'ADAL', N'ADALU', N'ADALW', N'ADAP', N'ADBE', N'ADC', N'ADC-P-A', N'ADCT', N'ADER', N'ADERU', N'ADERW', N'ADES', N'ADEX', N'ADEX-U', N'ADEX-WS', N'ADGI', N'ADI', N'ADIL', N'ADILW', N'ADM', N'ADMA', N'ADMP', N'ADN', N'ADNT', N'ADOC', N'ADOCR', N'ADOCW', N'ADP', N'ADPT', N'ADRA', N'ADRA-U', N'ADRA-WS', N'ADRT', N'ADRT-U', N'ADRT-WS', N'ADS', N'ADSE', N'ADSEW', N'ADSK', N'ADT', N'ADTH', N'ADTHW', N'ADTN', N'ADTX', N'ADUS', N'ADV', N'ADVM', N'ADVWW', N'ADXN', N'AE', N'AEAC', N'AEACU', N'AEACW', N'AEAE', N'AEAEU', N'AEAEW', N'AEE', N'AEFC', N'AEG', N'AEHA', N'AEHAU', N'AEHAW', N'AEHL', N'AEHR', N'AEI', N'AEIS', N'AEL', N'AEL-P-A', N'AEL-P-B', N'AEM', N'AEMD', N'AENZ', N'AEO', N'AEP', N'AEPPZ', N'AER', N'AERC', N'AERI', N'AES', N'AESC', N'AEVA', N'AEVA-WS', N'AEY', N'AEYE', N'AEZS', N'AFAC', N'AFACU', N'AFACW', N'AFAQ', N'AFAQU', N'AFAQW', N'AFBI', N'AFCG', N'AFG', N'AFGB', N'AFGC', N'AFGD', N'AFGE', N'AFI', N'AFIB', N'AFL', N'AFMD', N'AFRM', N'AFTR', N'AFTR-U', N'AFTR-WS', N'AFYA', N'AG', N'AGAC', N'AGAC-U', N'AGAC-WS', N'AGBA', N'AGBAR', N'AGBAU', N'AGBAW', N'AGCB', N'AGCO', N'AGE', N'AGEN', N'AGFS', N'AGFY', N'AGGR', N'AGGRU', N'AGGRW', N'AGI', N'AGIL', N'AGILW', N'AGIO', N'AGL', N'AGLE', N'AGM', N'AGM-A', N'AGMH', N'AGM-P-C', N'AGM-P-D', N'AGM-P-E', N'AGM-P-F', N'AGM-P-G', N'AGNC', N'AGNCM', N'AGNCN', N'AGNCO', N'AGNCP', N'AGO', N'AGR', N'AGRIW', N'AGRO', N'AGRX', N'AGS', N'AGTC', N'AGTI', N'AGX', N'AGYS', N'AHCO', N'AHG', N'AHH', N'AHH-P-A', N'AHI', N'AHL-P-C', N'AHL-P-D', N'AHL-P-E', N'AHPA', N'AHPAU', N'AHPAW', N'AHPI', N'AHRN', N'AHRNU', N'AHRNW', N'AHT', N'AHT-P-D', N'AHT-P-F', N'AHT-P-G', N'AHT-P-H', N'AHT-P-I', N'AI', N'AIB', N'AIBBR', N'AIBBU', N'AIC', N'AIG', N'AIG-P-A', N'AIH', N'AIHS', N'AIKI', N'AIM', N'AIMC', N'AIN', N'AINC', N'AINV', N'AIP', N'AIR', N'AIRC', N'AIRG', N'AIRI', N'AIRS', N'AIRT', N'AIRTP', N'AIT', N'AIV', N'AIZ', N'AIZN', N'AJG', N'AJRD', N'AJX', N'AJXA', N'AKA', N'AKAM', N'AKBA', N'AKIC', N'AKICU', N'AKICW', N'AKO-A', N'AKO-B', N'AKR', N'AKRO', N'AKTS', N'AKTX', N'AKU', N'AKUS', N'AKYA', N'AL', N'ALAC', N'ALACR', N'ALACU', N'ALACW', N'ALB', N'ALBO', N'ALC', N'ALCC', N'ALCO', N'ALDX', N'ALE', N'ALEC', N'ALEX', N'ALF', N'ALFIW', N'ALG', N'ALGM', N'ALGN', N'ALGS', N'ALGT', N'ALHC', N'ALIM', N'ALIN-P-A', N'ALIN-P-B', N'ALIN-P-E', N'ALIT', N'ALJJ', N'ALK', N'ALKS', N'ALKT', N'ALL', N'ALLE', N'ALLK', N'ALLO', N'ALL-P-B', N'ALL-P-G', N'ALL-P-H', N'ALL-P-I', N'ALLR', N'ALLT', N'ALLY', N'ALNA', N'ALNY', N'ALOR', N'ALORU', N'ALORW', N'ALOT', N'ALPA', N'AL-P-A', N'ALPAU', N'ALPAW', N'ALPN', N'ALPP', N'ALP-P-Q', N'ALR', N'ALRM', N'ALRN', N'ALRS', N'ALSA', N'ALSAR', N'ALSAU', N'ALSAW', N'ALSN', N'ALT', N'ALTG', N'ALTG-P-A', N'ALTO', N'ALTR', N'ALTU', N'ALTUU', N'ALTUW', N'ALV', N'ALVR', N'ALX', N'ALXO', N'ALYA', N'ALZN', N'AM', N'AMAL', N'AMAM', N'AMAO', N'AMAOU', N'AMAOW', N'AMAT', N'AMBA', N'AMBC', N'AMBC-WS', N'AMBO', N'AMBP', N'AMBP-WS', N'AMC', N'AMCI', N'AMCIU', N'AMCIW', N'AMCR', N'AMCX', N'AMD', N'AME', N'AMED', N'AMEH', N'AMG', N'AMGN', N'AMH', N'AMH-P-F', N'AMH-P-G', N'AMH-P-H', N'AMK', N'AMKR', N'AMLX', N'AMN', N'AMNB', N'AMOT', N'AMOV', N'AMP', N'AMPE', N'AMPG', N'AMPGW', N'AMPH', N'AMPI', N'AMPI-U', N'AMPI-WS', N'AMPL', N'AMPS', N'AMPS-WS', N'AMPY', N'AMR', N'AMRC', N'AMRK', N'AMRN', N'AMRS', N'AMRX', N'AMS', N'AMSC', N'AMSF', N'AMST', N'AMSWA', N'AMT', N'AMTB', N'AMTD', N'AMTI', N'AMTX', N'AMWD', N'AMWL', N'AMX', N'AMYT', N'AMZN', N'AN', N'ANAB', N'ANAC', N'ANAC-U', N'ANAC-WS', N'ANAT', N'ANDE', N'ANEB', N'ANET', N'ANF', N'ANGH', N'ANGHW', N'ANGI', N'ANGN', N'ANGO', N'ANIK', N'ANIP', N'ANIX', N'ANNX', N'ANPC', N'ANSS', N'ANTE', N'ANTM', N'ANVS', N'ANY', N'ANZU', N'ANZUU', N'ANZUW', N'AOGO', N'AOGOW', N'AOMR', N'AON', N'AORT', N'AOS', N'AOSL', N'AOUT', N'AP', N'APA', N'APAC', N'APACU', N'APACW', N'APAM', N'APCA', N'APCA-U', N'APCA-WS', N'APCX', N'APCXW', N'APD', N'APDN', N'APEI', N'APEN', N'APG', N'APGB', N'APGB-U', N'APGB-WS', N'APH', N'API', N'APLE', N'APLS', N'APLT', N'APM', N'APMI', N'APMIU', N'APMIW', N'APN', N'APN-U', N'APN-WS', N'APO', N'APOG', N'APP', N'APPF', N'APPH', N'APPHW', N'APPN', N'APPS', N'APRE', N'APRN', N'APSG', N'APSG-U', N'APSG-WS', N'APT', N'APTM', N'APTMU', N'APTMW', N'APTO', N'APTS', N'APTV', N'APTV-P-A', N'APTX', N'APVO', N'APWC', N'AP-WS', N'APXI', N'APXIU', N'APXIW', N'APYX', N'AQB', N'AQMS', N'AQN', N'AQNA', N'AQNB', N'AQNU', N'AQST', N'AQUA', N'AR', N'ARAV', N'ARAY', N'ARBE', N'ARBEW', N'ARBG', N'ARBGU', N'ARBGW', N'ARBK', N'ARBKL', N'ARC', N'ARCB', N'ARCC', N'ARCE', N'ARCH', N'ARCK', N'ARCKU', N'ARCKW', N'ARCO', N'ARCT', N'ARDS', N'ARDX', N'ARE', N'AREB', N'AREBW', N'AREC', N'AREN', N'ARES', N'ARGD', N'ARGO', N'ARGO-P-A', N'ARGU', N'ARGUU', N'ARGUW', N'ARGX', N'ARHS', N'ARI', N'ARIZ', N'ARIZR', N'ARIZU', N'ARIZW', N'ARKO', N'ARKR', N'ARL', N'ARLO', N'ARLP', N'ARMK', N'ARMP', N'ARNC', N'AROC', N'AROW', N'ARQQ', N'ARQQW', N'ARQT', N'ARR', N'ARR-P-C', N'ARRW', N'ARRWU', N'ARRWW', N'ARRY', N'ARTA', N'ARTAU', N'ARTAW', N'ARTE', N'ARTEU', N'ARTEW', N'ARTL', N'ARTLW', N'ARTNA', N'ARTW', N'ARVL', N'ARVN', N'ARW', N'ARWR', N'ARYD', N'ARYE', N'ASAI', N'ASAN', N'ASAQ', N'ASAQ-U', N'ASAQ-WS', N'ASAX', N'ASAXU', N'ASAXW', N'ASB', N'ASB-P-E', N'ASB-P-F', N'ASC', N'ASCA', N'ASCAU', N'ASCAW', N'ASGI', N'ASGN', N'ASH', N'ASIX', N'ASLE', N'ASLN', N'ASM', N'ASMB', N'ASML', N'ASND', N'ASO', N'ASPA', N'ASPAU', N'ASPAW', N'ASPC', N'ASPCU', N'ASPCW', N'ASPN', N'ASPS', N'ASPU', N'ASR', N'ASRT', N'ASRV', N'ASTC', N'ASTE', N'ASTL', N'ASTLW', N'ASTR', N'ASTS', N'ASTSW', N'ASUR', N'ASX', N'ASXC', N'ASYS', N'ASZ', N'ASZ-U', N'ASZ-WS', N'ATA', N'ATAI', N'ATAK', N'ATAKR', N'ATAKU', N'ATAKW', N'ATAQ', N'ATAQ-U', N'ATAQ-WS', N'ATA-U', N'ATA-WS', N'ATAX', N'ATC', N'ATCO', N'ATCOL', N'ATCO-P-D', N'ATCO-P-H', N'ATCO-P-I', N'ATCX', N'ATEC', N'ATEK', N'ATEK-U', N'ATEK-WS', N'ATEN', N'ATER', N'ATEST-A', N'ATEST-B', N'ATEST-C', N'ATEST-G', N'ATEST-H', N'ATEST-L', N'ATEX', N'ATGE', N'ATHA', N'ATHE', N'ATHM', N'ATH-P-A', N'ATH-P-C', N'ATH-P-D', N'ATHX', N'ATI', N'ATIF', N'ATIP', N'ATIP-WS', N'ATKR', N'ATLC', N'ATLCL', N'ATLCP', N'ATLO', N'ATMH', N'ATNF', N'ATNFW', N'ATNI', N'ATNM', N'ATNX', N'ATO', N'ATOM', N'ATOS', N'ATR', N'ATRA', N'ATRC', N'ATRI', N'ATRO', N'ATRS', N'ATSG', N'ATSPT', N'ATSPU', N'ATSPW', N'ATTO', N'ATUS', N'ATVC', N'ATVCU', N'ATVCW', N'ATVI', N'ATXI', N'ATXS', N'ATY', N'AU', N'AUB', N'AUBAP', N'AUBN', N'AUD', N'AUDC', N'AUGX', N'AUID', N'AUMN', N'AUPH', N'AUR', N'AURA', N'AURC', N'AURCU', N'AURCW', N'AUROW', N'AUS', N'AUS-U', N'AUS-WS', N'AUTL', N'AUTO', N'AUUD', N'AUUDW', N'AUVI', N'AUVIP', N'AUY', N'AVA', N'AVAC', N'AVACU', N'AVACW', N'AVAH', N'AVAL', N'AVAN', N'AVAN-U', N'AVAN-WS', N'AVAV', N'AVB', N'AVCO', N'AVCT', N'AVCTW', N'AVD', N'AVDL', N'AVDX', N'AVEO', N'AVGO', N'AVGOP', N'AVGR', N'AVHI', N'AVHIU', N'AVHIW', N'AVID', N'AVIR', N'AVLR', N'AVNS', N'AVNT', N'AVNW', N'AVO', N'AVPT', N'AVPTW', N'AVRO', N'AVT', N'AVTE', N'AVTR', N'AVTR-P-A', N'AVTX', N'AVXL', N'AVY', N'AVYA', N'AWH', N'AWI', N'AWK', N'AWR', N'AWRE', N'AWX', N'AX', N'AXAC', N'AXAC-R', N'AXAC-WS', N'AXDX', N'AXGN', N'AXH', N'AXH-U', N'AXH-WS', N'AXL', N'AXLA', N'AXNX', N'AXON', N'AXP', N'AXR', N'AXS', N'AXSM', N'AXS-P-E', N'AXTA', N'AXTI', N'AXU', N'AY', N'AYI', N'AYLA', N'AYRO', N'AYTU', N'AYX', N'AZ', N'AZEK', N'AZN', N'AZO', N'AZPN', N'AZRE', N'AZTA', N'AZUL', N'AZYO', N'AZZ', N'B', N'BA', N'BABA', N'BAC', N'BACA', N'BACA-U', N'BACA-WS', N'BAC-P-B', N'BAC-P-E', N'BAC-P-K', N'BAC-P-L', N'BAC-P-M', N'BAC-P-N', N'BAC-P-O', N'BAC-P-P', N'BAC-P-Q', N'BAC-P-S', N'BAFN', N'BAH', N'BAK', N'BALY', N'BAM', N'BAMH', N'BAMI', N'BAMR', N'BANC', N'BAND', N'BANF', N'BANFP', N'BANR', N'BANX', N'BAOS', N'BAP', N'BARK', N'BARK-WS', N'BASE', N'BATL', N'BATRA', N'BATRK', N'BAX', N'BB', N'BBAI', N'BBAI-WS', N'BBAR', N'BBBY', N'BBCP', N'BBD', N'BBDC', N'BBDO', N'BBGI', N'BBI', N'BBIG', N'BBIO', N'BBLG', N'BBLGW', N'BBLN', N'BBLN-WS', N'BBQ', N'BBSI', N'BBU', N'BBUC', N'BBVA', N'BBW', N'BBWI', N'BBY', N'BC', N'BCAB', N'BCAC', N'BCACU', N'BCACW', N'BCAT', N'BCBP', N'BCC', N'BCDA', N'BCDAW', N'BCE', N'BCEL', N'BCH', N'BCLI', N'BCML', N'BCO', N'BCOR', N'BCOV', N'BCOW', N'BC-P-A', N'BC-P-B', N'BC-P-C', N'BCRX', N'BCS', N'BCSA', N'BCSAU', N'BCSAW', N'BCSF', N'BCTX', N'BCTXW', N'BCV-P-A', N'BCYC', N'BDC', N'BDL', N'BDN', N'BDR', N'BDSX', N'BDTX', N'BDX', N'BDXB', N'BE', N'BEAM', N'BEAT', N'BEATW', N'BECN', N'BEDU', N'BEEM', N'BEEMW', N'BEKE', N'BELFA', N'BELFB', N'BEN', N'BENE', N'BENER', N'BENEU', N'BENEW', N'BEP', N'BEPC', N'BEPH', N'BEPI', N'BEP-P-A', N'BERY', N'BEST', N'BF-A', N'BFAC', N'BFAC-U', N'BFAC-WS', N'BFAM', N'BF-B', N'BFC', N'BFH', N'BFI', N'BFIIW', N'BFIN', N'BFLY', N'BFLY-WS', N'BFRI', N'BFRIW', N'BFS', N'BFS-P-D', N'BFS-P-E', N'BFST', N'BG', N'BGCP', N'BGFV', N'BGI', N'BGNE', N'BGRY', N'BGRYW', N'BGS', N'BGSF', N'BGSX', N'BGSX-U', N'BGSX-WS', N'BH', N'BH-A', N'BHAC', N'BHACU', N'BHACW', N'BHAT', N'BHB', N'BHC', N'BHE', N'BHF', N'BHFAL', N'BHFAM', N'BHFAN', N'BHFAO', N'BHFAP', N'BHG', N'BHIL', N'BHIL-WS', N'BHLB', N'BHP', N'BHR', N'BHR-P-B', N'BHR-P-D', N'BHSE', N'BHSEU', N'BHSEW', N'BHVN', N'BIDU', N'BIG', N'BIGC', N'BIGZ', N'BIIB', N'BILI', N'BILL', N'BIMI', N'BIO', N'BIO-B', N'BIOC', N'BIOL', N'BIOS', N'BIOSU', N'BIOSW', N'BIOT', N'BIOTU', N'BIOTW', N'BIOX', N'BIP', N'BIPC', N'BIPH', N'BIPI', N'BIP-P-A', N'BIP-P-B', N'BIRD', N'BITE', N'BITE-U', N'BITE-WS', N'BITF', N'BIVI', N'BJ', N'BJDX', N'BJRI', N'BK', N'BKCC', N'BKD', N'BKE', N'BKEP', N'BKEPP', N'BKH', N'BKI', N'BKKT', N'BKKT-WS', N'BKNG', N'BKR', N'BKSC', N'BKSY', N'BKSY-WS', N'BKTI', N'BKU', N'BKYI', N'BL', N'BLBD', N'BLBX', N'BLCM', N'BLCT', N'BLD', N'BLDE', N'BLDEW', N'BLDP', N'BLDR', N'BLEU', N'BLEUR', N'BLEUU', N'BLEUW', N'BLFS', N'BLFY', N'BLI', N'BLIN', N'BLK', N'BLKB', N'BLMN', N'BLND', N'BLNG', N'BLNGU', N'BLNGW', N'BLNK', N'BLNKW', N'BLPH', N'BLRX', N'BLSA', N'BLTS', N'BLTSU', N'BLTSW', N'BLU', N'BLUA', N'BLUA-U', N'BLUA-WS', N'BLUE', N'BLX', N'BLZE', N'BMA', N'BMAC', N'BMAC-U', N'BMAC-WS', N'BMAQ', N'BMAQR', N'BMAQU', N'BMAQW', N'BMBL', N'BMEA', N'BMEZ', N'BMI', N'BML-P-G', N'BML-P-H', N'BML-P-J', N'BML-P-L', N'BMO', N'BMRA', N'BMRC', N'BMRN', N'BMTX', N'BMTX-WS', N'BMY', N'BNED', N'BNFT', N'BNGO', N'BNGOW', N'BNIX', N'BNIXR', N'BNIXW', N'BNL', N'BNNR', N'BNNRU', N'BNNRW', N'BNOX', N'BNR', N'BNS', N'BNSO', N'BNTC', N'BNTX', N'BOAC', N'BOAC-U', N'BOAC-WS', N'BOAS', N'BOAS-U', N'BOAS-WS', N'BOC', N'BOCN', N'BOCNU', N'BOCNW', N'BODY', N'BODY-WS', N'BOH', N'BOH-P-A', N'BOKF', N'BOLT', N'BON', N'BOOM', N'BOOT', N'BORR', N'BOSC', N'BOTJ', N'BOWL', N'BOWL-WS', N'BOX', N'BOXD', N'BOXD-WS', N'BOXL', N'BP', N'BPAC', N'BPACU', N'BPACW', N'BPMC', N'BPMP', N'BPOP', N'BPOPM', N'BPRN', N'BPT', N'BPTH', N'BPTS', N'BPYPM', N'BPYPN', N'BPYPO', N'BPYPP', N'BQ', N'BR', N'BRAC', N'BRACR', N'BRACU', N'BRAG', N'BRBR', N'BRBS', N'BRC', N'BRCC', N'BRCN', N'BRD', N'BRDG', N'BRDS', N'BRDS-WS', N'BRD-U', N'BRD-WS', N'BREZ', N'BREZR', N'BREZW', N'BRFH', N'BRFS', N'BRG', N'BRG-P-C', N'BRG-P-D', N'BRID', N'BRIV', N'BRIVU', N'BRIVW', N'BRK-A', N'BRK-B', N'BRKH', N'BRKHU', N'BRKHW', N'BRKL', N'BRKR', N'BRLI', N'BRLIR', N'BRLIU', N'BRLIW', N'BRLT', N'BRMK', N'BRMK-WS', N'BRN', N'BRO', N'BROG', N'BROS', N'BRP', N'BRPM', N'BRPMU', N'BRPMW', N'BRQS', N'BRSP', N'BRT', N'BRTX', N'BRX', N'BRY', N'BRZE', N'BSAC', N'BSAQ', N'BSAQ-U', N'BSAQ-WS', N'BSBK', N'BSBR', N'BSET', N'BSFC', N'BSGA', N'BSGAR', N'BSGAU', N'BSGM', N'BSIG', N'BSKY', N'BSKYU', N'BSKYW', N'BSM', N'BSQR', N'BSRR', N'BSTZ', N'BSVN', N'BSX', N'BSX-P-A', N'BSY', N'BTAI', N'BTB', N'BTBD', N'BTBDW', N'BTBT', N'BTCM', N'BTCS', N'BTCY', N'BTG', N'BTI', N'BTN', N'BTOG', N'BTRS', N'BTTR', N'BTTX', N'BTU', N'BTWN', N'BTWNU', N'BTWNW', N'BTX', N'BUD', N'BUR', N'BURL', N'BUSE', N'BV', N'BVH', N'BVN', N'BVS', N'BVXV', N'BW', N'BWA', N'BWAC', N'BWACU', N'BWACW', N'BWAQ', N'BWAQR', N'BWAQU', N'BWAQW', N'BWAY', N'BWB', N'BWBBP', N'BWC', N'BWCAU', N'BWCAW', N'BWEN', N'BWFG', N'BWMN', N'BWNB', N'BW-P-A', N'BWSN', N'BWV', N'BWXT', N'BX', N'BXC', N'BXMT', N'BXP', N'BXRX', N'BXSL', N'BY', N'BYD', N'BYFC', N'BYN', N'BYND', N'BYNO', N'BYNOU', N'BYNOW', N'BYN-U', N'BYN-WS', N'BYRN', N'BYSI', N'BYTS', N'BYTSU', N'BYTSW', N'BZ', N'BZFD', N'BZFDW', N'BZH', N'BZUN', N'C', N'CAAP', N'CAAS', N'CABA', N'CABO', N'CAC', N'CACC', N'CACI', N'CADE', N'CADE-P-A', N'CADL', N'CAE', N'CAG', N'CAH', N'CAJ', N'CAKE', N'CAL', N'CALA', N'CALB', N'CALM', N'CALT', N'CALX', N'CAMP', N'CAMT', N'CAN', N'CANB', N'CANF', N'CANG', N'CANO', N'CANO-WS', N'CAPL', N'CAPR', N'CAR', N'CARA', N'CARE', N'CARG', N'CARR', N'CARS', N'CARV', N'CAS', N'CASA', N'CASH', N'CASI', N'CASS', N'CAS-U', N'CAS-WS', N'CASY', N'CAT', N'CATC', N'CATO', N'CATY', N'CB', N'CBAN', N'CBAT', N'CBAY', N'CBD', N'CBFV', N'CBIO', N'CBL', N'CBNK', N'CBO', N'CBOE', N'CBO-P-A', N'CBRE', N'CBRG', N'CBRGU', N'CBRGW', N'CBRL', N'CBSH', N'CBT', N'CBTX', N'CBU', N'CBX', N'CBZ', N'CC', N'CCAI', N'CCAIU', N'CCAIW', N'CCAP', N'CCB', N'CCBG', N'CCCC', N'CCCS', N'CCEL', N'CCEP', N'CCF', N'CCI', N'CCJ', N'CCK', N'CCL', N'CCLP', N'CCM', N'CCMP', N'CCNC', N'CCNE', N'CCNEP', N'CCO', N'CCOI', N'CCRD', N'CCRN', N'CCS', N'CCSI', N'CCTS', N'CCTSU', N'CCTSW', N'CCU', N'CCV', N'CCVI', N'CCVI-U', N'CCVI-WS', N'CCV-U', N'CCV-WS', N'CCXI', N'CCZ', N'CD', N'CDAK', N'CDAQ', N'CDAQU', N'CDAQW', N'CDAY', N'CDE', N'CDEV', N'CDK', N'CDLX', N'CDMO', N'CDNA', N'CDNS', N'CDR', N'CDRE', N'CDRO', N'CDROW', N'CDR-P-B', N'CDR-P-C', N'CDTX', N'CDW', N'CDXC', N'CDXS', N'CDZI', N'CDZIP', N'CE', N'CEA', N'CEAD', N'CEADW', N'CECE', N'CEG', N'CEI', N'CEIX', N'CELC', N'CELG-R', N'CELH', N'CELU', N'CELUW', N'CELZ', N'CEMI', N'CENN', N'CENQ', N'CENQU', N'CENQW', N'CENT', N'CENTA', N'CENX', N'CEPU', N'CEQP', N'CEQP-P', N'CERE', N'CERN', N'CERS', N'CERT', N'CETX', N'CETXP', N'CEVA', N'CF', N'CFB', N'CFBK', N'CFFE', N'CFFEU', N'CFFEW', N'CFFI', N'CFFN', N'CFFS', N'CFFSU', N'CFFSW', N'CFG', N'CFG-P-D', N'CFG-P-E', N'CFIV', N'CFIVU', N'CFIVW', N'CFLT', N'CFMS', N'CFR', N'CFR-P-B', N'CFRX', N'CFSB', N'CFVI', N'CFVIU', N'CFVIW', N'CG', N'CGA', N'CGABL', N'CGAU', N'CGBD', N'CGC', N'CGEM', N'CGEN', N'CGNT', N'CGNX', N'CGRN', N'CGTX', N'CHAA', N'CHAA-U', N'CHAA-WS', N'CHAC-U', N'CHCO', N'CHD', N'CHE', N'CHEF', N'CHEK', N'CHGG')
2022-05-26 23:18:56.759 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[SaluteStocksAPI.ViewModels.CompanyIndexViewModel, SaluteStocksAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2022-05-26 23:18:56.762 +03:00 [INF] Executed action SaluteStocksAPI.Controllers.ApiController.GetCompanies (SaluteStocksAPI) in 347.0655ms
2022-05-26 23:18:56.763 +03:00 [INF] Executed endpoint 'SaluteStocksAPI.Controllers.ApiController.GetCompanies (SaluteStocksAPI)'
2022-05-26 23:18:56.763 +03:00 [INF] Request finished HTTP/2 POST https://localhost:5001/api/screener/companies application/json 2 - 200 - application/json;+charset=utf-8 350.9496ms
2022-05-26 23:18:56.810 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.Earnings with Symbol BUFF
2022-05-26 23:18:56.813 +03:00 [INF] Generating URI for EARNINGS with params: symbol: BUFF
2022-05-26 23:18:56.814 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=XVZ0LFWBYDX16M5H&function=EARNINGS&symbol=BUFF
2022-05-26 23:18:56.814 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=XVZ0LFWBYDX16M5H&function=EARNINGS&symbol=BUFF".
2022-05-26 23:18:56.952 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CashFlow with Symbol BCSA
2022-05-26 23:18:56.953 +03:00 [INF] Generating URI for CASH_FLOW with params: symbol: BCSA
2022-05-26 23:18:56.954 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=CR1WTHZN5EBATF3M&function=CASH_FLOW&symbol=BCSA
2022-05-26 23:18:56.955 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=CR1WTHZN5EBATF3M&function=CASH_FLOW&symbol=BCSA".
2022-05-26 23:18:57.192 +03:00 [INF] Response has success status code
2022-05-26 23:18:57.192 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.CashFlow for symbol BCSA
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 339
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCashFlow(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 99
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 254
2022-05-26 23:18:57.296 +03:00 [INF] Response has success status code
2022-05-26 23:18:57.296 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.Earnings for symbol BUFF
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 339
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyEarnings(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 145
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 254
2022-05-26 23:18:59.989 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CompanyOverview with Symbol CHKEW
2022-05-26 23:18:59.990 +03:00 [INF] Generating URI for OVERVIEW with params: symbol: CHKEW
2022-05-26 23:18:59.991 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=XJ1HZGKIN0D10RIF&function=OVERVIEW&symbol=CHKEW
2022-05-26 23:18:59.991 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=XJ1HZGKIN0D10RIF&function=OVERVIEW&symbol=CHKEW".
2022-05-26 23:19:00.471 +03:00 [INF] Response has success status code
2022-05-26 23:19:00.471 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.CompanyOverview for symbol CHKEW
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Information": "Thank you for using Alpha Vantage! You have reached the 500 requests/day limit and there are multiple ways to remove this rate limit: (1) become a holder of Alpha Vantage Coin (AVC), an Ethereum-based cryptocurrency that provides various utility & governance functions within the Alpha Vantage ecosystem (AVC mining guide: https://www.alphatournament.com/avc_mining_guide/) to remove the 500 requests/day rate limit, (2) subscribe to any of the premium plans at https://www.alphavantage.co/premium/ to instantly remove all daily rate limits"
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 339
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyOverview(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 119
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 254
2022-05-26 23:19:09.286 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:5001/api/screener/companies - -
2022-05-26 23:19:09.287 +03:00 [INF] CORS policy execution successful.
2022-05-26 23:19:09.287 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:5001/api/screener/companies - - - 204 - - 1.1285ms
2022-05-26 23:19:09.288 +03:00 [INF] Request starting HTTP/2 POST https://localhost:5001/api/screener/companies application/json 2
2022-05-26 23:19:09.288 +03:00 [INF] CORS policy execution successful.
2022-05-26 23:19:09.289 +03:00 [INF] Executing endpoint 'SaluteStocksAPI.Controllers.ApiController.GetCompanies (SaluteStocksAPI)'
2022-05-26 23:19:09.289 +03:00 [INF] Route matched with {action = "GetCompanies", controller = "Api"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCompanies(System.Object) on controller SaluteStocksAPI.Controllers.ApiController (SaluteStocksAPI).
2022-05-26 23:19:09.291 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-26 23:19:09.351 +03:00 [INF] Executed DbCommand (59ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Symbol]
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-26 23:19:09.386 +03:00 [INF] Executed DbCommand (17ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Name], [c].[Symbol] AS [Ticker], [c].[Description], [c].[Country], [c].[Sector], N'' AS [Price]
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND [c].[Symbol] IN (N'A', N'AA', N'AAC', N'AACG', N'AACI', N'AACIU', N'AACIW', N'AAC-U', N'AAC-WS', N'AADI', N'AAIC', N'AAIC-P-B', N'AAIC-P-C', N'AAIN', N'AAL', N'AAMC', N'AAME', N'AAM-P-A', N'AAM-P-B', N'AAN', N'AAOI', N'AAON', N'AAP', N'AAPL', N'AAQC', N'AAQC-U', N'AAQC-WS', N'AAT', N'AATC', N'AAU', N'AAWW', N'AB', N'ABB', N'ABBV', N'ABC', N'ABCB', N'ABCL', N'ABCM', N'ABEO', N'ABEV', N'ABG', N'ABGI', N'ABIO', N'ABM', N'ABMD', N'ABNB', N'ABOS', N'ABR', N'ABR-P-D', N'ABR-P-E', N'ABR-P-F', N'ABSI', N'ABST', N'ABT', N'ABTX', N'ABUS', N'ABVC', N'AC', N'ACA', N'ACAB', N'ACABU', N'ACABW', N'ACAD', N'ACAH', N'ACAHU', N'ACAHW', N'ACAQ', N'ACAQ-U', N'ACAQ-WS', N'ACAXU', N'ACB', N'ACBA', N'ACBAU', N'ACBAW', N'ACBI', N'ACC', N'ACCD', N'ACCO', N'ACDI', N'ACDI-U', N'ACDI-WS', N'ACEL', N'ACER', N'ACET', N'ACEV', N'ACEVU', N'ACEVW', N'ACGL', N'ACGLN', N'ACGLO', N'ACH', N'ACHC', N'ACHL', N'ACHR', N'ACHR-WS', N'ACHV', N'ACI', N'ACII', N'ACII-U', N'ACII-WS', N'ACIU', N'ACIW', N'ACKIT', N'ACKIU', N'ACKIW', N'ACLS', N'ACLX', N'ACM', N'ACMR', N'ACN', N'ACNB', N'ACONW', N'ACOR', N'ACP-P-A', N'ACQR', N'ACQRU', N'ACQRW', N'ACR', N'ACRE', N'ACRO', N'ACRO-U', N'ACRO-WS', N'ACR-P-C', N'ACR-P-D', N'ACRS', N'ACRX', N'ACST', N'ACT', N'ACTD', N'ACTDU', N'ACTDW', N'ACTG', N'ACU', N'ACVA', N'ACXP', N'ACY', N'ADAG', N'ADAL', N'ADALU', N'ADALW', N'ADAP', N'ADBE', N'ADC', N'ADC-P-A', N'ADCT', N'ADER', N'ADERU', N'ADERW', N'ADES', N'ADEX', N'ADEX-U', N'ADEX-WS', N'ADGI', N'ADI', N'ADIL', N'ADILW', N'ADM', N'ADMA', N'ADMP', N'ADN', N'ADNT', N'ADOC', N'ADOCR', N'ADOCW', N'ADP', N'ADPT', N'ADRA', N'ADRA-U', N'ADRA-WS', N'ADRT', N'ADRT-U', N'ADRT-WS', N'ADS', N'ADSE', N'ADSEW', N'ADSK', N'ADT', N'ADTH', N'ADTHW', N'ADTN', N'ADTX', N'ADUS', N'ADV', N'ADVM', N'ADVWW', N'ADXN', N'AE', N'AEAC', N'AEACU', N'AEACW', N'AEAE', N'AEAEU', N'AEAEW', N'AEE', N'AEFC', N'AEG', N'AEHA', N'AEHAU', N'AEHAW', N'AEHL', N'AEHR', N'AEI', N'AEIS', N'AEL', N'AEL-P-A', N'AEL-P-B', N'AEM', N'AEMD', N'AENZ', N'AEO', N'AEP', N'AEPPZ', N'AER', N'AERC', N'AERI', N'AES', N'AESC', N'AEVA', N'AEVA-WS', N'AEY', N'AEYE', N'AEZS', N'AFAC', N'AFACU', N'AFACW', N'AFAQ', N'AFAQU', N'AFAQW', N'AFBI', N'AFCG', N'AFG', N'AFGB', N'AFGC', N'AFGD', N'AFGE', N'AFI', N'AFIB', N'AFL', N'AFMD', N'AFRM', N'AFTR', N'AFTR-U', N'AFTR-WS', N'AFYA', N'AG', N'AGAC', N'AGAC-U', N'AGAC-WS', N'AGBA', N'AGBAR', N'AGBAU', N'AGBAW', N'AGCB', N'AGCO', N'AGE', N'AGEN', N'AGFS', N'AGFY', N'AGGR', N'AGGRU', N'AGGRW', N'AGI', N'AGIL', N'AGILW', N'AGIO', N'AGL', N'AGLE', N'AGM', N'AGM-A', N'AGMH', N'AGM-P-C', N'AGM-P-D', N'AGM-P-E', N'AGM-P-F', N'AGM-P-G', N'AGNC', N'AGNCM', N'AGNCN', N'AGNCO', N'AGNCP', N'AGO', N'AGR', N'AGRIW', N'AGRO', N'AGRX', N'AGS', N'AGTC', N'AGTI', N'AGX', N'AGYS', N'AHCO', N'AHG', N'AHH', N'AHH-P-A', N'AHI', N'AHL-P-C', N'AHL-P-D', N'AHL-P-E', N'AHPA', N'AHPAU', N'AHPAW', N'AHPI', N'AHRN', N'AHRNU', N'AHRNW', N'AHT', N'AHT-P-D', N'AHT-P-F', N'AHT-P-G', N'AHT-P-H', N'AHT-P-I', N'AI', N'AIB', N'AIBBR', N'AIBBU', N'AIC', N'AIG', N'AIG-P-A', N'AIH', N'AIHS', N'AIKI', N'AIM', N'AIMC', N'AIN', N'AINC', N'AINV', N'AIP', N'AIR', N'AIRC', N'AIRG', N'AIRI', N'AIRS', N'AIRT', N'AIRTP', N'AIT', N'AIV', N'AIZ', N'AIZN', N'AJG', N'AJRD', N'AJX', N'AJXA', N'AKA', N'AKAM', N'AKBA', N'AKIC', N'AKICU', N'AKICW', N'AKO-A', N'AKO-B', N'AKR', N'AKRO', N'AKTS', N'AKTX', N'AKU', N'AKUS', N'AKYA', N'AL', N'ALAC', N'ALACR', N'ALACU', N'ALACW', N'ALB', N'ALBO', N'ALC', N'ALCC', N'ALCO', N'ALDX', N'ALE', N'ALEC', N'ALEX', N'ALF', N'ALFIW', N'ALG', N'ALGM', N'ALGN', N'ALGS', N'ALGT', N'ALHC', N'ALIM', N'ALIN-P-A', N'ALIN-P-B', N'ALIN-P-E', N'ALIT', N'ALJJ', N'ALK', N'ALKS', N'ALKT', N'ALL', N'ALLE', N'ALLK', N'ALLO', N'ALL-P-B', N'ALL-P-G', N'ALL-P-H', N'ALL-P-I', N'ALLR', N'ALLT', N'ALLY', N'ALNA', N'ALNY', N'ALOR', N'ALORU', N'ALORW', N'ALOT', N'ALPA', N'AL-P-A', N'ALPAU', N'ALPAW', N'ALPN', N'ALPP', N'ALP-P-Q', N'ALR', N'ALRM', N'ALRN', N'ALRS', N'ALSA', N'ALSAR', N'ALSAU', N'ALSAW', N'ALSN', N'ALT', N'ALTG', N'ALTG-P-A', N'ALTO', N'ALTR', N'ALTU', N'ALTUU', N'ALTUW', N'ALV', N'ALVR', N'ALX', N'ALXO', N'ALYA', N'ALZN', N'AM', N'AMAL', N'AMAM', N'AMAO', N'AMAOU', N'AMAOW', N'AMAT', N'AMBA', N'AMBC', N'AMBC-WS', N'AMBO', N'AMBP', N'AMBP-WS', N'AMC', N'AMCI', N'AMCIU', N'AMCIW', N'AMCR', N'AMCX', N'AMD', N'AME', N'AMED', N'AMEH', N'AMG', N'AMGN', N'AMH', N'AMH-P-F', N'AMH-P-G', N'AMH-P-H', N'AMK', N'AMKR', N'AMLX', N'AMN', N'AMNB', N'AMOT', N'AMOV', N'AMP', N'AMPE', N'AMPG', N'AMPGW', N'AMPH', N'AMPI', N'AMPI-U', N'AMPI-WS', N'AMPL', N'AMPS', N'AMPS-WS', N'AMPY', N'AMR', N'AMRC', N'AMRK', N'AMRN', N'AMRS', N'AMRX', N'AMS', N'AMSC', N'AMSF', N'AMST', N'AMSWA', N'AMT', N'AMTB', N'AMTD', N'AMTI', N'AMTX', N'AMWD', N'AMWL', N'AMX', N'AMYT', N'AMZN', N'AN', N'ANAB', N'ANAC', N'ANAC-U', N'ANAC-WS', N'ANAT', N'ANDE', N'ANEB', N'ANET', N'ANF', N'ANGH', N'ANGHW', N'ANGI', N'ANGN', N'ANGO', N'ANIK', N'ANIP', N'ANIX', N'ANNX', N'ANPC', N'ANSS', N'ANTE', N'ANTM', N'ANVS', N'ANY', N'ANZU', N'ANZUU', N'ANZUW', N'AOGO', N'AOGOW', N'AOMR', N'AON', N'AORT', N'AOS', N'AOSL', N'AOUT', N'AP', N'APA', N'APAC', N'APACU', N'APACW', N'APAM', N'APCA', N'APCA-U', N'APCA-WS', N'APCX', N'APCXW', N'APD', N'APDN', N'APEI', N'APEN', N'APG', N'APGB', N'APGB-U', N'APGB-WS', N'APH', N'API', N'APLE', N'APLS', N'APLT', N'APM', N'APMI', N'APMIU', N'APMIW', N'APN', N'APN-U', N'APN-WS', N'APO', N'APOG', N'APP', N'APPF', N'APPH', N'APPHW', N'APPN', N'APPS', N'APRE', N'APRN', N'APSG', N'APSG-U', N'APSG-WS', N'APT', N'APTM', N'APTMU', N'APTMW', N'APTO', N'APTS', N'APTV', N'APTV-P-A', N'APTX', N'APVO', N'APWC', N'AP-WS', N'APXI', N'APXIU', N'APXIW', N'APYX', N'AQB', N'AQMS', N'AQN', N'AQNA', N'AQNB', N'AQNU', N'AQST', N'AQUA', N'AR', N'ARAV', N'ARAY', N'ARBE', N'ARBEW', N'ARBG', N'ARBGU', N'ARBGW', N'ARBK', N'ARBKL', N'ARC', N'ARCB', N'ARCC', N'ARCE', N'ARCH', N'ARCK', N'ARCKU', N'ARCKW', N'ARCO', N'ARCT', N'ARDS', N'ARDX', N'ARE', N'AREB', N'AREBW', N'AREC', N'AREN', N'ARES', N'ARGD', N'ARGO', N'ARGO-P-A', N'ARGU', N'ARGUU', N'ARGUW', N'ARGX', N'ARHS', N'ARI', N'ARIZ', N'ARIZR', N'ARIZU', N'ARIZW', N'ARKO', N'ARKR', N'ARL', N'ARLO', N'ARLP', N'ARMK', N'ARMP', N'ARNC', N'AROC', N'AROW', N'ARQQ', N'ARQQW', N'ARQT', N'ARR', N'ARR-P-C', N'ARRW', N'ARRWU', N'ARRWW', N'ARRY', N'ARTA', N'ARTAU', N'ARTAW', N'ARTE', N'ARTEU', N'ARTEW', N'ARTL', N'ARTLW', N'ARTNA', N'ARTW', N'ARVL', N'ARVN', N'ARW', N'ARWR', N'ARYD', N'ARYE', N'ASAI', N'ASAN', N'ASAQ', N'ASAQ-U', N'ASAQ-WS', N'ASAX', N'ASAXU', N'ASAXW', N'ASB', N'ASB-P-E', N'ASB-P-F', N'ASC', N'ASCA', N'ASCAU', N'ASCAW', N'ASGI', N'ASGN', N'ASH', N'ASIX', N'ASLE', N'ASLN', N'ASM', N'ASMB', N'ASML', N'ASND', N'ASO', N'ASPA', N'ASPAU', N'ASPAW', N'ASPC', N'ASPCU', N'ASPCW', N'ASPN', N'ASPS', N'ASPU', N'ASR', N'ASRT', N'ASRV', N'ASTC', N'ASTE', N'ASTL', N'ASTLW', N'ASTR', N'ASTS', N'ASTSW', N'ASUR', N'ASX', N'ASXC', N'ASYS', N'ASZ', N'ASZ-U', N'ASZ-WS', N'ATA', N'ATAI', N'ATAK', N'ATAKR', N'ATAKU', N'ATAKW', N'ATAQ', N'ATAQ-U', N'ATAQ-WS', N'ATA-U', N'ATA-WS', N'ATAX', N'ATC', N'ATCO', N'ATCOL', N'ATCO-P-D', N'ATCO-P-H', N'ATCO-P-I', N'ATCX', N'ATEC', N'ATEK', N'ATEK-U', N'ATEK-WS', N'ATEN', N'ATER', N'ATEST-A', N'ATEST-B', N'ATEST-C', N'ATEST-G', N'ATEST-H', N'ATEST-L', N'ATEX', N'ATGE', N'ATHA', N'ATHE', N'ATHM', N'ATH-P-A', N'ATH-P-C', N'ATH-P-D', N'ATHX', N'ATI', N'ATIF', N'ATIP', N'ATIP-WS', N'ATKR', N'ATLC', N'ATLCL', N'ATLCP', N'ATLO', N'ATMH', N'ATNF', N'ATNFW', N'ATNI', N'ATNM', N'ATNX', N'ATO', N'ATOM', N'ATOS', N'ATR', N'ATRA', N'ATRC', N'ATRI', N'ATRO', N'ATRS', N'ATSG', N'ATSPT', N'ATSPU', N'ATSPW', N'ATTO', N'ATUS', N'ATVC', N'ATVCU', N'ATVCW', N'ATVI', N'ATXI', N'ATXS', N'ATY', N'AU', N'AUB', N'AUBAP', N'AUBN', N'AUD', N'AUDC', N'AUGX', N'AUID', N'AUMN', N'AUPH', N'AUR', N'AURA', N'AURC', N'AURCU', N'AURCW', N'AUROW', N'AUS', N'AUS-U', N'AUS-WS', N'AUTL', N'AUTO', N'AUUD', N'AUUDW', N'AUVI', N'AUVIP', N'AUY', N'AVA', N'AVAC', N'AVACU', N'AVACW', N'AVAH', N'AVAL', N'AVAN', N'AVAN-U', N'AVAN-WS', N'AVAV', N'AVB', N'AVCO', N'AVCT', N'AVCTW', N'AVD', N'AVDL', N'AVDX', N'AVEO', N'AVGO', N'AVGOP', N'AVGR', N'AVHI', N'AVHIU', N'AVHIW', N'AVID', N'AVIR', N'AVLR', N'AVNS', N'AVNT', N'AVNW', N'AVO', N'AVPT', N'AVPTW', N'AVRO', N'AVT', N'AVTE', N'AVTR', N'AVTR-P-A', N'AVTX', N'AVXL', N'AVY', N'AVYA', N'AWH', N'AWI', N'AWK', N'AWR', N'AWRE', N'AWX', N'AX', N'AXAC', N'AXAC-R', N'AXAC-WS', N'AXDX', N'AXGN', N'AXH', N'AXH-U', N'AXH-WS', N'AXL', N'AXLA', N'AXNX', N'AXON', N'AXP', N'AXR', N'AXS', N'AXSM', N'AXS-P-E', N'AXTA', N'AXTI', N'AXU', N'AY', N'AYI', N'AYLA', N'AYRO', N'AYTU', N'AYX', N'AZ', N'AZEK', N'AZN', N'AZO', N'AZPN', N'AZRE', N'AZTA', N'AZUL', N'AZYO', N'AZZ', N'B', N'BA', N'BABA', N'BAC', N'BACA', N'BACA-U', N'BACA-WS', N'BAC-P-B', N'BAC-P-E', N'BAC-P-K', N'BAC-P-L', N'BAC-P-M', N'BAC-P-N', N'BAC-P-O', N'BAC-P-P', N'BAC-P-Q', N'BAC-P-S', N'BAFN', N'BAH', N'BAK', N'BALY', N'BAM', N'BAMH', N'BAMI', N'BAMR', N'BANC', N'BAND', N'BANF', N'BANFP', N'BANR', N'BANX', N'BAOS', N'BAP', N'BARK', N'BARK-WS', N'BASE', N'BATL', N'BATRA', N'BATRK', N'BAX', N'BB', N'BBAI', N'BBAI-WS', N'BBAR', N'BBBY', N'BBCP', N'BBD', N'BBDC', N'BBDO', N'BBGI', N'BBI', N'BBIG', N'BBIO', N'BBLG', N'BBLGW', N'BBLN', N'BBLN-WS', N'BBQ', N'BBSI', N'BBU', N'BBUC', N'BBVA', N'BBW', N'BBWI', N'BBY', N'BC', N'BCAB', N'BCAC', N'BCACU', N'BCACW', N'BCAT', N'BCBP', N'BCC', N'BCDA', N'BCDAW', N'BCE', N'BCEL', N'BCH', N'BCLI', N'BCML', N'BCO', N'BCOR', N'BCOV', N'BCOW', N'BC-P-A', N'BC-P-B', N'BC-P-C', N'BCRX', N'BCS', N'BCSA', N'BCSAU', N'BCSAW', N'BCSF', N'BCTX', N'BCTXW', N'BCV-P-A', N'BCYC', N'BDC', N'BDL', N'BDN', N'BDR', N'BDSX', N'BDTX', N'BDX', N'BDXB', N'BE', N'BEAM', N'BEAT', N'BEATW', N'BECN', N'BEDU', N'BEEM', N'BEEMW', N'BEKE', N'BELFA', N'BELFB', N'BEN', N'BENE', N'BENER', N'BENEU', N'BENEW', N'BEP', N'BEPC', N'BEPH', N'BEPI', N'BEP-P-A', N'BERY', N'BEST', N'BF-A', N'BFAC', N'BFAC-U', N'BFAC-WS', N'BFAM', N'BF-B', N'BFC', N'BFH', N'BFI', N'BFIIW', N'BFIN', N'BFLY', N'BFLY-WS', N'BFRI', N'BFRIW', N'BFS', N'BFS-P-D', N'BFS-P-E', N'BFST', N'BG', N'BGCP', N'BGFV', N'BGI', N'BGNE', N'BGRY', N'BGRYW', N'BGS', N'BGSF', N'BGSX', N'BGSX-U', N'BGSX-WS', N'BH', N'BH-A', N'BHAC', N'BHACU', N'BHACW', N'BHAT', N'BHB', N'BHC', N'BHE', N'BHF', N'BHFAL', N'BHFAM', N'BHFAN', N'BHFAO', N'BHFAP', N'BHG', N'BHIL', N'BHIL-WS', N'BHLB', N'BHP', N'BHR', N'BHR-P-B', N'BHR-P-D', N'BHSE', N'BHSEU', N'BHSEW', N'BHVN', N'BIDU', N'BIG', N'BIGC', N'BIGZ', N'BIIB', N'BILI', N'BILL', N'BIMI', N'BIO', N'BIO-B', N'BIOC', N'BIOL', N'BIOS', N'BIOSU', N'BIOSW', N'BIOT', N'BIOTU', N'BIOTW', N'BIOX', N'BIP', N'BIPC', N'BIPH', N'BIPI', N'BIP-P-A', N'BIP-P-B', N'BIRD', N'BITE', N'BITE-U', N'BITE-WS', N'BITF', N'BIVI', N'BJ', N'BJDX', N'BJRI', N'BK', N'BKCC', N'BKD', N'BKE', N'BKEP', N'BKEPP', N'BKH', N'BKI', N'BKKT', N'BKKT-WS', N'BKNG', N'BKR', N'BKSC', N'BKSY', N'BKSY-WS', N'BKTI', N'BKU', N'BKYI', N'BL', N'BLBD', N'BLBX', N'BLCM', N'BLCT', N'BLD', N'BLDE', N'BLDEW', N'BLDP', N'BLDR', N'BLEU', N'BLEUR', N'BLEUU', N'BLEUW', N'BLFS', N'BLFY', N'BLI', N'BLIN', N'BLK', N'BLKB', N'BLMN', N'BLND', N'BLNG', N'BLNGU', N'BLNGW', N'BLNK', N'BLNKW', N'BLPH', N'BLRX', N'BLSA', N'BLTS', N'BLTSU', N'BLTSW', N'BLU', N'BLUA', N'BLUA-U', N'BLUA-WS', N'BLUE', N'BLX', N'BLZE', N'BMA', N'BMAC', N'BMAC-U', N'BMAC-WS', N'BMAQ', N'BMAQR', N'BMAQU', N'BMAQW', N'BMBL', N'BMEA', N'BMEZ', N'BMI', N'BML-P-G', N'BML-P-H', N'BML-P-J', N'BML-P-L', N'BMO', N'BMRA', N'BMRC', N'BMRN', N'BMTX', N'BMTX-WS', N'BMY', N'BNED', N'BNFT', N'BNGO', N'BNGOW', N'BNIX', N'BNIXR', N'BNIXW', N'BNL', N'BNNR', N'BNNRU', N'BNNRW', N'BNOX', N'BNR', N'BNS', N'BNSO', N'BNTC', N'BNTX', N'BOAC', N'BOAC-U', N'BOAC-WS', N'BOAS', N'BOAS-U', N'BOAS-WS', N'BOC', N'BOCN', N'BOCNU', N'BOCNW', N'BODY', N'BODY-WS', N'BOH', N'BOH-P-A', N'BOKF', N'BOLT', N'BON', N'BOOM', N'BOOT', N'BORR', N'BOSC', N'BOTJ', N'BOWL', N'BOWL-WS', N'BOX', N'BOXD', N'BOXD-WS', N'BOXL', N'BP', N'BPAC', N'BPACU', N'BPACW', N'BPMC', N'BPMP', N'BPOP', N'BPOPM', N'BPRN', N'BPT', N'BPTH', N'BPTS', N'BPYPM', N'BPYPN', N'BPYPO', N'BPYPP', N'BQ', N'BR', N'BRAC', N'BRACR', N'BRACU', N'BRAG', N'BRBR', N'BRBS', N'BRC', N'BRCC', N'BRCN', N'BRD', N'BRDG', N'BRDS', N'BRDS-WS', N'BRD-U', N'BRD-WS', N'BREZ', N'BREZR', N'BREZW', N'BRFH', N'BRFS', N'BRG', N'BRG-P-C', N'BRG-P-D', N'BRID', N'BRIV', N'BRIVU', N'BRIVW', N'BRK-A', N'BRK-B', N'BRKH', N'BRKHU', N'BRKHW', N'BRKL', N'BRKR', N'BRLI', N'BRLIR', N'BRLIU', N'BRLIW', N'BRLT', N'BRMK', N'BRMK-WS', N'BRN', N'BRO', N'BROG', N'BROS', N'BRP', N'BRPM', N'BRPMU', N'BRPMW', N'BRQS', N'BRSP', N'BRT', N'BRTX', N'BRX', N'BRY', N'BRZE', N'BSAC', N'BSAQ', N'BSAQ-U', N'BSAQ-WS', N'BSBK', N'BSBR', N'BSET', N'BSFC', N'BSGA', N'BSGAR', N'BSGAU', N'BSGM', N'BSIG', N'BSKY', N'BSKYU', N'BSKYW', N'BSM', N'BSQR', N'BSRR', N'BSTZ', N'BSVN', N'BSX', N'BSX-P-A', N'BSY', N'BTAI', N'BTB', N'BTBD', N'BTBDW', N'BTBT', N'BTCM', N'BTCS', N'BTCY', N'BTG', N'BTI', N'BTN', N'BTOG', N'BTRS', N'BTTR', N'BTTX', N'BTU', N'BTWN', N'BTWNU', N'BTWNW', N'BTX', N'BUD', N'BUR', N'BURL', N'BUSE', N'BV', N'BVH', N'BVN', N'BVS', N'BVXV', N'BW', N'BWA', N'BWAC', N'BWACU', N'BWACW', N'BWAQ', N'BWAQR', N'BWAQU', N'BWAQW', N'BWAY', N'BWB', N'BWBBP', N'BWC', N'BWCAU', N'BWCAW', N'BWEN', N'BWFG', N'BWMN', N'BWNB', N'BW-P-A', N'BWSN', N'BWV', N'BWXT', N'BX', N'BXC', N'BXMT', N'BXP', N'BXRX', N'BXSL', N'BY', N'BYD', N'BYFC', N'BYN', N'BYND', N'BYNO', N'BYNOU', N'BYNOW', N'BYN-U', N'BYN-WS', N'BYRN', N'BYSI', N'BYTS', N'BYTSU', N'BYTSW', N'BZ', N'BZFD', N'BZFDW', N'BZH', N'BZUN', N'C', N'CAAP', N'CAAS', N'CABA', N'CABO', N'CAC', N'CACC', N'CACI', N'CADE', N'CADE-P-A', N'CADL', N'CAE', N'CAG', N'CAH', N'CAJ', N'CAKE', N'CAL', N'CALA', N'CALB', N'CALM', N'CALT', N'CALX', N'CAMP', N'CAMT', N'CAN', N'CANB', N'CANF', N'CANG', N'CANO', N'CANO-WS', N'CAPL', N'CAPR', N'CAR', N'CARA', N'CARE', N'CARG', N'CARR', N'CARS', N'CARV', N'CAS', N'CASA', N'CASH', N'CASI', N'CASS', N'CAS-U', N'CAS-WS', N'CASY', N'CAT', N'CATC', N'CATO', N'CATY', N'CB', N'CBAN', N'CBAT', N'CBAY', N'CBD', N'CBFV', N'CBIO', N'CBL', N'CBNK', N'CBO', N'CBOE', N'CBO-P-A', N'CBRE', N'CBRG', N'CBRGU', N'CBRGW', N'CBRL', N'CBSH', N'CBT', N'CBTX', N'CBU', N'CBX', N'CBZ', N'CC', N'CCAI', N'CCAIU', N'CCAIW', N'CCAP', N'CCB', N'CCBG', N'CCCC', N'CCCS', N'CCEL', N'CCEP', N'CCF', N'CCI', N'CCJ', N'CCK', N'CCL', N'CCLP', N'CCM', N'CCMP', N'CCNC', N'CCNE', N'CCNEP', N'CCO', N'CCOI', N'CCRD', N'CCRN', N'CCS', N'CCSI', N'CCTS', N'CCTSU', N'CCTSW', N'CCU', N'CCV', N'CCVI', N'CCVI-U', N'CCVI-WS', N'CCV-U', N'CCV-WS', N'CCXI', N'CCZ', N'CD', N'CDAK', N'CDAQ', N'CDAQU', N'CDAQW', N'CDAY', N'CDE', N'CDEV', N'CDK', N'CDLX', N'CDMO', N'CDNA', N'CDNS', N'CDR', N'CDRE', N'CDRO', N'CDROW', N'CDR-P-B', N'CDR-P-C', N'CDTX', N'CDW', N'CDXC', N'CDXS', N'CDZI', N'CDZIP', N'CE', N'CEA', N'CEAD', N'CEADW', N'CECE', N'CEG', N'CEI', N'CEIX', N'CELC', N'CELG-R', N'CELH', N'CELU', N'CELUW', N'CELZ', N'CEMI', N'CENN', N'CENQ', N'CENQU', N'CENQW', N'CENT', N'CENTA', N'CENX', N'CEPU', N'CEQP', N'CEQP-P', N'CERE', N'CERN', N'CERS', N'CERT', N'CETX', N'CETXP', N'CEVA', N'CF', N'CFB', N'CFBK', N'CFFE', N'CFFEU', N'CFFEW', N'CFFI', N'CFFN', N'CFFS', N'CFFSU', N'CFFSW', N'CFG', N'CFG-P-D', N'CFG-P-E', N'CFIV', N'CFIVU', N'CFIVW', N'CFLT', N'CFMS', N'CFR', N'CFR-P-B', N'CFRX', N'CFSB', N'CFVI', N'CFVIU', N'CFVIW', N'CG', N'CGA', N'CGABL', N'CGAU', N'CGBD', N'CGC', N'CGEM', N'CGEN', N'CGNT', N'CGNX', N'CGRN', N'CGTX', N'CHAA', N'CHAA-U', N'CHAA-WS', N'CHAC-U', N'CHCO', N'CHD', N'CHE', N'CHEF', N'CHEK', N'CHGG')
2022-05-26 23:19:09.511 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[SaluteStocksAPI.ViewModels.CompanyIndexViewModel, SaluteStocksAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2022-05-26 23:19:09.513 +03:00 [INF] Executed action SaluteStocksAPI.Controllers.ApiController.GetCompanies (SaluteStocksAPI) in 223.2804ms
2022-05-26 23:19:09.514 +03:00 [INF] Executed endpoint 'SaluteStocksAPI.Controllers.ApiController.GetCompanies (SaluteStocksAPI)'
2022-05-26 23:19:09.515 +03:00 [INF] Request finished HTTP/2 POST https://localhost:5001/api/screener/companies application/json 2 - 200 - application/json;+charset=utf-8 226.8296ms
2022-05-26 23:19:11.557 +03:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/distribution/market-cap/100 - -
2022-05-26 23:19:11.557 +03:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/screener-model - -
2022-05-26 23:19:11.557 +03:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/distribution/ebitda/100 - -
2022-05-26 23:19:11.558 +03:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/distribution/pe/100 - -
2022-05-26 23:19:11.558 +03:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/distribution/eps/100 - -
2022-05-26 23:19:11.558 +03:00 [INF] CORS policy execution successful.
2022-05-26 23:19:11.558 +03:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/distribution/beta/100 - -
2022-05-26 23:19:11.558 +03:00 [INF] CORS policy execution successful.
2022-05-26 23:19:11.559 +03:00 [INF] CORS policy execution successful.
2022-05-26 23:19:11.559 +03:00 [INF] CORS policy execution successful.
2022-05-26 23:19:11.559 +03:00 [INF] CORS policy execution successful.
2022-05-26 23:19:11.560 +03:00 [INF] Executing endpoint 'SaluteStocksAPI.Controllers.ApiController.GetMarketCapDistribution (SaluteStocksAPI)'
2022-05-26 23:19:11.560 +03:00 [INF] CORS policy execution successful.
2022-05-26 23:19:11.561 +03:00 [INF] Executing endpoint 'SaluteStocksAPI.Controllers.ApiController.GetScreenerModel (SaluteStocksAPI)'
2022-05-26 23:19:11.561 +03:00 [INF] Executing endpoint 'SaluteStocksAPI.Controllers.ApiController.GetEbitdaDistribution (SaluteStocksAPI)'
2022-05-26 23:19:11.561 +03:00 [INF] Executing endpoint 'SaluteStocksAPI.Controllers.ApiController.GetPeRatioDistribution (SaluteStocksAPI)'
2022-05-26 23:19:11.562 +03:00 [INF] Executing endpoint 'SaluteStocksAPI.Controllers.ApiController.GetEpsDistribution (SaluteStocksAPI)'
2022-05-26 23:19:11.562 +03:00 [INF] Route matched with {action = "GetMarketCapDistribution", controller = "Api"}. Executing controller action with signature System.Threading.Tasks.Task`1[System.String] GetMarketCapDistribution(Int32) on controller SaluteStocksAPI.Controllers.ApiController (SaluteStocksAPI).
2022-05-26 23:19:11.563 +03:00 [INF] Executing endpoint 'SaluteStocksAPI.Controllers.ApiController.GetBetaDistribution (SaluteStocksAPI)'
2022-05-26 23:19:11.563 +03:00 [INF] Route matched with {action = "GetScreenerModel", controller = "Api"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetScreenerModel() on controller SaluteStocksAPI.Controllers.ApiController (SaluteStocksAPI).
2022-05-26 23:19:11.564 +03:00 [INF] Route matched with {action = "GetEbitdaDistribution", controller = "Api"}. Executing controller action with signature System.Threading.Tasks.Task`1[System.String] GetEbitdaDistribution(Int32) on controller SaluteStocksAPI.Controllers.ApiController (SaluteStocksAPI).
2022-05-26 23:19:11.564 +03:00 [INF] Route matched with {action = "GetPeRatioDistribution", controller = "Api"}. Executing controller action with signature System.Threading.Tasks.Task`1[System.String] GetPeRatioDistribution(Int32) on controller SaluteStocksAPI.Controllers.ApiController (SaluteStocksAPI).
2022-05-26 23:19:11.565 +03:00 [INF] Route matched with {action = "GetEpsDistribution", controller = "Api"}. Executing controller action with signature System.Threading.Tasks.Task`1[System.String] GetEpsDistribution(Int32) on controller SaluteStocksAPI.Controllers.ApiController (SaluteStocksAPI).
2022-05-26 23:19:11.566 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-26 23:19:11.566 +03:00 [INF] Route matched with {action = "GetBetaDistribution", controller = "Api"}. Executing controller action with signature System.Threading.Tasks.Task`1[System.String] GetBetaDistribution(Int32) on controller SaluteStocksAPI.Controllers.ApiController (SaluteStocksAPI).
2022-05-26 23:19:11.567 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-26 23:19:11.568 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-26 23:19:11.569 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-26 23:19:11.570 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-26 23:19:11.572 +03:00 [INF] Entity Framework Core 6.0.3 initialized 'StocksContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2022-05-26 23:19:11.580 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[MarketCapitalization])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-26 23:19:11.582 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[EBITDA])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-26 23:19:11.583 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[MarketCapitalization])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-26 23:19:11.586 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[PERatio])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-26 23:19:11.590 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[EPS])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-26 23:19:11.592 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[EBITDA])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-26 23:19:11.592 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[MarketCapitalization])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-26 23:19:11.593 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[MarketCapitalization])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-26 23:19:11.593 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[PERatio])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-26 23:19:11.594 +03:00 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[Beta])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-26 23:19:11.602 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[EPS])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-26 23:19:11.604 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:11.604 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[EBITDA])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-26 23:19:11.605 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:11.605 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:19:11.606 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[Beta])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-26 23:19:11.609 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:19:11.612 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:11.612 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[EBITDA])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-26 23:19:11.621 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:19:11.621 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:11.622 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:11.622 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:19:11.623 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[PERatio])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-26 23:19:11.623 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:19:11.633 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:19:11.634 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:11.634 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:11.634 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[PERatio])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-26 23:19:11.635 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:19:11.635 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:19:11.646 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:19:11.646 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:11.649 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[EPS])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-26 23:19:11.649 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:11.651 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:19:11.651 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:19:11.654 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:11.656 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:19:11.657 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[EPS])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-26 23:19:11.661 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:19:11.662 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:19:11.663 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:11.663 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:19:11.664 +03:00 [INF] Executed DbCommand (12ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:11.666 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([c].[Beta])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-26 23:19:11.668 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:19:11.671 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:19:11.672 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:11.674 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT MAX([c].[Beta])
FROM [CompanyOverviews] AS [c]
WHERE [c].[ExistInApi] = CAST(1 AS bit)
2022-05-26 23:19:11.675 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:19:11.675 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:19:11.676 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2022-05-26 23:19:11.676 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:11.679 +03:00 [INF] Executed action SaluteStocksAPI.Controllers.ApiController.GetScreenerModel (SaluteStocksAPI) in 111.7544ms
2022-05-26 23:19:11.680 +03:00 [INF] Executed endpoint 'SaluteStocksAPI.Controllers.ApiController.GetScreenerModel (SaluteStocksAPI)'
2022-05-26 23:19:11.681 +03:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/screener-model - - - 200 - text/plain;+charset=utf-8 123.8007ms
2022-05-26 23:19:11.683 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:19:11.684 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:11.685 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:19:11.685 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:19:11.689 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:11.693 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:19:11.694 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:11.696 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:19:11.697 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:19:11.697 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:11.700 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:19:11.701 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:11.703 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:19:11.706 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:19:11.706 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:11.715 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:19:11.717 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:19:11.717 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:11.717 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:19:11.718 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:11.727 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:19:11.727 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:19:11.728 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:11.729 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:19:11.729 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:11.737 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:19:11.738 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:19:11.739 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:11.739 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:19:11.742 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:11.745 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:19:11.748 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:19:11.749 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:11.749 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:19:11.750 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:11.752 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:19:11.755 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:19:11.757 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:11.758 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:19:11.759 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:11.760 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:19:11.763 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:19:11.766 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:11.768 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:19:11.769 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:11.770 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:19:11.777 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:19:11.779 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:11.779 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:19:11.780 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:19:11.780 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:11.788 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:19:11.789 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:11.790 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:19:11.790 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:19:11.791 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:11.798 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:19:11.799 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:11.800 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:19:11.801 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:19:11.802 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:11.806 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:19:11.809 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:11.809 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:19:11.810 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:19:11.811 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:11.812 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:19:11.822 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:19:11.823 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:19:11.822 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:11.824 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:19:11.824 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:11.832 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:19:11.833 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:19:11.835 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:11.844 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:11.844 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:19:11.844 +03:00 [INF] Executed DbCommand (12ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:19:11.845 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:19:11.849 +03:00 [INF] Executed DbCommand (12ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:11.855 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:19:11.856 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:19:11.857 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:19:11.858 +03:00 [INF] Executed DbCommand (13ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:11.859 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:11.865 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:19:11.868 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:19:11.868 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:19:11.870 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:11.871 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:19:11.874 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:11.878 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:19:11.881 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:19:11.881 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:19:11.883 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:11.884 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:11.889 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:19:11.890 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:19:11.892 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:11.893 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:19:11.895 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:11.903 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:19:11.904 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:19:11.905 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:19:11.908 +03:00 [INF] Executed DbCommand (12ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:11.909 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:11.913 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:19:11.914 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:19:11.915 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:11.916 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:19:11.920 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:11.922 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:19:11.923 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:19:11.925 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:19:11.925 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:11.935 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:19:11.936 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:19:11.938 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:11.938 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:19:11.938 +03:00 [INF] Executed DbCommand (13ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:11.945 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:19:11.946 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:19:11.948 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:11.948 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:19:11.949 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:11.952 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:19:11.955 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:19:11.957 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:11.957 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:19:11.958 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:11.965 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:19:11.966 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:19:11.968 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:11.968 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:19:11.969 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:11.975 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:19:11.976 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:19:11.978 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:19:11.978 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:11.979 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:11.986 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:19:11.986 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:19:11.987 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:19:11.988 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:11.992 +03:00 [INF] Executed DbCommand (12ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:11.996 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:19:11.997 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:19:11.998 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:19:11.999 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:11.999 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.006 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:19:12.007 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:19:12.008 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:19:12.009 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.009 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.015 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:19:12.017 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:19:12.018 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:19:12.018 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.022 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.029 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:19:12.030 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:19:12.031 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:19:12.032 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.036 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.040 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:19:12.041 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:19:12.042 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:19:12.042 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.043 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.050 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:19:12.051 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:19:12.051 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:19:12.051 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.058 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:19:12.059 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:19:12.059 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:19:12.060 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.062 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.069 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:19:12.070 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:19:12.070 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:19:12.071 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.072 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.079 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:19:12.080 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:19:12.080 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:19:12.082 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.085 +03:00 [INF] Executed DbCommand (12ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.089 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:19:12.090 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:19:12.091 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:19:12.093 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.093 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.096 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:19:12.098 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:19:12.098 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:19:12.101 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.103 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.103 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:19:12.107 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:19:12.108 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:19:12.109 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.111 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:19:12.113 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.121 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:19:12.121 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:19:12.123 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.123 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:19:12.127 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.131 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:19:12.132 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:19:12.133 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.133 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:19:12.138 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.140 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:19:12.140 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:19:12.142 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.143 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:19:12.152 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.153 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:19:12.153 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:19:12.155 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:19:12.158 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.163 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.163 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:19:12.163 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:19:12.164 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:19:12.166 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.172 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:19:12.173 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.174 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:19:12.174 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:19:12.175 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.183 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:19:12.185 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:19:12.186 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:19:12.187 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.187 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.194 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:19:12.195 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:19:12.196 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:19:12.197 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.199 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.204 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:19:12.204 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:19:12.206 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:19:12.207 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.209 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.213 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:19:12.214 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:19:12.216 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:19:12.217 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.219 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.223 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:19:12.224 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:19:12.225 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:19:12.227 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.230 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.234 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:19:12.235 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:19:12.236 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:19:12.240 +03:00 [INF] Executed DbCommand (12ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.241 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.248 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:19:12.249 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:19:12.250 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:19:12.251 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.251 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.259 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:19:12.260 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:19:12.261 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:19:12.261 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.265 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.268 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:19:12.268 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:19:12.270 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:19:12.272 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.274 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.275 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:19:12.276 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:19:12.277 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:19:12.279 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.282 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.283 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:19:12.284 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:19:12.285 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:19:12.287 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.291 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.292 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:19:12.292 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:19:12.293 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:19:12.294 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.298 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.298 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:19:12.300 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:19:12.301 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:19:12.310 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.311 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:19:12.311 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.311 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:19:12.312 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:19:12.322 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:19:12.322 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.323 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.323 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:19:12.324 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:19:12.332 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:19:12.334 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.334 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.335 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:19:12.337 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:19:12.339 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:19:12.342 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.344 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.344 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:19:12.344 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:19:12.347 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:19:12.354 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.355 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.355 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:19:12.356 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:19:12.356 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:19:12.363 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.365 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.365 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:19:12.367 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:19:12.370 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:19:12.373 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.374 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:19:12.374 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.375 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:19:12.376 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:19:12.382 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.383 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:19:12.385 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:19:12.386 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:19:12.388 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.389 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.392 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:19:12.393 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:19:12.394 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:19:12.396 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.396 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.400 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:19:12.402 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:19:12.403 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:19:12.405 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.405 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.407 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:19:12.409 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:19:12.412 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:19:12.413 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.415 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.417 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:19:12.417 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:19:12.420 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:19:12.423 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.424 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.425 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:19:12.426 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:19:12.427 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:19:12.438 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.438 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.439 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:19:12.439 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:19:12.440 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:19:12.449 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.450 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.450 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:19:12.451 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:19:12.451 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:19:12.459 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.460 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.461 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:19:12.461 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:19:12.462 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:19:12.469 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.470 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.471 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:19:12.471 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:19:12.472 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:19:12.483 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.484 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.485 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:19:12.486 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:19:12.487 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:19:12.494 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.495 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.495 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:19:12.496 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:19:12.499 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:19:12.504 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.504 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.505 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:19:12.506 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:19:12.508 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:19:12.513 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.515 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.515 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:19:12.516 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:19:12.516 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:19:12.524 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.528 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.530 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:19:12.530 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:19:12.530 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:19:12.534 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.538 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.539 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:19:12.540 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:19:12.540 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:19:12.542 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.546 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.547 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:19:12.548 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:19:12.550 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:19:12.550 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.553 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.556 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:19:12.558 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:19:12.559 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:19:12.560 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.561 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.563 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:19:12.566 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:19:12.567 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:19:12.569 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.569 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.577 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:19:12.578 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:19:12.579 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:19:12.580 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.581 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.588 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:19:12.589 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:19:12.590 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:19:12.591 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.591 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.599 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:19:12.600 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:19:12.600 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:19:12.601 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.602 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.610 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EPS] IS NOT NULL) AND ([c].[EPS] >= @__from_0)) AND ([c].[EPS] <= @__to_1))
2022-05-26 23:19:12.611 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:19:12.612 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:19:12.613 +03:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2022-05-26 23:19:12.613 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.615 +03:00 [INF] Executed action SaluteStocksAPI.Controllers.ApiController.GetEpsDistribution (SaluteStocksAPI) in 1045.5534ms
2022-05-26 23:19:12.617 +03:00 [INF] Executed DbCommand (12ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.617 +03:00 [INF] Executed endpoint 'SaluteStocksAPI.Controllers.ApiController.GetEpsDistribution (SaluteStocksAPI)'
2022-05-26 23:19:12.619 +03:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/distribution/eps/100 - - - 200 - text/plain;+charset=utf-8 1061.0639ms
2022-05-26 23:19:12.622 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:19:12.624 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.626 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:19:12.626 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.633 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[Beta] IS NOT NULL) AND ([c].[Beta] >= @__from_0)) AND ([c].[Beta] <= @__to_1))
2022-05-26 23:19:12.635 +03:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2022-05-26 23:19:12.635 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.635 +03:00 [INF] Executed action SaluteStocksAPI.Controllers.ApiController.GetBetaDistribution (SaluteStocksAPI) in 1064.0427ms
2022-05-26 23:19:12.638 +03:00 [INF] Executed endpoint 'SaluteStocksAPI.Controllers.ApiController.GetBetaDistribution (SaluteStocksAPI)'
2022-05-26 23:19:12.638 +03:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/distribution/beta/100 - - - 200 - text/plain;+charset=utf-8 1080.1242ms
2022-05-26 23:19:12.641 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[PERatio] IS NOT NULL) AND ([c].[PERatio] >= @__from_0)) AND ([c].[PERatio] <= @__to_1))
2022-05-26 23:19:12.642 +03:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2022-05-26 23:19:12.644 +03:00 [INF] Executed action SaluteStocksAPI.Controllers.ApiController.GetPeRatioDistribution (SaluteStocksAPI) in 1075.1077ms
2022-05-26 23:19:12.644 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[EBITDA] IS NOT NULL) AND (CAST([c].[EBITDA] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.644 +03:00 [INF] Executed DbCommand (12ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.645 +03:00 [INF] Executed endpoint 'SaluteStocksAPI.Controllers.ApiController.GetPeRatioDistribution (SaluteStocksAPI)'
2022-05-26 23:19:12.646 +03:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2022-05-26 23:19:12.648 +03:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/distribution/pe/100 - - - 200 - text/plain;+charset=utf-8 1090.1035ms
2022-05-26 23:19:12.649 +03:00 [INF] Executed action SaluteStocksAPI.Controllers.ApiController.GetEbitdaDistribution (SaluteStocksAPI) in 1080.6795ms
2022-05-26 23:19:12.650 +03:00 [INF] Executed endpoint 'SaluteStocksAPI.Controllers.ApiController.GetEbitdaDistribution (SaluteStocksAPI)'
2022-05-26 23:19:12.651 +03:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/distribution/ebitda/100 - - - 200 - text/plain;+charset=utf-8 1093.1527ms
2022-05-26 23:19:12.657 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.670 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.681 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.694 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__from_0='?' (DbType = Double), @__to_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [CompanyOverviews] AS [c]
WHERE ([c].[ExistInApi] = CAST(1 AS bit)) AND ((([c].[MarketCapitalization] IS NOT NULL) AND (CAST([c].[MarketCapitalization] AS float) >= @__from_0)) AND (CAST([c].[MarketCapitalization] AS float) <= @__to_1))
2022-05-26 23:19:12.696 +03:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2022-05-26 23:19:12.697 +03:00 [INF] Executed action SaluteStocksAPI.Controllers.ApiController.GetMarketCapDistribution (SaluteStocksAPI) in 1131.0793ms
2022-05-26 23:19:12.697 +03:00 [INF] Executed endpoint 'SaluteStocksAPI.Controllers.ApiController.GetMarketCapDistribution (SaluteStocksAPI)'
2022-05-26 23:19:12.698 +03:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/distribution/market-cap/100 - - - 200 - text/plain;+charset=utf-8 1141.0297ms
2022-05-26 23:19:15.102 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.BalanceSheet with Symbol BPAC
2022-05-26 23:19:15.105 +03:00 [INF] Generating URI for BALANCE_SHEET with params: symbol: BPAC
2022-05-26 23:19:15.105 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=CR1WTHZN5EBATF3M&function=BALANCE_SHEET&symbol=BPAC
2022-05-26 23:19:15.106 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=CR1WTHZN5EBATF3M&function=BALANCE_SHEET&symbol=BPAC".
2022-05-26 23:19:15.339 +03:00 [INF] Response has success status code
2022-05-26 23:19:15.340 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.BalanceSheet for symbol BPAC
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Information": "Thank you for using Alpha Vantage! You have reached the 500 requests/day limit and there are multiple ways to remove this rate limit: (1) become a holder of Alpha Vantage Coin (AVC), an Ethereum-based cryptocurrency that provides various utility & governance functions within the Alpha Vantage ecosystem (AVC mining guide: https://www.alphatournament.com/avc_mining_guide/) to remove the 500 requests/day rate limit, (2) subscribe to any of the premium plans at https://www.alphavantage.co/premium/ to instantly remove all daily rate limits"
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 339
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetBalanceSheet(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 85
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 254
2022-05-26 23:19:25.762 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.IncomeStatement with Symbol BEPC
2022-05-26 23:19:25.765 +03:00 [INF] Generating URI for INCOME_STATEMENT with params: symbol: BEPC
2022-05-26 23:19:25.766 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=XVZ0LFWBYDX16M5H&function=INCOME_STATEMENT&symbol=BEPC
2022-05-26 23:19:25.766 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=XVZ0LFWBYDX16M5H&function=INCOME_STATEMENT&symbol=BEPC".
2022-05-26 23:19:26.013 +03:00 [INF] Response has success status code
2022-05-26 23:19:26.015 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.IncomeStatement for symbol BEPC
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Information": "Thank you for using Alpha Vantage! You have reached the 500 requests/day limit and there are multiple ways to remove this rate limit: (1) become a holder of Alpha Vantage Coin (AVC), an Ethereum-based cryptocurrency that provides various utility & governance functions within the Alpha Vantage ecosystem (AVC mining guide: https://www.alphatournament.com/avc_mining_guide/) to remove the 500 requests/day rate limit, (2) subscribe to any of the premium plans at https://www.alphavantage.co/premium/ to instantly remove all daily rate limits"
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 339
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetIncomeStatement(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 72
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 254
2022-05-26 23:19:27.202 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CashFlow with Symbol BCSAW
2022-05-26 23:19:27.205 +03:00 [INF] Generating URI for CASH_FLOW with params: symbol: BCSAW
2022-05-26 23:19:27.206 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=HC6APPA2EWCQ1YMW&function=CASH_FLOW&symbol=BCSAW
2022-05-26 23:19:27.206 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=HC6APPA2EWCQ1YMW&function=CASH_FLOW&symbol=BCSAW".
2022-05-26 23:19:27.313 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.Earnings with Symbol BUFG
2022-05-26 23:19:27.314 +03:00 [INF] Generating URI for EARNINGS with params: symbol: BUFG
2022-05-26 23:19:27.315 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=HC6APPA2EWCQ1YMW&function=EARNINGS&symbol=BUFG
2022-05-26 23:19:27.315 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=HC6APPA2EWCQ1YMW&function=EARNINGS&symbol=BUFG".
2022-05-26 23:19:27.443 +03:00 [INF] Response has success status code
2022-05-26 23:19:27.444 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.CashFlow for symbol BCSAW
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Information": "Thank you for using Alpha Vantage! You have reached the 500 requests/day limit and there are multiple ways to remove this rate limit: (1) become a holder of Alpha Vantage Coin (AVC), an Ethereum-based cryptocurrency that provides various utility & governance functions within the Alpha Vantage ecosystem (AVC mining guide: https://www.alphatournament.com/avc_mining_guide/) to remove the 500 requests/day rate limit, (2) subscribe to any of the premium plans at https://www.alphavantage.co/premium/ to instantly remove all daily rate limits"
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 339
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCashFlow(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 99
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 254
2022-05-26 23:19:27.586 +03:00 [INF] Response has success status code
2022-05-26 23:19:27.586 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.Earnings for symbol BUFG
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Information": "Thank you for using Alpha Vantage! You have reached the 500 requests/day limit and there are multiple ways to remove this rate limit: (1) become a holder of Alpha Vantage Coin (AVC), an Ethereum-based cryptocurrency that provides various utility & governance functions within the Alpha Vantage ecosystem (AVC mining guide: https://www.alphatournament.com/avc_mining_guide/) to remove the 500 requests/day rate limit, (2) subscribe to any of the premium plans at https://www.alphavantage.co/premium/ to instantly remove all daily rate limits"
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 339
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyEarnings(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 145
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 254
2022-05-26 23:19:30.481 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CompanyOverview with Symbol CHKEZ
2022-05-26 23:19:30.482 +03:00 [INF] Generating URI for OVERVIEW with params: symbol: CHKEZ
2022-05-26 23:19:30.483 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=CR1WTHZN5EBATF3M&function=OVERVIEW&symbol=CHKEZ
2022-05-26 23:19:30.483 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=CR1WTHZN5EBATF3M&function=OVERVIEW&symbol=CHKEZ".
2022-05-26 23:19:30.724 +03:00 [INF] Response has success status code
2022-05-26 23:19:30.725 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.CompanyOverview for symbol CHKEZ
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Information": "Thank you for using Alpha Vantage! You have reached the 500 requests/day limit and there are multiple ways to remove this rate limit: (1) become a holder of Alpha Vantage Coin (AVC), an Ethereum-based cryptocurrency that provides various utility & governance functions within the Alpha Vantage ecosystem (AVC mining guide: https://www.alphatournament.com/avc_mining_guide/) to remove the 500 requests/day rate limit, (2) subscribe to any of the premium plans at https://www.alphavantage.co/premium/ to instantly remove all daily rate limits"
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 339
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyOverview(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 119
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 254
2022-05-26 23:19:45.345 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.BalanceSheet with Symbol BPACW
2022-05-26 23:19:45.346 +03:00 [INF] Generating URI for BALANCE_SHEET with params: symbol: BPACW
2022-05-26 23:19:45.347 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=XVZ0LFWBYDX16M5H&function=BALANCE_SHEET&symbol=BPACW
2022-05-26 23:19:45.347 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=XVZ0LFWBYDX16M5H&function=BALANCE_SHEET&symbol=BPACW".
2022-05-26 23:19:45.585 +03:00 [INF] Response has success status code
2022-05-26 23:19:45.586 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.BalanceSheet for symbol BPACW
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 339
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetBalanceSheet(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 85
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 254
2022-05-26 23:19:56.028 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.IncomeStatement with Symbol BEPH
2022-05-26 23:19:56.029 +03:00 [INF] Generating URI for INCOME_STATEMENT with params: symbol: BEPH
2022-05-26 23:19:56.030 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=XJ1HZGKIN0D10RIF&function=INCOME_STATEMENT&symbol=BEPH
2022-05-26 23:19:56.030 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=XJ1HZGKIN0D10RIF&function=INCOME_STATEMENT&symbol=BEPH".
2022-05-26 23:19:56.509 +03:00 [INF] Response has success status code
2022-05-26 23:19:56.510 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.IncomeStatement for symbol BEPH
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 339
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetIncomeStatement(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 72
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 254
2022-05-26 23:19:57.446 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CashFlow with Symbol BCTX
2022-05-26 23:19:57.447 +03:00 [INF] Generating URI for CASH_FLOW with params: symbol: BCTX
2022-05-26 23:19:57.448 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=KBO0R5WJR4O4UIHS&function=CASH_FLOW&symbol=BCTX
2022-05-26 23:19:57.448 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=KBO0R5WJR4O4UIHS&function=CASH_FLOW&symbol=BCTX".
2022-05-26 23:19:57.589 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.Earnings with Symbol BUFR
2022-05-26 23:19:57.592 +03:00 [INF] Generating URI for EARNINGS with params: symbol: BUFR
2022-05-26 23:19:57.593 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=EARNINGS&symbol=BUFR
2022-05-26 23:19:57.593 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=EARNINGS&symbol=BUFR".
2022-05-26 23:19:57.824 +03:00 [INF] Response has success status code
2022-05-26 23:19:57.825 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.Earnings for symbol BUFR
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 339
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyEarnings(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 145
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 254
2022-05-26 23:19:57.943 +03:00 [INF] Response has success status code
2022-05-26 23:19:57.944 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.CashFlow for symbol BCTX
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Note": "Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency."
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 339
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCashFlow(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 99
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 254
2022-05-26 23:20:00.740 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CompanyOverview with Symbol CHKP
2022-05-26 23:20:00.743 +03:00 [INF] Generating URI for OVERVIEW with params: symbol: CHKP
2022-05-26 23:20:00.744 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=XJ1HZGKIN0D10RIF&function=OVERVIEW&symbol=CHKP
2022-05-26 23:20:00.744 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=XJ1HZGKIN0D10RIF&function=OVERVIEW&symbol=CHKP".
2022-05-26 23:20:01.233 +03:00 [INF] Response has success status code
2022-05-26 23:20:01.234 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.CompanyOverview for symbol CHKP
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Information": "Thank you for using Alpha Vantage! You have reached the 500 requests/day limit and there are multiple ways to remove this rate limit: (1) become a holder of Alpha Vantage Coin (AVC), an Ethereum-based cryptocurrency that provides various utility & governance functions within the Alpha Vantage ecosystem (AVC mining guide: https://www.alphatournament.com/avc_mining_guide/) to remove the 500 requests/day rate limit, (2) subscribe to any of the premium plans at https://www.alphavantage.co/premium/ to instantly remove all daily rate limits"
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 339
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyOverview(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 119
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 254
2022-05-26 23:20:15.590 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.BalanceSheet with Symbol BPOP
2022-05-26 23:20:15.592 +03:00 [INF] Generating URI for BALANCE_SHEET with params: symbol: BPOP
2022-05-26 23:20:15.592 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BPOP
2022-05-26 23:20:15.593 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=BALANCE_SHEET&symbol=BPOP".
2022-05-26 23:20:15.821 +03:00 [INF] Response has success status code
2022-05-26 23:20:15.822 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.BalanceSheet for symbol BPOP
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Information": "Thank you for using Alpha Vantage! You have reached the 500 requests/day limit and there are multiple ways to remove this rate limit: (1) become a holder of Alpha Vantage Coin (AVC), an Ethereum-based cryptocurrency that provides various utility & governance functions within the Alpha Vantage ecosystem (AVC mining guide: https://www.alphatournament.com/avc_mining_guide/) to remove the 500 requests/day rate limit, (2) subscribe to any of the premium plans at https://www.alphavantage.co/premium/ to instantly remove all daily rate limits"
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 339
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetBalanceSheet(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 85
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 254
2022-05-26 23:20:26.517 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.IncomeStatement with Symbol BEP-P-A
2022-05-26 23:20:26.520 +03:00 [INF] Generating URI for INCOME_STATEMENT with params: symbol: BEP-P-A
2022-05-26 23:20:26.521 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=XVZ0LFWBYDX16M5H&function=INCOME_STATEMENT&symbol=BEP-P-A
2022-05-26 23:20:26.521 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=XVZ0LFWBYDX16M5H&function=INCOME_STATEMENT&symbol=BEP-P-A".
2022-05-26 23:20:27.006 +03:00 [INF] Response has success status code
2022-05-26 23:20:27.007 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.IncomeStatement for symbol BEP-P-A
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Information": "Thank you for using Alpha Vantage! You have reached the 500 requests/day limit and there are multiple ways to remove this rate limit: (1) become a holder of Alpha Vantage Coin (AVC), an Ethereum-based cryptocurrency that provides various utility & governance functions within the Alpha Vantage ecosystem (AVC mining guide: https://www.alphatournament.com/avc_mining_guide/) to remove the 500 requests/day rate limit, (2) subscribe to any of the premium plans at https://www.alphavantage.co/premium/ to instantly remove all daily rate limits"
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 339
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetIncomeStatement(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 72
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 254
2022-05-26 23:20:27.839 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.Earnings with Symbol BUFT
2022-05-26 23:20:27.842 +03:00 [INF] Generating URI for EARNINGS with params: symbol: BUFT
2022-05-26 23:20:27.843 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=CR1WTHZN5EBATF3M&function=EARNINGS&symbol=BUFT
2022-05-26 23:20:27.843 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=CR1WTHZN5EBATF3M&function=EARNINGS&symbol=BUFT".
2022-05-26 23:20:27.949 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CashFlow with Symbol BCV-P-A
2022-05-26 23:20:27.950 +03:00 [INF] Generating URI for CASH_FLOW with params: symbol: BCV-P-A
2022-05-26 23:20:27.951 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=CASH_FLOW&symbol=BCV-P-A
2022-05-26 23:20:27.951 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=YTXYXH479B3J1MY2&function=CASH_FLOW&symbol=BCV-P-A".
2022-05-26 23:20:28.079 +03:00 [INF] Response has success status code
2022-05-26 23:20:28.079 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.Earnings for symbol BUFT
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Information": "Thank you for using Alpha Vantage! You have reached the 500 requests/day limit and there are multiple ways to remove this rate limit: (1) become a holder of Alpha Vantage Coin (AVC), an Ethereum-based cryptocurrency that provides various utility & governance functions within the Alpha Vantage ecosystem (AVC mining guide: https://www.alphatournament.com/avc_mining_guide/) to remove the 500 requests/day rate limit, (2) subscribe to any of the premium plans at https://www.alphavantage.co/premium/ to instantly remove all daily rate limits"
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 339
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyEarnings(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 145
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 254
2022-05-26 23:20:28.288 +03:00 [INF] Response has success status code
2022-05-26 23:20:28.289 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.CashFlow for symbol BCV-P-A
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Information": "Thank you for using Alpha Vantage! You have reached the 500 requests/day limit and there are multiple ways to remove this rate limit: (1) become a holder of Alpha Vantage Coin (AVC), an Ethereum-based cryptocurrency that provides various utility & governance functions within the Alpha Vantage ecosystem (AVC mining guide: https://www.alphatournament.com/avc_mining_guide/) to remove the 500 requests/day rate limit, (2) subscribe to any of the premium plans at https://www.alphavantage.co/premium/ to instantly remove all daily rate limits"
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 339
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCashFlow(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 99
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 254
2022-05-26 23:20:31.247 +03:00 [INF] Trying to refresh entity SaluteStocksAPI.Models.FundamentalData.CompanyOverview with Symbol CHMG
2022-05-26 23:20:31.250 +03:00 [INF] Generating URI for OVERVIEW with params: symbol: CHMG
2022-05-26 23:20:31.251 +03:00 [INF] URI: https://www.alphavantage.co/query?apikey=KBO0R5WJR4O4UIHS&function=OVERVIEW&symbol=CHMG
2022-05-26 23:20:31.251 +03:00 [INF] Starting to get and parse JSON from "https://www.alphavantage.co/query?apikey=KBO0R5WJR4O4UIHS&function=OVERVIEW&symbol=CHMG".
2022-05-26 23:20:31.494 +03:00 [INF] Response has success status code
2022-05-26 23:20:31.496 +03:00 [WRN] Reached the API limit when getting SaluteStocksAPI.Models.FundamentalData.CompanyOverview for symbol CHMG
SaluteStocksAPI.AlphaVantage.Exceptions.AlphaVantageRequestLimit: {
    "Information": "Thank you for using Alpha Vantage! You have reached the 500 requests/day limit and there are multiple ways to remove this rate limit: (1) become a holder of Alpha Vantage Coin (AVC), an Ethereum-based cryptocurrency that provides various utility & governance functions within the Alpha Vantage ecosystem (AVC mining guide: https://www.alphatournament.com/avc_mining_guide/) to remove the 500 requests/day rate limit, (2) subscribe to any of the premium plans at https://www.alphavantage.co/premium/ to instantly remove all daily rate limits"
}
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetAndParseJsonAsync[T](Uri uri) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 339
   at SaluteStocksAPI.AlphaVantage.AlphaVantageClient.GetCompanyOverview(String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\AlphaVantage\AlphaVantageClient.cs:line 119
   at SaluteStocksAPI.Service.Background.Loader.RefreshEntity[T](String symbol) in D:\repo\SaluteStocks\SaluteStocksAPI\Service\Background\Loader.cs:line 254
2022-05-26 23:20:44.063 +03:00 [INF] Application is shutting down...
